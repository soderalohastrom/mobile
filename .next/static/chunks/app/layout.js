/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fapp%2FMyRuntimeProvider.tsx%22%2C%22ids%22%3A%5B%22MyRuntimeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=false!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fapp%2FMyRuntimeProvider.tsx%22%2C%22ids%22%3A%5B%22MyRuntimeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/MyRuntimeProvider.tsx */ \"(app-pages-browser)/./app/MyRuntimeProvider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/local/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistVF.woff\",\"variable\":\"--font-geist-sans\",\"weight\":\"100 900\"}],\"variableName\":\"geistSans\"} */ \"(app-pages-browser)/./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"app/layout.tsx\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./fonts/GeistVF.woff\\\",\\\"variable\\\":\\\"--font-geist-sans\\\",\\\"weight\\\":\\\"100 900\\\"}],\\\"variableName\\\":\\\"geistSans\\\"}\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/local/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistMonoVF.woff\",\"variable\":\"--font-geist-mono\",\"weight\":\"100 900\"}],\"variableName\":\"geistMono\"} */ \"(app-pages-browser)/./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"app/layout.tsx\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./fonts/GeistMonoVF.woff\\\",\\\"variable\\\":\\\"--font-geist-mono\\\",\\\"weight\\\":\\\"100 900\\\"}],\\\"variableName\\\":\\\"geistMono\\\"}\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/globals.css */ \"(app-pages-browser)/./app/globals.css\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZzb2RlcnN0cm9tJTJGa2ktcmVwb3MlMkZtb2JpbGUtZGV2cyUyRmFwcCUyRk15UnVudGltZVByb3ZpZGVyLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMk15UnVudGltZVByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGc29kZXJzdHJvbSUyRmtpLXJlcG9zJTJGbW9iaWxlLWRldnMlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZm9udCUyRmxvY2FsJTJGdGFyZ2V0LmNzcyUzRiU3QiU1QyUyMnBhdGglNUMlMjIlM0ElNUMlMjJhcHAlMkZsYXlvdXQudHN4JTVDJTIyJTJDJTVDJTIyaW1wb3J0JTVDJTIyJTNBJTVDJTIyJTVDJTIyJTJDJTVDJTIyYXJndW1lbnRzJTVDJTIyJTNBJTVCJTdCJTVDJTIyc3JjJTVDJTIyJTNBJTVDJTIyLiUyRmZvbnRzJTJGR2Vpc3RWRi53b2ZmJTVDJTIyJTJDJTVDJTIydmFyaWFibGUlNUMlMjIlM0ElNUMlMjItLWZvbnQtZ2Vpc3Qtc2FucyU1QyUyMiUyQyU1QyUyMndlaWdodCU1QyUyMiUzQSU1QyUyMjEwMCUyMDkwMCU1QyUyMiU3RCU1RCUyQyU1QyUyMnZhcmlhYmxlTmFtZSU1QyUyMiUzQSU1QyUyMmdlaXN0U2FucyU1QyUyMiU3RCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnNvZGVyc3Ryb20lMkZraS1yZXBvcyUyRm1vYmlsZS1kZXZzJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmZvbnQlMkZsb2NhbCUyRnRhcmdldC5jc3MlM0YlN0IlNUMlMjJwYXRoJTVDJTIyJTNBJTVDJTIyYXBwJTJGbGF5b3V0LnRzeCU1QyUyMiUyQyU1QyUyMmltcG9ydCU1QyUyMiUzQSU1QyUyMiU1QyUyMiUyQyU1QyUyMmFyZ3VtZW50cyU1QyUyMiUzQSU1QiU3QiU1QyUyMnNyYyU1QyUyMiUzQSU1QyUyMi4lMkZmb250cyUyRkdlaXN0TW9ub1ZGLndvZmYlNUMlMjIlMkMlNUMlMjJ2YXJpYWJsZSU1QyUyMiUzQSU1QyUyMi0tZm9udC1nZWlzdC1tb25vJTVDJTIyJTJDJTVDJTIyd2VpZ2h0JTVDJTIyJTNBJTVDJTIyMTAwJTIwOTAwJTVDJTIyJTdEJTVEJTJDJTVDJTIydmFyaWFibGVOYW1lJTVDJTIyJTNBJTVDJTIyZ2Vpc3RNb25vJTVDJTIyJTdEJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGc29kZXJzdHJvbSUyRmtpLXJlcG9zJTJGbW9iaWxlLWRldnMlMkZhcHAlMkZnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLGdMQUE0STtBQUM1STtBQUNBLDRpQkFBNlM7QUFDN1M7QUFDQSxvakJBQWlUO0FBQ2pUO0FBQ0EsNEpBQTJGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/OGE5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIk15UnVudGltZVByb3ZpZGVyXCJdICovIFwiL1VzZXJzL3NvZGVyc3Ryb20va2ktcmVwb3MvbW9iaWxlLWRldnMvYXBwL015UnVudGltZVByb3ZpZGVyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL3NvZGVyc3Ryb20va2ktcmVwb3MvbW9iaWxlLWRldnMvbm9kZV9tb2R1bGVzL25leHQvZm9udC9sb2NhbC90YXJnZXQuY3NzP3tcXFwicGF0aFxcXCI6XFxcImFwcC9sYXlvdXQudHN4XFxcIixcXFwiaW1wb3J0XFxcIjpcXFwiXFxcIixcXFwiYXJndW1lbnRzXFxcIjpbe1xcXCJzcmNcXFwiOlxcXCIuL2ZvbnRzL0dlaXN0VkYud29mZlxcXCIsXFxcInZhcmlhYmxlXFxcIjpcXFwiLS1mb250LWdlaXN0LXNhbnNcXFwiLFxcXCJ3ZWlnaHRcXFwiOlxcXCIxMDAgOTAwXFxcIn1dLFxcXCJ2YXJpYWJsZU5hbWVcXFwiOlxcXCJnZWlzdFNhbnNcXFwifVwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL3NvZGVyc3Ryb20va2ktcmVwb3MvbW9iaWxlLWRldnMvbm9kZV9tb2R1bGVzL25leHQvZm9udC9sb2NhbC90YXJnZXQuY3NzP3tcXFwicGF0aFxcXCI6XFxcImFwcC9sYXlvdXQudHN4XFxcIixcXFwiaW1wb3J0XFxcIjpcXFwiXFxcIixcXFwiYXJndW1lbnRzXFxcIjpbe1xcXCJzcmNcXFwiOlxcXCIuL2ZvbnRzL0dlaXN0TW9ub1ZGLndvZmZcXFwiLFxcXCJ2YXJpYWJsZVxcXCI6XFxcIi0tZm9udC1nZWlzdC1tb25vXFxcIixcXFwid2VpZ2h0XFxcIjpcXFwiMTAwIDkwMFxcXCJ9XSxcXFwidmFyaWFibGVOYW1lXFxcIjpcXFwiZ2Vpc3RNb25vXFxcIn1cIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9zb2RlcnN0cm9tL2tpLXJlcG9zL21vYmlsZS1kZXZzL2FwcC9nbG9iYWxzLmNzc1wiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fapp%2FMyRuntimeProvider.tsx%22%2C%22ids%22%3A%5B%22MyRuntimeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/aria-hidden/dist/es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/aria-hidden/dist/es2015/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hideOthers: function() { return /* binding */ hideOthers; },\n/* harmony export */   inertOthers: function() { return /* binding */ inertOthers; },\n/* harmony export */   supportsInert: function() { return /* binding */ supportsInert; },\n/* harmony export */   suppressOthers: function() { return /* binding */ suppressOthers; }\n/* harmony export */ });\nvar getDefaultParent = function (originalTarget) {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n};\nvar counterMap = new WeakMap();\nvar uncontrolledNodes = new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nvar unwrapHost = function (node) {\n    return node && (node.host || unwrapHost(node.parentNode));\n};\nvar correctTargets = function (parent, targets) {\n    return targets\n        .map(function (target) {\n        if (parent.contains(target)) {\n            return target;\n        }\n        var correctedTarget = unwrapHost(target);\n        if (correctedTarget && parent.contains(correctedTarget)) {\n            return correctedTarget;\n        }\n        console.error('aria-hidden', target, 'in not contained inside', parent, '. Doing nothing');\n        return null;\n    })\n        .filter(function (x) { return Boolean(x); });\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @param {String} [controlAttribute] - html Attribute to control\n * @return {Undo} undo command\n */\nvar applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {\n    var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    if (!markerMap[markerName]) {\n        markerMap[markerName] = new WeakMap();\n    }\n    var markerCounter = markerMap[markerName];\n    var hiddenNodes = [];\n    var elementsToKeep = new Set();\n    var elementsToStop = new Set(targets);\n    var keep = function (el) {\n        if (!el || elementsToKeep.has(el)) {\n            return;\n        }\n        elementsToKeep.add(el);\n        keep(el.parentNode);\n    };\n    targets.forEach(keep);\n    var deep = function (parent) {\n        if (!parent || elementsToStop.has(parent)) {\n            return;\n        }\n        Array.prototype.forEach.call(parent.children, function (node) {\n            if (elementsToKeep.has(node)) {\n                deep(node);\n            }\n            else {\n                try {\n                    var attr = node.getAttribute(controlAttribute);\n                    var alreadyHidden = attr !== null && attr !== 'false';\n                    var counterValue = (counterMap.get(node) || 0) + 1;\n                    var markerValue = (markerCounter.get(node) || 0) + 1;\n                    counterMap.set(node, counterValue);\n                    markerCounter.set(node, markerValue);\n                    hiddenNodes.push(node);\n                    if (counterValue === 1 && alreadyHidden) {\n                        uncontrolledNodes.set(node, true);\n                    }\n                    if (markerValue === 1) {\n                        node.setAttribute(markerName, 'true');\n                    }\n                    if (!alreadyHidden) {\n                        node.setAttribute(controlAttribute, 'true');\n                    }\n                }\n                catch (e) {\n                    console.error('aria-hidden: cannot operate on ', node, e);\n                }\n            }\n        });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return function () {\n        hiddenNodes.forEach(function (node) {\n            var counterValue = counterMap.get(node) - 1;\n            var markerValue = markerCounter.get(node) - 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            if (!counterValue) {\n                if (!uncontrolledNodes.has(node)) {\n                    node.removeAttribute(controlAttribute);\n                }\n                uncontrolledNodes.delete(node);\n            }\n            if (!markerValue) {\n                node.removeAttribute(markerName);\n            }\n        });\n        lockCount--;\n        if (!lockCount) {\n            // clear\n            counterMap = new WeakMap();\n            counterMap = new WeakMap();\n            uncontrolledNodes = new WeakMap();\n            markerMap = {};\n        }\n    };\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nvar hideOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-aria-hidden'; }\n    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    // we should not hide ariaLive elements - https://github.com/theKashey/aria-hidden/issues/10\n    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live]')));\n    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');\n};\n/**\n * Marks everything except given node(or nodes) as inert\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nvar inertOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-inert-ed'; }\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');\n};\n/**\n * @returns if current browser supports inert\n */\nvar supportsInert = function () {\n    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');\n};\n/**\n * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nvar suppressOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-suppressed'; }\n    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/aria-hidden/dist/es2015/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/get-nonce/dist/es2015/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/get-nonce/dist/es2015/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNonce: function() { return /* binding */ getNonce; },\n/* harmony export */   setNonce: function() { return /* binding */ setNonce; }\n/* harmony export */ });\nvar currentNonce;\nvar setNonce = function (nonce) {\n    currentNonce = nonce;\n};\nvar getNonce = function () {\n    if (currentNonce) {\n        return currentNonce;\n    }\n    if (true) {\n        return __webpack_require__.nc;\n    }\n    return undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9nZXQtbm9uY2UvZGlzdC9lczIwMTUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsUUFBUSxJQUF3QztBQUNoRCxlQUFlLHNCQUFpQjtBQUNoQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2dldC1ub25jZS9kaXN0L2VzMjAxNS9pbmRleC5qcz8zNWJmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjdXJyZW50Tm9uY2U7XG5leHBvcnQgdmFyIHNldE5vbmNlID0gZnVuY3Rpb24gKG5vbmNlKSB7XG4gICAgY3VycmVudE5vbmNlID0gbm9uY2U7XG59O1xuZXhwb3J0IHZhciBnZXROb25jZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoY3VycmVudE5vbmNlKSB7XG4gICAgICAgIHJldHVybiBjdXJyZW50Tm9uY2U7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBfX3dlYnBhY2tfbm9uY2VfXztcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/get-nonce/dist/es2015/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js":
/*!****************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/Icon.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Icon; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultAttributes.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\");\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \n\n\nconst Icon = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c = (param, ref)=>{\n    let { color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = \"\", children, iconNode, ...rest } = param;\n    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", {\n        ref,\n        ..._defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide\", className),\n        ...rest\n    }, [\n        ...iconNode.map((param)=>{\n            let [tag, attrs] = param;\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(tag, attrs);\n        }),\n        ...Array.isArray(children) ? children : [\n            children\n        ]\n    ]);\n});\n_c1 = Icon;\n //# sourceMappingURL=Icon.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Icon$forwardRef\");\n$RefreshReg$(_c1, \"Icon\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBLE1BQU1BLHFCQUFPQyxpREFBVUEsTUFDckIsUUFXRUM7UUFWQSxFQUNFQyxRQUFRLGdCQUNSQyxPQUFPLElBQ1BDLGNBQWMsR0FDZEMsbUJBQUEsRUFDQUMsWUFBWSxJQUNaQyxRQUFBLEVBQ0FDLFFBQUEsRUFDQSxHQUFHQyxNQUFBO0lBSUUscUJBQUFDLG9EQUFhQSxDQUNsQixPQUNBO1FBQ0VUO1FBQ0EsR0FBR1UsNkRBQUE7UUFDSEMsT0FBT1Q7UUFDUFUsUUFBUVY7UUFDUlcsUUFBUVo7UUFDUkUsYUFBYUMsc0JBQXVCVSxPQUFPWCxlQUFlLEtBQU1XLE9BQU9aLFFBQVFDO1FBQy9FRSxXQUFXVSxrRUFBWUEsQ0FBQyxVQUFVVjtRQUNsQyxHQUFHRyxJQUFBO0lBQ0wsR0FDQTtXQUNLRCxTQUFTUyxHQUFBLENBQUk7Z0JBQUMsQ0FBQ0MsS0FBS0MsTUFBVztpQ0FBQVQsb0RBQWFBLENBQUNRLEtBQUtDOztXQUNqREMsTUFBTUMsT0FBQSxDQUFRZCxZQUFZQSxXQUFXO1lBQUNBO1NBQVE7S0FDcEQ7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vc3JjL0ljb24udHM/YWRhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFbGVtZW50LCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGRlZmF1bHRBdHRyaWJ1dGVzIGZyb20gJy4vZGVmYXVsdEF0dHJpYnV0ZXMnO1xuaW1wb3J0IHsgSWNvbk5vZGUsIEx1Y2lkZVByb3BzIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgeyBtZXJnZUNsYXNzZXMgfSBmcm9tICdAbHVjaWRlL3NoYXJlZCc7XG5cbmludGVyZmFjZSBJY29uQ29tcG9uZW50UHJvcHMgZXh0ZW5kcyBMdWNpZGVQcm9wcyB7XG4gIGljb25Ob2RlOiBJY29uTm9kZTtcbn1cblxuLyoqXG4gKiBMdWNpZGUgaWNvbiBjb21wb25lbnRcbiAqXG4gKiBAY29tcG9uZW50IEljb25cbiAqIEBwYXJhbSB7b2JqZWN0fSBwcm9wc1xuICogQHBhcmFtIHtzdHJpbmd9IHByb3BzLmNvbG9yIC0gVGhlIGNvbG9yIG9mIHRoZSBpY29uXG4gKiBAcGFyYW0ge251bWJlcn0gcHJvcHMuc2l6ZSAtIFRoZSBzaXplIG9mIHRoZSBpY29uXG4gKiBAcGFyYW0ge251bWJlcn0gcHJvcHMuc3Ryb2tlV2lkdGggLSBUaGUgc3Ryb2tlIHdpZHRoIG9mIHRoZSBpY29uXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHByb3BzLmFic29sdXRlU3Ryb2tlV2lkdGggLSBXaGV0aGVyIHRvIHVzZSBhYnNvbHV0ZSBzdHJva2Ugd2lkdGhcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wcy5jbGFzc05hbWUgLSBUaGUgY2xhc3MgbmFtZSBvZiB0aGUgaWNvblxuICogQHBhcmFtIHtJY29uTm9kZX0gcHJvcHMuY2hpbGRyZW4gLSBUaGUgY2hpbGRyZW4gb2YgdGhlIGljb25cbiAqIEBwYXJhbSB7SWNvbk5vZGV9IHByb3BzLmljb25Ob2RlIC0gVGhlIGljb24gbm9kZSBvZiB0aGUgaWNvblxuICpcbiAqIEByZXR1cm5zIHtGb3J3YXJkUmVmRXhvdGljQ29tcG9uZW50fSBMdWNpZGVJY29uXG4gKi9cbmNvbnN0IEljb24gPSBmb3J3YXJkUmVmPFNWR1NWR0VsZW1lbnQsIEljb25Db21wb25lbnRQcm9wcz4oXG4gIChcbiAgICB7XG4gICAgICBjb2xvciA9ICdjdXJyZW50Q29sb3InLFxuICAgICAgc2l6ZSA9IDI0LFxuICAgICAgc3Ryb2tlV2lkdGggPSAyLFxuICAgICAgYWJzb2x1dGVTdHJva2VXaWR0aCxcbiAgICAgIGNsYXNzTmFtZSA9ICcnLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICBpY29uTm9kZSxcbiAgICAgIC4uLnJlc3RcbiAgICB9LFxuICAgIHJlZixcbiAgKSA9PiB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoXG4gICAgICAnc3ZnJyxcbiAgICAgIHtcbiAgICAgICAgcmVmLFxuICAgICAgICAuLi5kZWZhdWx0QXR0cmlidXRlcyxcbiAgICAgICAgd2lkdGg6IHNpemUsXG4gICAgICAgIGhlaWdodDogc2l6ZSxcbiAgICAgICAgc3Ryb2tlOiBjb2xvcixcbiAgICAgICAgc3Ryb2tlV2lkdGg6IGFic29sdXRlU3Ryb2tlV2lkdGggPyAoTnVtYmVyKHN0cm9rZVdpZHRoKSAqIDI0KSAvIE51bWJlcihzaXplKSA6IHN0cm9rZVdpZHRoLFxuICAgICAgICBjbGFzc05hbWU6IG1lcmdlQ2xhc3NlcygnbHVjaWRlJywgY2xhc3NOYW1lKSxcbiAgICAgICAgLi4ucmVzdCxcbiAgICAgIH0sXG4gICAgICBbXG4gICAgICAgIC4uLmljb25Ob2RlLm1hcCgoW3RhZywgYXR0cnNdKSA9PiBjcmVhdGVFbGVtZW50KHRhZywgYXR0cnMpKSxcbiAgICAgICAgLi4uKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dKSxcbiAgICAgIF0sXG4gICAgKTtcbiAgfSxcbik7XG5cbmV4cG9ydCBkZWZhdWx0IEljb247XG4iXSwibmFtZXMiOlsiSWNvbiIsImZvcndhcmRSZWYiLCJyZWYiLCJjb2xvciIsInNpemUiLCJzdHJva2VXaWR0aCIsImFic29sdXRlU3Ryb2tlV2lkdGgiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsImljb25Ob2RlIiwicmVzdCIsImNyZWF0ZUVsZW1lbnQiLCJkZWZhdWx0QXR0cmlidXRlcyIsIndpZHRoIiwiaGVpZ2h0Iiwic3Ryb2tlIiwiTnVtYmVyIiwibWVyZ2VDbGFzc2VzIiwibWFwIiwidGFnIiwiYXR0cnMiLCJBcnJheSIsImlzQXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/createLucideIcon.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ createLucideIcon; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/* harmony import */ var _Icon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \n\n\nconst createLucideIcon = (iconName, iconNode)=>{\n    const Component = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((param, ref)=>{\n        let { className, ...props } = param;\n        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Icon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n            ref,\n            iconNode,\n            className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide-\".concat((0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.toKebabCase)(iconName)), className),\n            ...props\n        });\n    });\n    Component.displayName = \"\".concat(iconName);\n    return Component;\n};\n //# sourceMappingURL=createLucideIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vY3JlYXRlTHVjaWRlSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBV00sTUFBQUEsbUJBQW1CLENBQUNDLFVBQWtCQztJQUMxQyxNQUFNQywwQkFBWUMsaURBQVVBLENBQTZCLFFBQTBCQztZQUF6QixFQUFFQyxTQUFXLEtBQUdDLE9BQVM7NkJBQ2pGQyxvREFBYUEsQ0FBQ0MsZ0RBQUlBLEVBQUU7WUFDbEJKO1lBQ0FIO1lBQ0FJLFdBQVdJLGtFQUFZQSxDQUFDLFVBQStCLE9BQXJCQyxpRUFBV0EsQ0FBQ1YsWUFBYUs7WUFDM0QsR0FBR0MsS0FBQTtRQUFBOztJQUlHSixVQUFBUyxXQUFBLEdBQWMsR0FBVyxPQUFSWDtJQUVwQixPQUFBRTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9zcmMvY3JlYXRlTHVjaWRlSWNvbi50cz8wNDg4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtZXJnZUNsYXNzZXMsIHRvS2ViYWJDYXNlIH0gZnJvbSAnQGx1Y2lkZS9zaGFyZWQnO1xuaW1wb3J0IHsgSWNvbk5vZGUsIEx1Y2lkZVByb3BzIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgSWNvbiBmcm9tICcuL0ljb24nO1xuXG4vKipcbiAqIENyZWF0ZSBhIEx1Y2lkZSBpY29uIGNvbXBvbmVudFxuICogQHBhcmFtIHtzdHJpbmd9IGljb25OYW1lXG4gKiBAcGFyYW0ge2FycmF5fSBpY29uTm9kZVxuICogQHJldHVybnMge0ZvcndhcmRSZWZFeG90aWNDb21wb25lbnR9IEx1Y2lkZUljb25cbiAqL1xuY29uc3QgY3JlYXRlTHVjaWRlSWNvbiA9IChpY29uTmFtZTogc3RyaW5nLCBpY29uTm9kZTogSWNvbk5vZGUpID0+IHtcbiAgY29uc3QgQ29tcG9uZW50ID0gZm9yd2FyZFJlZjxTVkdTVkdFbGVtZW50LCBMdWNpZGVQcm9wcz4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+XG4gICAgY3JlYXRlRWxlbWVudChJY29uLCB7XG4gICAgICByZWYsXG4gICAgICBpY29uTm9kZSxcbiAgICAgIGNsYXNzTmFtZTogbWVyZ2VDbGFzc2VzKGBsdWNpZGUtJHt0b0tlYmFiQ2FzZShpY29uTmFtZSl9YCwgY2xhc3NOYW1lKSxcbiAgICAgIC4uLnByb3BzLFxuICAgIH0pLFxuICApO1xuXG4gIENvbXBvbmVudC5kaXNwbGF5TmFtZSA9IGAke2ljb25OYW1lfWA7XG5cbiAgcmV0dXJuIENvbXBvbmVudDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUx1Y2lkZUljb247XG4iXSwibmFtZXMiOlsiY3JlYXRlTHVjaWRlSWNvbiIsImljb25OYW1lIiwiaWNvbk5vZGUiLCJDb21wb25lbnQiLCJmb3J3YXJkUmVmIiwicmVmIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJjcmVhdGVFbGVtZW50IiwiSWNvbiIsIm1lcmdlQ2xhc3NlcyIsInRvS2ViYWJDYXNlIiwiZGlzcGxheU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/defaultAttributes.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ defaultAttributes; }\n/* harmony export */ });\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ var defaultAttributes = {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n};\n //# sourceMappingURL=defaultAttributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vZGVmYXVsdEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQUEsSUFBZUEsb0JBQUE7SUFDYkMsT0FBTztJQUNQQyxPQUFPO0lBQ1BDLFFBQVE7SUFDUkMsU0FBUztJQUNUQyxNQUFNO0lBQ05DLFFBQVE7SUFDUkMsYUFBYTtJQUNiQyxlQUFlO0lBQ2ZDLGdCQUFnQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vc3JjL2RlZmF1bHRBdHRyaWJ1dGVzLnRzPzM3MGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICB4bWxuczogJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyxcbiAgd2lkdGg6IDI0LFxuICBoZWlnaHQ6IDI0LFxuICB2aWV3Qm94OiAnMCAwIDI0IDI0JyxcbiAgZmlsbDogJ25vbmUnLFxuICBzdHJva2U6ICdjdXJyZW50Q29sb3InLFxuICBzdHJva2VXaWR0aDogMixcbiAgc3Ryb2tlTGluZWNhcDogJ3JvdW5kJyxcbiAgc3Ryb2tlTGluZWpvaW46ICdyb3VuZCcsXG59O1xuIl0sIm5hbWVzIjpbImRlZmF1bHRBdHRyaWJ1dGVzIiwieG1sbnMiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/arrow-down.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/arrow-down.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ArrowDown; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst ArrowDown = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"ArrowDown\", [\n    [\n        \"path\",\n        {\n            d: \"M12 5v14\",\n            key: \"s699le\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 12-7 7-7-7\",\n            key: \"1idqje\"\n        }\n    ]\n]);\n //# sourceMappingURL=arrow-down.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvYXJyb3ctZG93bi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWFNLE1BQUFBLFlBQVlDLGdFQUFnQkEsQ0FBQyxhQUFhO0lBQzlDO1FBQUM7UUFBUTtZQUFFQyxHQUFHO1lBQVlDLEtBQUs7UUFBQTtLQUFVO0lBQ3pDO1FBQUM7UUFBUTtZQUFFRCxHQUFHO1lBQWtCQyxLQUFLO1FBQUE7S0FBVTtDQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2ljb25zL2Fycm93LWRvd24udHM/YmQ0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uJztcblxuLyoqXG4gKiBAY29tcG9uZW50IEBuYW1lIEFycm93RG93blxuICogQGRlc2NyaXB0aW9uIEx1Y2lkZSBTVkcgaWNvbiBjb21wb25lbnQsIHJlbmRlcnMgU1ZHIEVsZW1lbnQgd2l0aCBjaGlsZHJlbi5cbiAqXG4gKiBAcHJldmlldyAhW2ltZ10oZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlBZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWdvZ0lIZHBaSFJvUFNJeU5DSUtJQ0JvWldsbmFIUTlJakkwSWdvZ0lIWnBaWGRDYjNnOUlqQWdNQ0F5TkNBeU5DSUtJQ0JtYVd4c1BTSnViMjVsSWdvZ0lITjBjbTlyWlQwaUl6QXdNQ0lnYzNSNWJHVTlJbUpoWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN0lHSnZjbVJsY2kxeVlXUnBkWE02SURKd2VDSUtJQ0J6ZEhKdmEyVXRkMmxrZEdnOUlqSWlDaUFnYzNSeWIydGxMV3hwYm1WallYQTlJbkp2ZFc1a0lnb2dJSE4wY205clpTMXNhVzVsYW05cGJqMGljbTkxYm1RaUNqNEtJQ0E4Y0dGMGFDQmtQU0pOTVRJZ05YWXhOQ0lnTHo0S0lDQThjR0YwYUNCa1BTSnRNVGtnTVRJdE55QTNMVGN0TnlJZ0x6NEtQQzl6ZG1jK0NnPT0pIC0gaHR0cHM6Ly9sdWNpZGUuZGV2L2ljb25zL2Fycm93LWRvd25cbiAqIEBzZWUgaHR0cHM6Ly9sdWNpZGUuZGV2L2d1aWRlL3BhY2thZ2VzL2x1Y2lkZS1yZWFjdCAtIERvY3VtZW50YXRpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvcHMgLSBMdWNpZGUgaWNvbnMgcHJvcHMgYW5kIGFueSB2YWxpZCBTVkcgYXR0cmlidXRlXG4gKiBAcmV0dXJucyB7SlNYLkVsZW1lbnR9IEpTWCBFbGVtZW50XG4gKlxuICovXG5jb25zdCBBcnJvd0Rvd24gPSBjcmVhdGVMdWNpZGVJY29uKCdBcnJvd0Rvd24nLCBbXG4gIFsncGF0aCcsIHsgZDogJ00xMiA1djE0Jywga2V5OiAnczY5OWxlJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnbTE5IDEyLTcgNy03LTcnLCBrZXk6ICcxaWRxamUnIH1dLFxuXSk7XG5cbmV4cG9ydCBkZWZhdWx0IEFycm93RG93bjtcbiJdLCJuYW1lcyI6WyJBcnJvd0Rvd24iLCJjcmVhdGVMdWNpZGVJY29uIiwiZCIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/arrow-down.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/audio-lines.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/audio-lines.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AudioLines; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst AudioLines = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"AudioLines\", [\n    [\n        \"path\",\n        {\n            d: \"M2 10v3\",\n            key: \"1fnikh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 6v11\",\n            key: \"11sgs0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 3v18\",\n            key: \"yhl04a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 8v7\",\n            key: \"3a1oy3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 5v13\",\n            key: \"123xd1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 10v3\",\n            key: \"154ddg\"\n        }\n    ]\n]);\n //# sourceMappingURL=audio-lines.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvYXVkaW8tbGluZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFhTSxNQUFBQSxhQUFhQyxnRUFBZ0JBLENBQUMsY0FBYztJQUNoRDtRQUFDO1FBQVE7WUFBRUMsR0FBRztZQUFXQyxLQUFLO1FBQUE7S0FBVTtJQUN4QztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFXQyxLQUFLO1FBQUE7S0FBVTtJQUN4QztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFZQyxLQUFLO1FBQUE7S0FBVTtJQUN6QztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFXQyxLQUFLO1FBQUE7S0FBVTtJQUN4QztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFZQyxLQUFLO1FBQUE7S0FBVTtJQUN6QztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFZQyxLQUFLO1FBQUE7S0FBVTtDQUMxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2ljb25zL2F1ZGlvLWxpbmVzLnRzPzk5NmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbic7XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBBdWRpb0xpbmVzXG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjR0YwYUNCa1BTSk5NaUF4TUhZeklpQXZQZ29nSUR4d1lYUm9JR1E5SWswMklEWjJNVEVpSUM4K0NpQWdQSEJoZEdnZ1pEMGlUVEV3SUROMk1UZ2lJQzgrQ2lBZ1BIQmhkR2dnWkQwaVRURTBJRGgyTnlJZ0x6NEtJQ0E4Y0dGMGFDQmtQU0pOTVRnZ05YWXhNeUlnTHo0S0lDQThjR0YwYUNCa1BTSk5NaklnTVRCMk15SWdMejRLUEM5emRtYytDZz09KSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy9hdWRpby1saW5lc1xuICogQHNlZSBodHRwczovL2x1Y2lkZS5kZXYvZ3VpZGUvcGFja2FnZXMvbHVjaWRlLXJlYWN0IC0gRG9jdW1lbnRhdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIEx1Y2lkZSBpY29ucyBwcm9wcyBhbmQgYW55IHZhbGlkIFNWRyBhdHRyaWJ1dGVcbiAqIEByZXR1cm5zIHtKU1guRWxlbWVudH0gSlNYIEVsZW1lbnRcbiAqXG4gKi9cbmNvbnN0IEF1ZGlvTGluZXMgPSBjcmVhdGVMdWNpZGVJY29uKCdBdWRpb0xpbmVzJywgW1xuICBbJ3BhdGgnLCB7IGQ6ICdNMiAxMHYzJywga2V5OiAnMWZuaWtoJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTYgNnYxMScsIGtleTogJzExc2dzMCcgfV0sXG4gIFsncGF0aCcsIHsgZDogJ00xMCAzdjE4Jywga2V5OiAneWhsMDRhJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTE0IDh2NycsIGtleTogJzNhMW95MycgfV0sXG4gIFsncGF0aCcsIHsgZDogJ00xOCA1djEzJywga2V5OiAnMTIzeGQxJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTIyIDEwdjMnLCBrZXk6ICcxNTRkZGcnIH1dLFxuXSk7XG5cbmV4cG9ydCBkZWZhdWx0IEF1ZGlvTGluZXM7XG4iXSwibmFtZXMiOlsiQXVkaW9MaW5lcyIsImNyZWF0ZUx1Y2lkZUljb24iLCJkIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/audio-lines.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/bot.js":
/*!*********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/bot.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Bot; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst Bot = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Bot\", [\n    [\n        \"path\",\n        {\n            d: \"M12 8V4H8\",\n            key: \"hb8ula\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"12\",\n            x: \"4\",\n            y: \"8\",\n            rx: \"2\",\n            key: \"enze0r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 14h2\",\n            key: \"vft8re\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 14h2\",\n            key: \"4cs60a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 13v2\",\n            key: \"1xurst\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 13v2\",\n            key: \"rq6x2g\"\n        }\n    ]\n]);\n //# sourceMappingURL=bot.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvYm90LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBYU0sTUFBQUEsTUFBTUMsZ0VBQWdCQSxDQUFDLE9BQU87SUFDbEM7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBYUMsS0FBSztRQUFBO0tBQVU7SUFDMUM7UUFBQztRQUFRO1lBQUVDLE9BQU87WUFBTUMsUUFBUTtZQUFNQyxHQUFHO1lBQUtDLEdBQUc7WUFBS0MsSUFBSTtZQUFLTCxLQUFLO1FBQUE7S0FBVTtJQUM5RTtRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFXQyxLQUFLO1FBQUE7S0FBVTtJQUN4QztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFZQyxLQUFLO1FBQUE7S0FBVTtJQUN6QztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFZQyxLQUFLO1FBQUE7S0FBVTtJQUN6QztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFXQyxLQUFLO1FBQUE7S0FBVTtDQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2ljb25zL2JvdC50cz82OGJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24nO1xuXG4vKipcbiAqIEBjb21wb25lbnQgQG5hbWUgQm90XG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjR0YwYUNCa1BTSk5NVElnT0ZZMFNEZ2lJQzgrQ2lBZ1BISmxZM1FnZDJsa2RHZzlJakUySWlCb1pXbG5hSFE5SWpFeUlpQjRQU0kwSWlCNVBTSTRJaUJ5ZUQwaU1pSWdMejRLSUNBOGNHRjBhQ0JrUFNKTk1pQXhOR2d5SWlBdlBnb2dJRHh3WVhSb0lHUTlJazB5TUNBeE5HZ3lJaUF2UGdvZ0lEeHdZWFJvSUdROUlrMHhOU0F4TTNZeUlpQXZQZ29nSUR4d1lYUm9JR1E5SWswNUlERXpkaklpSUM4K0Nqd3ZjM1puUGdvPSkgLSBodHRwczovL2x1Y2lkZS5kZXYvaWNvbnMvYm90XG4gKiBAc2VlIGh0dHBzOi8vbHVjaWRlLmRldi9ndWlkZS9wYWNrYWdlcy9sdWNpZGUtcmVhY3QgLSBEb2N1bWVudGF0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHByb3BzIC0gTHVjaWRlIGljb25zIHByb3BzIGFuZCBhbnkgdmFsaWQgU1ZHIGF0dHJpYnV0ZVxuICogQHJldHVybnMge0pTWC5FbGVtZW50fSBKU1ggRWxlbWVudFxuICpcbiAqL1xuY29uc3QgQm90ID0gY3JlYXRlTHVjaWRlSWNvbignQm90JywgW1xuICBbJ3BhdGgnLCB7IGQ6ICdNMTIgOFY0SDgnLCBrZXk6ICdoYjh1bGEnIH1dLFxuICBbJ3JlY3QnLCB7IHdpZHRoOiAnMTYnLCBoZWlnaHQ6ICcxMicsIHg6ICc0JywgeTogJzgnLCByeDogJzInLCBrZXk6ICdlbnplMHInIH1dLFxuICBbJ3BhdGgnLCB7IGQ6ICdNMiAxNGgyJywga2V5OiAndmZ0OHJlJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTIwIDE0aDInLCBrZXk6ICc0Y3M2MGEnIH1dLFxuICBbJ3BhdGgnLCB7IGQ6ICdNMTUgMTN2MicsIGtleTogJzF4dXJzdCcgfV0sXG4gIFsncGF0aCcsIHsgZDogJ005IDEzdjInLCBrZXk6ICdycTZ4MmcnIH1dLFxuXSk7XG5cbmV4cG9ydCBkZWZhdWx0IEJvdDtcbiJdLCJuYW1lcyI6WyJCb3QiLCJjcmVhdGVMdWNpZGVJY29uIiwiZCIsImtleSIsIndpZHRoIiwiaGVpZ2h0IiwieCIsInkiLCJyeCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/bot.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/check.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/check.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Check; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst Check = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Check\", [\n    [\n        \"path\",\n        {\n            d: \"M20 6 9 17l-5-5\",\n            key: \"1gmf2c\"\n        }\n    ]\n]);\n //# sourceMappingURL=check.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY2hlY2suanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFhQSxNQUFNQSxRQUFRQyxnRUFBZ0JBLENBQUMsU0FBUztJQUFDO1FBQUM7UUFBUTtZQUFFQyxHQUFHO1lBQW1CQyxLQUFLO1FBQVM7S0FBRTtDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvaWNvbnMvY2hlY2sudHM/NjNkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uJztcblxuLyoqXG4gKiBAY29tcG9uZW50IEBuYW1lIENoZWNrXG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjR0YwYUNCa1BTSk5NakFnTmlBNUlERTNiQzAxTFRVaUlDOCtDand2YzNablBnbz0pIC0gaHR0cHM6Ly9sdWNpZGUuZGV2L2ljb25zL2NoZWNrXG4gKiBAc2VlIGh0dHBzOi8vbHVjaWRlLmRldi9ndWlkZS9wYWNrYWdlcy9sdWNpZGUtcmVhY3QgLSBEb2N1bWVudGF0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHByb3BzIC0gTHVjaWRlIGljb25zIHByb3BzIGFuZCBhbnkgdmFsaWQgU1ZHIGF0dHJpYnV0ZVxuICogQHJldHVybnMge0pTWC5FbGVtZW50fSBKU1ggRWxlbWVudFxuICpcbiAqL1xuY29uc3QgQ2hlY2sgPSBjcmVhdGVMdWNpZGVJY29uKCdDaGVjaycsIFtbJ3BhdGgnLCB7IGQ6ICdNMjAgNiA5IDE3bC01LTUnLCBrZXk6ICcxZ21mMmMnIH1dXSk7XG5cbmV4cG9ydCBkZWZhdWx0IENoZWNrO1xuIl0sIm5hbWVzIjpbIkNoZWNrIiwiY3JlYXRlTHVjaWRlSWNvbiIsImQiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/check.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/chevron-down.js":
/*!******************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/chevron-down.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ChevronDown; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst ChevronDown = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"ChevronDown\", [\n    [\n        \"path\",\n        {\n            d: \"m6 9 6 6 6-6\",\n            key: \"qrunsl\"\n        }\n    ]\n]);\n //# sourceMappingURL=chevron-down.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY2hldnJvbi1kb3duLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBYU0sTUFBQUEsY0FBY0MsZ0VBQWdCQSxDQUFDLGVBQWU7SUFDbEQ7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBZ0JDLEtBQUs7UUFBQTtLQUFVO0NBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvaWNvbnMvY2hldnJvbi1kb3duLnRzP2NmMWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbic7XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBDaGV2cm9uRG93blxuICogQGRlc2NyaXB0aW9uIEx1Y2lkZSBTVkcgaWNvbiBjb21wb25lbnQsIHJlbmRlcnMgU1ZHIEVsZW1lbnQgd2l0aCBjaGlsZHJlbi5cbiAqXG4gKiBAcHJldmlldyAhW2ltZ10oZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlBZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWdvZ0lIZHBaSFJvUFNJeU5DSUtJQ0JvWldsbmFIUTlJakkwSWdvZ0lIWnBaWGRDYjNnOUlqQWdNQ0F5TkNBeU5DSUtJQ0JtYVd4c1BTSnViMjVsSWdvZ0lITjBjbTlyWlQwaUl6QXdNQ0lnYzNSNWJHVTlJbUpoWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN0lHSnZjbVJsY2kxeVlXUnBkWE02SURKd2VDSUtJQ0J6ZEhKdmEyVXRkMmxrZEdnOUlqSWlDaUFnYzNSeWIydGxMV3hwYm1WallYQTlJbkp2ZFc1a0lnb2dJSE4wY205clpTMXNhVzVsYW05cGJqMGljbTkxYm1RaUNqNEtJQ0E4Y0dGMGFDQmtQU0p0TmlBNUlEWWdOaUEyTFRZaUlDOCtDand2YzNablBnbz0pIC0gaHR0cHM6Ly9sdWNpZGUuZGV2L2ljb25zL2NoZXZyb24tZG93blxuICogQHNlZSBodHRwczovL2x1Y2lkZS5kZXYvZ3VpZGUvcGFja2FnZXMvbHVjaWRlLXJlYWN0IC0gRG9jdW1lbnRhdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIEx1Y2lkZSBpY29ucyBwcm9wcyBhbmQgYW55IHZhbGlkIFNWRyBhdHRyaWJ1dGVcbiAqIEByZXR1cm5zIHtKU1guRWxlbWVudH0gSlNYIEVsZW1lbnRcbiAqXG4gKi9cbmNvbnN0IENoZXZyb25Eb3duID0gY3JlYXRlTHVjaWRlSWNvbignQ2hldnJvbkRvd24nLCBbXG4gIFsncGF0aCcsIHsgZDogJ202IDkgNiA2IDYtNicsIGtleTogJ3FydW5zbCcgfV0sXG5dKTtcblxuZXhwb3J0IGRlZmF1bHQgQ2hldnJvbkRvd247XG4iXSwibmFtZXMiOlsiQ2hldnJvbkRvd24iLCJjcmVhdGVMdWNpZGVJY29uIiwiZCIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/chevron-down.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/chevron-left.js":
/*!******************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/chevron-left.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ChevronLeft; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst ChevronLeft = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"ChevronLeft\", [\n    [\n        \"path\",\n        {\n            d: \"m15 18-6-6 6-6\",\n            key: \"1wnfg3\"\n        }\n    ]\n]);\n //# sourceMappingURL=chevron-left.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY2hldnJvbi1sZWZ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBYU0sTUFBQUEsY0FBY0MsZ0VBQWdCQSxDQUFDLGVBQWU7SUFDbEQ7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBa0JDLEtBQUs7UUFBQTtLQUFVO0NBQ2hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvaWNvbnMvY2hldnJvbi1sZWZ0LnRzP2JlZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbic7XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBDaGV2cm9uTGVmdFxuICogQGRlc2NyaXB0aW9uIEx1Y2lkZSBTVkcgaWNvbiBjb21wb25lbnQsIHJlbmRlcnMgU1ZHIEVsZW1lbnQgd2l0aCBjaGlsZHJlbi5cbiAqXG4gKiBAcHJldmlldyAhW2ltZ10oZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlBZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWdvZ0lIZHBaSFJvUFNJeU5DSUtJQ0JvWldsbmFIUTlJakkwSWdvZ0lIWnBaWGRDYjNnOUlqQWdNQ0F5TkNBeU5DSUtJQ0JtYVd4c1BTSnViMjVsSWdvZ0lITjBjbTlyWlQwaUl6QXdNQ0lnYzNSNWJHVTlJbUpoWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN0lHSnZjbVJsY2kxeVlXUnBkWE02SURKd2VDSUtJQ0J6ZEhKdmEyVXRkMmxrZEdnOUlqSWlDaUFnYzNSeWIydGxMV3hwYm1WallYQTlJbkp2ZFc1a0lnb2dJSE4wY205clpTMXNhVzVsYW05cGJqMGljbTkxYm1RaUNqNEtJQ0E4Y0dGMGFDQmtQU0p0TVRVZ01UZ3ROaTAySURZdE5pSWdMejRLUEM5emRtYytDZz09KSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy9jaGV2cm9uLWxlZnRcbiAqIEBzZWUgaHR0cHM6Ly9sdWNpZGUuZGV2L2d1aWRlL3BhY2thZ2VzL2x1Y2lkZS1yZWFjdCAtIERvY3VtZW50YXRpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvcHMgLSBMdWNpZGUgaWNvbnMgcHJvcHMgYW5kIGFueSB2YWxpZCBTVkcgYXR0cmlidXRlXG4gKiBAcmV0dXJucyB7SlNYLkVsZW1lbnR9IEpTWCBFbGVtZW50XG4gKlxuICovXG5jb25zdCBDaGV2cm9uTGVmdCA9IGNyZWF0ZUx1Y2lkZUljb24oJ0NoZXZyb25MZWZ0JywgW1xuICBbJ3BhdGgnLCB7IGQ6ICdtMTUgMTgtNi02IDYtNicsIGtleTogJzF3bmZnMycgfV0sXG5dKTtcblxuZXhwb3J0IGRlZmF1bHQgQ2hldnJvbkxlZnQ7XG4iXSwibmFtZXMiOlsiQ2hldnJvbkxlZnQiLCJjcmVhdGVMdWNpZGVJY29uIiwiZCIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/chevron-left.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/chevron-right.js":
/*!*******************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/chevron-right.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ChevronRight; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst ChevronRight = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"ChevronRight\", [\n    [\n        \"path\",\n        {\n            d: \"m9 18 6-6-6-6\",\n            key: \"mthhwq\"\n        }\n    ]\n]);\n //# sourceMappingURL=chevron-right.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY2hldnJvbi1yaWdodC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWFNLE1BQUFBLGVBQWVDLGdFQUFnQkEsQ0FBQyxnQkFBZ0I7SUFDcEQ7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBaUJDLEtBQUs7UUFBQTtLQUFVO0NBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvaWNvbnMvY2hldnJvbi1yaWdodC50cz9mZjAwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24nO1xuXG4vKipcbiAqIEBjb21wb25lbnQgQG5hbWUgQ2hldnJvblJpZ2h0XG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjR0YwYUNCa1BTSnRPU0F4T0NBMkxUWXROaTAySWlBdlBnbzhMM04yWno0SykgLSBodHRwczovL2x1Y2lkZS5kZXYvaWNvbnMvY2hldnJvbi1yaWdodFxuICogQHNlZSBodHRwczovL2x1Y2lkZS5kZXYvZ3VpZGUvcGFja2FnZXMvbHVjaWRlLXJlYWN0IC0gRG9jdW1lbnRhdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIEx1Y2lkZSBpY29ucyBwcm9wcyBhbmQgYW55IHZhbGlkIFNWRyBhdHRyaWJ1dGVcbiAqIEByZXR1cm5zIHtKU1guRWxlbWVudH0gSlNYIEVsZW1lbnRcbiAqXG4gKi9cbmNvbnN0IENoZXZyb25SaWdodCA9IGNyZWF0ZUx1Y2lkZUljb24oJ0NoZXZyb25SaWdodCcsIFtcbiAgWydwYXRoJywgeyBkOiAnbTkgMTggNi02LTYtNicsIGtleTogJ210aGh3cScgfV0sXG5dKTtcblxuZXhwb3J0IGRlZmF1bHQgQ2hldnJvblJpZ2h0O1xuIl0sIm5hbWVzIjpbIkNoZXZyb25SaWdodCIsImNyZWF0ZUx1Y2lkZUljb24iLCJkIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/chevron-right.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-stop.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/circle-stop.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CircleStop; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst CircleStop = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"CircleStop\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            x: \"9\",\n            y: \"9\",\n            width: \"6\",\n            height: \"6\",\n            rx: \"1\",\n            key: \"1ssd4o\"\n        }\n    ]\n]);\n //# sourceMappingURL=circle-stop.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY2lyY2xlLXN0b3AuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFhTSxNQUFBQSxhQUFhQyxnRUFBZ0JBLENBQUMsY0FBYztJQUNoRDtRQUFDO1FBQVU7WUFBRUMsSUFBSTtZQUFNQyxJQUFJO1lBQU1DLEdBQUc7WUFBTUMsS0FBSztRQUFBO0tBQVU7SUFDekQ7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBS0MsR0FBRztZQUFLQyxPQUFPO1lBQUtDLFFBQVE7WUFBS0MsSUFBSTtZQUFLTCxLQUFLO1FBQUE7S0FBVTtDQUM3RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2ljb25zL2NpcmNsZS1zdG9wLnRzP2VmNTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbic7XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBDaXJjbGVTdG9wXG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThZMmx5WTJ4bElHTjRQU0l4TWlJZ1kzazlJakV5SWlCeVBTSXhNQ0lnTHo0S0lDQThjbVZqZENCNFBTSTVJaUI1UFNJNUlpQjNhV1IwYUQwaU5pSWdhR1ZwWjJoMFBTSTJJaUJ5ZUQwaU1TSWdMejRLUEM5emRtYytDZz09KSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy9jaXJjbGUtc3RvcFxuICogQHNlZSBodHRwczovL2x1Y2lkZS5kZXYvZ3VpZGUvcGFja2FnZXMvbHVjaWRlLXJlYWN0IC0gRG9jdW1lbnRhdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIEx1Y2lkZSBpY29ucyBwcm9wcyBhbmQgYW55IHZhbGlkIFNWRyBhdHRyaWJ1dGVcbiAqIEByZXR1cm5zIHtKU1guRWxlbWVudH0gSlNYIEVsZW1lbnRcbiAqXG4gKi9cbmNvbnN0IENpcmNsZVN0b3AgPSBjcmVhdGVMdWNpZGVJY29uKCdDaXJjbGVTdG9wJywgW1xuICBbJ2NpcmNsZScsIHsgY3g6ICcxMicsIGN5OiAnMTInLCByOiAnMTAnLCBrZXk6ICcxbWdsYXknIH1dLFxuICBbJ3JlY3QnLCB7IHg6ICc5JywgeTogJzknLCB3aWR0aDogJzYnLCBoZWlnaHQ6ICc2Jywgcng6ICcxJywga2V5OiAnMXNzZDRvJyB9XSxcbl0pO1xuXG5leHBvcnQgZGVmYXVsdCBDaXJjbGVTdG9wO1xuIl0sIm5hbWVzIjpbIkNpcmNsZVN0b3AiLCJjcmVhdGVMdWNpZGVJY29uIiwiY3giLCJjeSIsInIiLCJrZXkiLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0IiwicngiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-stop.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-x.js":
/*!**************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/circle-x.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CircleX; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst CircleX = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"CircleX\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 9-6 6\",\n            key: \"1uzhvr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 9 6 6\",\n            key: \"z0biqf\"\n        }\n    ]\n]);\n //# sourceMappingURL=circle-x.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY2lyY2xlLXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFhTSxNQUFBQSxVQUFVQyxnRUFBZ0JBLENBQUMsV0FBVztJQUMxQztRQUFDO1FBQVU7WUFBRUMsSUFBSTtZQUFNQyxJQUFJO1lBQU1DLEdBQUc7WUFBTUMsS0FBSztRQUFBO0tBQVU7SUFDekQ7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBYUQsS0FBSztRQUFBO0tBQVU7SUFDMUM7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBWUQsS0FBSztRQUFBO0tBQVU7Q0FDMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9pY29ucy9jaXJjbGUteC50cz9kNmRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24nO1xuXG4vKipcbiAqIEBjb21wb25lbnQgQG5hbWUgQ2lyY2xlWFxuICogQGRlc2NyaXB0aW9uIEx1Y2lkZSBTVkcgaWNvbiBjb21wb25lbnQsIHJlbmRlcnMgU1ZHIEVsZW1lbnQgd2l0aCBjaGlsZHJlbi5cbiAqXG4gKiBAcHJldmlldyAhW2ltZ10oZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlBZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWdvZ0lIZHBaSFJvUFNJeU5DSUtJQ0JvWldsbmFIUTlJakkwSWdvZ0lIWnBaWGRDYjNnOUlqQWdNQ0F5TkNBeU5DSUtJQ0JtYVd4c1BTSnViMjVsSWdvZ0lITjBjbTlyWlQwaUl6QXdNQ0lnYzNSNWJHVTlJbUpoWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN0lHSnZjbVJsY2kxeVlXUnBkWE02SURKd2VDSUtJQ0J6ZEhKdmEyVXRkMmxrZEdnOUlqSWlDaUFnYzNSeWIydGxMV3hwYm1WallYQTlJbkp2ZFc1a0lnb2dJSE4wY205clpTMXNhVzVsYW05cGJqMGljbTkxYm1RaUNqNEtJQ0E4WTJseVkyeGxJR040UFNJeE1pSWdZM2s5SWpFeUlpQnlQU0l4TUNJZ0x6NEtJQ0E4Y0dGMGFDQmtQU0p0TVRVZ09TMDJJRFlpSUM4K0NpQWdQSEJoZEdnZ1pEMGliVGtnT1NBMklEWWlJQzgrQ2p3dmMzWm5QZ289KSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy9jaXJjbGUteFxuICogQHNlZSBodHRwczovL2x1Y2lkZS5kZXYvZ3VpZGUvcGFja2FnZXMvbHVjaWRlLXJlYWN0IC0gRG9jdW1lbnRhdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIEx1Y2lkZSBpY29ucyBwcm9wcyBhbmQgYW55IHZhbGlkIFNWRyBhdHRyaWJ1dGVcbiAqIEByZXR1cm5zIHtKU1guRWxlbWVudH0gSlNYIEVsZW1lbnRcbiAqXG4gKi9cbmNvbnN0IENpcmNsZVggPSBjcmVhdGVMdWNpZGVJY29uKCdDaXJjbGVYJywgW1xuICBbJ2NpcmNsZScsIHsgY3g6ICcxMicsIGN5OiAnMTInLCByOiAnMTAnLCBrZXk6ICcxbWdsYXknIH1dLFxuICBbJ3BhdGgnLCB7IGQ6ICdtMTUgOS02IDYnLCBrZXk6ICcxdXpodnInIH1dLFxuICBbJ3BhdGgnLCB7IGQ6ICdtOSA5IDYgNicsIGtleTogJ3owYmlxZicgfV0sXG5dKTtcblxuZXhwb3J0IGRlZmF1bHQgQ2lyY2xlWDtcbiJdLCJuYW1lcyI6WyJDaXJjbGVYIiwiY3JlYXRlTHVjaWRlSWNvbiIsImN4IiwiY3kiLCJyIiwia2V5IiwiZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-x.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/copy.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/copy.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Copy; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst Copy = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Copy\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"14\",\n            x: \"8\",\n            y: \"8\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"17jyea\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\",\n            key: \"zix9uf\"\n        }\n    ]\n]);\n //# sourceMappingURL=copy.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY29weS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWFNLE1BQUFBLE9BQU9DLGdFQUFnQkEsQ0FBQyxRQUFRO0lBQ3BDO1FBQUM7UUFBUTtZQUFFQyxPQUFPO1lBQU1DLFFBQVE7WUFBTUMsR0FBRztZQUFLQyxHQUFHO1lBQUtDLElBQUk7WUFBS0MsSUFBSTtZQUFLQyxLQUFLO1FBQUE7S0FBVTtJQUN2RjtRQUFDO1FBQVE7WUFBRUMsR0FBRztZQUEyREQsS0FBSztRQUFBO0tBQVU7Q0FDekYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9pY29ucy9jb3B5LnRzP2FmOWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbic7XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBDb3B5XG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjbVZqZENCM2FXUjBhRDBpTVRRaUlHaGxhV2RvZEQwaU1UUWlJSGc5SWpnaUlIazlJamdpSUhKNFBTSXlJaUJ5ZVQwaU1pSWdMejRLSUNBOGNHRjBhQ0JrUFNKTk5DQXhObU10TVM0eElEQXRNaTB1T1MweUxUSldOR013TFRFdU1TNDVMVElnTWkweWFERXdZekV1TVNBd0lESWdMamtnTWlBeUlpQXZQZ284TDNOMlp6NEspIC0gaHR0cHM6Ly9sdWNpZGUuZGV2L2ljb25zL2NvcHlcbiAqIEBzZWUgaHR0cHM6Ly9sdWNpZGUuZGV2L2d1aWRlL3BhY2thZ2VzL2x1Y2lkZS1yZWFjdCAtIERvY3VtZW50YXRpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvcHMgLSBMdWNpZGUgaWNvbnMgcHJvcHMgYW5kIGFueSB2YWxpZCBTVkcgYXR0cmlidXRlXG4gKiBAcmV0dXJucyB7SlNYLkVsZW1lbnR9IEpTWCBFbGVtZW50XG4gKlxuICovXG5jb25zdCBDb3B5ID0gY3JlYXRlTHVjaWRlSWNvbignQ29weScsIFtcbiAgWydyZWN0JywgeyB3aWR0aDogJzE0JywgaGVpZ2h0OiAnMTQnLCB4OiAnOCcsIHk6ICc4Jywgcng6ICcyJywgcnk6ICcyJywga2V5OiAnMTdqeWVhJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTQgMTZjLTEuMSAwLTItLjktMi0yVjRjMC0xLjEuOS0yIDItMmgxMGMxLjEgMCAyIC45IDIgMicsIGtleTogJ3ppeDl1ZicgfV0sXG5dKTtcblxuZXhwb3J0IGRlZmF1bHQgQ29weTtcbiJdLCJuYW1lcyI6WyJDb3B5IiwiY3JlYXRlTHVjaWRlSWNvbiIsIndpZHRoIiwiaGVpZ2h0IiwieCIsInkiLCJyeCIsInJ5Iiwia2V5IiwiZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/copy.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/file.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/file.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ File; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst File = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"File\", [\n    [\n        \"path\",\n        {\n            d: \"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\",\n            key: \"1rqfz7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 2v4a2 2 0 0 0 2 2h4\",\n            key: \"tnqrlb\"\n        }\n    ]\n]);\n //# sourceMappingURL=file.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvZmlsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWFNLE1BQUFBLE9BQU9DLGdFQUFnQkEsQ0FBQyxRQUFRO0lBQ3BDO1FBQUM7UUFBUTtZQUFFQyxHQUFHO1lBQThEQyxLQUFLO1FBQUE7S0FBVTtJQUMzRjtRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUEyQkMsS0FBSztRQUFBO0tBQVU7Q0FDekQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9pY29ucy9maWxlLnRzPzdjNjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbic7XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBGaWxlXG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjR0YwYUNCa1BTSk5NVFVnTWtnMllUSWdNaUF3SURBZ01DMHlJREoyTVRaaE1pQXlJREFnTUNBd0lESWdNbWd4TW1FeUlESWdNQ0F3SURBZ01pMHlWamRhSWlBdlBnb2dJRHh3WVhSb0lHUTlJazB4TkNBeWRqUmhNaUF5SURBZ01DQXdJRElnTW1nMElpQXZQZ284TDNOMlp6NEspIC0gaHR0cHM6Ly9sdWNpZGUuZGV2L2ljb25zL2ZpbGVcbiAqIEBzZWUgaHR0cHM6Ly9sdWNpZGUuZGV2L2d1aWRlL3BhY2thZ2VzL2x1Y2lkZS1yZWFjdCAtIERvY3VtZW50YXRpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvcHMgLSBMdWNpZGUgaWNvbnMgcHJvcHMgYW5kIGFueSB2YWxpZCBTVkcgYXR0cmlidXRlXG4gKiBAcmV0dXJucyB7SlNYLkVsZW1lbnR9IEpTWCBFbGVtZW50XG4gKlxuICovXG5jb25zdCBGaWxlID0gY3JlYXRlTHVjaWRlSWNvbignRmlsZScsIFtcbiAgWydwYXRoJywgeyBkOiAnTTE1IDJINmEyIDIgMCAwIDAtMiAydjE2YTIgMiAwIDAgMCAyIDJoMTJhMiAyIDAgMCAwIDItMlY3WicsIGtleTogJzFycWZ6NycgfV0sXG4gIFsncGF0aCcsIHsgZDogJ00xNCAydjRhMiAyIDAgMCAwIDIgMmg0Jywga2V5OiAndG5xcmxiJyB9XSxcbl0pO1xuXG5leHBvcnQgZGVmYXVsdCBGaWxlO1xuIl0sIm5hbWVzIjpbIkZpbGUiLCJjcmVhdGVMdWNpZGVJY29uIiwiZCIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/file.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/paperclip.js":
/*!***************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/paperclip.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Paperclip; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst Paperclip = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Paperclip\", [\n    [\n        \"path\",\n        {\n            d: \"m21.44 11.05-9.19 9.19a6 6 0 0 1-8.49-8.49l8.57-8.57A4 4 0 1 1 18 8.84l-8.59 8.57a2 2 0 0 1-2.83-2.83l8.49-8.48\",\n            key: \"1u3ebp\"\n        }\n    ]\n]);\n //# sourceMappingURL=paperclip.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvcGFwZXJjbGlwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBYU0sTUFBQUEsWUFBWUMsZ0VBQWdCQSxDQUFDLGFBQWE7SUFDOUM7UUFDRTtRQUNBO1lBQ0VDLEdBQUc7WUFDSEMsS0FBSztRQUNQO0tBQ0Y7Q0FDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2ljb25zL3BhcGVyY2xpcC50cz8yNDRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24nO1xuXG4vKipcbiAqIEBjb21wb25lbnQgQG5hbWUgUGFwZXJjbGlwXG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjR0YwYUNCa1BTSnRNakV1TkRRZ01URXVNRFV0T1M0eE9TQTVMakU1WVRZZ05pQXdJREFnTVMwNExqUTVMVGd1TkRsc09DNDFOeTA0TGpVM1FUUWdOQ0F3SURFZ01TQXhPQ0E0TGpnMGJDMDRMalU1SURndU5UZGhNaUF5SURBZ01DQXhMVEl1T0RNdE1pNDRNMnc0TGpRNUxUZ3VORGdpSUM4K0Nqd3ZjM1puUGdvPSkgLSBodHRwczovL2x1Y2lkZS5kZXYvaWNvbnMvcGFwZXJjbGlwXG4gKiBAc2VlIGh0dHBzOi8vbHVjaWRlLmRldi9ndWlkZS9wYWNrYWdlcy9sdWNpZGUtcmVhY3QgLSBEb2N1bWVudGF0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHByb3BzIC0gTHVjaWRlIGljb25zIHByb3BzIGFuZCBhbnkgdmFsaWQgU1ZHIGF0dHJpYnV0ZVxuICogQHJldHVybnMge0pTWC5FbGVtZW50fSBKU1ggRWxlbWVudFxuICpcbiAqL1xuY29uc3QgUGFwZXJjbGlwID0gY3JlYXRlTHVjaWRlSWNvbignUGFwZXJjbGlwJywgW1xuICBbXG4gICAgJ3BhdGgnLFxuICAgIHtcbiAgICAgIGQ6ICdtMjEuNDQgMTEuMDUtOS4xOSA5LjE5YTYgNiAwIDAgMS04LjQ5LTguNDlsOC41Ny04LjU3QTQgNCAwIDEgMSAxOCA4Ljg0bC04LjU5IDguNTdhMiAyIDAgMCAxLTIuODMtMi44M2w4LjQ5LTguNDgnLFxuICAgICAga2V5OiAnMXUzZWJwJyxcbiAgICB9LFxuICBdLFxuXSk7XG5cbmV4cG9ydCBkZWZhdWx0IFBhcGVyY2xpcDtcbiJdLCJuYW1lcyI6WyJQYXBlcmNsaXAiLCJjcmVhdGVMdWNpZGVJY29uIiwiZCIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/paperclip.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/pencil.js":
/*!************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/pencil.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Pencil; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst Pencil = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Pencil\", [\n    [\n        \"path\",\n        {\n            d: \"M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z\",\n            key: \"1a8usu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 5 4 4\",\n            key: \"1mk7zo\"\n        }\n    ]\n]);\n //# sourceMappingURL=pencil.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvcGVuY2lsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBYU0sTUFBQUEsU0FBU0MsZ0VBQWdCQSxDQUFDLFVBQVU7SUFDeEM7UUFDRTtRQUNBO1lBQ0VDLEdBQUc7WUFDSEMsS0FBSztRQUNQO0tBQ0Y7SUFDQTtRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFhQyxLQUFLO1FBQUE7S0FBVTtDQUMzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2ljb25zL3BlbmNpbC50cz8zYzkxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24nO1xuXG4vKipcbiAqIEBjb21wb25lbnQgQG5hbWUgUGVuY2lsXG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjR0YwYUNCa1BTSk5NakV1TVRjMElEWXVPREV5WVRFZ01TQXdJREFnTUMwekxqazROaTB6TGprNE4wd3pMamcwTWlBeE5pNHhOelJoTWlBeUlEQWdNQ0F3TFM0MUxqZ3piQzB4TGpNeU1TQTBMak0xTW1FdU5TNDFJREFnTUNBd0lDNDJNak11TmpJeWJEUXVNelV6TFRFdU16SmhNaUF5SURBZ01DQXdJQzQ0TXkwdU5EazNlaUlnTHo0S0lDQThjR0YwYUNCa1BTSnRNVFVnTlNBMElEUWlJQzgrQ2p3dmMzWm5QZ289KSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy9wZW5jaWxcbiAqIEBzZWUgaHR0cHM6Ly9sdWNpZGUuZGV2L2d1aWRlL3BhY2thZ2VzL2x1Y2lkZS1yZWFjdCAtIERvY3VtZW50YXRpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvcHMgLSBMdWNpZGUgaWNvbnMgcHJvcHMgYW5kIGFueSB2YWxpZCBTVkcgYXR0cmlidXRlXG4gKiBAcmV0dXJucyB7SlNYLkVsZW1lbnR9IEpTWCBFbGVtZW50XG4gKlxuICovXG5jb25zdCBQZW5jaWwgPSBjcmVhdGVMdWNpZGVJY29uKCdQZW5jaWwnLCBbXG4gIFtcbiAgICAncGF0aCcsXG4gICAge1xuICAgICAgZDogJ00yMS4xNzQgNi44MTJhMSAxIDAgMCAwLTMuOTg2LTMuOTg3TDMuODQyIDE2LjE3NGEyIDIgMCAwIDAtLjUuODNsLTEuMzIxIDQuMzUyYS41LjUgMCAwIDAgLjYyMy42MjJsNC4zNTMtMS4zMmEyIDIgMCAwIDAgLjgzLS40OTd6JyxcbiAgICAgIGtleTogJzFhOHVzdScsXG4gICAgfSxcbiAgXSxcbiAgWydwYXRoJywgeyBkOiAnbTE1IDUgNCA0Jywga2V5OiAnMW1rN3pvJyB9XSxcbl0pO1xuXG5leHBvcnQgZGVmYXVsdCBQZW5jaWw7XG4iXSwibmFtZXMiOlsiUGVuY2lsIiwiY3JlYXRlTHVjaWRlSWNvbiIsImQiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/pencil.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/refresh-cw.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ RefreshCw; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst RefreshCw = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"RefreshCw\", [\n    [\n        \"path\",\n        {\n            d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\",\n            key: \"v9h5vc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 3v5h-5\",\n            key: \"1q7to0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\",\n            key: \"3uifl3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16H3v5\",\n            key: \"1cv678\"\n        }\n    ]\n]);\n //# sourceMappingURL=refresh-cw.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvcmVmcmVzaC1jdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWFNLE1BQUFBLFlBQVlDLGdFQUFnQkEsQ0FBQyxhQUFhO0lBQzlDO1FBQUM7UUFBUTtZQUFFQyxHQUFHO1lBQXNEQyxLQUFLO1FBQUE7S0FBVTtJQUNuRjtRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFjQyxLQUFLO1FBQUE7S0FBVTtJQUMzQztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUF1REMsS0FBSztRQUFBO0tBQVU7SUFDcEY7UUFBQztRQUFRO1lBQUVELEdBQUc7WUFBYUMsS0FBSztRQUFBO0tBQVU7Q0FDM0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9pY29ucy9yZWZyZXNoLWN3LnRzPzA5YWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbic7XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBSZWZyZXNoQ3dcbiAqIEBkZXNjcmlwdGlvbiBMdWNpZGUgU1ZHIGljb24gY29tcG9uZW50LCByZW5kZXJzIFNWRyBFbGVtZW50IHdpdGggY2hpbGRyZW4uXG4gKlxuICogQHByZXZpZXcgIVtpbWddKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QWdlRzFzYm5NOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabklnb2dJSGRwWkhSb1BTSXlOQ0lLSUNCb1pXbG5hSFE5SWpJMElnb2dJSFpwWlhkQ2IzZzlJakFnTUNBeU5DQXlOQ0lLSUNCbWFXeHNQU0p1YjI1bElnb2dJSE4wY205clpUMGlJekF3TUNJZ2MzUjViR1U5SW1KaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObVptWTdJR0p2Y21SbGNpMXlZV1JwZFhNNklESndlQ0lLSUNCemRISnZhMlV0ZDJsa2RHZzlJaklpQ2lBZ2MzUnliMnRsTFd4cGJtVmpZWEE5SW5KdmRXNWtJZ29nSUhOMGNtOXJaUzFzYVc1bGFtOXBiajBpY205MWJtUWlDajRLSUNBOGNHRjBhQ0JrUFNKTk15QXhNbUU1SURrZ01DQXdJREVnT1MwNUlEa3VOelVnT1M0M05TQXdJREFnTVNBMkxqYzBJREl1TnpSTU1qRWdPQ0lnTHo0S0lDQThjR0YwYUNCa1BTSk5NakVnTTNZMWFDMDFJaUF2UGdvZ0lEeHdZWFJvSUdROUlrMHlNU0F4TW1FNUlEa2dNQ0F3SURFdE9TQTVJRGt1TnpVZ09TNDNOU0F3SURBZ01TMDJMamMwTFRJdU56Uk1NeUF4TmlJZ0x6NEtJQ0E4Y0dGMGFDQmtQU0pOT0NBeE5rZ3pkalVpSUM4K0Nqd3ZjM1puUGdvPSkgLSBodHRwczovL2x1Y2lkZS5kZXYvaWNvbnMvcmVmcmVzaC1jd1xuICogQHNlZSBodHRwczovL2x1Y2lkZS5kZXYvZ3VpZGUvcGFja2FnZXMvbHVjaWRlLXJlYWN0IC0gRG9jdW1lbnRhdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIEx1Y2lkZSBpY29ucyBwcm9wcyBhbmQgYW55IHZhbGlkIFNWRyBhdHRyaWJ1dGVcbiAqIEByZXR1cm5zIHtKU1guRWxlbWVudH0gSlNYIEVsZW1lbnRcbiAqXG4gKi9cbmNvbnN0IFJlZnJlc2hDdyA9IGNyZWF0ZUx1Y2lkZUljb24oJ1JlZnJlc2hDdycsIFtcbiAgWydwYXRoJywgeyBkOiAnTTMgMTJhOSA5IDAgMCAxIDktOSA5Ljc1IDkuNzUgMCAwIDEgNi43NCAyLjc0TDIxIDgnLCBrZXk6ICd2OWg1dmMnIH1dLFxuICBbJ3BhdGgnLCB7IGQ6ICdNMjEgM3Y1aC01Jywga2V5OiAnMXE3dG8wJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTIxIDEyYTkgOSAwIDAgMS05IDkgOS43NSA5Ljc1IDAgMCAxLTYuNzQtMi43NEwzIDE2Jywga2V5OiAnM3VpZmwzJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTggMTZIM3Y1Jywga2V5OiAnMWN2Njc4JyB9XSxcbl0pO1xuXG5leHBvcnQgZGVmYXVsdCBSZWZyZXNoQ3c7XG4iXSwibmFtZXMiOlsiUmVmcmVzaEN3IiwiY3JlYXRlTHVjaWRlSWNvbiIsImQiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/send-horizontal.js":
/*!*********************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/send-horizontal.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SendHorizontal; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst SendHorizontal = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"SendHorizontal\", [\n    [\n        \"path\",\n        {\n            d: \"M3.714 3.048a.498.498 0 0 0-.683.627l2.843 7.627a2 2 0 0 1 0 1.396l-2.842 7.627a.498.498 0 0 0 .682.627l18-8.5a.5.5 0 0 0 0-.904z\",\n            key: \"117uat\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 12h16\",\n            key: \"s4cdu5\"\n        }\n    ]\n]);\n //# sourceMappingURL=send-horizontal.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvc2VuZC1ob3Jpem9udGFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBYU0sTUFBQUEsaUJBQWlCQyxnRUFBZ0JBLENBQUMsa0JBQWtCO0lBQ3hEO1FBQ0U7UUFDQTtZQUNFQyxHQUFHO1lBQ0hDLEtBQUs7UUFDUDtLQUNGO0lBQ0E7UUFBQztRQUFRO1lBQUVELEdBQUc7WUFBWUMsS0FBSztRQUFBO0tBQVU7Q0FDMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9pY29ucy9zZW5kLWhvcml6b250YWwudHM/YzVlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uJztcblxuLyoqXG4gKiBAY29tcG9uZW50IEBuYW1lIFNlbmRIb3Jpem9udGFsXG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjR0YwYUNCa1BTSk5NeTQzTVRRZ015NHdORGhoTGpRNU9DNDBPVGdnTUNBd0lEQXRMalk0TXk0Mk1qZHNNaTQ0TkRNZ055NDJNamRoTWlBeUlEQWdNQ0F4SURBZ01TNHpPVFpzTFRJdU9EUXlJRGN1TmpJM1lTNDBPVGd1TkRrNElEQWdNQ0F3SUM0Mk9ESXVOakkzYkRFNExUZ3VOV0V1TlM0MUlEQWdNQ0F3SURBdExqa3dOSG9pSUM4K0NpQWdQSEJoZEdnZ1pEMGlUVFlnTVRKb01UWWlJQzgrQ2p3dmMzWm5QZ289KSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy9zZW5kLWhvcml6b250YWxcbiAqIEBzZWUgaHR0cHM6Ly9sdWNpZGUuZGV2L2d1aWRlL3BhY2thZ2VzL2x1Y2lkZS1yZWFjdCAtIERvY3VtZW50YXRpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvcHMgLSBMdWNpZGUgaWNvbnMgcHJvcHMgYW5kIGFueSB2YWxpZCBTVkcgYXR0cmlidXRlXG4gKiBAcmV0dXJucyB7SlNYLkVsZW1lbnR9IEpTWCBFbGVtZW50XG4gKlxuICovXG5jb25zdCBTZW5kSG9yaXpvbnRhbCA9IGNyZWF0ZUx1Y2lkZUljb24oJ1NlbmRIb3Jpem9udGFsJywgW1xuICBbXG4gICAgJ3BhdGgnLFxuICAgIHtcbiAgICAgIGQ6ICdNMy43MTQgMy4wNDhhLjQ5OC40OTggMCAwIDAtLjY4My42MjdsMi44NDMgNy42MjdhMiAyIDAgMCAxIDAgMS4zOTZsLTIuODQyIDcuNjI3YS40OTguNDk4IDAgMCAwIC42ODIuNjI3bDE4LTguNWEuNS41IDAgMCAwIDAtLjkwNHonLFxuICAgICAga2V5OiAnMTE3dWF0JyxcbiAgICB9LFxuICBdLFxuICBbJ3BhdGgnLCB7IGQ6ICdNNiAxMmgxNicsIGtleTogJ3M0Y2R1NScgfV0sXG5dKTtcblxuZXhwb3J0IGRlZmF1bHQgU2VuZEhvcml6b250YWw7XG4iXSwibmFtZXMiOlsiU2VuZEhvcml6b250YWwiLCJjcmVhdGVMdWNpZGVJY29uIiwiZCIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/send-horizontal.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/thumbs-down.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/thumbs-down.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ThumbsDown; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst ThumbsDown = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"ThumbsDown\", [\n    [\n        \"path\",\n        {\n            d: \"M17 14V2\",\n            key: \"8ymqnk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22a3.13 3.13 0 0 1-3-3.88Z\",\n            key: \"m61m77\"\n        }\n    ]\n]);\n //# sourceMappingURL=thumbs-down.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvdGh1bWJzLWRvd24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFhTSxNQUFBQSxhQUFhQyxnRUFBZ0JBLENBQUMsY0FBYztJQUNoRDtRQUFDO1FBQVE7WUFBRUMsR0FBRztZQUFZQyxLQUFLO1FBQUE7S0FBVTtJQUN6QztRQUNFO1FBQ0E7WUFDRUQsR0FBRztZQUNIQyxLQUFLO1FBQ1A7S0FDRjtDQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvaWNvbnMvdGh1bWJzLWRvd24udHM/ZjVhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uJztcblxuLyoqXG4gKiBAY29tcG9uZW50IEBuYW1lIFRodW1ic0Rvd25cbiAqIEBkZXNjcmlwdGlvbiBMdWNpZGUgU1ZHIGljb24gY29tcG9uZW50LCByZW5kZXJzIFNWRyBFbGVtZW50IHdpdGggY2hpbGRyZW4uXG4gKlxuICogQHByZXZpZXcgIVtpbWddKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QWdlRzFzYm5NOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabklnb2dJSGRwWkhSb1BTSXlOQ0lLSUNCb1pXbG5hSFE5SWpJMElnb2dJSFpwWlhkQ2IzZzlJakFnTUNBeU5DQXlOQ0lLSUNCbWFXeHNQU0p1YjI1bElnb2dJSE4wY205clpUMGlJekF3TUNJZ2MzUjViR1U5SW1KaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObVptWTdJR0p2Y21SbGNpMXlZV1JwZFhNNklESndlQ0lLSUNCemRISnZhMlV0ZDJsa2RHZzlJaklpQ2lBZ2MzUnliMnRsTFd4cGJtVmpZWEE5SW5KdmRXNWtJZ29nSUhOMGNtOXJaUzFzYVc1bGFtOXBiajBpY205MWJtUWlDajRLSUNBOGNHRjBhQ0JrUFNKTk1UY2dNVFJXTWlJZ0x6NEtJQ0E4Y0dGMGFDQmtQU0pOT1NBeE9DNHhNaUF4TUNBeE5FZzBMakUzWVRJZ01pQXdJREFnTVMweExqa3lMVEl1TlRac01pNHpNeTA0UVRJZ01pQXdJREFnTVNBMkxqVWdNa2d5TUdFeUlESWdNQ0F3SURFZ01pQXlkamhoTWlBeUlEQWdNQ0F4TFRJZ01tZ3RNaTQzTm1FeUlESWdNQ0F3SURBdE1TNDNPU0F4TGpFeFRERXlJREl5WVRNdU1UTWdNeTR4TXlBd0lEQWdNUzB6TFRNdU9EaGFJaUF2UGdvOEwzTjJaejRLKSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy90aHVtYnMtZG93blxuICogQHNlZSBodHRwczovL2x1Y2lkZS5kZXYvZ3VpZGUvcGFja2FnZXMvbHVjaWRlLXJlYWN0IC0gRG9jdW1lbnRhdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIEx1Y2lkZSBpY29ucyBwcm9wcyBhbmQgYW55IHZhbGlkIFNWRyBhdHRyaWJ1dGVcbiAqIEByZXR1cm5zIHtKU1guRWxlbWVudH0gSlNYIEVsZW1lbnRcbiAqXG4gKi9cbmNvbnN0IFRodW1ic0Rvd24gPSBjcmVhdGVMdWNpZGVJY29uKCdUaHVtYnNEb3duJywgW1xuICBbJ3BhdGgnLCB7IGQ6ICdNMTcgMTRWMicsIGtleTogJzh5bXFuaycgfV0sXG4gIFtcbiAgICAncGF0aCcsXG4gICAge1xuICAgICAgZDogJ005IDE4LjEyIDEwIDE0SDQuMTdhMiAyIDAgMCAxLTEuOTItMi41NmwyLjMzLThBMiAyIDAgMCAxIDYuNSAySDIwYTIgMiAwIDAgMSAyIDJ2OGEyIDIgMCAwIDEtMiAyaC0yLjc2YTIgMiAwIDAgMC0xLjc5IDEuMTFMMTIgMjJhMy4xMyAzLjEzIDAgMCAxLTMtMy44OFonLFxuICAgICAga2V5OiAnbTYxbTc3JyxcbiAgICB9LFxuICBdLFxuXSk7XG5cbmV4cG9ydCBkZWZhdWx0IFRodW1ic0Rvd247XG4iXSwibmFtZXMiOlsiVGh1bWJzRG93biIsImNyZWF0ZUx1Y2lkZUljb24iLCJkIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/thumbs-down.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/thumbs-up.js":
/*!***************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/thumbs-up.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ThumbsUp; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst ThumbsUp = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"ThumbsUp\", [\n    [\n        \"path\",\n        {\n            d: \"M7 10v12\",\n            key: \"1qc93n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z\",\n            key: \"emmmcr\"\n        }\n    ]\n]);\n //# sourceMappingURL=thumbs-up.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvdGh1bWJzLXVwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBYU0sTUFBQUEsV0FBV0MsZ0VBQWdCQSxDQUFDLFlBQVk7SUFDNUM7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBWUMsS0FBSztRQUFBO0tBQVU7SUFDekM7UUFDRTtRQUNBO1lBQ0VELEdBQUc7WUFDSEMsS0FBSztRQUNQO0tBQ0Y7Q0FDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2ljb25zL3RodW1icy11cC50cz8yYTA1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24nO1xuXG4vKipcbiAqIEBjb21wb25lbnQgQG5hbWUgVGh1bWJzVXBcbiAqIEBkZXNjcmlwdGlvbiBMdWNpZGUgU1ZHIGljb24gY29tcG9uZW50LCByZW5kZXJzIFNWRyBFbGVtZW50IHdpdGggY2hpbGRyZW4uXG4gKlxuICogQHByZXZpZXcgIVtpbWddKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QWdlRzFzYm5NOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabklnb2dJSGRwWkhSb1BTSXlOQ0lLSUNCb1pXbG5hSFE5SWpJMElnb2dJSFpwWlhkQ2IzZzlJakFnTUNBeU5DQXlOQ0lLSUNCbWFXeHNQU0p1YjI1bElnb2dJSE4wY205clpUMGlJekF3TUNJZ2MzUjViR1U5SW1KaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObVptWTdJR0p2Y21SbGNpMXlZV1JwZFhNNklESndlQ0lLSUNCemRISnZhMlV0ZDJsa2RHZzlJaklpQ2lBZ2MzUnliMnRsTFd4cGJtVmpZWEE5SW5KdmRXNWtJZ29nSUhOMGNtOXJaUzFzYVc1bGFtOXBiajBpY205MWJtUWlDajRLSUNBOGNHRjBhQ0JrUFNKTk55QXhNSFl4TWlJZ0x6NEtJQ0E4Y0dGMGFDQmtQU0pOTVRVZ05TNDRPQ0F4TkNBeE1HZzFMamd6WVRJZ01pQXdJREFnTVNBeExqa3lJREl1TlRac0xUSXVNek1nT0VFeUlESWdNQ0F3SURFZ01UY3VOU0F5TWtnMFlUSWdNaUF3SURBZ01TMHlMVEoyTFRoaE1pQXlJREFnTUNBeElESXRNbWd5TGpjMllUSWdNaUF3SURBZ01DQXhMamM1TFRFdU1URk1NVElnTW1FekxqRXpJRE11TVRNZ01DQXdJREVnTXlBekxqZzRXaUlnTHo0S1BDOXpkbWMrQ2c9PSkgLSBodHRwczovL2x1Y2lkZS5kZXYvaWNvbnMvdGh1bWJzLXVwXG4gKiBAc2VlIGh0dHBzOi8vbHVjaWRlLmRldi9ndWlkZS9wYWNrYWdlcy9sdWNpZGUtcmVhY3QgLSBEb2N1bWVudGF0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHByb3BzIC0gTHVjaWRlIGljb25zIHByb3BzIGFuZCBhbnkgdmFsaWQgU1ZHIGF0dHJpYnV0ZVxuICogQHJldHVybnMge0pTWC5FbGVtZW50fSBKU1ggRWxlbWVudFxuICpcbiAqL1xuY29uc3QgVGh1bWJzVXAgPSBjcmVhdGVMdWNpZGVJY29uKCdUaHVtYnNVcCcsIFtcbiAgWydwYXRoJywgeyBkOiAnTTcgMTB2MTInLCBrZXk6ICcxcWM5M24nIH1dLFxuICBbXG4gICAgJ3BhdGgnLFxuICAgIHtcbiAgICAgIGQ6ICdNMTUgNS44OCAxNCAxMGg1LjgzYTIgMiAwIDAgMSAxLjkyIDIuNTZsLTIuMzMgOEEyIDIgMCAwIDEgMTcuNSAyMkg0YTIgMiAwIDAgMS0yLTJ2LThhMiAyIDAgMCAxIDItMmgyLjc2YTIgMiAwIDAgMCAxLjc5LTEuMTFMMTIgMmEzLjEzIDMuMTMgMCAwIDEgMyAzLjg4WicsXG4gICAgICBrZXk6ICdlbW1tY3InLFxuICAgIH0sXG4gIF0sXG5dKTtcblxuZXhwb3J0IGRlZmF1bHQgVGh1bWJzVXA7XG4iXSwibmFtZXMiOlsiVGh1bWJzVXAiLCJjcmVhdGVMdWNpZGVJY29uIiwiZCIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/thumbs-up.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/shared/src/utils.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeClasses: function() { return /* binding */ mergeClasses; },\n/* harmony export */   toKebabCase: function() { return /* binding */ toKebabCase; }\n/* harmony export */ });\n/**\n * @license lucide-react v0.452.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ const toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = function() {\n    for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++){\n        classes[_key] = arguments[_key];\n    }\n    return classes.filter((className, index, array)=>{\n        return Boolean(className) && array.indexOf(className) === index;\n    }).join(\" \");\n};\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vc2hhcmVkL3NyYy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBUWEsTUFBQUEsY0FBYyxDQUFDQyxTQUMxQkEsT0FBT0MsT0FBQSxDQUFRLHNCQUFzQixTQUFTQyxXQUFZO0FBK0IvQyxNQUFBQyxlQUFlO3FDQUEyQ0M7UUFBQUE7O1dBQ3JFQSxRQUNHQyxNQUFBLENBQU8sQ0FBQ0MsV0FBV0MsT0FBT0M7UUFDekIsT0FBT0MsUUFBUUgsY0FBY0UsTUFBTUUsT0FBQSxDQUFRSixlQUFlQztJQUM1RCxHQUNDSSxJQUFBLENBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uL3NoYXJlZC9zcmMvdXRpbHMudHM/ZDgxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYW1lbFRvUGFzY2FsIH0gZnJvbSAnLi91dGlsaXR5LXR5cGVzJztcblxuLyoqXG4gKiBDb252ZXJ0cyBzdHJpbmcgdG8ga2ViYWIgY2FzZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEga2ViYWJpemVkIHN0cmluZ1xuICovXG5leHBvcnQgY29uc3QgdG9LZWJhYkNhc2UgPSAoc3RyaW5nOiBzdHJpbmcpID0+XG4gIHN0cmluZy5yZXBsYWNlKC8oW2EtejAtOV0pKFtBLVpdKS9nLCAnJDEtJDInKS50b0xvd2VyQ2FzZSgpO1xuXG4vKipcbiAqIENvbnZlcnRzIHN0cmluZyB0byBjYW1lbCBjYXNlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZ1xuICogQHJldHVybnMge3N0cmluZ30gQSBjYW1lbGl6ZWQgc3RyaW5nXG4gKi9cbmV4cG9ydCBjb25zdCB0b0NhbWVsQ2FzZSA9IDxUIGV4dGVuZHMgc3RyaW5nPihzdHJpbmc6IFQpID0+XG4gIHN0cmluZy5yZXBsYWNlKC9eKFtBLVpdKXxbXFxzLV9dKyhcXHcpL2csIChtYXRjaCwgcDEsIHAyKSA9PlxuICAgIHAyID8gcDIudG9VcHBlckNhc2UoKSA6IHAxLnRvTG93ZXJDYXNlKCksXG4gICk7XG5cbi8qKlxuICogQ29udmVydHMgc3RyaW5nIHRvIHBhc2NhbCBjYXNlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZ1xuICogQHJldHVybnMge3N0cmluZ30gQSBwYXNjYWxpemVkIHN0cmluZ1xuICovXG5leHBvcnQgY29uc3QgdG9QYXNjYWxDYXNlID0gPFQgZXh0ZW5kcyBzdHJpbmc+KHN0cmluZzogVCk6IENhbWVsVG9QYXNjYWw8VD4gPT4ge1xuICBjb25zdCBjYW1lbENhc2UgPSB0b0NhbWVsQ2FzZShzdHJpbmcpO1xuXG4gIHJldHVybiAoY2FtZWxDYXNlLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgY2FtZWxDYXNlLnNsaWNlKDEpKSBhcyBDYW1lbFRvUGFzY2FsPFQ+O1xufTtcblxuLyoqXG4gKiBNZXJnZXMgY2xhc3NlcyBpbnRvIGEgc2luZ2xlIHN0cmluZ1xuICpcbiAqIEBwYXJhbSB7YXJyYXl9IGNsYXNzZXNcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgc3RyaW5nIG9mIGNsYXNzZXNcbiAqL1xuZXhwb3J0IGNvbnN0IG1lcmdlQ2xhc3NlcyA9IDxDbGFzc1R5cGUgPSBzdHJpbmcgfCB1bmRlZmluZWQgfCBudWxsPiguLi5jbGFzc2VzOiBDbGFzc1R5cGVbXSkgPT5cbiAgY2xhc3Nlc1xuICAgIC5maWx0ZXIoKGNsYXNzTmFtZSwgaW5kZXgsIGFycmF5KSA9PiB7XG4gICAgICByZXR1cm4gQm9vbGVhbihjbGFzc05hbWUpICYmIGFycmF5LmluZGV4T2YoY2xhc3NOYW1lKSA9PT0gaW5kZXg7XG4gICAgfSlcbiAgICAuam9pbignICcpO1xuIl0sIm5hbWVzIjpbInRvS2ViYWJDYXNlIiwic3RyaW5nIiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwibWVyZ2VDbGFzc2VzIiwiY2xhc3NlcyIsImZpbHRlciIsImNsYXNzTmFtZSIsImluZGV4IiwiYXJyYXkiLCJCb29sZWFuIiwiaW5kZXhPZiIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/OTg5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/client-only/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {



/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={592:(e,r,t)=>{var n=t(722);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},722:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(592);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLGFBQWEsT0FBTyxjQUFjLGFBQWEsMEJBQTBCLG9DQUFvQyw4QkFBOEIsdUJBQXVCLFFBQVEsa0JBQWtCLFdBQVcsZ0JBQWdCLDhCQUE4QixxQkFBcUIsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0NBQWdDLFdBQVcsT0FBTywyQkFBMkIsNkJBQTZCLEtBQUssOENBQThDLG9CQUFvQixNQUFNLFNBQVMsT0FBTyxtQkFBbUIsT0FBTyxZQUFZLGdDQUFnQyxjQUFjLE9BQU8sZ0NBQWdDLE9BQU8sZ0NBQWdDLHFDQUFxQyw0Q0FBNEMsMkNBQTJDLFNBQVMsZ0JBQWdCLElBQUksd0JBQXdCLE9BQU8sWUFBWSxPQUFPLHVCQUF1QixxQkFBcUIsT0FBTyx1QkFBdUIsT0FBTyxnQ0FBZ0MsT0FBTyxlQUFlLG9CQUFvQixpQkFBaUIsc0NBQXNDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsdUNBQXVDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsMkNBQTJDLGtCQUFrQiwyQ0FBMkMsS0FBSyw2QkFBNkIsMkJBQTJCLE1BQU0sT0FBTyxlQUFlLEVBQUUsb0JBQW9CLG9CQUFvQixLQUFLLEdBQUcsU0FBUyx3QkFBd0IsT0FBTyxhQUFhLHdDQUF3QyxZQUFZLHNCQUFzQixZQUFZLE9BQU8sNkJBQTZCLHFCQUFxQixPQUFPLHFCQUFxQixPQUFPLE1BQU0sZUFBZSxRQUFRLEdBQUcsU0FBUyxxQkFBcUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsT0FBTyxhQUFhLEdBQUcseUJBQXlCLHlDQUF5QyxhQUFhLFlBQVksd0JBQXdCLE1BQU0sMERBQTBELFlBQVksNkJBQTZCLGtCQUFrQixvQkFBb0IscUJBQXFCLGFBQWEsZ0VBQWdFLFlBQVksT0FBTyxNQUFNLCtDQUErQyxLQUFLLG9DQUFvQyxhQUFhLDRCQUE0QixTQUFTLHlCQUF5QiwrQkFBK0IsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLGtCQUFrQixTQUFTLGdCQUFnQixzQkFBc0IsV0FBVyxzQkFBc0IsU0FBUyxvREFBb0QsaURBQWlELDJDQUEyQyxRQUFRLHNCQUFzQixnQkFBZ0IsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qcz9lM2RkIl0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO3ZhciBlPXs1OTI6KGUscix0KT0+e3ZhciBuPXQoNzIyKTt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO3ZhciBhPXR5cGVvZiBkb2N1bWVudD09PVwidW5kZWZpbmVkXCI7dmFyIG89QXJyYXkucHJvdG90eXBlLmZvckVhY2g7ZnVuY3Rpb24gZGVib3VuY2UoZSxyKXt2YXIgdD0wO3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXM7dmFyIGk9YXJndW1lbnRzO3ZhciBhPWZ1bmN0aW9uIGZ1bmN0aW9uQ2FsbCgpe3JldHVybiBlLmFwcGx5KG4saSl9O2NsZWFyVGltZW91dCh0KTt0PXNldFRpbWVvdXQoYSxyKX19ZnVuY3Rpb24gbm9vcCgpe31mdW5jdGlvbiBnZXRDdXJyZW50U2NyaXB0VXJsKGUpe3ZhciByPWlbZV07aWYoIXIpe2lmKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpe3I9ZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmN9ZWxzZXt2YXIgdD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTt2YXIgYT10W3QubGVuZ3RoLTFdO2lmKGEpe3I9YS5zcmN9fWlbZV09cn1yZXR1cm4gZnVuY3Rpb24oZSl7aWYoIXIpe3JldHVybiBudWxsfXZhciB0PXIuc3BsaXQoLyhbXlxcXFwvXSspXFwuanMkLyk7dmFyIGk9dCYmdFsxXTtpZighaSl7cmV0dXJuW3IucmVwbGFjZShcIi5qc1wiLFwiLmNzc1wiKV19aWYoIWUpe3JldHVybltyLnJlcGxhY2UoXCIuanNcIixcIi5jc3NcIildfXJldHVybiBlLnNwbGl0KFwiLFwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBSZWdFeHAoXCJcIi5jb25jYXQoaSxcIlxcXFwuanMkXCIpLFwiZ1wiKTtyZXR1cm4gbihyLnJlcGxhY2UodCxcIlwiLmNvbmNhdChlLnJlcGxhY2UoL3tmaWxlTmFtZX0vZyxpKSxcIi5jc3NcIikpKX0pKX19ZnVuY3Rpb24gdXBkYXRlQ3NzKGUscil7aWYoIXIpe2lmKCFlLmhyZWYpe3JldHVybn1yPWUuaHJlZi5zcGxpdChcIj9cIilbMF19aWYoIWlzVXJsUmVxdWVzdChyKSl7cmV0dXJufWlmKGUuaXNMb2FkZWQ9PT1mYWxzZSl7cmV0dXJufWlmKCFyfHwhKHIuaW5kZXhPZihcIi5jc3NcIik+LTEpKXtyZXR1cm59ZS52aXNpdGVkPXRydWU7dmFyIHQ9ZS5jbG9uZU5vZGUoKTt0LmlzTG9hZGVkPWZhbHNlO3QuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtpZih0LmlzTG9hZGVkKXtyZXR1cm59dC5pc0xvYWRlZD10cnVlO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0pKTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLChmdW5jdGlvbigpe2lmKHQuaXNMb2FkZWQpe3JldHVybn10LmlzTG9hZGVkPXRydWU7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSkpO3QuaHJlZj1cIlwiLmNvbmNhdChyLFwiP1wiKS5jb25jYXQoRGF0ZS5ub3coKSk7aWYoZS5uZXh0U2libGluZyl7ZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0LGUubmV4dFNpYmxpbmcpfWVsc2V7ZS5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHQpfX1mdW5jdGlvbiBnZXRSZWxvYWRVcmwoZSxyKXt2YXIgdDtlPW4oZSx7c3RyaXBXV1c6ZmFsc2V9KTtyLnNvbWUoKGZ1bmN0aW9uKG4pe2lmKGUuaW5kZXhPZihyKT4tMSl7dD1ufX0pKTtyZXR1cm4gdH1mdW5jdGlvbiByZWxvYWRTdHlsZShlKXtpZighZSl7cmV0dXJuIGZhbHNlfXZhciByPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO3ZhciB0PWZhbHNlO28uY2FsbChyLChmdW5jdGlvbihyKXtpZighci5ocmVmKXtyZXR1cm59dmFyIG49Z2V0UmVsb2FkVXJsKHIuaHJlZixlKTtpZighaXNVcmxSZXF1ZXN0KG4pKXtyZXR1cm59aWYoci52aXNpdGVkPT09dHJ1ZSl7cmV0dXJufWlmKG4pe3VwZGF0ZUNzcyhyLG4pO3Q9dHJ1ZX19KSk7cmV0dXJuIHR9ZnVuY3Rpb24gcmVsb2FkQWxsKCl7dmFyIGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpbmtcIik7by5jYWxsKGUsKGZ1bmN0aW9uKGUpe2lmKGUudmlzaXRlZD09PXRydWUpe3JldHVybn11cGRhdGVDc3MoZSl9KSl9ZnVuY3Rpb24gaXNVcmxSZXF1ZXN0KGUpe2lmKCEvXlthLXpBLVpdW2EtekEtWlxcZCtcXC0uXSo6Ly50ZXN0KGUpKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9ZS5leHBvcnRzPWZ1bmN0aW9uKGUscil7aWYoYSl7Y29uc29sZS5sb2coXCJubyB3aW5kb3cuZG9jdW1lbnQgZm91bmQsIHdpbGwgbm90IEhNUiBDU1NcIik7cmV0dXJuIG5vb3B9dmFyIHQ9Z2V0Q3VycmVudFNjcmlwdFVybChlKTtmdW5jdGlvbiB1cGRhdGUoKXt2YXIgZT10KHIuZmlsZW5hbWUpO3ZhciBuPXJlbG9hZFN0eWxlKGUpO2lmKHIubG9jYWxzKXtjb25zb2xlLmxvZyhcIltITVJdIERldGVjdGVkIGxvY2FsIGNzcyBtb2R1bGVzLiBSZWxvYWQgYWxsIGNzc1wiKTtyZWxvYWRBbGwoKTtyZXR1cm59aWYobil7Y29uc29sZS5sb2coXCJbSE1SXSBjc3MgcmVsb2FkICVzXCIsZS5qb2luKFwiIFwiKSl9ZWxzZXtjb25zb2xlLmxvZyhcIltITVJdIFJlbG9hZCBhbGwgY3NzXCIpO3JlbG9hZEFsbCgpfX1yZXR1cm4gZGVib3VuY2UodXBkYXRlLDUwKX19LDcyMjplPT57ZnVuY3Rpb24gbm9ybWFsaXplVXJsKGUpe3JldHVybiBlLnJlZHVjZSgoZnVuY3Rpb24oZSxyKXtzd2l0Y2gocil7Y2FzZVwiLi5cIjplLnBvcCgpO2JyZWFrO2Nhc2VcIi5cIjpicmVhaztkZWZhdWx0OmUucHVzaChyKX1yZXR1cm4gZX0pLFtdKS5qb2luKFwiL1wiKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7ZT1lLnRyaW0oKTtpZigvXmRhdGE6L2kudGVzdChlKSl7cmV0dXJuIGV9dmFyIHI9ZS5pbmRleE9mKFwiLy9cIikhPT0tMT9lLnNwbGl0KFwiLy9cIilbMF0rXCIvL1wiOlwiXCI7dmFyIHQ9ZS5yZXBsYWNlKG5ldyBSZWdFeHAocixcImlcIiksXCJcIikuc3BsaXQoXCIvXCIpO3ZhciBuPXRbMF0udG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXC4kLyxcIlwiKTt0WzBdPVwiXCI7dmFyIGk9bm9ybWFsaXplVXJsKHQpO3JldHVybiByK24raX19fTt2YXIgcj17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHQpe3ZhciBuPXJbdF07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT1yW3RdPXtleHBvcnRzOnt9fTt2YXIgYT10cnVlO3RyeXtlW3RdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO2E9ZmFsc2V9ZmluYWxseXtpZihhKWRlbGV0ZSByW3RdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciB0PV9fbmNjd3Bja19yZXF1aXJlX18oNTkyKTttb2R1bGUuZXhwb3J0cz10fSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz9hYzhhIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/component.js":
/*!***********************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/component.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RemoveScrollBar: function() { return /* binding */ RemoveScrollBar; },\n/* harmony export */   lockAttribute: function() { return /* binding */ lockAttribute; },\n/* harmony export */   useLockAttribute: function() { return /* binding */ useLockAttribute; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_style_singleton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-style-singleton */ \"(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/utils.js\");\n\n\n\n\nvar Style = (0,react_style_singleton__WEBPACK_IMPORTED_MODULE_1__.styleSingleton)();\nvar lockAttribute = 'data-scroll-locked';\n// important tip - once we measure scrollBar width and remove them\n// we could not repeat this operation\n// thus we are using style-singleton - only the first \"yet correct\" style will be applied.\nvar getStyles = function (_a, allowRelative, gapMode, important) {\n    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    return \"\\n  .\".concat(_constants__WEBPACK_IMPORTED_MODULE_2__.noScrollbarsClassName, \" {\\n   overflow: hidden \").concat(important, \";\\n   padding-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  body[\").concat(lockAttribute, \"] {\\n    overflow: hidden \").concat(important, \";\\n    overscroll-behavior: contain;\\n    \").concat([\n        allowRelative && \"position: relative \".concat(important, \";\"),\n        gapMode === 'margin' &&\n            \"\\n    padding-left: \".concat(left, \"px;\\n    padding-top: \").concat(top, \"px;\\n    padding-right: \").concat(right, \"px;\\n    margin-left:0;\\n    margin-top:0;\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n    \"),\n        gapMode === 'padding' && \"padding-right: \".concat(gap, \"px \").concat(important, \";\"),\n    ]\n        .filter(Boolean)\n        .join(''), \"\\n  }\\n  \\n  .\").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.zeroRightClassName, \" {\\n    right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.fullWidthClassName, \" {\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.zeroRightClassName, \" .\").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.zeroRightClassName, \" {\\n    right: 0 \").concat(important, \";\\n  }\\n  \\n  .\").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.fullWidthClassName, \" .\").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.fullWidthClassName, \" {\\n    margin-right: 0 \").concat(important, \";\\n  }\\n  \\n  body[\").concat(lockAttribute, \"] {\\n    \").concat(_constants__WEBPACK_IMPORTED_MODULE_2__.removedBarSizeVariable, \": \").concat(gap, \"px;\\n  }\\n\");\n};\nvar getCurrentUseCounter = function () {\n    var counter = parseInt(document.body.getAttribute(lockAttribute) || '0', 10);\n    return isFinite(counter) ? counter : 0;\n};\nvar useLockAttribute = function () {\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {\n        document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());\n        return function () {\n            var newCounter = getCurrentUseCounter() - 1;\n            if (newCounter <= 0) {\n                document.body.removeAttribute(lockAttribute);\n            }\n            else {\n                document.body.setAttribute(lockAttribute, newCounter.toString());\n            }\n        };\n    }, []);\n};\n/**\n * Removes page scrollbar and blocks page scroll when mounted\n */\nvar RemoveScrollBar = function (_a) {\n    var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? 'margin' : _b;\n    useLockAttribute();\n    /*\n     gap will be measured on every component mount\n     however it will be used only by the \"first\" invocation\n     due to singleton nature of <Style\n     */\n    var gap = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () { return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getGapWidth)(gapMode); }, [gapMode]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsLWJhci9kaXN0L2VzMjAxNS9jb21wb25lbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBK0I7QUFDd0I7QUFDNkQ7QUFDOUU7QUFDdEMsWUFBWSxxRUFBYztBQUNuQjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsMEJBQTBCLDZEQUFxQixLQUFLLDZDQUE2Qyw4REFBOEQsS0FBSyxzQ0FBc0MsOENBQThDLG1DQUFtQztBQUMzUixtRUFBbUU7QUFDbkU7QUFDQSxvREFBb0Qsc0NBQXNDLDBDQUEwQyxvQkFBb0IsbUJBQW1CLDhEQUE4RDtBQUN6TywwRkFBMEY7QUFDMUY7QUFDQTtBQUNBLHlCQUF5QixtQkFBbUIsMERBQWtCLEtBQUssdURBQXVELEtBQUssbUJBQW1CLDBEQUFrQixLQUFLLDhEQUE4RCxLQUFLLG1CQUFtQiwwREFBa0IsZUFBZSwwREFBa0IsS0FBSyxzQ0FBc0MsS0FBSyxtQkFBbUIsMERBQWtCLGVBQWUsMERBQWtCLEtBQUssNkNBQTZDLEtBQUssMENBQTBDLGdCQUFnQiw4REFBc0Isd0JBQXdCLEtBQUs7QUFDNWtCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLElBQUksNENBQWU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywwQ0FBYSxlQUFlLE9BQU8sbURBQVcsWUFBWTtBQUN4RSxXQUFXLGdEQUFtQixVQUFVLGdGQUFnRjtBQUN4SCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVtb3ZlLXNjcm9sbC1iYXIvZGlzdC9lczIwMTUvY29tcG9uZW50LmpzPzJlNTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgc3R5bGVTaW5nbGV0b24gfSBmcm9tICdyZWFjdC1zdHlsZS1zaW5nbGV0b24nO1xuaW1wb3J0IHsgZnVsbFdpZHRoQ2xhc3NOYW1lLCB6ZXJvUmlnaHRDbGFzc05hbWUsIG5vU2Nyb2xsYmFyc0NsYXNzTmFtZSwgcmVtb3ZlZEJhclNpemVWYXJpYWJsZSB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IGdldEdhcFdpZHRoIH0gZnJvbSAnLi91dGlscyc7XG52YXIgU3R5bGUgPSBzdHlsZVNpbmdsZXRvbigpO1xuZXhwb3J0IHZhciBsb2NrQXR0cmlidXRlID0gJ2RhdGEtc2Nyb2xsLWxvY2tlZCc7XG4vLyBpbXBvcnRhbnQgdGlwIC0gb25jZSB3ZSBtZWFzdXJlIHNjcm9sbEJhciB3aWR0aCBhbmQgcmVtb3ZlIHRoZW1cbi8vIHdlIGNvdWxkIG5vdCByZXBlYXQgdGhpcyBvcGVyYXRpb25cbi8vIHRodXMgd2UgYXJlIHVzaW5nIHN0eWxlLXNpbmdsZXRvbiAtIG9ubHkgdGhlIGZpcnN0IFwieWV0IGNvcnJlY3RcIiBzdHlsZSB3aWxsIGJlIGFwcGxpZWQuXG52YXIgZ2V0U3R5bGVzID0gZnVuY3Rpb24gKF9hLCBhbGxvd1JlbGF0aXZlLCBnYXBNb2RlLCBpbXBvcnRhbnQpIHtcbiAgICB2YXIgbGVmdCA9IF9hLmxlZnQsIHRvcCA9IF9hLnRvcCwgcmlnaHQgPSBfYS5yaWdodCwgZ2FwID0gX2EuZ2FwO1xuICAgIGlmIChnYXBNb2RlID09PSB2b2lkIDApIHsgZ2FwTW9kZSA9ICdtYXJnaW4nOyB9XG4gICAgcmV0dXJuIFwiXFxuICAuXCIuY29uY2F0KG5vU2Nyb2xsYmFyc0NsYXNzTmFtZSwgXCIge1xcbiAgIG92ZXJmbG93OiBoaWRkZW4gXCIpLmNvbmNhdChpbXBvcnRhbnQsIFwiO1xcbiAgIHBhZGRpbmctcmlnaHQ6IFwiKS5jb25jYXQoZ2FwLCBcInB4IFwiKS5jb25jYXQoaW1wb3J0YW50LCBcIjtcXG4gIH1cXG4gIGJvZHlbXCIpLmNvbmNhdChsb2NrQXR0cmlidXRlLCBcIl0ge1xcbiAgICBvdmVyZmxvdzogaGlkZGVuIFwiKS5jb25jYXQoaW1wb3J0YW50LCBcIjtcXG4gICAgb3ZlcnNjcm9sbC1iZWhhdmlvcjogY29udGFpbjtcXG4gICAgXCIpLmNvbmNhdChbXG4gICAgICAgIGFsbG93UmVsYXRpdmUgJiYgXCJwb3NpdGlvbjogcmVsYXRpdmUgXCIuY29uY2F0KGltcG9ydGFudCwgXCI7XCIpLFxuICAgICAgICBnYXBNb2RlID09PSAnbWFyZ2luJyAmJlxuICAgICAgICAgICAgXCJcXG4gICAgcGFkZGluZy1sZWZ0OiBcIi5jb25jYXQobGVmdCwgXCJweDtcXG4gICAgcGFkZGluZy10b3A6IFwiKS5jb25jYXQodG9wLCBcInB4O1xcbiAgICBwYWRkaW5nLXJpZ2h0OiBcIikuY29uY2F0KHJpZ2h0LCBcInB4O1xcbiAgICBtYXJnaW4tbGVmdDowO1xcbiAgICBtYXJnaW4tdG9wOjA7XFxuICAgIG1hcmdpbi1yaWdodDogXCIpLmNvbmNhdChnYXAsIFwicHggXCIpLmNvbmNhdChpbXBvcnRhbnQsIFwiO1xcbiAgICBcIiksXG4gICAgICAgIGdhcE1vZGUgPT09ICdwYWRkaW5nJyAmJiBcInBhZGRpbmctcmlnaHQ6IFwiLmNvbmNhdChnYXAsIFwicHggXCIpLmNvbmNhdChpbXBvcnRhbnQsIFwiO1wiKSxcbiAgICBdXG4gICAgICAgIC5maWx0ZXIoQm9vbGVhbilcbiAgICAgICAgLmpvaW4oJycpLCBcIlxcbiAgfVxcbiAgXFxuICAuXCIpLmNvbmNhdCh6ZXJvUmlnaHRDbGFzc05hbWUsIFwiIHtcXG4gICAgcmlnaHQ6IFwiKS5jb25jYXQoZ2FwLCBcInB4IFwiKS5jb25jYXQoaW1wb3J0YW50LCBcIjtcXG4gIH1cXG4gIFxcbiAgLlwiKS5jb25jYXQoZnVsbFdpZHRoQ2xhc3NOYW1lLCBcIiB7XFxuICAgIG1hcmdpbi1yaWdodDogXCIpLmNvbmNhdChnYXAsIFwicHggXCIpLmNvbmNhdChpbXBvcnRhbnQsIFwiO1xcbiAgfVxcbiAgXFxuICAuXCIpLmNvbmNhdCh6ZXJvUmlnaHRDbGFzc05hbWUsIFwiIC5cIikuY29uY2F0KHplcm9SaWdodENsYXNzTmFtZSwgXCIge1xcbiAgICByaWdodDogMCBcIikuY29uY2F0KGltcG9ydGFudCwgXCI7XFxuICB9XFxuICBcXG4gIC5cIikuY29uY2F0KGZ1bGxXaWR0aENsYXNzTmFtZSwgXCIgLlwiKS5jb25jYXQoZnVsbFdpZHRoQ2xhc3NOYW1lLCBcIiB7XFxuICAgIG1hcmdpbi1yaWdodDogMCBcIikuY29uY2F0KGltcG9ydGFudCwgXCI7XFxuICB9XFxuICBcXG4gIGJvZHlbXCIpLmNvbmNhdChsb2NrQXR0cmlidXRlLCBcIl0ge1xcbiAgICBcIikuY29uY2F0KHJlbW92ZWRCYXJTaXplVmFyaWFibGUsIFwiOiBcIikuY29uY2F0KGdhcCwgXCJweDtcXG4gIH1cXG5cIik7XG59O1xudmFyIGdldEN1cnJlbnRVc2VDb3VudGVyID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBjb3VudGVyID0gcGFyc2VJbnQoZG9jdW1lbnQuYm9keS5nZXRBdHRyaWJ1dGUobG9ja0F0dHJpYnV0ZSkgfHwgJzAnLCAxMCk7XG4gICAgcmV0dXJuIGlzRmluaXRlKGNvdW50ZXIpID8gY291bnRlciA6IDA7XG59O1xuZXhwb3J0IHZhciB1c2VMb2NrQXR0cmlidXRlID0gZnVuY3Rpb24gKCkge1xuICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuc2V0QXR0cmlidXRlKGxvY2tBdHRyaWJ1dGUsIChnZXRDdXJyZW50VXNlQ291bnRlcigpICsgMSkudG9TdHJpbmcoKSk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgbmV3Q291bnRlciA9IGdldEN1cnJlbnRVc2VDb3VudGVyKCkgLSAxO1xuICAgICAgICAgICAgaWYgKG5ld0NvdW50ZXIgPD0gMCkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQXR0cmlidXRlKGxvY2tBdHRyaWJ1dGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zZXRBdHRyaWJ1dGUobG9ja0F0dHJpYnV0ZSwgbmV3Q291bnRlci50b1N0cmluZygpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9LCBbXSk7XG59O1xuLyoqXG4gKiBSZW1vdmVzIHBhZ2Ugc2Nyb2xsYmFyIGFuZCBibG9ja3MgcGFnZSBzY3JvbGwgd2hlbiBtb3VudGVkXG4gKi9cbmV4cG9ydCB2YXIgUmVtb3ZlU2Nyb2xsQmFyID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIG5vUmVsYXRpdmUgPSBfYS5ub1JlbGF0aXZlLCBub0ltcG9ydGFudCA9IF9hLm5vSW1wb3J0YW50LCBfYiA9IF9hLmdhcE1vZGUsIGdhcE1vZGUgPSBfYiA9PT0gdm9pZCAwID8gJ21hcmdpbicgOiBfYjtcbiAgICB1c2VMb2NrQXR0cmlidXRlKCk7XG4gICAgLypcbiAgICAgZ2FwIHdpbGwgYmUgbWVhc3VyZWQgb24gZXZlcnkgY29tcG9uZW50IG1vdW50XG4gICAgIGhvd2V2ZXIgaXQgd2lsbCBiZSB1c2VkIG9ubHkgYnkgdGhlIFwiZmlyc3RcIiBpbnZvY2F0aW9uXG4gICAgIGR1ZSB0byBzaW5nbGV0b24gbmF0dXJlIG9mIDxTdHlsZVxuICAgICAqL1xuICAgIHZhciBnYXAgPSBSZWFjdC51c2VNZW1vKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdldEdhcFdpZHRoKGdhcE1vZGUpOyB9LCBbZ2FwTW9kZV0pO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFN0eWxlLCB7IHN0eWxlczogZ2V0U3R5bGVzKGdhcCwgIW5vUmVsYXRpdmUsIGdhcE1vZGUsICFub0ltcG9ydGFudCA/ICchaW1wb3J0YW50JyA6ICcnKSB9KTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/component.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/constants.js":
/*!***********************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/constants.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fullWidthClassName: function() { return /* binding */ fullWidthClassName; },\n/* harmony export */   noScrollbarsClassName: function() { return /* binding */ noScrollbarsClassName; },\n/* harmony export */   removedBarSizeVariable: function() { return /* binding */ removedBarSizeVariable; },\n/* harmony export */   zeroRightClassName: function() { return /* binding */ zeroRightClassName; }\n/* harmony export */ });\nvar zeroRightClassName = 'right-scroll-bar-position';\nvar fullWidthClassName = 'width-before-scroll-bar';\nvar noScrollbarsClassName = 'with-scroll-bars-hidden';\n/**\n * Name of a CSS variable containing the amount of \"hidden\" scrollbar\n * ! might be undefined ! use will fallback!\n */\nvar removedBarSizeVariable = '--removed-body-scroll-bar-size';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsLWJhci9kaXN0L2VzMjAxNS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPO0FBQ0E7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlbW92ZS1zY3JvbGwtYmFyL2Rpc3QvZXMyMDE1L2NvbnN0YW50cy5qcz9jOTk0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgemVyb1JpZ2h0Q2xhc3NOYW1lID0gJ3JpZ2h0LXNjcm9sbC1iYXItcG9zaXRpb24nO1xuZXhwb3J0IHZhciBmdWxsV2lkdGhDbGFzc05hbWUgPSAnd2lkdGgtYmVmb3JlLXNjcm9sbC1iYXInO1xuZXhwb3J0IHZhciBub1Njcm9sbGJhcnNDbGFzc05hbWUgPSAnd2l0aC1zY3JvbGwtYmFycy1oaWRkZW4nO1xuLyoqXG4gKiBOYW1lIG9mIGEgQ1NTIHZhcmlhYmxlIGNvbnRhaW5pbmcgdGhlIGFtb3VudCBvZiBcImhpZGRlblwiIHNjcm9sbGJhclxuICogISBtaWdodCBiZSB1bmRlZmluZWQgISB1c2Ugd2lsbCBmYWxsYmFjayFcbiAqL1xuZXhwb3J0IHZhciByZW1vdmVkQmFyU2l6ZVZhcmlhYmxlID0gJy0tcmVtb3ZlZC1ib2R5LXNjcm9sbC1iYXItc2l6ZSc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RemoveScrollBar: function() { return /* reexport safe */ _component__WEBPACK_IMPORTED_MODULE_0__.RemoveScrollBar; },\n/* harmony export */   fullWidthClassName: function() { return /* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.fullWidthClassName; },\n/* harmony export */   getGapWidth: function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.getGapWidth; },\n/* harmony export */   noScrollbarsClassName: function() { return /* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.noScrollbarsClassName; },\n/* harmony export */   removedBarSizeVariable: function() { return /* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.removedBarSizeVariable; },\n/* harmony export */   zeroRightClassName: function() { return /* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.zeroRightClassName; }\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/component.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/utils.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsLWJhci9kaXN0L2VzMjAxNS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBOEM7QUFDc0U7QUFDOUU7QUFDMEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlbW92ZS1zY3JvbGwtYmFyL2Rpc3QvZXMyMDE1L2luZGV4LmpzPzBjODkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVtb3ZlU2Nyb2xsQmFyIH0gZnJvbSAnLi9jb21wb25lbnQnO1xuaW1wb3J0IHsgemVyb1JpZ2h0Q2xhc3NOYW1lLCBmdWxsV2lkdGhDbGFzc05hbWUsIG5vU2Nyb2xsYmFyc0NsYXNzTmFtZSwgcmVtb3ZlZEJhclNpemVWYXJpYWJsZSB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IGdldEdhcFdpZHRoIH0gZnJvbSAnLi91dGlscyc7XG5leHBvcnQgeyBSZW1vdmVTY3JvbGxCYXIsIHplcm9SaWdodENsYXNzTmFtZSwgZnVsbFdpZHRoQ2xhc3NOYW1lLCBub1Njcm9sbGJhcnNDbGFzc05hbWUsIHJlbW92ZWRCYXJTaXplVmFyaWFibGUsIGdldEdhcFdpZHRoLCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-remove-scroll-bar/dist/es2015/utils.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGapWidth: function() { return /* binding */ getGapWidth; },\n/* harmony export */   zeroGap: function() { return /* binding */ zeroGap; }\n/* harmony export */ });\nvar zeroGap = {\n    left: 0,\n    top: 0,\n    right: 0,\n    gap: 0,\n};\nvar parse = function (x) { return parseInt(x || '', 10) || 0; };\nvar getOffset = function (gapMode) {\n    var cs = window.getComputedStyle(document.body);\n    var left = cs[gapMode === 'padding' ? 'paddingLeft' : 'marginLeft'];\n    var top = cs[gapMode === 'padding' ? 'paddingTop' : 'marginTop'];\n    var right = cs[gapMode === 'padding' ? 'paddingRight' : 'marginRight'];\n    return [parse(left), parse(top), parse(right)];\n};\nvar getGapWidth = function (gapMode) {\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    if (typeof window === 'undefined') {\n        return zeroGap;\n    }\n    var offsets = getOffset(gapMode);\n    var documentWidth = document.documentElement.clientWidth;\n    var windowWidth = window.innerWidth;\n    return {\n        left: offsets[0],\n        top: offsets[1],\n        right: offsets[2],\n        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0]),\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsLWJhci9kaXN0L2VzMjAxNS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsLWJhci9kaXN0L2VzMjAxNS91dGlscy5qcz82NzI1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgemVyb0dhcCA9IHtcbiAgICBsZWZ0OiAwLFxuICAgIHRvcDogMCxcbiAgICByaWdodDogMCxcbiAgICBnYXA6IDAsXG59O1xudmFyIHBhcnNlID0gZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHBhcnNlSW50KHggfHwgJycsIDEwKSB8fCAwOyB9O1xudmFyIGdldE9mZnNldCA9IGZ1bmN0aW9uIChnYXBNb2RlKSB7XG4gICAgdmFyIGNzID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuYm9keSk7XG4gICAgdmFyIGxlZnQgPSBjc1tnYXBNb2RlID09PSAncGFkZGluZycgPyAncGFkZGluZ0xlZnQnIDogJ21hcmdpbkxlZnQnXTtcbiAgICB2YXIgdG9wID0gY3NbZ2FwTW9kZSA9PT0gJ3BhZGRpbmcnID8gJ3BhZGRpbmdUb3AnIDogJ21hcmdpblRvcCddO1xuICAgIHZhciByaWdodCA9IGNzW2dhcE1vZGUgPT09ICdwYWRkaW5nJyA/ICdwYWRkaW5nUmlnaHQnIDogJ21hcmdpblJpZ2h0J107XG4gICAgcmV0dXJuIFtwYXJzZShsZWZ0KSwgcGFyc2UodG9wKSwgcGFyc2UocmlnaHQpXTtcbn07XG5leHBvcnQgdmFyIGdldEdhcFdpZHRoID0gZnVuY3Rpb24gKGdhcE1vZGUpIHtcbiAgICBpZiAoZ2FwTW9kZSA9PT0gdm9pZCAwKSB7IGdhcE1vZGUgPSAnbWFyZ2luJzsgfVxuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gemVyb0dhcDtcbiAgICB9XG4gICAgdmFyIG9mZnNldHMgPSBnZXRPZmZzZXQoZ2FwTW9kZSk7XG4gICAgdmFyIGRvY3VtZW50V2lkdGggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg7XG4gICAgdmFyIHdpbmRvd1dpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbGVmdDogb2Zmc2V0c1swXSxcbiAgICAgICAgdG9wOiBvZmZzZXRzWzFdLFxuICAgICAgICByaWdodDogb2Zmc2V0c1syXSxcbiAgICAgICAgZ2FwOiBNYXRoLm1heCgwLCB3aW5kb3dXaWR0aCAtIGRvY3VtZW50V2lkdGggKyBvZmZzZXRzWzJdIC0gb2Zmc2V0c1swXSksXG4gICAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/Combination.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/Combination.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _UI__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UI */ \"(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/UI.js\");\n/* harmony import */ var _sidecar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sidecar */ \"(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/sidecar.js\");\n\n\n\n\nvar ReactRemoveScroll = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) { return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_UI__WEBPACK_IMPORTED_MODULE_2__.RemoveScroll, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, props, { ref: ref, sideCar: _sidecar__WEBPACK_IMPORTED_MODULE_1__[\"default\"] }))); });\nReactRemoveScroll.classNames = _UI__WEBPACK_IMPORTED_MODULE_2__.RemoveScroll.classNames;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ReactRemoveScroll);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsL2Rpc3QvZXMyMDE1L0NvbWJpbmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpQztBQUNGO0FBQ0s7QUFDSjtBQUNoQyx3QkFBd0IsNkNBQWdCLHlCQUF5QixRQUFRLGdEQUFtQixDQUFDLDZDQUFZLEVBQUUsK0NBQVEsR0FBRyxXQUFXLG1CQUFtQixnREFBTyxFQUFFLE1BQU07QUFDbkssK0JBQStCLDZDQUFZO0FBQzNDLCtEQUFlLGlCQUFpQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsL2Rpc3QvZXMyMDE1L0NvbWJpbmF0aW9uLmpzPzYwZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24gfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFJlbW92ZVNjcm9sbCB9IGZyb20gJy4vVUknO1xuaW1wb3J0IFNpZGVDYXIgZnJvbSAnLi9zaWRlY2FyJztcbnZhciBSZWFjdFJlbW92ZVNjcm9sbCA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gKHByb3BzLCByZWYpIHsgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFJlbW92ZVNjcm9sbCwgX19hc3NpZ24oe30sIHByb3BzLCB7IHJlZjogcmVmLCBzaWRlQ2FyOiBTaWRlQ2FyIH0pKSk7IH0pO1xuUmVhY3RSZW1vdmVTY3JvbGwuY2xhc3NOYW1lcyA9IFJlbW92ZVNjcm9sbC5jbGFzc05hbWVzO1xuZXhwb3J0IGRlZmF1bHQgUmVhY3RSZW1vdmVTY3JvbGw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/Combination.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/SideEffect.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/SideEffect.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RemoveScrollSideCar: function() { return /* binding */ RemoveScrollSideCar; },\n/* harmony export */   getDeltaXY: function() { return /* binding */ getDeltaXY; },\n/* harmony export */   getTouchXY: function() { return /* binding */ getTouchXY; }\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_remove_scroll_bar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-remove-scroll-bar */ \"(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/index.js\");\n/* harmony import */ var react_style_singleton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-style-singleton */ \"(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/index.js\");\n/* harmony import */ var _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./aggresiveCapture */ \"(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js\");\n/* harmony import */ var _handleScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./handleScroll */ \"(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/handleScroll.js\");\n\n\n\n\n\n\nvar getTouchXY = function (event) {\n    return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];\n};\nvar getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };\nvar extractRef = function (ref) {\n    return ref && 'current' in ref ? ref.current : ref;\n};\nvar deltaCompare = function (x, y) { return x[0] === y[0] && x[1] === y[1]; };\nvar generateStyle = function (id) { return \"\\n  .block-interactivity-\".concat(id, \" {pointer-events: none;}\\n  .allow-interactivity-\").concat(id, \" {pointer-events: all;}\\n\"); };\nvar idCounter = 0;\nvar lockStack = [];\nfunction RemoveScrollSideCar(props) {\n    var shouldPreventQueue = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    var touchStartRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef([0, 0]);\n    var activeAxis = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    var id = react__WEBPACK_IMPORTED_MODULE_0__.useState(idCounter++)[0];\n    var Style = react__WEBPACK_IMPORTED_MODULE_0__.useState(react_style_singleton__WEBPACK_IMPORTED_MODULE_2__.styleSingleton)[0];\n    var lastProps = react__WEBPACK_IMPORTED_MODULE_0__.useRef(props);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {\n        lastProps.current = props;\n    }, [props]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {\n        if (props.inert) {\n            document.body.classList.add(\"block-interactivity-\".concat(id));\n            var allow_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);\n            allow_1.forEach(function (el) { return el.classList.add(\"allow-interactivity-\".concat(id)); });\n            return function () {\n                document.body.classList.remove(\"block-interactivity-\".concat(id));\n                allow_1.forEach(function (el) { return el.classList.remove(\"allow-interactivity-\".concat(id)); });\n            };\n        }\n        return;\n    }, [props.inert, props.lockRef.current, props.shards]);\n    var shouldCancelEvent = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event, parent) {\n        if (('touches' in event && event.touches.length === 2) || (event.type === 'wheel' && event.ctrlKey)) {\n            return !lastProps.current.allowPinchZoom;\n        }\n        var touch = getTouchXY(event);\n        var touchStart = touchStartRef.current;\n        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n        var currentAxis;\n        var target = event.target;\n        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n        // allow horizontal touch move on Range inputs. They will not cause any scroll\n        if ('touches' in event && moveDirection === 'h' && target.type === 'range') {\n            return false;\n        }\n        var canBeScrolledInMainDirection = (0,_handleScroll__WEBPACK_IMPORTED_MODULE_4__.locationCouldBeScrolled)(moveDirection, target);\n        if (!canBeScrolledInMainDirection) {\n            return true;\n        }\n        if (canBeScrolledInMainDirection) {\n            currentAxis = moveDirection;\n        }\n        else {\n            currentAxis = moveDirection === 'v' ? 'h' : 'v';\n            canBeScrolledInMainDirection = (0,_handleScroll__WEBPACK_IMPORTED_MODULE_4__.locationCouldBeScrolled)(moveDirection, target);\n            // other axis might be not scrollable\n        }\n        if (!canBeScrolledInMainDirection) {\n            return false;\n        }\n        if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {\n            activeAxis.current = currentAxis;\n        }\n        if (!currentAxis) {\n            return true;\n        }\n        var cancelingAxis = activeAxis.current || currentAxis;\n        return (0,_handleScroll__WEBPACK_IMPORTED_MODULE_4__.handleScroll)(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n    }, []);\n    var shouldPrevent = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (_event) {\n        var event = _event;\n        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n            // not the last active\n            return;\n        }\n        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n        var sourceEvent = shouldPreventQueue.current.filter(function (e) { return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta); })[0];\n        // self event, and should be canceled\n        if (sourceEvent && sourceEvent.should) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            return;\n        }\n        // outside or shard event\n        if (!sourceEvent) {\n            var shardNodes = (lastProps.current.shards || [])\n                .map(extractRef)\n                .filter(Boolean)\n                .filter(function (node) { return node.contains(event.target); });\n            var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;\n            if (shouldStop) {\n                if (event.cancelable) {\n                    event.preventDefault();\n                }\n            }\n        }\n    }, []);\n    var shouldCancel = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (name, delta, target, should) {\n        var event = { name: name, delta: delta, target: target, should: should, shadowParent: getOutermostShadowParent(target) };\n        shouldPreventQueue.current.push(event);\n        setTimeout(function () {\n            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });\n        }, 1);\n    }, []);\n    var scrollTouchStart = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {\n        touchStartRef.current = getTouchXY(event);\n        activeAxis.current = undefined;\n    }, []);\n    var scrollWheel = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {\n        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    var scrollTouchMove = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event) {\n        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {\n        lockStack.push(Style);\n        props.setCallbacks({\n            onScrollCapture: scrollWheel,\n            onWheelCapture: scrollWheel,\n            onTouchMoveCapture: scrollTouchMove,\n        });\n        document.addEventListener('wheel', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);\n        document.addEventListener('touchmove', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);\n        document.addEventListener('touchstart', scrollTouchStart, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);\n        return function () {\n            lockStack = lockStack.filter(function (inst) { return inst !== Style; });\n            document.removeEventListener('wheel', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);\n            document.removeEventListener('touchmove', shouldPrevent, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);\n            document.removeEventListener('touchstart', scrollTouchStart, _aggresiveCapture__WEBPACK_IMPORTED_MODULE_5__.nonPassive);\n        };\n    }, []);\n    var removeScrollBar = props.removeScrollBar, inert = props.inert;\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n        inert ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(Style, { styles: generateStyle(id) }) : null,\n        removeScrollBar ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_remove_scroll_bar__WEBPACK_IMPORTED_MODULE_1__.RemoveScrollBar, { gapMode: props.gapMode }) : null));\n}\nfunction getOutermostShadowParent(node) {\n    var shadowParent = null;\n    while (node !== null) {\n        if (node instanceof ShadowRoot) {\n            shadowParent = node.host;\n            node = node.host;\n        }\n        node = node.parentNode;\n    }\n    return shadowParent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/SideEffect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/UI.js":
/*!************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/UI.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RemoveScroll: function() { return /* binding */ RemoveScroll; }\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_remove_scroll_bar_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-remove-scroll-bar/constants */ \"(app-pages-browser)/./node_modules/react-remove-scroll-bar/dist/es2015/constants.js\");\n/* harmony import */ var use_callback_ref__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-callback-ref */ \"(app-pages-browser)/./node_modules/use-callback-ref/dist/es2015/useMergeRef.js\");\n/* harmony import */ var _medium__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./medium */ \"(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/medium.js\");\n\n\n\n\n\nvar nothing = function () {\n    return;\n};\n/**\n * Removes scrollbar from the page and contain the scroll within the Lock\n */\nvar RemoveScroll = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, parentRef) {\n    var ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    var _a = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        onScrollCapture: nothing,\n        onWheelCapture: nothing,\n        onTouchMoveCapture: nothing,\n    }), callbacks = _a[0], setCallbacks = _a[1];\n    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, gapMode = props.gapMode, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noIsolation\", \"inert\", \"allowPinchZoom\", \"as\", \"gapMode\"]);\n    var SideCar = sideCar;\n    var containerRef = (0,use_callback_ref__WEBPACK_IMPORTED_MODULE_3__.useMergeRefs)([ref, parentRef]);\n    var containerProps = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, rest), callbacks);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n        enabled && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(SideCar, { sideCar: _medium__WEBPACK_IMPORTED_MODULE_4__.effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode: gapMode })),\n        forwardProps ? (react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children), (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, containerProps), { ref: containerRef }))) : (react__WEBPACK_IMPORTED_MODULE_0__.createElement(Container, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, containerProps, { className: className, ref: containerRef }), children))));\n});\nRemoveScroll.defaultProps = {\n    enabled: true,\n    removeScrollBar: true,\n    inert: false,\n};\nRemoveScroll.classNames = {\n    fullWidth: react_remove_scroll_bar_constants__WEBPACK_IMPORTED_MODULE_1__.fullWidthClassName,\n    zeroRight: react_remove_scroll_bar_constants__WEBPACK_IMPORTED_MODULE_1__.zeroRightClassName,\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsL2Rpc3QvZXMyMDE1L1VJLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBeUM7QUFDVjtBQUM0RDtBQUMzQztBQUNYO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw2Q0FBZ0I7QUFDbkMsY0FBYyx5Q0FBWTtBQUMxQixhQUFhLDJDQUFjO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx5WUFBeVksNkNBQU07QUFDL1k7QUFDQSx1QkFBdUIsOERBQVk7QUFDbkMseUJBQXlCLCtDQUFRLENBQUMsK0NBQVEsR0FBRztBQUM3QyxZQUFZLGdEQUFtQixDQUFDLDJDQUFjO0FBQzlDLG9CQUFvQixnREFBbUIsWUFBWSxTQUFTLDhDQUFTLDBMQUEwTDtBQUMvUCx3QkFBd0IsK0NBQWtCLENBQUMsMkNBQWMsaUJBQWlCLCtDQUFRLENBQUMsK0NBQVEsR0FBRyxxQkFBcUIsbUJBQW1CLE9BQU8sZ0RBQW1CLFlBQVksK0NBQVEsR0FBRyxvQkFBb0IseUNBQXlDO0FBQ3BQLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlGQUFrQjtBQUNqQyxlQUFlLGlGQUFrQjtBQUNqQztBQUN3QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVtb3ZlLXNjcm9sbC9kaXN0L2VzMjAxNS9VSS5qcz9mZjgyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXNzaWduLCBfX3Jlc3QgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGZ1bGxXaWR0aENsYXNzTmFtZSwgemVyb1JpZ2h0Q2xhc3NOYW1lIH0gZnJvbSAncmVhY3QtcmVtb3ZlLXNjcm9sbC1iYXIvY29uc3RhbnRzJztcbmltcG9ydCB7IHVzZU1lcmdlUmVmcyB9IGZyb20gJ3VzZS1jYWxsYmFjay1yZWYnO1xuaW1wb3J0IHsgZWZmZWN0Q2FyIH0gZnJvbSAnLi9tZWRpdW0nO1xudmFyIG5vdGhpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuO1xufTtcbi8qKlxuICogUmVtb3ZlcyBzY3JvbGxiYXIgZnJvbSB0aGUgcGFnZSBhbmQgY29udGFpbiB0aGUgc2Nyb2xsIHdpdGhpbiB0aGUgTG9ja1xuICovXG52YXIgUmVtb3ZlU2Nyb2xsID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiAocHJvcHMsIHBhcmVudFJlZikge1xuICAgIHZhciByZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gICAgdmFyIF9hID0gUmVhY3QudXNlU3RhdGUoe1xuICAgICAgICBvblNjcm9sbENhcHR1cmU6IG5vdGhpbmcsXG4gICAgICAgIG9uV2hlZWxDYXB0dXJlOiBub3RoaW5nLFxuICAgICAgICBvblRvdWNoTW92ZUNhcHR1cmU6IG5vdGhpbmcsXG4gICAgfSksIGNhbGxiYWNrcyA9IF9hWzBdLCBzZXRDYWxsYmFja3MgPSBfYVsxXTtcbiAgICB2YXIgZm9yd2FyZFByb3BzID0gcHJvcHMuZm9yd2FyZFByb3BzLCBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLCBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsIHJlbW92ZVNjcm9sbEJhciA9IHByb3BzLnJlbW92ZVNjcm9sbEJhciwgZW5hYmxlZCA9IHByb3BzLmVuYWJsZWQsIHNoYXJkcyA9IHByb3BzLnNoYXJkcywgc2lkZUNhciA9IHByb3BzLnNpZGVDYXIsIG5vSXNvbGF0aW9uID0gcHJvcHMubm9Jc29sYXRpb24sIGluZXJ0ID0gcHJvcHMuaW5lcnQsIGFsbG93UGluY2hab29tID0gcHJvcHMuYWxsb3dQaW5jaFpvb20sIF9iID0gcHJvcHMuYXMsIENvbnRhaW5lciA9IF9iID09PSB2b2lkIDAgPyAnZGl2JyA6IF9iLCBnYXBNb2RlID0gcHJvcHMuZ2FwTW9kZSwgcmVzdCA9IF9fcmVzdChwcm9wcywgW1wiZm9yd2FyZFByb3BzXCIsIFwiY2hpbGRyZW5cIiwgXCJjbGFzc05hbWVcIiwgXCJyZW1vdmVTY3JvbGxCYXJcIiwgXCJlbmFibGVkXCIsIFwic2hhcmRzXCIsIFwic2lkZUNhclwiLCBcIm5vSXNvbGF0aW9uXCIsIFwiaW5lcnRcIiwgXCJhbGxvd1BpbmNoWm9vbVwiLCBcImFzXCIsIFwiZ2FwTW9kZVwiXSk7XG4gICAgdmFyIFNpZGVDYXIgPSBzaWRlQ2FyO1xuICAgIHZhciBjb250YWluZXJSZWYgPSB1c2VNZXJnZVJlZnMoW3JlZiwgcGFyZW50UmVmXSk7XG4gICAgdmFyIGNvbnRhaW5lclByb3BzID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHJlc3QpLCBjYWxsYmFja3MpO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCxcbiAgICAgICAgZW5hYmxlZCAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChTaWRlQ2FyLCB7IHNpZGVDYXI6IGVmZmVjdENhciwgcmVtb3ZlU2Nyb2xsQmFyOiByZW1vdmVTY3JvbGxCYXIsIHNoYXJkczogc2hhcmRzLCBub0lzb2xhdGlvbjogbm9Jc29sYXRpb24sIGluZXJ0OiBpbmVydCwgc2V0Q2FsbGJhY2tzOiBzZXRDYWxsYmFja3MsIGFsbG93UGluY2hab29tOiAhIWFsbG93UGluY2hab29tLCBsb2NrUmVmOiByZWYsIGdhcE1vZGU6IGdhcE1vZGUgfSkpLFxuICAgICAgICBmb3J3YXJkUHJvcHMgPyAoUmVhY3QuY2xvbmVFbGVtZW50KFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pLCBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgY29udGFpbmVyUHJvcHMpLCB7IHJlZjogY29udGFpbmVyUmVmIH0pKSkgOiAoUmVhY3QuY3JlYXRlRWxlbWVudChDb250YWluZXIsIF9fYXNzaWduKHt9LCBjb250YWluZXJQcm9wcywgeyBjbGFzc05hbWU6IGNsYXNzTmFtZSwgcmVmOiBjb250YWluZXJSZWYgfSksIGNoaWxkcmVuKSkpKTtcbn0pO1xuUmVtb3ZlU2Nyb2xsLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBlbmFibGVkOiB0cnVlLFxuICAgIHJlbW92ZVNjcm9sbEJhcjogdHJ1ZSxcbiAgICBpbmVydDogZmFsc2UsXG59O1xuUmVtb3ZlU2Nyb2xsLmNsYXNzTmFtZXMgPSB7XG4gICAgZnVsbFdpZHRoOiBmdWxsV2lkdGhDbGFzc05hbWUsXG4gICAgemVyb1JpZ2h0OiB6ZXJvUmlnaHRDbGFzc05hbWUsXG59O1xuZXhwb3J0IHsgUmVtb3ZlU2Nyb2xsIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/UI.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js":
/*!**************************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   nonPassive: function() { return /* binding */ nonPassive; }\n/* harmony export */ });\nvar passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n                return true;\n            },\n        });\n        // @ts-ignore\n        window.addEventListener('test', options, options);\n        // @ts-ignore\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\nvar nonPassive = passiveSupported ? { passive: false } : false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsL2Rpc3QvZXMyMDE1L2FnZ3Jlc2l2ZUNhcHR1cmUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHNDQUFzQyxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlbW92ZS1zY3JvbGwvZGlzdC9lczIwMTUvYWdncmVzaXZlQ2FwdHVyZS5qcz81YzY1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBwYXNzaXZlU3VwcG9ydGVkID0gZmFsc2U7XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB0cnkge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ3Bhc3NpdmUnLCB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBwYXNzaXZlU3VwcG9ydGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0ZXN0Jywgb3B0aW9ucywgb3B0aW9ucyk7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Rlc3QnLCBvcHRpb25zLCBvcHRpb25zKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycikge1xuICAgICAgICBwYXNzaXZlU3VwcG9ydGVkID0gZmFsc2U7XG4gICAgfVxufVxuZXhwb3J0IHZhciBub25QYXNzaXZlID0gcGFzc2l2ZVN1cHBvcnRlZCA/IHsgcGFzc2l2ZTogZmFsc2UgfSA6IGZhbHNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/handleScroll.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/handleScroll.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleScroll: function() { return /* binding */ handleScroll; },\n/* harmony export */   locationCouldBeScrolled: function() { return /* binding */ locationCouldBeScrolled; }\n/* harmony export */ });\nvar alwaysContainsScroll = function (node) {\n    // textarea will always _contain_ scroll inside self. It only can be hidden\n    return node.tagName === 'TEXTAREA';\n};\nvar elementCanBeScrolled = function (node, overflow) {\n    if (!(node instanceof Element)) {\n        return false;\n    }\n    var styles = window.getComputedStyle(node);\n    return (\n    // not-not-scrollable\n    styles[overflow] !== 'hidden' &&\n        // contains scroll inside self\n        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === 'visible'));\n};\nvar elementCouldBeVScrolled = function (node) { return elementCanBeScrolled(node, 'overflowY'); };\nvar elementCouldBeHScrolled = function (node) { return elementCanBeScrolled(node, 'overflowX'); };\nvar locationCouldBeScrolled = function (axis, node) {\n    var ownerDocument = node.ownerDocument;\n    var current = node;\n    do {\n        // Skip over shadow root\n        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) {\n            current = current.host;\n        }\n        var isScrollable = elementCouldBeScrolled(axis, current);\n        if (isScrollable) {\n            var _a = getScrollVariables(axis, current), scrollHeight = _a[1], clientHeight = _a[2];\n            if (scrollHeight > clientHeight) {\n                return true;\n            }\n        }\n        current = current.parentNode;\n    } while (current && current !== ownerDocument.body);\n    return false;\n};\nvar getVScrollVariables = function (_a) {\n    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n    return [\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n    ];\n};\nvar getHScrollVariables = function (_a) {\n    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n    return [\n        scrollLeft,\n        scrollWidth,\n        clientWidth,\n    ];\n};\nvar elementCouldBeScrolled = function (axis, node) {\n    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);\n};\nvar getScrollVariables = function (axis, node) {\n    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);\n};\nvar getDirectionFactor = function (axis, direction) {\n    /**\n     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,\n     * and then increasingly negative as you scroll towards the end of the content.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n     */\n    return axis === 'h' && direction === 'rtl' ? -1 : 1;\n};\nvar handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {\n    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);\n    var delta = directionFactor * sourceDelta;\n    // find scrollable target\n    var target = event.target;\n    var targetInLock = endTarget.contains(target);\n    var shouldCancelScroll = false;\n    var isDeltaPositive = delta > 0;\n    var availableScroll = 0;\n    var availableScrollTop = 0;\n    do {\n        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];\n        var elementScroll = scroll_1 - capacity - directionFactor * position;\n        if (position || elementScroll) {\n            if (elementCouldBeScrolled(axis, target)) {\n                availableScroll += elementScroll;\n                availableScrollTop += position;\n            }\n        }\n        if (target instanceof ShadowRoot) {\n            target = target.host;\n        }\n        else {\n            target = target.parentNode;\n        }\n    } while (\n    // portaled content\n    (!targetInLock && target !== document.body) ||\n        // self content\n        (targetInLock && (endTarget.contains(target) || endTarget === target)));\n    // handle epsilon around 0 (non standard zoom levels)\n    if (isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScroll) < 1) || (!noOverscroll && delta > availableScroll))) {\n        shouldCancelScroll = true;\n    }\n    else if (!isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScrollTop) < 1) || (!noOverscroll && -delta > availableScrollTop))) {\n        shouldCancelScroll = true;\n    }\n    return shouldCancelScroll;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsL2Rpc3QvZXMyMDE1L2hhbmRsZVNjcm9sbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRCxnREFBZ0Q7QUFDekM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVtb3ZlLXNjcm9sbC9kaXN0L2VzMjAxNS9oYW5kbGVTY3JvbGwuanM/NDlhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYWx3YXlzQ29udGFpbnNTY3JvbGwgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgIC8vIHRleHRhcmVhIHdpbGwgYWx3YXlzIF9jb250YWluXyBzY3JvbGwgaW5zaWRlIHNlbGYuIEl0IG9ubHkgY2FuIGJlIGhpZGRlblxuICAgIHJldHVybiBub2RlLnRhZ05hbWUgPT09ICdURVhUQVJFQSc7XG59O1xudmFyIGVsZW1lbnRDYW5CZVNjcm9sbGVkID0gZnVuY3Rpb24gKG5vZGUsIG92ZXJmbG93KSB7XG4gICAgaWYgKCEobm9kZSBpbnN0YW5jZW9mIEVsZW1lbnQpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdmFyIHN0eWxlcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKG5vZGUpO1xuICAgIHJldHVybiAoXG4gICAgLy8gbm90LW5vdC1zY3JvbGxhYmxlXG4gICAgc3R5bGVzW292ZXJmbG93XSAhPT0gJ2hpZGRlbicgJiZcbiAgICAgICAgLy8gY29udGFpbnMgc2Nyb2xsIGluc2lkZSBzZWxmXG4gICAgICAgICEoc3R5bGVzLm92ZXJmbG93WSA9PT0gc3R5bGVzLm92ZXJmbG93WCAmJiAhYWx3YXlzQ29udGFpbnNTY3JvbGwobm9kZSkgJiYgc3R5bGVzW292ZXJmbG93XSA9PT0gJ3Zpc2libGUnKSk7XG59O1xudmFyIGVsZW1lbnRDb3VsZEJlVlNjcm9sbGVkID0gZnVuY3Rpb24gKG5vZGUpIHsgcmV0dXJuIGVsZW1lbnRDYW5CZVNjcm9sbGVkKG5vZGUsICdvdmVyZmxvd1knKTsgfTtcbnZhciBlbGVtZW50Q291bGRCZUhTY3JvbGxlZCA9IGZ1bmN0aW9uIChub2RlKSB7IHJldHVybiBlbGVtZW50Q2FuQmVTY3JvbGxlZChub2RlLCAnb3ZlcmZsb3dYJyk7IH07XG5leHBvcnQgdmFyIGxvY2F0aW9uQ291bGRCZVNjcm9sbGVkID0gZnVuY3Rpb24gKGF4aXMsIG5vZGUpIHtcbiAgICB2YXIgb3duZXJEb2N1bWVudCA9IG5vZGUub3duZXJEb2N1bWVudDtcbiAgICB2YXIgY3VycmVudCA9IG5vZGU7XG4gICAgZG8ge1xuICAgICAgICAvLyBTa2lwIG92ZXIgc2hhZG93IHJvb3RcbiAgICAgICAgaWYgKHR5cGVvZiBTaGFkb3dSb290ICE9PSAndW5kZWZpbmVkJyAmJiBjdXJyZW50IGluc3RhbmNlb2YgU2hhZG93Um9vdCkge1xuICAgICAgICAgICAgY3VycmVudCA9IGN1cnJlbnQuaG9zdDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaXNTY3JvbGxhYmxlID0gZWxlbWVudENvdWxkQmVTY3JvbGxlZChheGlzLCBjdXJyZW50KTtcbiAgICAgICAgaWYgKGlzU2Nyb2xsYWJsZSkge1xuICAgICAgICAgICAgdmFyIF9hID0gZ2V0U2Nyb2xsVmFyaWFibGVzKGF4aXMsIGN1cnJlbnQpLCBzY3JvbGxIZWlnaHQgPSBfYVsxXSwgY2xpZW50SGVpZ2h0ID0gX2FbMl07XG4gICAgICAgICAgICBpZiAoc2Nyb2xsSGVpZ2h0ID4gY2xpZW50SGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY3VycmVudCA9IGN1cnJlbnQucGFyZW50Tm9kZTtcbiAgICB9IHdoaWxlIChjdXJyZW50ICYmIGN1cnJlbnQgIT09IG93bmVyRG9jdW1lbnQuYm9keSk7XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcbnZhciBnZXRWU2Nyb2xsVmFyaWFibGVzID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIHNjcm9sbFRvcCA9IF9hLnNjcm9sbFRvcCwgc2Nyb2xsSGVpZ2h0ID0gX2Euc2Nyb2xsSGVpZ2h0LCBjbGllbnRIZWlnaHQgPSBfYS5jbGllbnRIZWlnaHQ7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgc2Nyb2xsVG9wLFxuICAgICAgICBzY3JvbGxIZWlnaHQsXG4gICAgICAgIGNsaWVudEhlaWdodCxcbiAgICBdO1xufTtcbnZhciBnZXRIU2Nyb2xsVmFyaWFibGVzID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIHNjcm9sbExlZnQgPSBfYS5zY3JvbGxMZWZ0LCBzY3JvbGxXaWR0aCA9IF9hLnNjcm9sbFdpZHRoLCBjbGllbnRXaWR0aCA9IF9hLmNsaWVudFdpZHRoO1xuICAgIHJldHVybiBbXG4gICAgICAgIHNjcm9sbExlZnQsXG4gICAgICAgIHNjcm9sbFdpZHRoLFxuICAgICAgICBjbGllbnRXaWR0aCxcbiAgICBdO1xufTtcbnZhciBlbGVtZW50Q291bGRCZVNjcm9sbGVkID0gZnVuY3Rpb24gKGF4aXMsIG5vZGUpIHtcbiAgICByZXR1cm4gYXhpcyA9PT0gJ3YnID8gZWxlbWVudENvdWxkQmVWU2Nyb2xsZWQobm9kZSkgOiBlbGVtZW50Q291bGRCZUhTY3JvbGxlZChub2RlKTtcbn07XG52YXIgZ2V0U2Nyb2xsVmFyaWFibGVzID0gZnVuY3Rpb24gKGF4aXMsIG5vZGUpIHtcbiAgICByZXR1cm4gYXhpcyA9PT0gJ3YnID8gZ2V0VlNjcm9sbFZhcmlhYmxlcyhub2RlKSA6IGdldEhTY3JvbGxWYXJpYWJsZXMobm9kZSk7XG59O1xudmFyIGdldERpcmVjdGlvbkZhY3RvciA9IGZ1bmN0aW9uIChheGlzLCBkaXJlY3Rpb24pIHtcbiAgICAvKipcbiAgICAgKiBJZiB0aGUgZWxlbWVudCdzIGRpcmVjdGlvbiBpcyBydGwgKHJpZ2h0LXRvLWxlZnQpLCB0aGVuIHNjcm9sbExlZnQgaXMgMCB3aGVuIHRoZSBzY3JvbGxiYXIgaXMgYXQgaXRzIHJpZ2h0bW9zdCBwb3NpdGlvbixcbiAgICAgKiBhbmQgdGhlbiBpbmNyZWFzaW5nbHkgbmVnYXRpdmUgYXMgeW91IHNjcm9sbCB0b3dhcmRzIHRoZSBlbmQgb2YgdGhlIGNvbnRlbnQuXG4gICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRWxlbWVudC9zY3JvbGxMZWZ0XG4gICAgICovXG4gICAgcmV0dXJuIGF4aXMgPT09ICdoJyAmJiBkaXJlY3Rpb24gPT09ICdydGwnID8gLTEgOiAxO1xufTtcbmV4cG9ydCB2YXIgaGFuZGxlU2Nyb2xsID0gZnVuY3Rpb24gKGF4aXMsIGVuZFRhcmdldCwgZXZlbnQsIHNvdXJjZURlbHRhLCBub092ZXJzY3JvbGwpIHtcbiAgICB2YXIgZGlyZWN0aW9uRmFjdG9yID0gZ2V0RGlyZWN0aW9uRmFjdG9yKGF4aXMsIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVuZFRhcmdldCkuZGlyZWN0aW9uKTtcbiAgICB2YXIgZGVsdGEgPSBkaXJlY3Rpb25GYWN0b3IgKiBzb3VyY2VEZWx0YTtcbiAgICAvLyBmaW5kIHNjcm9sbGFibGUgdGFyZ2V0XG4gICAgdmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICB2YXIgdGFyZ2V0SW5Mb2NrID0gZW5kVGFyZ2V0LmNvbnRhaW5zKHRhcmdldCk7XG4gICAgdmFyIHNob3VsZENhbmNlbFNjcm9sbCA9IGZhbHNlO1xuICAgIHZhciBpc0RlbHRhUG9zaXRpdmUgPSBkZWx0YSA+IDA7XG4gICAgdmFyIGF2YWlsYWJsZVNjcm9sbCA9IDA7XG4gICAgdmFyIGF2YWlsYWJsZVNjcm9sbFRvcCA9IDA7XG4gICAgZG8ge1xuICAgICAgICB2YXIgX2EgPSBnZXRTY3JvbGxWYXJpYWJsZXMoYXhpcywgdGFyZ2V0KSwgcG9zaXRpb24gPSBfYVswXSwgc2Nyb2xsXzEgPSBfYVsxXSwgY2FwYWNpdHkgPSBfYVsyXTtcbiAgICAgICAgdmFyIGVsZW1lbnRTY3JvbGwgPSBzY3JvbGxfMSAtIGNhcGFjaXR5IC0gZGlyZWN0aW9uRmFjdG9yICogcG9zaXRpb247XG4gICAgICAgIGlmIChwb3NpdGlvbiB8fCBlbGVtZW50U2Nyb2xsKSB7XG4gICAgICAgICAgICBpZiAoZWxlbWVudENvdWxkQmVTY3JvbGxlZChheGlzLCB0YXJnZXQpKSB7XG4gICAgICAgICAgICAgICAgYXZhaWxhYmxlU2Nyb2xsICs9IGVsZW1lbnRTY3JvbGw7XG4gICAgICAgICAgICAgICAgYXZhaWxhYmxlU2Nyb2xsVG9wICs9IHBvc2l0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0YXJnZXQgaW5zdGFuY2VvZiBTaGFkb3dSb290KSB7XG4gICAgICAgICAgICB0YXJnZXQgPSB0YXJnZXQuaG9zdDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRhcmdldCA9IHRhcmdldC5wYXJlbnROb2RlO1xuICAgICAgICB9XG4gICAgfSB3aGlsZSAoXG4gICAgLy8gcG9ydGFsZWQgY29udGVudFxuICAgICghdGFyZ2V0SW5Mb2NrICYmIHRhcmdldCAhPT0gZG9jdW1lbnQuYm9keSkgfHxcbiAgICAgICAgLy8gc2VsZiBjb250ZW50XG4gICAgICAgICh0YXJnZXRJbkxvY2sgJiYgKGVuZFRhcmdldC5jb250YWlucyh0YXJnZXQpIHx8IGVuZFRhcmdldCA9PT0gdGFyZ2V0KSkpO1xuICAgIC8vIGhhbmRsZSBlcHNpbG9uIGFyb3VuZCAwIChub24gc3RhbmRhcmQgem9vbSBsZXZlbHMpXG4gICAgaWYgKGlzRGVsdGFQb3NpdGl2ZSAmJlxuICAgICAgICAoKG5vT3ZlcnNjcm9sbCAmJiBNYXRoLmFicyhhdmFpbGFibGVTY3JvbGwpIDwgMSkgfHwgKCFub092ZXJzY3JvbGwgJiYgZGVsdGEgPiBhdmFpbGFibGVTY3JvbGwpKSkge1xuICAgICAgICBzaG91bGRDYW5jZWxTY3JvbGwgPSB0cnVlO1xuICAgIH1cbiAgICBlbHNlIGlmICghaXNEZWx0YVBvc2l0aXZlICYmXG4gICAgICAgICgobm9PdmVyc2Nyb2xsICYmIE1hdGguYWJzKGF2YWlsYWJsZVNjcm9sbFRvcCkgPCAxKSB8fCAoIW5vT3ZlcnNjcm9sbCAmJiAtZGVsdGEgPiBhdmFpbGFibGVTY3JvbGxUb3ApKSkge1xuICAgICAgICBzaG91bGRDYW5jZWxTY3JvbGwgPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gc2hvdWxkQ2FuY2VsU2Nyb2xsO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/handleScroll.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/medium.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/medium.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   effectCar: function() { return /* binding */ effectCar; }\n/* harmony export */ });\n/* harmony import */ var use_sidecar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! use-sidecar */ \"(app-pages-browser)/./node_modules/use-sidecar/dist/es2015/medium.js\");\n\nvar effectCar = (0,use_sidecar__WEBPACK_IMPORTED_MODULE_0__.createSidecarMedium)();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsL2Rpc3QvZXMyMDE1L21lZGl1bS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDtBQUMzQyxnQkFBZ0IsZ0VBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsL2Rpc3QvZXMyMDE1L21lZGl1bS5qcz8zMTdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNpZGVjYXJNZWRpdW0gfSBmcm9tICd1c2Utc2lkZWNhcic7XG5leHBvcnQgdmFyIGVmZmVjdENhciA9IGNyZWF0ZVNpZGVjYXJNZWRpdW0oKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/medium.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/sidecar.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-remove-scroll/dist/es2015/sidecar.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var use_sidecar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! use-sidecar */ \"(app-pages-browser)/./node_modules/use-sidecar/dist/es2015/exports.js\");\n/* harmony import */ var _SideEffect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SideEffect */ \"(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/SideEffect.js\");\n/* harmony import */ var _medium__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./medium */ \"(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/medium.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ((0,use_sidecar__WEBPACK_IMPORTED_MODULE_0__.exportSidecar)(_medium__WEBPACK_IMPORTED_MODULE_1__.effectCar, _SideEffect__WEBPACK_IMPORTED_MODULE_2__.RemoveScrollSideCar));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZW1vdmUtc2Nyb2xsL2Rpc3QvZXMyMDE1L3NpZGVjYXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUE0QztBQUNPO0FBQ2Q7QUFDckMsK0RBQWUsMERBQWEsQ0FBQyw4Q0FBUyxFQUFFLDREQUFtQixDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlbW92ZS1zY3JvbGwvZGlzdC9lczIwMTUvc2lkZWNhci5qcz84MDZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4cG9ydFNpZGVjYXIgfSBmcm9tICd1c2Utc2lkZWNhcic7XG5pbXBvcnQgeyBSZW1vdmVTY3JvbGxTaWRlQ2FyIH0gZnJvbSAnLi9TaWRlRWZmZWN0JztcbmltcG9ydCB7IGVmZmVjdENhciB9IGZyb20gJy4vbWVkaXVtJztcbmV4cG9ydCBkZWZhdWx0IGV4cG9ydFNpZGVjYXIoZWZmZWN0Q2FyLCBSZW1vdmVTY3JvbGxTaWRlQ2FyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/sidecar.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/component.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/component.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   styleSingleton: function() { return /* binding */ styleSingleton; }\n/* harmony export */ });\n/* harmony import */ var _hook__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hook */ \"(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/hook.js\");\n\n/**\n * create a Component to add styles on demand\n * - styles are added when first instance is mounted\n * - styles are removed when the last instance is unmounted\n * - changing styles in runtime does nothing unless dynamic is set. But with multiple components that can lead to the undefined behavior\n */\nvar styleSingleton = function () {\n    var useStyle = (0,_hook__WEBPACK_IMPORTED_MODULE_0__.styleHookSingleton)();\n    var Sheet = function (_a) {\n        var styles = _a.styles, dynamic = _a.dynamic;\n        useStyle(styles, dynamic);\n        return null;\n    };\n    return Sheet;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1zdHlsZS1zaW5nbGV0b24vZGlzdC9lczIwMTUvY29tcG9uZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsbUJBQW1CLHlEQUFrQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3R5bGUtc2luZ2xldG9uL2Rpc3QvZXMyMDE1L2NvbXBvbmVudC5qcz9hOWZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlSG9va1NpbmdsZXRvbiB9IGZyb20gJy4vaG9vayc7XG4vKipcbiAqIGNyZWF0ZSBhIENvbXBvbmVudCB0byBhZGQgc3R5bGVzIG9uIGRlbWFuZFxuICogLSBzdHlsZXMgYXJlIGFkZGVkIHdoZW4gZmlyc3QgaW5zdGFuY2UgaXMgbW91bnRlZFxuICogLSBzdHlsZXMgYXJlIHJlbW92ZWQgd2hlbiB0aGUgbGFzdCBpbnN0YW5jZSBpcyB1bm1vdW50ZWRcbiAqIC0gY2hhbmdpbmcgc3R5bGVzIGluIHJ1bnRpbWUgZG9lcyBub3RoaW5nIHVubGVzcyBkeW5hbWljIGlzIHNldC4gQnV0IHdpdGggbXVsdGlwbGUgY29tcG9uZW50cyB0aGF0IGNhbiBsZWFkIHRvIHRoZSB1bmRlZmluZWQgYmVoYXZpb3JcbiAqL1xuZXhwb3J0IHZhciBzdHlsZVNpbmdsZXRvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdXNlU3R5bGUgPSBzdHlsZUhvb2tTaW5nbGV0b24oKTtcbiAgICB2YXIgU2hlZXQgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdmFyIHN0eWxlcyA9IF9hLnN0eWxlcywgZHluYW1pYyA9IF9hLmR5bmFtaWM7XG4gICAgICAgIHVzZVN0eWxlKHN0eWxlcywgZHluYW1pYyk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgcmV0dXJuIFNoZWV0O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/component.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/hook.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/hook.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   styleHookSingleton: function() { return /* binding */ styleHookSingleton; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _singleton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./singleton */ \"(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/singleton.js\");\n\n\n/**\n * creates a hook to control style singleton\n * @see {@link styleSingleton} for a safer component version\n * @example\n * ```tsx\n * const useStyle = styleHookSingleton();\n * ///\n * useStyle('body { overflow: hidden}');\n */\nvar styleHookSingleton = function () {\n    var sheet = (0,_singleton__WEBPACK_IMPORTED_MODULE_1__.stylesheetSingleton)();\n    return function (styles, isDynamic) {\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {\n            sheet.add(styles);\n            return function () {\n                sheet.remove();\n            };\n        }, [styles && isDynamic]);\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1zdHlsZS1zaW5nbGV0b24vZGlzdC9lczIwMTUvaG9vay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStCO0FBQ21CO0FBQ2xEO0FBQ0E7QUFDQSxTQUFTLHNCQUFzQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDTztBQUNQLGdCQUFnQiwrREFBbUI7QUFDbkM7QUFDQSxRQUFRLDRDQUFlO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXN0eWxlLXNpbmdsZXRvbi9kaXN0L2VzMjAxNS9ob29rLmpzPzRlYzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgc3R5bGVzaGVldFNpbmdsZXRvbiB9IGZyb20gJy4vc2luZ2xldG9uJztcbi8qKlxuICogY3JlYXRlcyBhIGhvb2sgdG8gY29udHJvbCBzdHlsZSBzaW5nbGV0b25cbiAqIEBzZWUge0BsaW5rIHN0eWxlU2luZ2xldG9ufSBmb3IgYSBzYWZlciBjb21wb25lbnQgdmVyc2lvblxuICogQGV4YW1wbGVcbiAqIGBgYHRzeFxuICogY29uc3QgdXNlU3R5bGUgPSBzdHlsZUhvb2tTaW5nbGV0b24oKTtcbiAqIC8vL1xuICogdXNlU3R5bGUoJ2JvZHkgeyBvdmVyZmxvdzogaGlkZGVufScpO1xuICovXG5leHBvcnQgdmFyIHN0eWxlSG9va1NpbmdsZXRvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2hlZXQgPSBzdHlsZXNoZWV0U2luZ2xldG9uKCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChzdHlsZXMsIGlzRHluYW1pYykge1xuICAgICAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc2hlZXQuYWRkKHN0eWxlcyk7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHNoZWV0LnJlbW92ZSgpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSwgW3N0eWxlcyAmJiBpc0R5bmFtaWNdKTtcbiAgICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/hook.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   styleHookSingleton: function() { return /* reexport safe */ _hook__WEBPACK_IMPORTED_MODULE_2__.styleHookSingleton; },\n/* harmony export */   styleSingleton: function() { return /* reexport safe */ _component__WEBPACK_IMPORTED_MODULE_0__.styleSingleton; },\n/* harmony export */   stylesheetSingleton: function() { return /* reexport safe */ _singleton__WEBPACK_IMPORTED_MODULE_1__.stylesheetSingleton; }\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/component.js\");\n/* harmony import */ var _singleton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./singleton */ \"(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/singleton.js\");\n/* harmony import */ var _hook__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hook */ \"(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/hook.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1zdHlsZS1zaW5nbGV0b24vZGlzdC9lczIwMTUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTZDO0FBQ0s7QUFDTiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3R5bGUtc2luZ2xldG9uL2Rpc3QvZXMyMDE1L2luZGV4LmpzP2FlMTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgc3R5bGVTaW5nbGV0b24gfSBmcm9tICcuL2NvbXBvbmVudCc7XG5leHBvcnQgeyBzdHlsZXNoZWV0U2luZ2xldG9uIH0gZnJvbSAnLi9zaW5nbGV0b24nO1xuZXhwb3J0IHsgc3R5bGVIb29rU2luZ2xldG9uIH0gZnJvbSAnLi9ob29rJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/singleton.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-style-singleton/dist/es2015/singleton.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stylesheetSingleton: function() { return /* binding */ stylesheetSingleton; }\n/* harmony export */ });\n/* harmony import */ var get_nonce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-nonce */ \"(app-pages-browser)/./node_modules/get-nonce/dist/es2015/index.js\");\n\nfunction makeStyleTag() {\n    if (!document)\n        return null;\n    var tag = document.createElement('style');\n    tag.type = 'text/css';\n    var nonce = (0,get_nonce__WEBPACK_IMPORTED_MODULE_0__.getNonce)();\n    if (nonce) {\n        tag.setAttribute('nonce', nonce);\n    }\n    return tag;\n}\nfunction injectStyles(tag, css) {\n    // @ts-ignore\n    if (tag.styleSheet) {\n        // @ts-ignore\n        tag.styleSheet.cssText = css;\n    }\n    else {\n        tag.appendChild(document.createTextNode(css));\n    }\n}\nfunction insertStyleTag(tag) {\n    var head = document.head || document.getElementsByTagName('head')[0];\n    head.appendChild(tag);\n}\nvar stylesheetSingleton = function () {\n    var counter = 0;\n    var stylesheet = null;\n    return {\n        add: function (style) {\n            if (counter == 0) {\n                if ((stylesheet = makeStyleTag())) {\n                    injectStyles(stylesheet, style);\n                    insertStyleTag(stylesheet);\n                }\n            }\n            counter++;\n        },\n        remove: function () {\n            counter--;\n            if (!counter && stylesheet) {\n                stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);\n                stylesheet = null;\n            }\n        },\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1zdHlsZS1zaW5nbGV0b24vZGlzdC9lczIwMTUvc2luZ2xldG9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbURBQVE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXN0eWxlLXNpbmdsZXRvbi9kaXN0L2VzMjAxNS9zaW5nbGV0b24uanM/YjI1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROb25jZSB9IGZyb20gJ2dldC1ub25jZSc7XG5mdW5jdGlvbiBtYWtlU3R5bGVUYWcoKSB7XG4gICAgaWYgKCFkb2N1bWVudClcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gICAgdGFnLnR5cGUgPSAndGV4dC9jc3MnO1xuICAgIHZhciBub25jZSA9IGdldE5vbmNlKCk7XG4gICAgaWYgKG5vbmNlKSB7XG4gICAgICAgIHRhZy5zZXRBdHRyaWJ1dGUoJ25vbmNlJywgbm9uY2UpO1xuICAgIH1cbiAgICByZXR1cm4gdGFnO1xufVxuZnVuY3Rpb24gaW5qZWN0U3R5bGVzKHRhZywgY3NzKSB7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGlmICh0YWcuc3R5bGVTaGVldCkge1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIHRhZy5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0YWcuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gICAgfVxufVxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVUYWcodGFnKSB7XG4gICAgdmFyIGhlYWQgPSBkb2N1bWVudC5oZWFkIHx8IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF07XG4gICAgaGVhZC5hcHBlbmRDaGlsZCh0YWcpO1xufVxuZXhwb3J0IHZhciBzdHlsZXNoZWV0U2luZ2xldG9uID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBjb3VudGVyID0gMDtcbiAgICB2YXIgc3R5bGVzaGVldCA9IG51bGw7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYWRkOiBmdW5jdGlvbiAoc3R5bGUpIHtcbiAgICAgICAgICAgIGlmIChjb3VudGVyID09IDApIHtcbiAgICAgICAgICAgICAgICBpZiAoKHN0eWxlc2hlZXQgPSBtYWtlU3R5bGVUYWcoKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5qZWN0U3R5bGVzKHN0eWxlc2hlZXQsIHN0eWxlKTtcbiAgICAgICAgICAgICAgICAgICAgaW5zZXJ0U3R5bGVUYWcoc3R5bGVzaGVldCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY291bnRlcisrO1xuICAgICAgICB9LFxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvdW50ZXItLTtcbiAgICAgICAgICAgIGlmICghY291bnRlciAmJiBzdHlsZXNoZWV0KSB7XG4gICAgICAgICAgICAgICAgc3R5bGVzaGVldC5wYXJlbnROb2RlICYmIHN0eWxlc2hlZXQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZXNoZWV0KTtcbiAgICAgICAgICAgICAgICBzdHlsZXNoZWV0ID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-style-singleton/dist/es2015/singleton.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.development.esm.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.development.esm.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ index; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var use_latest__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-latest */ \"(app-pages-browser)/./node_modules/use-latest/dist/use-latest.esm.js\");\n/* harmony import */ var use_composed_ref__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! use-composed-ref */ \"(app-pages-browser)/./node_modules/use-composed-ref/dist/use-composed-ref.esm.js\");\n\n\n\n\n\n\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0',\n  display: 'block'\n};\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\nvar forceHiddenStyles$1 = forceHiddenStyles;\n\nvar hiddenTextarea = null;\nvar getHeight = function getHeight(node, sizingData) {\n  var height = node.scrollHeight;\n  if (sizingData.sizingStyle.boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    return height + sizingData.borderSize;\n  }\n\n  // remove padding, since height = content\n  return height - sizingData.paddingSize;\n};\nfunction calculateNodeHeight(sizingData, value, minRows, maxRows) {\n  if (minRows === void 0) {\n    minRows = 1;\n  }\n  if (maxRows === void 0) {\n    maxRows = Infinity;\n  }\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tabindex', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    forceHiddenStyles$1(hiddenTextarea);\n  }\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  }\n  var paddingSize = sizingData.paddingSize,\n    borderSize = sizingData.borderSize,\n    sizingStyle = sizingData.sizingStyle;\n  var boxSizing = sizingStyle.boxSizing;\n  Object.keys(sizingStyle).forEach(function (_key) {\n    var key = _key;\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles$1(hiddenTextarea);\n  hiddenTextarea.value = value;\n  var height = getHeight(hiddenTextarea, sizingData);\n  // Double set and calc due to Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1795904\n  hiddenTextarea.value = value;\n  height = getHeight(hiddenTextarea, sizingData);\n\n  // measure height of a textarea with a single row\n  hiddenTextarea.value = 'x';\n  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  var minHeight = rowHeight * minRows;\n  if (boxSizing === 'border-box') {\n    minHeight = minHeight + paddingSize + borderSize;\n  }\n  height = Math.max(minHeight, height);\n  var maxHeight = rowHeight * maxRows;\n  if (boxSizing === 'border-box') {\n    maxHeight = maxHeight + paddingSize + borderSize;\n  }\n  height = Math.min(maxHeight, height);\n  return [height, rowHeight];\n}\n\nvar noop = function noop() {};\nvar pick = function pick(props, obj) {\n  return props.reduce(function (acc, prop) {\n    acc[prop] = obj[prop];\n    return acc;\n  }, {});\n};\n\nvar SIZING_STYLE = ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'boxSizing', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop',\n// non-standard\n'tabSize', 'textIndent',\n// non-standard\n'textRendering', 'textTransform', 'width', 'wordBreak'];\nvar isIE = !!document.documentElement.currentStyle ;\nvar getSizingData = function getSizingData(node) {\n  var style = window.getComputedStyle(node);\n  if (style === null) {\n    return null;\n  }\n  var sizingStyle = pick(SIZING_STYLE, style);\n  var boxSizing = sizingStyle.boxSizing;\n\n  // probably node is detached from DOM, can't read computed dimensions\n  if (boxSizing === '') {\n    return null;\n  }\n\n  // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + 'px';\n  }\n  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);\n  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);\n  return {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize\n  };\n};\nvar getSizingData$1 = getSizingData;\n\nfunction useListener(target, type, listener) {\n  var latestListener = (0,use_latest__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(listener);\n  react__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect(function () {\n    var handler = function handler(ev) {\n      return latestListener.current(ev);\n    };\n\n    // might happen if document.fonts is not defined, for instance\n    if (!target) {\n      return;\n    }\n    target.addEventListener(type, handler);\n    return function () {\n      return target.removeEventListener(type, handler);\n    };\n  }, []);\n}\nvar useWindowResizeListener = function useWindowResizeListener(listener) {\n  useListener(window, 'resize', listener);\n};\nvar useFontsLoadedListener = function useFontsLoadedListener(listener) {\n  useListener(document.fonts, 'loadingdone', listener);\n};\n\nvar _excluded = [\"cacheMeasurements\", \"maxRows\", \"minRows\", \"onChange\", \"onHeightChange\"];\nvar TextareaAutosize = function TextareaAutosize(_ref, userRef) {\n  var cacheMeasurements = _ref.cacheMeasurements,\n    maxRows = _ref.maxRows,\n    minRows = _ref.minRows,\n    _ref$onChange = _ref.onChange,\n    onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n    _ref$onHeightChange = _ref.onHeightChange,\n    onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange,\n    props = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref, _excluded);\n  if (props.style) {\n    if ('maxHeight' in props.style) {\n      throw new Error('Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.');\n    }\n    if ('minHeight' in props.style) {\n      throw new Error('Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.');\n    }\n  }\n  var isControlled = props.value !== undefined;\n  var libRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(null);\n  var ref = (0,use_composed_ref__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(libRef, userRef);\n  var heightRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(0);\n  var measurementsCacheRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef();\n  var resizeTextarea = function resizeTextarea() {\n    var node = libRef.current;\n    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData$1(node);\n    if (!nodeSizingData) {\n      return;\n    }\n    measurementsCacheRef.current = nodeSizingData;\n    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || 'x', minRows, maxRows),\n      height = _calculateNodeHeight[0],\n      rowHeight = _calculateNodeHeight[1];\n    if (heightRef.current !== height) {\n      heightRef.current = height;\n      node.style.setProperty('height', height + \"px\", 'important');\n      onHeightChange(height, {\n        rowHeight: rowHeight\n      });\n    }\n  };\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      resizeTextarea();\n    }\n    onChange(event);\n  };\n  {\n    react__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect(resizeTextarea);\n    useWindowResizeListener(resizeTextarea);\n    useFontsLoadedListener(resizeTextarea);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"textarea\", (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, props, {\n      onChange: handleChange,\n      ref: ref\n    }));\n  }\n};\nvar index = /* #__PURE__ */react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(TextareaAutosize);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/secure-json-parse/index.js":
/*!*************************************************!*\
  !*** ./node_modules/secure-json-parse/index.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/../../node_modules/buffer/index.js\")[\"Buffer\"];\n\n\nconst hasBuffer = typeof Buffer !== 'undefined'\nconst suspectProtoRx = /\"(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])(?:p|\\\\u0070)(?:r|\\\\u0072)(?:o|\\\\u006[Ff])(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])\"\\s*:/\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/\n\nfunction _parse (text, reviver, options) {\n  // Normalize arguments\n  if (options == null) {\n    if (reviver !== null && typeof reviver === 'object') {\n      options = reviver\n      reviver = undefined\n    }\n  }\n\n  if (hasBuffer && Buffer.isBuffer(text)) {\n    text = text.toString()\n  }\n\n  // BOM checker\n  if (text && text.charCodeAt(0) === 0xFEFF) {\n    text = text.slice(1)\n  }\n\n  // Parse normally, allowing exceptions\n  const obj = JSON.parse(text, reviver)\n\n  // Ignore null and non-objects\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  const protoAction = (options && options.protoAction) || 'error'\n  const constructorAction = (options && options.constructorAction) || 'error'\n\n  // options: 'error' (default) / 'remove' / 'ignore'\n  if (protoAction === 'ignore' && constructorAction === 'ignore') {\n    return obj\n  }\n\n  if (protoAction !== 'ignore' && constructorAction !== 'ignore') {\n    if (suspectProtoRx.test(text) === false && suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  } else if (protoAction !== 'ignore' && constructorAction === 'ignore') {\n    if (suspectProtoRx.test(text) === false) {\n      return obj\n    }\n  } else {\n    if (suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  }\n\n  // Scan result for proto keys\n  return filter(obj, { protoAction, constructorAction, safe: options && options.safe })\n}\n\nfunction filter (obj, { protoAction = 'error', constructorAction = 'error', safe } = {}) {\n  let next = [obj]\n\n  while (next.length) {\n    const nodes = next\n    next = []\n\n    for (const node of nodes) {\n      if (protoAction !== 'ignore' && Object.prototype.hasOwnProperty.call(node, '__proto__')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (protoAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.__proto__ // eslint-disable-line no-proto\n      }\n\n      if (constructorAction !== 'ignore' &&\n          Object.prototype.hasOwnProperty.call(node, 'constructor') &&\n          Object.prototype.hasOwnProperty.call(node.constructor, 'prototype')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (constructorAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.constructor\n      }\n\n      for (const key in node) {\n        const value = node[key]\n        if (value && typeof value === 'object') {\n          next.push(value)\n        }\n      }\n    }\n  }\n  return obj\n}\n\nfunction parse (text, reviver, options) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, options)\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nfunction safeParse (text, reviver) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, { safe: true })\n  } catch (_e) {\n    return null\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nmodule.exports = parse\nmodule.exports[\"default\"] = parse\nmodule.exports.parse = parse\nmodule.exports.safeParse = safeParse\nmodule.exports.scan = filter\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zZWN1cmUtanNvbi1wYXJzZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQVk7O0FBRVoseUJBQXlCLE1BQU07QUFDL0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQixNQUFNO0FBQ3pCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVCQUF1QiwrREFBK0Q7QUFDdEY7O0FBRUEsd0JBQXdCLDJEQUEyRCxJQUFJO0FBQ3ZGOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlHQUFpRztBQUNqRztBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUZBQWlGO0FBQ2pGO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLFlBQVk7QUFDL0MsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlCQUFzQjtBQUN0QixvQkFBb0I7QUFDcEIsd0JBQXdCO0FBQ3hCLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc2VjdXJlLWpzb24tcGFyc2UvaW5kZXguanM/MGFkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgaGFzQnVmZmVyID0gdHlwZW9mIEJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCdcbmNvbnN0IHN1c3BlY3RQcm90b1J4ID0gL1wiKD86X3xcXFxcdTAwNVtGZl0pKD86X3xcXFxcdTAwNVtGZl0pKD86cHxcXFxcdTAwNzApKD86cnxcXFxcdTAwNzIpKD86b3xcXFxcdTAwNltGZl0pKD86dHxcXFxcdTAwNzQpKD86b3xcXFxcdTAwNltGZl0pKD86X3xcXFxcdTAwNVtGZl0pKD86X3xcXFxcdTAwNVtGZl0pXCJcXHMqOi9cbmNvbnN0IHN1c3BlY3RDb25zdHJ1Y3RvclJ4ID0gL1wiKD86Y3xcXFxcdTAwNjMpKD86b3xcXFxcdTAwNltGZl0pKD86bnxcXFxcdTAwNltFZV0pKD86c3xcXFxcdTAwNzMpKD86dHxcXFxcdTAwNzQpKD86cnxcXFxcdTAwNzIpKD86dXxcXFxcdTAwNzUpKD86Y3xcXFxcdTAwNjMpKD86dHxcXFxcdTAwNzQpKD86b3xcXFxcdTAwNltGZl0pKD86cnxcXFxcdTAwNzIpXCJcXHMqOi9cblxuZnVuY3Rpb24gX3BhcnNlICh0ZXh0LCByZXZpdmVyLCBvcHRpb25zKSB7XG4gIC8vIE5vcm1hbGl6ZSBhcmd1bWVudHNcbiAgaWYgKG9wdGlvbnMgPT0gbnVsbCkge1xuICAgIGlmIChyZXZpdmVyICE9PSBudWxsICYmIHR5cGVvZiByZXZpdmVyID09PSAnb2JqZWN0Jykge1xuICAgICAgb3B0aW9ucyA9IHJldml2ZXJcbiAgICAgIHJldml2ZXIgPSB1bmRlZmluZWRcbiAgICB9XG4gIH1cblxuICBpZiAoaGFzQnVmZmVyICYmIEJ1ZmZlci5pc0J1ZmZlcih0ZXh0KSkge1xuICAgIHRleHQgPSB0ZXh0LnRvU3RyaW5nKClcbiAgfVxuXG4gIC8vIEJPTSBjaGVja2VyXG4gIGlmICh0ZXh0ICYmIHRleHQuY2hhckNvZGVBdCgwKSA9PT0gMHhGRUZGKSB7XG4gICAgdGV4dCA9IHRleHQuc2xpY2UoMSlcbiAgfVxuXG4gIC8vIFBhcnNlIG5vcm1hbGx5LCBhbGxvd2luZyBleGNlcHRpb25zXG4gIGNvbnN0IG9iaiA9IEpTT04ucGFyc2UodGV4dCwgcmV2aXZlcilcblxuICAvLyBJZ25vcmUgbnVsbCBhbmQgbm9uLW9iamVjdHNcbiAgaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBvYmpcbiAgfVxuXG4gIGNvbnN0IHByb3RvQWN0aW9uID0gKG9wdGlvbnMgJiYgb3B0aW9ucy5wcm90b0FjdGlvbikgfHwgJ2Vycm9yJ1xuICBjb25zdCBjb25zdHJ1Y3RvckFjdGlvbiA9IChvcHRpb25zICYmIG9wdGlvbnMuY29uc3RydWN0b3JBY3Rpb24pIHx8ICdlcnJvcidcblxuICAvLyBvcHRpb25zOiAnZXJyb3InIChkZWZhdWx0KSAvICdyZW1vdmUnIC8gJ2lnbm9yZSdcbiAgaWYgKHByb3RvQWN0aW9uID09PSAnaWdub3JlJyAmJiBjb25zdHJ1Y3RvckFjdGlvbiA9PT0gJ2lnbm9yZScpIHtcbiAgICByZXR1cm4gb2JqXG4gIH1cblxuICBpZiAocHJvdG9BY3Rpb24gIT09ICdpZ25vcmUnICYmIGNvbnN0cnVjdG9yQWN0aW9uICE9PSAnaWdub3JlJykge1xuICAgIGlmIChzdXNwZWN0UHJvdG9SeC50ZXN0KHRleHQpID09PSBmYWxzZSAmJiBzdXNwZWN0Q29uc3RydWN0b3JSeC50ZXN0KHRleHQpID09PSBmYWxzZSkge1xuICAgICAgcmV0dXJuIG9ialxuICAgIH1cbiAgfSBlbHNlIGlmIChwcm90b0FjdGlvbiAhPT0gJ2lnbm9yZScgJiYgY29uc3RydWN0b3JBY3Rpb24gPT09ICdpZ25vcmUnKSB7XG4gICAgaWYgKHN1c3BlY3RQcm90b1J4LnRlc3QodGV4dCkgPT09IGZhbHNlKSB7XG4gICAgICByZXR1cm4gb2JqXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChzdXNwZWN0Q29uc3RydWN0b3JSeC50ZXN0KHRleHQpID09PSBmYWxzZSkge1xuICAgICAgcmV0dXJuIG9ialxuICAgIH1cbiAgfVxuXG4gIC8vIFNjYW4gcmVzdWx0IGZvciBwcm90byBrZXlzXG4gIHJldHVybiBmaWx0ZXIob2JqLCB7IHByb3RvQWN0aW9uLCBjb25zdHJ1Y3RvckFjdGlvbiwgc2FmZTogb3B0aW9ucyAmJiBvcHRpb25zLnNhZmUgfSlcbn1cblxuZnVuY3Rpb24gZmlsdGVyIChvYmosIHsgcHJvdG9BY3Rpb24gPSAnZXJyb3InLCBjb25zdHJ1Y3RvckFjdGlvbiA9ICdlcnJvcicsIHNhZmUgfSA9IHt9KSB7XG4gIGxldCBuZXh0ID0gW29ial1cblxuICB3aGlsZSAobmV4dC5sZW5ndGgpIHtcbiAgICBjb25zdCBub2RlcyA9IG5leHRcbiAgICBuZXh0ID0gW11cblxuICAgIGZvciAoY29uc3Qgbm9kZSBvZiBub2Rlcykge1xuICAgICAgaWYgKHByb3RvQWN0aW9uICE9PSAnaWdub3JlJyAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobm9kZSwgJ19fcHJvdG9fXycpKSB7IC8vIEF2b2lkIGNhbGxpbmcgbm9kZS5oYXNPd25Qcm9wZXJ0eSBkaXJlY3RseVxuICAgICAgICBpZiAoc2FmZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH0gZWxzZSBpZiAocHJvdG9BY3Rpb24gPT09ICdlcnJvcicpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ09iamVjdCBjb250YWlucyBmb3JiaWRkZW4gcHJvdG90eXBlIHByb3BlcnR5JylcbiAgICAgICAgfVxuXG4gICAgICAgIGRlbGV0ZSBub2RlLl9fcHJvdG9fXyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXByb3RvXG4gICAgICB9XG5cbiAgICAgIGlmIChjb25zdHJ1Y3RvckFjdGlvbiAhPT0gJ2lnbm9yZScgJiZcbiAgICAgICAgICBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobm9kZSwgJ2NvbnN0cnVjdG9yJykgJiZcbiAgICAgICAgICBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobm9kZS5jb25zdHJ1Y3RvciwgJ3Byb3RvdHlwZScpKSB7IC8vIEF2b2lkIGNhbGxpbmcgbm9kZS5oYXNPd25Qcm9wZXJ0eSBkaXJlY3RseVxuICAgICAgICBpZiAoc2FmZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH0gZWxzZSBpZiAoY29uc3RydWN0b3JBY3Rpb24gPT09ICdlcnJvcicpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ09iamVjdCBjb250YWlucyBmb3JiaWRkZW4gcHJvdG90eXBlIHByb3BlcnR5JylcbiAgICAgICAgfVxuXG4gICAgICAgIGRlbGV0ZSBub2RlLmNvbnN0cnVjdG9yXG4gICAgICB9XG5cbiAgICAgIGZvciAoY29uc3Qga2V5IGluIG5vZGUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBub2RlW2tleV1cbiAgICAgICAgaWYgKHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICBuZXh0LnB1c2godmFsdWUpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIG9ialxufVxuXG5mdW5jdGlvbiBwYXJzZSAodGV4dCwgcmV2aXZlciwgb3B0aW9ucykge1xuICBjb25zdCBzdGFja1RyYWNlTGltaXQgPSBFcnJvci5zdGFja1RyYWNlTGltaXRcbiAgRXJyb3Iuc3RhY2tUcmFjZUxpbWl0ID0gMFxuICB0cnkge1xuICAgIHJldHVybiBfcGFyc2UodGV4dCwgcmV2aXZlciwgb3B0aW9ucylcbiAgfSBmaW5hbGx5IHtcbiAgICBFcnJvci5zdGFja1RyYWNlTGltaXQgPSBzdGFja1RyYWNlTGltaXRcbiAgfVxufVxuXG5mdW5jdGlvbiBzYWZlUGFyc2UgKHRleHQsIHJldml2ZXIpIHtcbiAgY29uc3Qgc3RhY2tUcmFjZUxpbWl0ID0gRXJyb3Iuc3RhY2tUcmFjZUxpbWl0XG4gIEVycm9yLnN0YWNrVHJhY2VMaW1pdCA9IDBcbiAgdHJ5IHtcbiAgICByZXR1cm4gX3BhcnNlKHRleHQsIHJldml2ZXIsIHsgc2FmZTogdHJ1ZSB9KVxuICB9IGNhdGNoIChfZSkge1xuICAgIHJldHVybiBudWxsXG4gIH0gZmluYWxseSB7XG4gICAgRXJyb3Iuc3RhY2tUcmFjZUxpbWl0ID0gc3RhY2tUcmFjZUxpbWl0XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5zYWZlUGFyc2UgPSBzYWZlUGFyc2Vcbm1vZHVsZS5leHBvcnRzLnNjYW4gPSBmaWx0ZXJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/secure-json-parse/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-callback-ref/dist/es2015/assignRef.js":
/*!****************************************************************!*\
  !*** ./node_modules/use-callback-ref/dist/es2015/assignRef.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assignRef: function() { return /* binding */ assignRef; }\n/* harmony export */ });\n/**\n * Assigns a value for a given ref, no matter of the ref format\n * @param {RefObject} ref - a callback function or ref object\n * @param value - a new value\n *\n * @see https://github.com/theKashey/use-callback-ref#assignref\n * @example\n * const refObject = useRef();\n * const refFn = (ref) => {....}\n *\n * assignRef(refObject, \"refValue\");\n * assignRef(refFn, \"refValue\");\n */\nfunction assignRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    }\n    else if (ref) {\n        ref.current = value;\n    }\n    return ref;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2UtY2FsbGJhY2stcmVmL2Rpc3QvZXMyMDE1L2Fzc2lnblJlZi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBLFdBQVcsV0FBVztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy91c2UtY2FsbGJhY2stcmVmL2Rpc3QvZXMyMDE1L2Fzc2lnblJlZi5qcz8zNGFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQXNzaWducyBhIHZhbHVlIGZvciBhIGdpdmVuIHJlZiwgbm8gbWF0dGVyIG9mIHRoZSByZWYgZm9ybWF0XG4gKiBAcGFyYW0ge1JlZk9iamVjdH0gcmVmIC0gYSBjYWxsYmFjayBmdW5jdGlvbiBvciByZWYgb2JqZWN0XG4gKiBAcGFyYW0gdmFsdWUgLSBhIG5ldyB2YWx1ZVxuICpcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3RoZUthc2hleS91c2UtY2FsbGJhY2stcmVmI2Fzc2lnbnJlZlxuICogQGV4YW1wbGVcbiAqIGNvbnN0IHJlZk9iamVjdCA9IHVzZVJlZigpO1xuICogY29uc3QgcmVmRm4gPSAocmVmKSA9PiB7Li4uLn1cbiAqXG4gKiBhc3NpZ25SZWYocmVmT2JqZWN0LCBcInJlZlZhbHVlXCIpO1xuICogYXNzaWduUmVmKHJlZkZuLCBcInJlZlZhbHVlXCIpO1xuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzaWduUmVmKHJlZiwgdmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHJlZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZWYodmFsdWUpO1xuICAgIH1cbiAgICBlbHNlIGlmIChyZWYpIHtcbiAgICAgICAgcmVmLmN1cnJlbnQgPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlZjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-callback-ref/dist/es2015/assignRef.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-callback-ref/dist/es2015/useMergeRef.js":
/*!******************************************************************!*\
  !*** ./node_modules/use-callback-ref/dist/es2015/useMergeRef.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMergeRefs: function() { return /* binding */ useMergeRefs; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _assignRef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./assignRef */ \"(app-pages-browser)/./node_modules/use-callback-ref/dist/es2015/assignRef.js\");\n/* harmony import */ var _useRef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useRef */ \"(app-pages-browser)/./node_modules/use-callback-ref/dist/es2015/useRef.js\");\n\n\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nvar currentValues = new WeakMap();\n/**\n * Merges two or more refs together providing a single interface to set their value\n * @param {RefObject|Ref} refs\n * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n *\n * @see {@link mergeRefs} a version without buit-in memoization\n * @see https://github.com/theKashey/use-callback-ref#usemergerefs\n * @example\n * const Component = React.forwardRef((props, ref) => {\n *   const ownRef = useRef();\n *   const domRef = useMergeRefs([ref, ownRef]); // 👈 merge together\n *   return <div ref={domRef}>...</div>\n * }\n */\nfunction useMergeRefs(refs, defaultValue) {\n    var callbackRef = (0,_useRef__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(defaultValue || null, function (newValue) {\n        return refs.forEach(function (ref) { return (0,_assignRef__WEBPACK_IMPORTED_MODULE_2__.assignRef)(ref, newValue); });\n    });\n    // handle refs changes - added or removed\n    useIsomorphicLayoutEffect(function () {\n        var oldValue = currentValues.get(callbackRef);\n        if (oldValue) {\n            var prevRefs_1 = new Set(oldValue);\n            var nextRefs_1 = new Set(refs);\n            var current_1 = callbackRef.current;\n            prevRefs_1.forEach(function (ref) {\n                if (!nextRefs_1.has(ref)) {\n                    (0,_assignRef__WEBPACK_IMPORTED_MODULE_2__.assignRef)(ref, null);\n                }\n            });\n            nextRefs_1.forEach(function (ref) {\n                if (!prevRefs_1.has(ref)) {\n                    (0,_assignRef__WEBPACK_IMPORTED_MODULE_2__.assignRef)(ref, current_1);\n                }\n            });\n        }\n        currentValues.set(callbackRef, refs);\n    }, [refs]);\n    return callbackRef;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2UtY2FsbGJhY2stcmVmL2Rpc3QvZXMyMDE1L3VzZU1lcmdlUmVmLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStCO0FBQ1M7QUFDRTtBQUMxQyxnRUFBZ0Usa0RBQXFCLEdBQUcsNENBQWU7QUFDdkc7QUFDQTtBQUNBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCLGFBQWEsa0JBQWtCLDhDQUE4QztBQUM3RTtBQUNBLFNBQVMsaUJBQWlCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlEO0FBQ2pELHNCQUFzQixPQUFPO0FBQzdCO0FBQ0E7QUFDTztBQUNQLHNCQUFzQix1REFBYztBQUNwQyw2Q0FBNkMsT0FBTyxxREFBUyxrQkFBa0I7QUFDL0UsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxREFBUztBQUM3QjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0Esb0JBQW9CLHFEQUFTO0FBQzdCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdXNlLWNhbGxiYWNrLXJlZi9kaXN0L2VzMjAxNS91c2VNZXJnZVJlZi5qcz8yOWQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGFzc2lnblJlZiB9IGZyb20gJy4vYXNzaWduUmVmJztcbmltcG9ydCB7IHVzZUNhbGxiYWNrUmVmIH0gZnJvbSAnLi91c2VSZWYnO1xudmFyIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IFJlYWN0LnVzZUxheW91dEVmZmVjdCA6IFJlYWN0LnVzZUVmZmVjdDtcbnZhciBjdXJyZW50VmFsdWVzID0gbmV3IFdlYWtNYXAoKTtcbi8qKlxuICogTWVyZ2VzIHR3byBvciBtb3JlIHJlZnMgdG9nZXRoZXIgcHJvdmlkaW5nIGEgc2luZ2xlIGludGVyZmFjZSB0byBzZXQgdGhlaXIgdmFsdWVcbiAqIEBwYXJhbSB7UmVmT2JqZWN0fFJlZn0gcmVmc1xuICogQHJldHVybnMge011dGFibGVSZWZPYmplY3R9IC0gYSBuZXcgcmVmLCB3aGljaCB0cmFuc2xhdGVzIGFsbCBjaGFuZ2VzIHRvIHtyZWZzfVxuICpcbiAqIEBzZWUge0BsaW5rIG1lcmdlUmVmc30gYSB2ZXJzaW9uIHdpdGhvdXQgYnVpdC1pbiBtZW1vaXphdGlvblxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vdGhlS2FzaGV5L3VzZS1jYWxsYmFjay1yZWYjdXNlbWVyZ2VyZWZzXG4gKiBAZXhhbXBsZVxuICogY29uc3QgQ29tcG9uZW50ID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIHJlZikgPT4ge1xuICogICBjb25zdCBvd25SZWYgPSB1c2VSZWYoKTtcbiAqICAgY29uc3QgZG9tUmVmID0gdXNlTWVyZ2VSZWZzKFtyZWYsIG93blJlZl0pOyAvLyDwn5GIIG1lcmdlIHRvZ2V0aGVyXG4gKiAgIHJldHVybiA8ZGl2IHJlZj17ZG9tUmVmfT4uLi48L2Rpdj5cbiAqIH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZU1lcmdlUmVmcyhyZWZzLCBkZWZhdWx0VmFsdWUpIHtcbiAgICB2YXIgY2FsbGJhY2tSZWYgPSB1c2VDYWxsYmFja1JlZihkZWZhdWx0VmFsdWUgfHwgbnVsbCwgZnVuY3Rpb24gKG5ld1ZhbHVlKSB7XG4gICAgICAgIHJldHVybiByZWZzLmZvckVhY2goZnVuY3Rpb24gKHJlZikgeyByZXR1cm4gYXNzaWduUmVmKHJlZiwgbmV3VmFsdWUpOyB9KTtcbiAgICB9KTtcbiAgICAvLyBoYW5kbGUgcmVmcyBjaGFuZ2VzIC0gYWRkZWQgb3IgcmVtb3ZlZFxuICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgb2xkVmFsdWUgPSBjdXJyZW50VmFsdWVzLmdldChjYWxsYmFja1JlZik7XG4gICAgICAgIGlmIChvbGRWYWx1ZSkge1xuICAgICAgICAgICAgdmFyIHByZXZSZWZzXzEgPSBuZXcgU2V0KG9sZFZhbHVlKTtcbiAgICAgICAgICAgIHZhciBuZXh0UmVmc18xID0gbmV3IFNldChyZWZzKTtcbiAgICAgICAgICAgIHZhciBjdXJyZW50XzEgPSBjYWxsYmFja1JlZi5jdXJyZW50O1xuICAgICAgICAgICAgcHJldlJlZnNfMS5mb3JFYWNoKGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgICAgICAgICAgICBpZiAoIW5leHRSZWZzXzEuaGFzKHJlZikpIHtcbiAgICAgICAgICAgICAgICAgICAgYXNzaWduUmVmKHJlZiwgbnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBuZXh0UmVmc18xLmZvckVhY2goZnVuY3Rpb24gKHJlZikge1xuICAgICAgICAgICAgICAgIGlmICghcHJldlJlZnNfMS5oYXMocmVmKSkge1xuICAgICAgICAgICAgICAgICAgICBhc3NpZ25SZWYocmVmLCBjdXJyZW50XzEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnRWYWx1ZXMuc2V0KGNhbGxiYWNrUmVmLCByZWZzKTtcbiAgICB9LCBbcmVmc10pO1xuICAgIHJldHVybiBjYWxsYmFja1JlZjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-callback-ref/dist/es2015/useMergeRef.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-callback-ref/dist/es2015/useRef.js":
/*!*************************************************************!*\
  !*** ./node_modules/use-callback-ref/dist/es2015/useRef.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCallbackRef: function() { return /* binding */ useCallbackRef; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * creates a MutableRef with ref change callback\n * @param initialValue - initial ref value\n * @param {Function} callback - a callback to run when value changes\n *\n * @example\n * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);\n * ref.current = 1;\n * // prints 0 -> 1\n *\n * @see https://reactjs.org/docs/hooks-reference.html#useref\n * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref\n * @returns {MutableRefObject}\n */\nfunction useCallbackRef(initialValue, callback) {\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function () { return ({\n        // value\n        value: initialValue,\n        // last callback\n        callback: callback,\n        // \"memoized\" public interface\n        facade: {\n            get current() {\n                return ref.value;\n            },\n            set current(value) {\n                var last = ref.value;\n                if (last !== value) {\n                    ref.value = value;\n                    ref.callback(value, last);\n                }\n            },\n        },\n    }); })[0];\n    // update callback\n    ref.callback = callback;\n    return ref.facade;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2UtY2FsbGJhY2stcmVmL2Rpc3QvZXMyMDE1L3VzZVJlZi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDTztBQUNQLGNBQWMsK0NBQVEsZUFBZTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSyxJQUFJO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VzZS1jYWxsYmFjay1yZWYvZGlzdC9lczIwMTUvdXNlUmVmLmpzP2JhZDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG4vKipcbiAqIGNyZWF0ZXMgYSBNdXRhYmxlUmVmIHdpdGggcmVmIGNoYW5nZSBjYWxsYmFja1xuICogQHBhcmFtIGluaXRpYWxWYWx1ZSAtIGluaXRpYWwgcmVmIHZhbHVlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayAtIGEgY2FsbGJhY2sgdG8gcnVuIHdoZW4gdmFsdWUgY2hhbmdlc1xuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCByZWYgPSB1c2VDYWxsYmFja1JlZigwLCAobmV3VmFsdWUsIG9sZFZhbHVlKSA9PiBjb25zb2xlLmxvZyhvbGRWYWx1ZSwgJy0+JywgbmV3VmFsdWUpO1xuICogcmVmLmN1cnJlbnQgPSAxO1xuICogLy8gcHJpbnRzIDAgLT4gMVxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2hvb2tzLXJlZmVyZW5jZS5odG1sI3VzZXJlZlxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vdGhlS2FzaGV5L3VzZS1jYWxsYmFjay1yZWYjdXNlY2FsbGJhY2tyZWYtLS10by1yZXBsYWNlLXJlYWN0dXNlcmVmXG4gKiBAcmV0dXJucyB7TXV0YWJsZVJlZk9iamVjdH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUNhbGxiYWNrUmVmKGluaXRpYWxWYWx1ZSwgY2FsbGJhY2spIHtcbiAgICB2YXIgcmVmID0gdXNlU3RhdGUoZnVuY3Rpb24gKCkgeyByZXR1cm4gKHtcbiAgICAgICAgLy8gdmFsdWVcbiAgICAgICAgdmFsdWU6IGluaXRpYWxWYWx1ZSxcbiAgICAgICAgLy8gbGFzdCBjYWxsYmFja1xuICAgICAgICBjYWxsYmFjazogY2FsbGJhY2ssXG4gICAgICAgIC8vIFwibWVtb2l6ZWRcIiBwdWJsaWMgaW50ZXJmYWNlXG4gICAgICAgIGZhY2FkZToge1xuICAgICAgICAgICAgZ2V0IGN1cnJlbnQoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlZi52YWx1ZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXQgY3VycmVudCh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHZhciBsYXN0ID0gcmVmLnZhbHVlO1xuICAgICAgICAgICAgICAgIGlmIChsYXN0ICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICByZWYudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgcmVmLmNhbGxiYWNrKHZhbHVlLCBsYXN0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgIH0pOyB9KVswXTtcbiAgICAvLyB1cGRhdGUgY2FsbGJhY2tcbiAgICByZWYuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICByZXR1cm4gcmVmLmZhY2FkZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-callback-ref/dist/es2015/useRef.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-composed-ref/dist/use-composed-ref.esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/use-composed-ref/dist/use-composed-ref.esm.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar updateRef = function updateRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n    return;\n  }\n  ref.current = value;\n};\n\nvar useComposedRef = function useComposedRef(libRef, userRef) {\n  var prevUserRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (instance) {\n    libRef.current = instance;\n\n    if (prevUserRef.current) {\n      updateRef(prevUserRef.current, null);\n    }\n\n    prevUserRef.current = userRef;\n\n    if (!userRef) {\n      return;\n    }\n\n    updateRef(userRef, instance);\n  }, [userRef]);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (useComposedRef);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2UtY29tcG9zZWQtcmVmL2Rpc3QvdXNlLWNvbXBvc2VkLXJlZi5lc20uanMiLCJtYXBwaW5ncyI6Ijs7O0FBQTRDOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQiw2Q0FBTTtBQUMxQixTQUFTLGtEQUFXO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7O0FBRUEsK0RBQWUsY0FBYyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy91c2UtY29tcG9zZWQtcmVmL2Rpc3QvdXNlLWNvbXBvc2VkLXJlZi5lc20uanM/ZmQ4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VSZWYsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuXG52YXIgdXBkYXRlUmVmID0gZnVuY3Rpb24gdXBkYXRlUmVmKHJlZiwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiByZWYgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZWYodmFsdWUpO1xuICAgIHJldHVybjtcbiAgfVxuICByZWYuY3VycmVudCA9IHZhbHVlO1xufTtcblxudmFyIHVzZUNvbXBvc2VkUmVmID0gZnVuY3Rpb24gdXNlQ29tcG9zZWRSZWYobGliUmVmLCB1c2VyUmVmKSB7XG4gIHZhciBwcmV2VXNlclJlZiA9IHVzZVJlZigpO1xuICByZXR1cm4gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgbGliUmVmLmN1cnJlbnQgPSBpbnN0YW5jZTtcblxuICAgIGlmIChwcmV2VXNlclJlZi5jdXJyZW50KSB7XG4gICAgICB1cGRhdGVSZWYocHJldlVzZXJSZWYuY3VycmVudCwgbnVsbCk7XG4gICAgfVxuXG4gICAgcHJldlVzZXJSZWYuY3VycmVudCA9IHVzZXJSZWY7XG5cbiAgICBpZiAoIXVzZXJSZWYpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB1cGRhdGVSZWYodXNlclJlZiwgaW5zdGFuY2UpO1xuICB9LCBbdXNlclJlZl0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQ29tcG9zZWRSZWY7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-composed-ref/dist/use-composed-ref.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar index =  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect ;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2UtaXNvbW9ycGhpYy1sYXlvdXQtZWZmZWN0L2Rpc3QvdXNlLWlzb21vcnBoaWMtbGF5b3V0LWVmZmVjdC5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBd0M7O0FBRXhDLGFBQWEsa0RBQWU7O0FBRTVCLCtEQUFlLEtBQUssRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdXNlLWlzb21vcnBoaWMtbGF5b3V0LWVmZmVjdC9kaXN0L3VzZS1pc29tb3JwaGljLWxheW91dC1lZmZlY3QuYnJvd3Nlci5lc20uanM/NzUzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VMYXlvdXRFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbnZhciBpbmRleCA9ICB1c2VMYXlvdXRFZmZlY3QgO1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-latest/dist/use-latest.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/use-latest/dist/use-latest.esm.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ useLatest; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var use_isomorphic_layout_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! use-isomorphic-layout-effect */ \"(app-pages-browser)/./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js\");\n\n\n\nvar useLatest = function useLatest(value) {\n  var ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(value);\n  (0,use_isomorphic_layout_effect__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function () {\n    ref.current = value;\n  });\n  return ref;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2UtbGF0ZXN0L2Rpc3QvdXNlLWxhdGVzdC5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQjtBQUNzQzs7QUFFckU7QUFDQSxZQUFZLHlDQUFZO0FBQ3hCLEVBQUUsd0VBQXlCO0FBQzNCO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy91c2UtbGF0ZXN0L2Rpc3QvdXNlLWxhdGVzdC5lc20uanM/MTEwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCBmcm9tICd1c2UtaXNvbW9ycGhpYy1sYXlvdXQtZWZmZWN0JztcblxudmFyIHVzZUxhdGVzdCA9IGZ1bmN0aW9uIHVzZUxhdGVzdCh2YWx1ZSkge1xuICB2YXIgcmVmID0gUmVhY3QudXNlUmVmKHZhbHVlKTtcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgcmVmLmN1cnJlbnQgPSB2YWx1ZTtcbiAgfSk7XG4gIHJldHVybiByZWY7XG59O1xuXG5leHBvcnQgeyB1c2VMYXRlc3QgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-latest/dist/use-latest.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sidecar/dist/es2015/exports.js":
/*!*********************************************************!*\
  !*** ./node_modules/use-sidecar/dist/es2015/exports.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportSidecar: function() { return /* binding */ exportSidecar; }\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar SideCar = function (_a) {\n    var sideCar = _a.sideCar, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, [\"sideCar\"]);\n    if (!sideCar) {\n        throw new Error('Sidecar: please provide `sideCar` property to import the right car');\n    }\n    var Target = sideCar.read();\n    if (!Target) {\n        throw new Error('Sidecar medium not found');\n    }\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Target, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, rest));\n};\nSideCar.isSideCarExport = true;\nfunction exportSidecar(medium, exported) {\n    medium.useMedium(exported);\n    return SideCar;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc2lkZWNhci9kaXN0L2VzMjAxNS9leHBvcnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUM7QUFDVjtBQUMvQjtBQUNBLHFDQUFxQyw2Q0FBTTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0RBQW1CLFNBQVMsK0NBQVEsR0FBRztBQUNsRDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VzZS1zaWRlY2FyL2Rpc3QvZXMyMDE1L2V4cG9ydHMuanM/ZDY4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2Fzc2lnbiwgX19yZXN0IH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG52YXIgU2lkZUNhciA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBzaWRlQ2FyID0gX2Euc2lkZUNhciwgcmVzdCA9IF9fcmVzdChfYSwgW1wic2lkZUNhclwiXSk7XG4gICAgaWYgKCFzaWRlQ2FyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignU2lkZWNhcjogcGxlYXNlIHByb3ZpZGUgYHNpZGVDYXJgIHByb3BlcnR5IHRvIGltcG9ydCB0aGUgcmlnaHQgY2FyJyk7XG4gICAgfVxuICAgIHZhciBUYXJnZXQgPSBzaWRlQ2FyLnJlYWQoKTtcbiAgICBpZiAoIVRhcmdldCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NpZGVjYXIgbWVkaXVtIG5vdCBmb3VuZCcpO1xuICAgIH1cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChUYXJnZXQsIF9fYXNzaWduKHt9LCByZXN0KSk7XG59O1xuU2lkZUNhci5pc1NpZGVDYXJFeHBvcnQgPSB0cnVlO1xuZXhwb3J0IGZ1bmN0aW9uIGV4cG9ydFNpZGVjYXIobWVkaXVtLCBleHBvcnRlZCkge1xuICAgIG1lZGl1bS51c2VNZWRpdW0oZXhwb3J0ZWQpO1xuICAgIHJldHVybiBTaWRlQ2FyO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sidecar/dist/es2015/exports.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sidecar/dist/es2015/medium.js":
/*!********************************************************!*\
  !*** ./node_modules/use-sidecar/dist/es2015/medium.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMedium: function() { return /* binding */ createMedium; },\n/* harmony export */   createSidecarMedium: function() { return /* binding */ createSidecarMedium; }\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n\nfunction ItoI(a) {\n    return a;\n}\nfunction innerCreateMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    var buffer = [];\n    var assigned = false;\n    var medium = {\n        read: function () {\n            if (assigned) {\n                throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');\n            }\n            if (buffer.length) {\n                return buffer[buffer.length - 1];\n            }\n            return defaults;\n        },\n        useMedium: function (data) {\n            var item = middleware(data, assigned);\n            buffer.push(item);\n            return function () {\n                buffer = buffer.filter(function (x) { return x !== item; });\n            };\n        },\n        assignSyncMedium: function (cb) {\n            assigned = true;\n            while (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n            }\n            buffer = {\n                push: function (x) { return cb(x); },\n                filter: function () { return buffer; },\n            };\n        },\n        assignMedium: function (cb) {\n            assigned = true;\n            var pendingQueue = [];\n            if (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n                pendingQueue = buffer;\n            }\n            var executeQueue = function () {\n                var cbs = pendingQueue;\n                pendingQueue = [];\n                cbs.forEach(cb);\n            };\n            var cycle = function () { return Promise.resolve().then(executeQueue); };\n            cycle();\n            buffer = {\n                push: function (x) {\n                    pendingQueue.push(x);\n                    cycle();\n                },\n                filter: function (filter) {\n                    pendingQueue = pendingQueue.filter(filter);\n                    return buffer;\n                },\n            };\n        },\n    };\n    return medium;\n}\nfunction createMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    return innerCreateMedium(defaults, middleware);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction createSidecarMedium(options) {\n    if (options === void 0) { options = {}; }\n    var medium = innerCreateMedium(null);\n    medium.options = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({ async: true, ssr: false }, options);\n    return medium;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc2lkZWNhci9kaXN0L2VzMjAxNS9tZWRpdW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0Qsb0JBQW9CO0FBQzFFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsZUFBZTtBQUNwRCxzQ0FBc0MsZ0JBQWdCO0FBQ3REO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ087QUFDUCxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ087QUFDUCw4QkFBOEI7QUFDOUI7QUFDQSxxQkFBcUIsK0NBQVEsR0FBRyx5QkFBeUI7QUFDekQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdXNlLXNpZGVjYXIvZGlzdC9lczIwMTUvbWVkaXVtLmpzP2VjYjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24gfSBmcm9tIFwidHNsaWJcIjtcbmZ1bmN0aW9uIEl0b0koYSkge1xuICAgIHJldHVybiBhO1xufVxuZnVuY3Rpb24gaW5uZXJDcmVhdGVNZWRpdW0oZGVmYXVsdHMsIG1pZGRsZXdhcmUpIHtcbiAgICBpZiAobWlkZGxld2FyZSA9PT0gdm9pZCAwKSB7IG1pZGRsZXdhcmUgPSBJdG9JOyB9XG4gICAgdmFyIGJ1ZmZlciA9IFtdO1xuICAgIHZhciBhc3NpZ25lZCA9IGZhbHNlO1xuICAgIHZhciBtZWRpdW0gPSB7XG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChhc3NpZ25lZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU2lkZWNhcjogY291bGQgbm90IGByZWFkYCBmcm9tIGFuIGBhc3NpZ25lZGAgbWVkaXVtLiBgcmVhZGAgY291bGQgYmUgdXNlZCBvbmx5IHdpdGggYHVzZU1lZGl1bWAuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYnVmZmVyLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBidWZmZXJbYnVmZmVyLmxlbmd0aCAtIDFdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRlZmF1bHRzO1xuICAgICAgICB9LFxuICAgICAgICB1c2VNZWRpdW06IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICB2YXIgaXRlbSA9IG1pZGRsZXdhcmUoZGF0YSwgYXNzaWduZWQpO1xuICAgICAgICAgICAgYnVmZmVyLnB1c2goaXRlbSk7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGJ1ZmZlciA9IGJ1ZmZlci5maWx0ZXIoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHggIT09IGl0ZW07IH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgYXNzaWduU3luY01lZGl1bTogZnVuY3Rpb24gKGNiKSB7XG4gICAgICAgICAgICBhc3NpZ25lZCA9IHRydWU7XG4gICAgICAgICAgICB3aGlsZSAoYnVmZmVyLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHZhciBjYnMgPSBidWZmZXI7XG4gICAgICAgICAgICAgICAgYnVmZmVyID0gW107XG4gICAgICAgICAgICAgICAgY2JzLmZvckVhY2goY2IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnVmZmVyID0ge1xuICAgICAgICAgICAgICAgIHB1c2g6IGZ1bmN0aW9uICh4KSB7IHJldHVybiBjYih4KTsgfSxcbiAgICAgICAgICAgICAgICBmaWx0ZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJ1ZmZlcjsgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgICAgIGFzc2lnbk1lZGl1bTogZnVuY3Rpb24gKGNiKSB7XG4gICAgICAgICAgICBhc3NpZ25lZCA9IHRydWU7XG4gICAgICAgICAgICB2YXIgcGVuZGluZ1F1ZXVlID0gW107XG4gICAgICAgICAgICBpZiAoYnVmZmVyLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHZhciBjYnMgPSBidWZmZXI7XG4gICAgICAgICAgICAgICAgYnVmZmVyID0gW107XG4gICAgICAgICAgICAgICAgY2JzLmZvckVhY2goY2IpO1xuICAgICAgICAgICAgICAgIHBlbmRpbmdRdWV1ZSA9IGJ1ZmZlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBleGVjdXRlUXVldWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNicyA9IHBlbmRpbmdRdWV1ZTtcbiAgICAgICAgICAgICAgICBwZW5kaW5nUXVldWUgPSBbXTtcbiAgICAgICAgICAgICAgICBjYnMuZm9yRWFjaChjYik7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIGN5Y2xlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihleGVjdXRlUXVldWUpOyB9O1xuICAgICAgICAgICAgY3ljbGUoKTtcbiAgICAgICAgICAgIGJ1ZmZlciA9IHtcbiAgICAgICAgICAgICAgICBwdXNoOiBmdW5jdGlvbiAoeCkge1xuICAgICAgICAgICAgICAgICAgICBwZW5kaW5nUXVldWUucHVzaCh4KTtcbiAgICAgICAgICAgICAgICAgICAgY3ljbGUoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZpbHRlcjogZnVuY3Rpb24gKGZpbHRlcikge1xuICAgICAgICAgICAgICAgICAgICBwZW5kaW5nUXVldWUgPSBwZW5kaW5nUXVldWUuZmlsdGVyKGZpbHRlcik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBidWZmZXI7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgfTtcbiAgICByZXR1cm4gbWVkaXVtO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1lZGl1bShkZWZhdWx0cywgbWlkZGxld2FyZSkge1xuICAgIGlmIChtaWRkbGV3YXJlID09PSB2b2lkIDApIHsgbWlkZGxld2FyZSA9IEl0b0k7IH1cbiAgICByZXR1cm4gaW5uZXJDcmVhdGVNZWRpdW0oZGVmYXVsdHMsIG1pZGRsZXdhcmUpO1xufVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHlwZXNcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTaWRlY2FyTWVkaXVtKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHZhciBtZWRpdW0gPSBpbm5lckNyZWF0ZU1lZGl1bShudWxsKTtcbiAgICBtZWRpdW0ub3B0aW9ucyA9IF9fYXNzaWduKHsgYXN5bmM6IHRydWUsIHNzcjogZmFsc2UgfSwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIG1lZGl1bTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sidecar/dist/es2015/medium.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5kZXZlbG9wbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsSUFBSSxJQUFxQztBQUN6Qzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsbUZBQU87O0FBRXJDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlHQUFpRyxlQUFlO0FBQ2hIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07OztBQUdOO0FBQ0E7QUFDQSxLQUFLLEdBQUc7O0FBRVIsa0RBQWtEO0FBQ2xEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELEtBQUs7QUFDckQ7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTs7O0FBR0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87OztBQUdQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLmRldmVsb3BtZW50LmpzPzdiNGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5kZXZlbG9wbWVudC5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAoZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAndXNlIHN0cmljdCc7XG5cbi8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbmlmIChcbiAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5yZWdpc3RlckludGVybmFsTW9kdWxlU3RhcnQgPT09XG4gICAgJ2Z1bmN0aW9uJ1xuKSB7XG4gIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5yZWdpc3RlckludGVybmFsTW9kdWxlU3RhcnQobmV3IEVycm9yKCkpO1xufVxuICAgICAgICAgIHZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBSZWFjdFNoYXJlZEludGVybmFscyA9IFJlYWN0Ll9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1xuXG5mdW5jdGlvbiBlcnJvcihmb3JtYXQpIHtcbiAge1xuICAgIHtcbiAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiA+IDEgPyBfbGVuMiAtIDEgOiAwKSwgX2tleTIgPSAxOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTIgLSAxXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgIHByaW50V2FybmluZygnZXJyb3InLCBmb3JtYXQsIGFyZ3MpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBwcmludFdhcm5pbmcobGV2ZWwsIGZvcm1hdCwgYXJncykge1xuICAvLyBXaGVuIGNoYW5naW5nIHRoaXMgbG9naWMsIHlvdSBtaWdodCB3YW50IHRvIGFsc29cbiAgLy8gdXBkYXRlIGNvbnNvbGVXaXRoU3RhY2tEZXYud3d3LmpzIGFzIHdlbGwuXG4gIHtcbiAgICB2YXIgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0RGVidWdDdXJyZW50RnJhbWU7XG4gICAgdmFyIHN0YWNrID0gUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZS5nZXRTdGFja0FkZGVuZHVtKCk7XG5cbiAgICBpZiAoc3RhY2sgIT09ICcnKSB7XG4gICAgICBmb3JtYXQgKz0gJyVzJztcbiAgICAgIGFyZ3MgPSBhcmdzLmNvbmNhdChbc3RhY2tdKTtcbiAgICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1pbnRlcm5hbC9zYWZlLXN0cmluZy1jb2VyY2lvblxuXG5cbiAgICB2YXIgYXJnc1dpdGhGb3JtYXQgPSBhcmdzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgcmV0dXJuIFN0cmluZyhpdGVtKTtcbiAgICB9KTsgLy8gQ2FyZWZ1bDogUk4gY3VycmVudGx5IGRlcGVuZHMgb24gdGhpcyBwcmVmaXhcblxuICAgIGFyZ3NXaXRoRm9ybWF0LnVuc2hpZnQoJ1dhcm5pbmc6ICcgKyBmb3JtYXQpOyAvLyBXZSBpbnRlbnRpb25hbGx5IGRvbid0IHVzZSBzcHJlYWQgKG9yIC5hcHBseSkgZGlyZWN0bHkgYmVjYXVzZSBpdFxuICAgIC8vIGJyZWFrcyBJRTk6IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9pc3N1ZXMvMTM2MTBcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaW50ZXJuYWwvbm8tcHJvZHVjdGlvbi1sb2dnaW5nXG5cbiAgICBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbChjb25zb2xlW2xldmVsXSwgY29uc29sZSwgYXJnc1dpdGhGb3JtYXQpO1xuICB9XG59XG5cbi8qKlxuICogaW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwgdG8gYXZvaWQgcmVxdWlyaW5nIGNvbnN1bWVycyBzaGlwIHRoZWlyIG93blxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2lzXG4gKi9cbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgcmV0dXJuIHggPT09IHkgJiYgKHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5KSB8fCB4ICE9PSB4ICYmIHkgIT09IHkgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgO1xufVxuXG52YXIgb2JqZWN0SXMgPSB0eXBlb2YgT2JqZWN0LmlzID09PSAnZnVuY3Rpb24nID8gT2JqZWN0LmlzIDogaXM7XG5cbi8vIGRpc3BhdGNoIGZvciBDb21tb25KUyBpbnRlcm9wIG5hbWVkIGltcG9ydHMuXG5cbnZhciB1c2VTdGF0ZSA9IFJlYWN0LnVzZVN0YXRlLFxuICAgIHVzZUVmZmVjdCA9IFJlYWN0LnVzZUVmZmVjdCxcbiAgICB1c2VMYXlvdXRFZmZlY3QgPSBSZWFjdC51c2VMYXlvdXRFZmZlY3QsXG4gICAgdXNlRGVidWdWYWx1ZSA9IFJlYWN0LnVzZURlYnVnVmFsdWU7XG52YXIgZGlkV2Fybk9sZDE4QWxwaGEgPSBmYWxzZTtcbnZhciBkaWRXYXJuVW5jYWNoZWRHZXRTbmFwc2hvdCA9IGZhbHNlOyAvLyBEaXNjbGFpbWVyOiBUaGlzIHNoaW0gYnJlYWtzIG1hbnkgb2YgdGhlIHJ1bGVzIG9mIFJlYWN0LCBhbmQgb25seSB3b3Jrc1xuLy8gYmVjYXVzZSBvZiBhIHZlcnkgcGFydGljdWxhciBzZXQgb2YgaW1wbGVtZW50YXRpb24gZGV0YWlscyBhbmQgYXNzdW1wdGlvbnNcbi8vIC0tIGNoYW5nZSBhbnkgb25lIG9mIHRoZW0gYW5kIGl0IHdpbGwgYnJlYWsuIFRoZSBtb3N0IGltcG9ydGFudCBhc3N1bXB0aW9uXG4vLyBpcyB0aGF0IHVwZGF0ZXMgYXJlIGFsd2F5cyBzeW5jaHJvbm91cywgYmVjYXVzZSBjb25jdXJyZW50IHJlbmRlcmluZyBpc1xuLy8gb25seSBhdmFpbGFibGUgaW4gdmVyc2lvbnMgb2YgUmVhY3QgdGhhdCBhbHNvIGhhdmUgYSBidWlsdC1pblxuLy8gdXNlU3luY0V4dGVybmFsU3RvcmUgQVBJLiBBbmQgd2Ugb25seSB1c2UgdGhpcyBzaGltIHdoZW4gdGhlIGJ1aWx0LWluIEFQSVxuLy8gZG9lcyBub3QgZXhpc3QuXG4vL1xuLy8gRG8gbm90IGFzc3VtZSB0aGF0IHRoZSBjbGV2ZXIgaGFja3MgdXNlZCBieSB0aGlzIGhvb2sgYWxzbyB3b3JrIGluIGdlbmVyYWwuXG4vLyBUaGUgcG9pbnQgb2YgdGhpcyBzaGltIGlzIHRvIHJlcGxhY2UgdGhlIG5lZWQgZm9yIGhhY2tzIGJ5IG90aGVyIGxpYnJhcmllcy5cblxuZnVuY3Rpb24gdXNlU3luY0V4dGVybmFsU3RvcmUoc3Vic2NyaWJlLCBnZXRTbmFwc2hvdCwgLy8gTm90ZTogVGhlIHNoaW0gZG9lcyBub3QgdXNlIGdldFNlcnZlclNuYXBzaG90LCBiZWNhdXNlIHByZS0xOCB2ZXJzaW9ucyBvZlxuLy8gUmVhY3QgZG8gbm90IGV4cG9zZSBhIHdheSB0byBjaGVjayBpZiB3ZSdyZSBoeWRyYXRpbmcuIFNvIHVzZXJzIG9mIHRoZSBzaGltXG4vLyB3aWxsIG5lZWQgdG8gdHJhY2sgdGhhdCB0aGVtc2VsdmVzIGFuZCByZXR1cm4gdGhlIGNvcnJlY3QgdmFsdWVcbi8vIGZyb20gYGdldFNuYXBzaG90YC5cbmdldFNlcnZlclNuYXBzaG90KSB7XG4gIHtcbiAgICBpZiAoIWRpZFdhcm5PbGQxOEFscGhhKSB7XG4gICAgICBpZiAoUmVhY3Quc3RhcnRUcmFuc2l0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgZGlkV2Fybk9sZDE4QWxwaGEgPSB0cnVlO1xuXG4gICAgICAgIGVycm9yKCdZb3UgYXJlIHVzaW5nIGFuIG91dGRhdGVkLCBwcmUtcmVsZWFzZSBhbHBoYSBvZiBSZWFjdCAxOCB0aGF0ICcgKyAnZG9lcyBub3Qgc3VwcG9ydCB1c2VTeW5jRXh0ZXJuYWxTdG9yZS4gVGhlICcgKyAndXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUgc2hpbSB3aWxsIG5vdCB3b3JrIGNvcnJlY3RseS4gVXBncmFkZSAnICsgJ3RvIGEgbmV3ZXIgcHJlLXJlbGVhc2UuJyk7XG4gICAgICB9XG4gICAgfVxuICB9IC8vIFJlYWQgdGhlIGN1cnJlbnQgc25hcHNob3QgZnJvbSB0aGUgc3RvcmUgb24gZXZlcnkgcmVuZGVyLiBBZ2FpbiwgdGhpc1xuICAvLyBicmVha3MgdGhlIHJ1bGVzIG9mIFJlYWN0LCBhbmQgb25seSB3b3JrcyBoZXJlIGJlY2F1c2Ugb2Ygc3BlY2lmaWNcbiAgLy8gaW1wbGVtZW50YXRpb24gZGV0YWlscywgbW9zdCBpbXBvcnRhbnRseSB0aGF0IHVwZGF0ZXMgYXJlXG4gIC8vIGFsd2F5cyBzeW5jaHJvbm91cy5cblxuXG4gIHZhciB2YWx1ZSA9IGdldFNuYXBzaG90KCk7XG5cbiAge1xuICAgIGlmICghZGlkV2FyblVuY2FjaGVkR2V0U25hcHNob3QpIHtcbiAgICAgIHZhciBjYWNoZWRWYWx1ZSA9IGdldFNuYXBzaG90KCk7XG5cbiAgICAgIGlmICghb2JqZWN0SXModmFsdWUsIGNhY2hlZFZhbHVlKSkge1xuICAgICAgICBlcnJvcignVGhlIHJlc3VsdCBvZiBnZXRTbmFwc2hvdCBzaG91bGQgYmUgY2FjaGVkIHRvIGF2b2lkIGFuIGluZmluaXRlIGxvb3AnKTtcblxuICAgICAgICBkaWRXYXJuVW5jYWNoZWRHZXRTbmFwc2hvdCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9IC8vIEJlY2F1c2UgdXBkYXRlcyBhcmUgc3luY2hyb25vdXMsIHdlIGRvbid0IHF1ZXVlIHRoZW0uIEluc3RlYWQgd2UgZm9yY2UgYVxuICAvLyByZS1yZW5kZXIgd2hlbmV2ZXIgdGhlIHN1YnNjcmliZWQgc3RhdGUgY2hhbmdlcyBieSB1cGRhdGluZyBhbiBzb21lXG4gIC8vIGFyYml0cmFyeSB1c2VTdGF0ZSBob29rLiBUaGVuLCBkdXJpbmcgcmVuZGVyLCB3ZSBjYWxsIGdldFNuYXBzaG90IHRvIHJlYWRcbiAgLy8gdGhlIGN1cnJlbnQgdmFsdWUuXG4gIC8vXG4gIC8vIEJlY2F1c2Ugd2UgZG9uJ3QgYWN0dWFsbHkgdXNlIHRoZSBzdGF0ZSByZXR1cm5lZCBieSB0aGUgdXNlU3RhdGUgaG9vaywgd2VcbiAgLy8gY2FuIHNhdmUgYSBiaXQgb2YgbWVtb3J5IGJ5IHN0b3Jpbmcgb3RoZXIgc3R1ZmYgaW4gdGhhdCBzbG90LlxuICAvL1xuICAvLyBUbyBpbXBsZW1lbnQgdGhlIGVhcmx5IGJhaWxvdXQsIHdlIG5lZWQgdG8gdHJhY2sgc29tZSB0aGluZ3Mgb24gYSBtdXRhYmxlXG4gIC8vIG9iamVjdC4gVXN1YWxseSwgd2Ugd291bGQgcHV0IHRoYXQgaW4gYSB1c2VSZWYgaG9vaywgYnV0IHdlIGNhbiBzdGFzaCBpdCBpblxuICAvLyBvdXIgdXNlU3RhdGUgaG9vayBpbnN0ZWFkLlxuICAvL1xuICAvLyBUbyBmb3JjZSBhIHJlLXJlbmRlciwgd2UgY2FsbCBmb3JjZVVwZGF0ZSh7aW5zdH0pLiBUaGF0IHdvcmtzIGJlY2F1c2UgdGhlXG4gIC8vIG5ldyBvYmplY3QgYWx3YXlzIGZhaWxzIGFuIGVxdWFsaXR5IGNoZWNrLlxuXG5cbiAgdmFyIF91c2VTdGF0ZSA9IHVzZVN0YXRlKHtcbiAgICBpbnN0OiB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBnZXRTbmFwc2hvdDogZ2V0U25hcHNob3RcbiAgICB9XG4gIH0pLFxuICAgICAgaW5zdCA9IF91c2VTdGF0ZVswXS5pbnN0LFxuICAgICAgZm9yY2VVcGRhdGUgPSBfdXNlU3RhdGVbMV07IC8vIFRyYWNrIHRoZSBsYXRlc3QgZ2V0U25hcHNob3QgZnVuY3Rpb24gd2l0aCBhIHJlZi4gVGhpcyBuZWVkcyB0byBiZSB1cGRhdGVkXG4gIC8vIGluIHRoZSBsYXlvdXQgcGhhc2Ugc28gd2UgY2FuIGFjY2VzcyBpdCBkdXJpbmcgdGhlIHRlYXJpbmcgY2hlY2sgdGhhdFxuICAvLyBoYXBwZW5zIG9uIHN1YnNjcmliZS5cblxuXG4gIHVzZUxheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgaW5zdC52YWx1ZSA9IHZhbHVlO1xuICAgIGluc3QuZ2V0U25hcHNob3QgPSBnZXRTbmFwc2hvdDsgLy8gV2hlbmV2ZXIgZ2V0U25hcHNob3Qgb3Igc3Vic2NyaWJlIGNoYW5nZXMsIHdlIG5lZWQgdG8gY2hlY2sgaW4gdGhlXG4gICAgLy8gY29tbWl0IHBoYXNlIGlmIHRoZXJlIHdhcyBhbiBpbnRlcmxlYXZlZCBtdXRhdGlvbi4gSW4gY29uY3VycmVudCBtb2RlXG4gICAgLy8gdGhpcyBjYW4gaGFwcGVuIGFsbCB0aGUgdGltZSwgYnV0IGV2ZW4gaW4gc3luY2hyb25vdXMgbW9kZSwgYW4gZWFybGllclxuICAgIC8vIGVmZmVjdCBtYXkgaGF2ZSBtdXRhdGVkIHRoZSBzdG9yZS5cblxuICAgIGlmIChjaGVja0lmU25hcHNob3RDaGFuZ2VkKGluc3QpKSB7XG4gICAgICAvLyBGb3JjZSBhIHJlLXJlbmRlci5cbiAgICAgIGZvcmNlVXBkYXRlKHtcbiAgICAgICAgaW5zdDogaW5zdFxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbc3Vic2NyaWJlLCB2YWx1ZSwgZ2V0U25hcHNob3RdKTtcbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAvLyBDaGVjayBmb3IgY2hhbmdlcyByaWdodCBiZWZvcmUgc3Vic2NyaWJpbmcuIFN1YnNlcXVlbnQgY2hhbmdlcyB3aWxsIGJlXG4gICAgLy8gZGV0ZWN0ZWQgaW4gdGhlIHN1YnNjcmlwdGlvbiBoYW5kbGVyLlxuICAgIGlmIChjaGVja0lmU25hcHNob3RDaGFuZ2VkKGluc3QpKSB7XG4gICAgICAvLyBGb3JjZSBhIHJlLXJlbmRlci5cbiAgICAgIGZvcmNlVXBkYXRlKHtcbiAgICAgICAgaW5zdDogaW5zdFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdmFyIGhhbmRsZVN0b3JlQ2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gVE9ETzogQmVjYXVzZSB0aGVyZSBpcyBubyBjcm9zcy1yZW5kZXJlciBBUEkgZm9yIGJhdGNoaW5nIHVwZGF0ZXMsIGl0J3NcbiAgICAgIC8vIHVwIHRvIHRoZSBjb25zdW1lciBvZiB0aGlzIGxpYnJhcnkgdG8gd3JhcCB0aGVpciBzdWJzY3JpcHRpb24gZXZlbnRcbiAgICAgIC8vIHdpdGggdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMuIFNob3VsZCB3ZSB0cnkgdG8gZGV0ZWN0IHdoZW4gdGhpcyBpc24ndFxuICAgICAgLy8gdGhlIGNhc2UgYW5kIHByaW50IGEgd2FybmluZyBpbiBkZXZlbG9wbWVudD9cbiAgICAgIC8vIFRoZSBzdG9yZSBjaGFuZ2VkLiBDaGVjayBpZiB0aGUgc25hcHNob3QgY2hhbmdlZCBzaW5jZSB0aGUgbGFzdCB0aW1lIHdlXG4gICAgICAvLyByZWFkIGZyb20gdGhlIHN0b3JlLlxuICAgICAgaWYgKGNoZWNrSWZTbmFwc2hvdENoYW5nZWQoaW5zdCkpIHtcbiAgICAgICAgLy8gRm9yY2UgYSByZS1yZW5kZXIuXG4gICAgICAgIGZvcmNlVXBkYXRlKHtcbiAgICAgICAgICBpbnN0OiBpbnN0XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07IC8vIFN1YnNjcmliZSB0byB0aGUgc3RvcmUgYW5kIHJldHVybiBhIGNsZWFuLXVwIGZ1bmN0aW9uLlxuXG5cbiAgICByZXR1cm4gc3Vic2NyaWJlKGhhbmRsZVN0b3JlQ2hhbmdlKTtcbiAgfSwgW3N1YnNjcmliZV0pO1xuICB1c2VEZWJ1Z1ZhbHVlKHZhbHVlKTtcbiAgcmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBjaGVja0lmU25hcHNob3RDaGFuZ2VkKGluc3QpIHtcbiAgdmFyIGxhdGVzdEdldFNuYXBzaG90ID0gaW5zdC5nZXRTbmFwc2hvdDtcbiAgdmFyIHByZXZWYWx1ZSA9IGluc3QudmFsdWU7XG5cbiAgdHJ5IHtcbiAgICB2YXIgbmV4dFZhbHVlID0gbGF0ZXN0R2V0U25hcHNob3QoKTtcbiAgICByZXR1cm4gIW9iamVjdElzKHByZXZWYWx1ZSwgbmV4dFZhbHVlKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiB1c2VTeW5jRXh0ZXJuYWxTdG9yZSQxKHN1YnNjcmliZSwgZ2V0U25hcHNob3QsIGdldFNlcnZlclNuYXBzaG90KSB7XG4gIC8vIE5vdGU6IFRoZSBzaGltIGRvZXMgbm90IHVzZSBnZXRTZXJ2ZXJTbmFwc2hvdCwgYmVjYXVzZSBwcmUtMTggdmVyc2lvbnMgb2ZcbiAgLy8gUmVhY3QgZG8gbm90IGV4cG9zZSBhIHdheSB0byBjaGVjayBpZiB3ZSdyZSBoeWRyYXRpbmcuIFNvIHVzZXJzIG9mIHRoZSBzaGltXG4gIC8vIHdpbGwgbmVlZCB0byB0cmFjayB0aGF0IHRoZW1zZWx2ZXMgYW5kIHJldHVybiB0aGUgY29ycmVjdCB2YWx1ZVxuICAvLyBmcm9tIGBnZXRTbmFwc2hvdGAuXG4gIHJldHVybiBnZXRTbmFwc2hvdCgpO1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50ICE9PSAndW5kZWZpbmVkJyk7XG5cbnZhciBpc1NlcnZlckVudmlyb25tZW50ID0gIWNhblVzZURPTTtcblxudmFyIHNoaW0gPSBpc1NlcnZlckVudmlyb25tZW50ID8gdXNlU3luY0V4dGVybmFsU3RvcmUkMSA6IHVzZVN5bmNFeHRlcm5hbFN0b3JlO1xudmFyIHVzZVN5bmNFeHRlcm5hbFN0b3JlJDIgPSBSZWFjdC51c2VTeW5jRXh0ZXJuYWxTdG9yZSAhPT0gdW5kZWZpbmVkID8gUmVhY3QudXNlU3luY0V4dGVybmFsU3RvcmUgOiBzaGltO1xuXG5leHBvcnRzLnVzZVN5bmNFeHRlcm5hbFN0b3JlID0gdXNlU3luY0V4dGVybmFsU3RvcmUkMjtcbiAgICAgICAgICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG5pZiAoXG4gIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gIT09ICd1bmRlZmluZWQnICYmXG4gIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18ucmVnaXN0ZXJJbnRlcm5hbE1vZHVsZVN0b3AgPT09XG4gICAgJ2Z1bmN0aW9uJ1xuKSB7XG4gIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5yZWdpc3RlckludGVybmFsTW9kdWxlU3RvcChuZXcgRXJyb3IoKSk7XG59XG4gICAgICAgIFxuICB9KSgpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar shim = __webpack_require__(/*! use-sync-external-store/shim */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLmRldmVsb3BtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYixJQUFJLElBQXFDO0FBQ3pDOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyxtRkFBTztBQUNyQyxXQUFXLG1CQUFPLENBQUMsOEdBQThCOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qzs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVE7OztBQUdSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFROzs7QUFHUjtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7O0FBR1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUEsd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5kZXZlbG9wbWVudC5qcz8yMjRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHVzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5kZXZlbG9wbWVudC5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAoZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAndXNlIHN0cmljdCc7XG5cbi8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbmlmIChcbiAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5yZWdpc3RlckludGVybmFsTW9kdWxlU3RhcnQgPT09XG4gICAgJ2Z1bmN0aW9uJ1xuKSB7XG4gIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5yZWdpc3RlckludGVybmFsTW9kdWxlU3RhcnQobmV3IEVycm9yKCkpO1xufVxuICAgICAgICAgIHZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgc2hpbSA9IHJlcXVpcmUoJ3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0nKTtcblxuLyoqXG4gKiBpbmxpbmVkIE9iamVjdC5pcyBwb2x5ZmlsbCB0byBhdm9pZCByZXF1aXJpbmcgY29uc3VtZXJzIHNoaXAgdGhlaXIgb3duXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvaXNcbiAqL1xuZnVuY3Rpb24gaXMoeCwgeSkge1xuICByZXR1cm4geCA9PT0geSAmJiAoeCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHkpIHx8IHggIT09IHggJiYgeSAhPT0geSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNlbGYtY29tcGFyZVxuICA7XG59XG5cbnZhciBvYmplY3RJcyA9IHR5cGVvZiBPYmplY3QuaXMgPT09ICdmdW5jdGlvbicgPyBPYmplY3QuaXMgOiBpcztcblxudmFyIHVzZVN5bmNFeHRlcm5hbFN0b3JlID0gc2hpbS51c2VTeW5jRXh0ZXJuYWxTdG9yZTtcblxuLy8gZm9yIENvbW1vbkpTIGludGVyb3AuXG5cbnZhciB1c2VSZWYgPSBSZWFjdC51c2VSZWYsXG4gICAgdXNlRWZmZWN0ID0gUmVhY3QudXNlRWZmZWN0LFxuICAgIHVzZU1lbW8gPSBSZWFjdC51c2VNZW1vLFxuICAgIHVzZURlYnVnVmFsdWUgPSBSZWFjdC51c2VEZWJ1Z1ZhbHVlOyAvLyBTYW1lIGFzIHVzZVN5bmNFeHRlcm5hbFN0b3JlLCBidXQgc3VwcG9ydHMgc2VsZWN0b3IgYW5kIGlzRXF1YWwgYXJndW1lbnRzLlxuXG5mdW5jdGlvbiB1c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3RvcihzdWJzY3JpYmUsIGdldFNuYXBzaG90LCBnZXRTZXJ2ZXJTbmFwc2hvdCwgc2VsZWN0b3IsIGlzRXF1YWwpIHtcbiAgLy8gVXNlIHRoaXMgdG8gdHJhY2sgdGhlIHJlbmRlcmVkIHNuYXBzaG90LlxuICB2YXIgaW5zdFJlZiA9IHVzZVJlZihudWxsKTtcbiAgdmFyIGluc3Q7XG5cbiAgaWYgKGluc3RSZWYuY3VycmVudCA9PT0gbnVsbCkge1xuICAgIGluc3QgPSB7XG4gICAgICBoYXNWYWx1ZTogZmFsc2UsXG4gICAgICB2YWx1ZTogbnVsbFxuICAgIH07XG4gICAgaW5zdFJlZi5jdXJyZW50ID0gaW5zdDtcbiAgfSBlbHNlIHtcbiAgICBpbnN0ID0gaW5zdFJlZi5jdXJyZW50O1xuICB9XG5cbiAgdmFyIF91c2VNZW1vID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gVHJhY2sgdGhlIG1lbW9pemVkIHN0YXRlIHVzaW5nIGNsb3N1cmUgdmFyaWFibGVzIHRoYXQgYXJlIGxvY2FsIHRvIHRoaXNcbiAgICAvLyBtZW1vaXplZCBpbnN0YW5jZSBvZiBhIGdldFNuYXBzaG90IGZ1bmN0aW9uLiBJbnRlbnRpb25hbGx5IG5vdCB1c2luZyBhXG4gICAgLy8gdXNlUmVmIGhvb2ssIGJlY2F1c2UgdGhhdCBzdGF0ZSB3b3VsZCBiZSBzaGFyZWQgYWNyb3NzIGFsbCBjb25jdXJyZW50XG4gICAgLy8gY29waWVzIG9mIHRoZSBob29rL2NvbXBvbmVudC5cbiAgICB2YXIgaGFzTWVtbyA9IGZhbHNlO1xuICAgIHZhciBtZW1vaXplZFNuYXBzaG90O1xuICAgIHZhciBtZW1vaXplZFNlbGVjdGlvbjtcblxuICAgIHZhciBtZW1vaXplZFNlbGVjdG9yID0gZnVuY3Rpb24gKG5leHRTbmFwc2hvdCkge1xuICAgICAgaWYgKCFoYXNNZW1vKSB7XG4gICAgICAgIC8vIFRoZSBmaXJzdCB0aW1lIHRoZSBob29rIGlzIGNhbGxlZCwgdGhlcmUgaXMgbm8gbWVtb2l6ZWQgcmVzdWx0LlxuICAgICAgICBoYXNNZW1vID0gdHJ1ZTtcbiAgICAgICAgbWVtb2l6ZWRTbmFwc2hvdCA9IG5leHRTbmFwc2hvdDtcblxuICAgICAgICB2YXIgX25leHRTZWxlY3Rpb24gPSBzZWxlY3RvcihuZXh0U25hcHNob3QpO1xuXG4gICAgICAgIGlmIChpc0VxdWFsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAvLyBFdmVuIGlmIHRoZSBzZWxlY3RvciBoYXMgY2hhbmdlZCwgdGhlIGN1cnJlbnRseSByZW5kZXJlZCBzZWxlY3Rpb25cbiAgICAgICAgICAvLyBtYXkgYmUgZXF1YWwgdG8gdGhlIG5ldyBzZWxlY3Rpb24uIFdlIHNob3VsZCBhdHRlbXB0IHRvIHJldXNlIHRoZVxuICAgICAgICAgIC8vIGN1cnJlbnQgdmFsdWUgaWYgcG9zc2libGUsIHRvIHByZXNlcnZlIGRvd25zdHJlYW0gbWVtb2l6YXRpb25zLlxuICAgICAgICAgIGlmIChpbnN0Lmhhc1ZhbHVlKSB7XG4gICAgICAgICAgICB2YXIgY3VycmVudFNlbGVjdGlvbiA9IGluc3QudmFsdWU7XG5cbiAgICAgICAgICAgIGlmIChpc0VxdWFsKGN1cnJlbnRTZWxlY3Rpb24sIF9uZXh0U2VsZWN0aW9uKSkge1xuICAgICAgICAgICAgICBtZW1vaXplZFNlbGVjdGlvbiA9IGN1cnJlbnRTZWxlY3Rpb247XG4gICAgICAgICAgICAgIHJldHVybiBjdXJyZW50U2VsZWN0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIG1lbW9pemVkU2VsZWN0aW9uID0gX25leHRTZWxlY3Rpb247XG4gICAgICAgIHJldHVybiBfbmV4dFNlbGVjdGlvbjtcbiAgICAgIH0gLy8gV2UgbWF5IGJlIGFibGUgdG8gcmV1c2UgdGhlIHByZXZpb3VzIGludm9jYXRpb24ncyByZXN1bHQuXG5cblxuICAgICAgLy8gV2UgbWF5IGJlIGFibGUgdG8gcmV1c2UgdGhlIHByZXZpb3VzIGludm9jYXRpb24ncyByZXN1bHQuXG4gICAgICB2YXIgcHJldlNuYXBzaG90ID0gbWVtb2l6ZWRTbmFwc2hvdDtcbiAgICAgIHZhciBwcmV2U2VsZWN0aW9uID0gbWVtb2l6ZWRTZWxlY3Rpb247XG5cbiAgICAgIGlmIChvYmplY3RJcyhwcmV2U25hcHNob3QsIG5leHRTbmFwc2hvdCkpIHtcbiAgICAgICAgLy8gVGhlIHNuYXBzaG90IGlzIHRoZSBzYW1lIGFzIGxhc3QgdGltZS4gUmV1c2UgdGhlIHByZXZpb3VzIHNlbGVjdGlvbi5cbiAgICAgICAgcmV0dXJuIHByZXZTZWxlY3Rpb247XG4gICAgICB9IC8vIFRoZSBzbmFwc2hvdCBoYXMgY2hhbmdlZCwgc28gd2UgbmVlZCB0byBjb21wdXRlIGEgbmV3IHNlbGVjdGlvbi5cblxuXG4gICAgICAvLyBUaGUgc25hcHNob3QgaGFzIGNoYW5nZWQsIHNvIHdlIG5lZWQgdG8gY29tcHV0ZSBhIG5ldyBzZWxlY3Rpb24uXG4gICAgICB2YXIgbmV4dFNlbGVjdGlvbiA9IHNlbGVjdG9yKG5leHRTbmFwc2hvdCk7IC8vIElmIGEgY3VzdG9tIGlzRXF1YWwgZnVuY3Rpb24gaXMgcHJvdmlkZWQsIHVzZSB0aGF0IHRvIGNoZWNrIGlmIHRoZSBkYXRhXG4gICAgICAvLyBoYXMgY2hhbmdlZC4gSWYgaXQgaGFzbid0LCByZXR1cm4gdGhlIHByZXZpb3VzIHNlbGVjdGlvbi4gVGhhdCBzaWduYWxzXG4gICAgICAvLyB0byBSZWFjdCB0aGF0IHRoZSBzZWxlY3Rpb25zIGFyZSBjb25jZXB0dWFsbHkgZXF1YWwsIGFuZCB3ZSBjYW4gYmFpbFxuICAgICAgLy8gb3V0IG9mIHJlbmRlcmluZy5cblxuICAgICAgLy8gSWYgYSBjdXN0b20gaXNFcXVhbCBmdW5jdGlvbiBpcyBwcm92aWRlZCwgdXNlIHRoYXQgdG8gY2hlY2sgaWYgdGhlIGRhdGFcbiAgICAgIC8vIGhhcyBjaGFuZ2VkLiBJZiBpdCBoYXNuJ3QsIHJldHVybiB0aGUgcHJldmlvdXMgc2VsZWN0aW9uLiBUaGF0IHNpZ25hbHNcbiAgICAgIC8vIHRvIFJlYWN0IHRoYXQgdGhlIHNlbGVjdGlvbnMgYXJlIGNvbmNlcHR1YWxseSBlcXVhbCwgYW5kIHdlIGNhbiBiYWlsXG4gICAgICAvLyBvdXQgb2YgcmVuZGVyaW5nLlxuICAgICAgaWYgKGlzRXF1YWwgIT09IHVuZGVmaW5lZCAmJiBpc0VxdWFsKHByZXZTZWxlY3Rpb24sIG5leHRTZWxlY3Rpb24pKSB7XG4gICAgICAgIHJldHVybiBwcmV2U2VsZWN0aW9uO1xuICAgICAgfVxuXG4gICAgICBtZW1vaXplZFNuYXBzaG90ID0gbmV4dFNuYXBzaG90O1xuICAgICAgbWVtb2l6ZWRTZWxlY3Rpb24gPSBuZXh0U2VsZWN0aW9uO1xuICAgICAgcmV0dXJuIG5leHRTZWxlY3Rpb247XG4gICAgfTsgLy8gQXNzaWduaW5nIHRoaXMgdG8gYSBjb25zdGFudCBzbyB0aGF0IEZsb3cga25vd3MgaXQgY2FuJ3QgY2hhbmdlLlxuXG5cbiAgICAvLyBBc3NpZ25pbmcgdGhpcyB0byBhIGNvbnN0YW50IHNvIHRoYXQgRmxvdyBrbm93cyBpdCBjYW4ndCBjaGFuZ2UuXG4gICAgdmFyIG1heWJlR2V0U2VydmVyU25hcHNob3QgPSBnZXRTZXJ2ZXJTbmFwc2hvdCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGdldFNlcnZlclNuYXBzaG90O1xuXG4gICAgdmFyIGdldFNuYXBzaG90V2l0aFNlbGVjdG9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG1lbW9pemVkU2VsZWN0b3IoZ2V0U25hcHNob3QoKSk7XG4gICAgfTtcblxuICAgIHZhciBnZXRTZXJ2ZXJTbmFwc2hvdFdpdGhTZWxlY3RvciA9IG1heWJlR2V0U2VydmVyU25hcHNob3QgPT09IG51bGwgPyB1bmRlZmluZWQgOiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbWVtb2l6ZWRTZWxlY3RvcihtYXliZUdldFNlcnZlclNuYXBzaG90KCkpO1xuICAgIH07XG4gICAgcmV0dXJuIFtnZXRTbmFwc2hvdFdpdGhTZWxlY3RvciwgZ2V0U2VydmVyU25hcHNob3RXaXRoU2VsZWN0b3JdO1xuICB9LCBbZ2V0U25hcHNob3QsIGdldFNlcnZlclNuYXBzaG90LCBzZWxlY3RvciwgaXNFcXVhbF0pLFxuICAgICAgZ2V0U2VsZWN0aW9uID0gX3VzZU1lbW9bMF0sXG4gICAgICBnZXRTZXJ2ZXJTZWxlY3Rpb24gPSBfdXNlTWVtb1sxXTtcblxuICB2YXIgdmFsdWUgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZShzdWJzY3JpYmUsIGdldFNlbGVjdGlvbiwgZ2V0U2VydmVyU2VsZWN0aW9uKTtcbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBpbnN0Lmhhc1ZhbHVlID0gdHJ1ZTtcbiAgICBpbnN0LnZhbHVlID0gdmFsdWU7XG4gIH0sIFt2YWx1ZV0pO1xuICB1c2VEZWJ1Z1ZhbHVlKHZhbHVlKTtcbiAgcmV0dXJuIHZhbHVlO1xufVxuXG5leHBvcnRzLnVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yID0gdXNlU3luY0V4dGVybmFsU3RvcmVXaXRoU2VsZWN0b3I7XG4gICAgICAgICAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuaWYgKFxuICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICE9PSAndW5kZWZpbmVkJyAmJlxuICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLnJlZ2lzdGVySW50ZXJuYWxNb2R1bGVTdG9wID09PVxuICAgICdmdW5jdGlvbidcbikge1xuICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18ucmVnaXN0ZXJJbnRlcm5hbE1vZHVsZVN0b3AobmV3IEVycm9yKCkpO1xufVxuICAgICAgICBcbiAgfSkoKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js":
/*!************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/index.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim.development.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw0TUFBOEU7QUFDaEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vaW5kZXguanM/YzkxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js":
/*!********************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/with-selector.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim/with-selector.development.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL3dpdGgtc2VsZWN0b3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLHdPQUE0RjtBQUM5RiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yLmpzP2ExOTAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltL3dpdGgtc2VsZWN0b3IucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/../../node_modules/base64-js/index.js":
/*!*********************************************!*\
  !*** ../../node_modules/base64-js/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkIscUJBQXFCOztBQUVyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsU0FBUztBQUM1QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFNBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixTQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkNBQTJDLFVBQVU7QUFDckQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL2Jhc2U2NC1qcy9pbmRleC5qcz80YzQ4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5leHBvcnRzLmJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoXG5leHBvcnRzLnRvQnl0ZUFycmF5ID0gdG9CeXRlQXJyYXlcbmV4cG9ydHMuZnJvbUJ5dGVBcnJheSA9IGZyb21CeXRlQXJyYXlcblxudmFyIGxvb2t1cCA9IFtdXG52YXIgcmV2TG9va3VwID0gW11cbnZhciBBcnIgPSB0eXBlb2YgVWludDhBcnJheSAhPT0gJ3VuZGVmaW5lZCcgPyBVaW50OEFycmF5IDogQXJyYXlcblxudmFyIGNvZGUgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLydcbmZvciAodmFyIGkgPSAwLCBsZW4gPSBjb2RlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gIGxvb2t1cFtpXSA9IGNvZGVbaV1cbiAgcmV2TG9va3VwW2NvZGUuY2hhckNvZGVBdChpKV0gPSBpXG59XG5cbi8vIFN1cHBvcnQgZGVjb2RpbmcgVVJMLXNhZmUgYmFzZTY0IHN0cmluZ3MsIGFzIE5vZGUuanMgZG9lcy5cbi8vIFNlZTogaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQmFzZTY0I1VSTF9hcHBsaWNhdGlvbnNcbnJldkxvb2t1cFsnLScuY2hhckNvZGVBdCgwKV0gPSA2MlxucmV2TG9va3VwWydfJy5jaGFyQ29kZUF0KDApXSA9IDYzXG5cbmZ1bmN0aW9uIGdldExlbnMgKGI2NCkge1xuICB2YXIgbGVuID0gYjY0Lmxlbmd0aFxuXG4gIGlmIChsZW4gJSA0ID4gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNCcpXG4gIH1cblxuICAvLyBUcmltIG9mZiBleHRyYSBieXRlcyBhZnRlciBwbGFjZWhvbGRlciBieXRlcyBhcmUgZm91bmRcbiAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vYmVhdGdhbW1pdC9iYXNlNjQtanMvaXNzdWVzLzQyXG4gIHZhciB2YWxpZExlbiA9IGI2NC5pbmRleE9mKCc9JylcbiAgaWYgKHZhbGlkTGVuID09PSAtMSkgdmFsaWRMZW4gPSBsZW5cblxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gdmFsaWRMZW4gPT09IGxlblxuICAgID8gMFxuICAgIDogNCAtICh2YWxpZExlbiAlIDQpXG5cbiAgcmV0dXJuIFt2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuXVxufVxuXG4vLyBiYXNlNjQgaXMgNC8zICsgdXAgdG8gdHdvIGNoYXJhY3RlcnMgb2YgdGhlIG9yaWdpbmFsIGRhdGFcbmZ1bmN0aW9uIGJ5dGVMZW5ndGggKGI2NCkge1xuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG4gIHJldHVybiAoKHZhbGlkTGVuICsgcGxhY2VIb2xkZXJzTGVuKSAqIDMgLyA0KSAtIHBsYWNlSG9sZGVyc0xlblxufVxuXG5mdW5jdGlvbiBfYnl0ZUxlbmd0aCAoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSB7XG4gIHJldHVybiAoKHZhbGlkTGVuICsgcGxhY2VIb2xkZXJzTGVuKSAqIDMgLyA0KSAtIHBsYWNlSG9sZGVyc0xlblxufVxuXG5mdW5jdGlvbiB0b0J5dGVBcnJheSAoYjY0KSB7XG4gIHZhciB0bXBcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuXG4gIHZhciBhcnIgPSBuZXcgQXJyKF9ieXRlTGVuZ3RoKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikpXG5cbiAgdmFyIGN1ckJ5dGUgPSAwXG5cbiAgLy8gaWYgdGhlcmUgYXJlIHBsYWNlaG9sZGVycywgb25seSBnZXQgdXAgdG8gdGhlIGxhc3QgY29tcGxldGUgNCBjaGFyc1xuICB2YXIgbGVuID0gcGxhY2VIb2xkZXJzTGVuID4gMFxuICAgID8gdmFsaWRMZW4gLSA0XG4gICAgOiB2YWxpZExlblxuXG4gIHZhciBpXG4gIGZvciAoaSA9IDA7IGkgPCBsZW47IGkgKz0gNCkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxOCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDEyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPDwgNikgfFxuICAgICAgcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAzKV1cbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gMTYpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDIpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldID4+IDQpXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAxKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDEwKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgNCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildID4+IDIpXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIGFyclxufVxuXG5mdW5jdGlvbiB0cmlwbGV0VG9CYXNlNjQgKG51bSkge1xuICByZXR1cm4gbG9va3VwW251bSA+PiAxOCAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDEyICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gNiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtICYgMHgzRl1cbn1cblxuZnVuY3Rpb24gZW5jb2RlQ2h1bmsgKHVpbnQ4LCBzdGFydCwgZW5kKSB7XG4gIHZhciB0bXBcbiAgdmFyIG91dHB1dCA9IFtdXG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgaSArPSAzKSB7XG4gICAgdG1wID1cbiAgICAgICgodWludDhbaV0gPDwgMTYpICYgMHhGRjAwMDApICtcbiAgICAgICgodWludDhbaSArIDFdIDw8IDgpICYgMHhGRjAwKSArXG4gICAgICAodWludDhbaSArIDJdICYgMHhGRilcbiAgICBvdXRwdXQucHVzaCh0cmlwbGV0VG9CYXNlNjQodG1wKSlcbiAgfVxuICByZXR1cm4gb3V0cHV0LmpvaW4oJycpXG59XG5cbmZ1bmN0aW9uIGZyb21CeXRlQXJyYXkgKHVpbnQ4KSB7XG4gIHZhciB0bXBcbiAgdmFyIGxlbiA9IHVpbnQ4Lmxlbmd0aFxuICB2YXIgZXh0cmFCeXRlcyA9IGxlbiAlIDMgLy8gaWYgd2UgaGF2ZSAxIGJ5dGUgbGVmdCwgcGFkIDIgYnl0ZXNcbiAgdmFyIHBhcnRzID0gW11cbiAgdmFyIG1heENodW5rTGVuZ3RoID0gMTYzODMgLy8gbXVzdCBiZSBtdWx0aXBsZSBvZiAzXG5cbiAgLy8gZ28gdGhyb3VnaCB0aGUgYXJyYXkgZXZlcnkgdGhyZWUgYnl0ZXMsIHdlJ2xsIGRlYWwgd2l0aCB0cmFpbGluZyBzdHVmZiBsYXRlclxuICBmb3IgKHZhciBpID0gMCwgbGVuMiA9IGxlbiAtIGV4dHJhQnl0ZXM7IGkgPCBsZW4yOyBpICs9IG1heENodW5rTGVuZ3RoKSB7XG4gICAgcGFydHMucHVzaChlbmNvZGVDaHVuayh1aW50OCwgaSwgKGkgKyBtYXhDaHVua0xlbmd0aCkgPiBsZW4yID8gbGVuMiA6IChpICsgbWF4Q2h1bmtMZW5ndGgpKSlcbiAgfVxuXG4gIC8vIHBhZCB0aGUgZW5kIHdpdGggemVyb3MsIGJ1dCBtYWtlIHN1cmUgdG8gbm90IGZvcmdldCB0aGUgZXh0cmEgYnl0ZXNcbiAgaWYgKGV4dHJhQnl0ZXMgPT09IDEpIHtcbiAgICB0bXAgPSB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDJdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDQpICYgMHgzRl0gK1xuICAgICAgJz09J1xuICAgIClcbiAgfSBlbHNlIGlmIChleHRyYUJ5dGVzID09PSAyKSB7XG4gICAgdG1wID0gKHVpbnQ4W2xlbiAtIDJdIDw8IDgpICsgdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAxMF0gK1xuICAgICAgbG9va3VwWyh0bXAgPj4gNCkgJiAweDNGXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCAyKSAmIDB4M0ZdICtcbiAgICAgICc9J1xuICAgIClcbiAgfVxuXG4gIHJldHVybiBwYXJ0cy5qb2luKCcnKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/base64-js/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/../../node_modules/buffer/index.js":
/*!******************************************!*\
  !*** ../../node_modules/buffer/index.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"(app-pages-browser)/../../node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"(app-pages-browser)/../../node_modules/ieee754/index.js\")\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/../../node_modules/ieee754/index.js":
/*!*******************************************!*\
  !*** ../../node_modules/ieee754/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsV0FBVzs7QUFFcEI7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXOztBQUVwQjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTLFdBQVc7O0FBRXBCO0FBQ0E7QUFDQSxTQUFTLFVBQVU7O0FBRW5CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzP2Y4YjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIGllZWU3NTQuIEJTRC0zLUNsYXVzZSBMaWNlbnNlLiBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmcvb3BlbnNvdXJjZT4gKi9cbmV4cG9ydHMucmVhZCA9IGZ1bmN0aW9uIChidWZmZXIsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBuQml0cyA9IC03XG4gIHZhciBpID0gaXNMRSA/IChuQnl0ZXMgLSAxKSA6IDBcbiAgdmFyIGQgPSBpc0xFID8gLTEgOiAxXG4gIHZhciBzID0gYnVmZmVyW29mZnNldCArIGldXG5cbiAgaSArPSBkXG5cbiAgZSA9IHMgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgcyA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gZUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBlID0gKGUgKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgbSA9IGUgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgZSA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gbUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBtID0gKG0gKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgaWYgKGUgPT09IDApIHtcbiAgICBlID0gMSAtIGVCaWFzXG4gIH0gZWxzZSBpZiAoZSA9PT0gZU1heCkge1xuICAgIHJldHVybiBtID8gTmFOIDogKChzID8gLTEgOiAxKSAqIEluZmluaXR5KVxuICB9IGVsc2Uge1xuICAgIG0gPSBtICsgTWF0aC5wb3coMiwgbUxlbilcbiAgICBlID0gZSAtIGVCaWFzXG4gIH1cbiAgcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBNYXRoLnBvdygyLCBlIC0gbUxlbilcbn1cblxuZXhwb3J0cy53cml0ZSA9IGZ1bmN0aW9uIChidWZmZXIsIHZhbHVlLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbSwgY1xuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgcnQgPSAobUxlbiA9PT0gMjMgPyBNYXRoLnBvdygyLCAtMjQpIC0gTWF0aC5wb3coMiwgLTc3KSA6IDApXG4gIHZhciBpID0gaXNMRSA/IDAgOiAobkJ5dGVzIC0gMSlcbiAgdmFyIGQgPSBpc0xFID8gMSA6IC0xXG4gIHZhciBzID0gdmFsdWUgPCAwIHx8ICh2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwKSA/IDEgOiAwXG5cbiAgdmFsdWUgPSBNYXRoLmFicyh2YWx1ZSlcblxuICBpZiAoaXNOYU4odmFsdWUpIHx8IHZhbHVlID09PSBJbmZpbml0eSkge1xuICAgIG0gPSBpc05hTih2YWx1ZSkgPyAxIDogMFxuICAgIGUgPSBlTWF4XG4gIH0gZWxzZSB7XG4gICAgZSA9IE1hdGguZmxvb3IoTWF0aC5sb2codmFsdWUpIC8gTWF0aC5MTjIpXG4gICAgaWYgKHZhbHVlICogKGMgPSBNYXRoLnBvdygyLCAtZSkpIDwgMSkge1xuICAgICAgZS0tXG4gICAgICBjICo9IDJcbiAgICB9XG4gICAgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICB2YWx1ZSArPSBydCAvIGNcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgKz0gcnQgKiBNYXRoLnBvdygyLCAxIC0gZUJpYXMpXG4gICAgfVxuICAgIGlmICh2YWx1ZSAqIGMgPj0gMikge1xuICAgICAgZSsrXG4gICAgICBjIC89IDJcbiAgICB9XG5cbiAgICBpZiAoZSArIGVCaWFzID49IGVNYXgpIHtcbiAgICAgIG0gPSAwXG4gICAgICBlID0gZU1heFxuICAgIH0gZWxzZSBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIG0gPSAoKHZhbHVlICogYykgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gZSArIGVCaWFzXG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSB2YWx1ZSAqIE1hdGgucG93KDIsIGVCaWFzIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IDBcbiAgICB9XG4gIH1cblxuICBmb3IgKDsgbUxlbiA+PSA4OyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBtICYgMHhmZiwgaSArPSBkLCBtIC89IDI1NiwgbUxlbiAtPSA4KSB7fVxuXG4gIGUgPSAoZSA8PCBtTGVuKSB8IG1cbiAgZUxlbiArPSBtTGVuXG4gIGZvciAoOyBlTGVuID4gMDsgYnVmZmVyW29mZnNldCArIGldID0gZSAmIDB4ZmYsIGkgKz0gZCwgZSAvPSAyNTYsIGVMZW4gLT0gOCkge31cblxuICBidWZmZXJbb2Zmc2V0ICsgaSAtIGRdIHw9IHMgKiAxMjhcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/ieee754/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"fff957c52d63\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzP2YyNDEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJmZmY5NTdjNTJkNjNcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/MyRuntimeProvider.tsx":
/*!***********************************!*\
  !*** ./app/MyRuntimeProvider.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MyRuntimeProvider: function() { return /* binding */ MyRuntimeProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var ai_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ai/react */ \"(app-pages-browser)/./node_modules/ai/react/dist/index.mjs\");\n/* harmony import */ var _assistant_ui_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @assistant-ui/react */ \"(app-pages-browser)/./node_modules/@assistant-ui/react/dist/index.mjs\");\n/* harmony import */ var _assistant_ui_react_ai_sdk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @assistant-ui/react-ai-sdk */ \"(app-pages-browser)/./node_modules/@assistant-ui/react-ai-sdk/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ MyRuntimeProvider auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction MyRuntimeProvider(param) {\n    let { children } = param;\n    _s();\n    const chat = (0,ai_react__WEBPACK_IMPORTED_MODULE_1__.useChat)({\n        api: \"/api/chat\"\n    });\n    const runtime = (0,_assistant_ui_react_ai_sdk__WEBPACK_IMPORTED_MODULE_2__.useVercelUseChatRuntime)(chat);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_assistant_ui_react__WEBPACK_IMPORTED_MODULE_3__.AssistantRuntimeProvider, {\n        runtime: runtime,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/soderstrom/ki-repos/mobile-devs/app/MyRuntimeProvider.tsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, this);\n}\n_s(MyRuntimeProvider, \"x3nadA0JL/08iVxJsG/1BuHCzwY=\", false, function() {\n    return [\n        ai_react__WEBPACK_IMPORTED_MODULE_1__.useChat,\n        _assistant_ui_react_ai_sdk__WEBPACK_IMPORTED_MODULE_2__.useVercelUseChatRuntime\n    ];\n});\n_c = MyRuntimeProvider;\nvar _c;\n$RefreshReg$(_c, \"MyRuntimeProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9NeVJ1bnRpbWVQcm92aWRlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVtQztBQUM0QjtBQUNNO0FBRTlELFNBQVNHLGtCQUFrQixLQUloQztRQUpnQyxFQUNoQ0MsUUFBUSxFQUdSLEdBSmdDOztJQUtoQyxNQUFNQyxPQUFPTCxpREFBT0EsQ0FBQztRQUNuQk0sS0FBSztJQUNQO0lBRUEsTUFBTUMsVUFBVUwsbUZBQXVCQSxDQUFDRztJQUV4QyxxQkFDRSw4REFBQ0oseUVBQXdCQTtRQUFDTSxTQUFTQTtrQkFDaENIOzs7Ozs7QUFHUDtHQWhCZ0JEOztRQUtESCw2Q0FBT0E7UUFJSkUsK0VBQXVCQTs7O0tBVHpCQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvTXlSdW50aW1lUHJvdmlkZXIudHN4PzQ4N2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZUNoYXQgfSBmcm9tIFwiYWkvcmVhY3RcIjtcbmltcG9ydCB7IEFzc2lzdGFudFJ1bnRpbWVQcm92aWRlciB9IGZyb20gXCJAYXNzaXN0YW50LXVpL3JlYWN0XCI7XG5pbXBvcnQgeyB1c2VWZXJjZWxVc2VDaGF0UnVudGltZSB9IGZyb20gXCJAYXNzaXN0YW50LXVpL3JlYWN0LWFpLXNka1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gTXlSdW50aW1lUHJvdmlkZXIoe1xuICBjaGlsZHJlbixcbn06IFJlYWRvbmx5PHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn0+KSB7XG4gIGNvbnN0IGNoYXQgPSB1c2VDaGF0KHtcbiAgICBhcGk6IFwiL2FwaS9jaGF0XCIsXG4gIH0pO1xuXG4gIGNvbnN0IHJ1bnRpbWUgPSB1c2VWZXJjZWxVc2VDaGF0UnVudGltZShjaGF0KTtcblxuICByZXR1cm4gKFxuICAgIDxBc3Npc3RhbnRSdW50aW1lUHJvdmlkZXIgcnVudGltZT17cnVudGltZX0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Bc3Npc3RhbnRSdW50aW1lUHJvdmlkZXI+XG4gICk7XG59XG4iXSwibmFtZXMiOlsidXNlQ2hhdCIsIkFzc2lzdGFudFJ1bnRpbWVQcm92aWRlciIsInVzZVZlcmNlbFVzZUNoYXRSdW50aW1lIiwiTXlSdW50aW1lUHJvdmlkZXIiLCJjaGlsZHJlbiIsImNoYXQiLCJhcGkiLCJydW50aW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/MyRuntimeProvider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/local/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistMonoVF.woff\",\"variable\":\"--font-geist-mono\",\"weight\":\"100 900\"}],\"variableName\":\"geistMono\"}":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/local/target.css?{"path":"app/layout.tsx","import":"","arguments":[{"src":"./fonts/GeistMonoVF.woff","variable":"--font-geist-mono","weight":"100 900"}],"variableName":"geistMono"} ***!
  \*********************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__geistMono_c3aa02', '__geistMono_Fallback_c3aa02'\"},\"className\":\"__className_c3aa02\",\"variable\":\"__variable_c3aa02\"};\n    if(true) {\n      // 1729131870095\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvbG9jYWwvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJhcHAvbGF5b3V0LnRzeFwiLFwiaW1wb3J0XCI6XCJcIixcImFyZ3VtZW50c1wiOlt7XCJzcmNcIjpcIi4vZm9udHMvR2Vpc3RNb25vVkYud29mZlwiLFwidmFyaWFibGVcIjpcIi0tZm9udC1nZWlzdC1tb25vXCIsXCJ3ZWlnaHRcIjpcIjEwMCA5MDBcIn1dLFwidmFyaWFibGVOYW1lXCI6XCJnZWlzdE1vbm9cIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyxtRUFBbUU7QUFDOUYsT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsd01BQTRILGNBQWMsc0RBQXNEO0FBQzlOLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9sb2NhbC90YXJnZXQuY3NzP2FhMWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcInN0eWxlXCI6e1wiZm9udEZhbWlseVwiOlwiJ19fZ2Vpc3RNb25vX2MzYWEwMicsICdfX2dlaXN0TW9ub19GYWxsYmFja19jM2FhMDInXCJ9LFwiY2xhc3NOYW1lXCI6XCJfX2NsYXNzTmFtZV9jM2FhMDJcIixcInZhcmlhYmxlXCI6XCJfX3ZhcmlhYmxlX2MzYWEwMlwifTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzI5MTMxODcwMDk1XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIi9Vc2Vycy9zb2RlcnN0cm9tL2tpLXJlcG9zL21vYmlsZS1kZXZzL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/local/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistMonoVF.woff\",\"variable\":\"--font-geist-mono\",\"weight\":\"100 900\"}],\"variableName\":\"geistMono\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/local/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistVF.woff\",\"variable\":\"--font-geist-sans\",\"weight\":\"100 900\"}],\"variableName\":\"geistSans\"}":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/local/target.css?{"path":"app/layout.tsx","import":"","arguments":[{"src":"./fonts/GeistVF.woff","variable":"--font-geist-sans","weight":"100 900"}],"variableName":"geistSans"} ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__geistSans_1e4310', '__geistSans_Fallback_1e4310'\"},\"className\":\"__className_1e4310\",\"variable\":\"__variable_1e4310\"};\n    if(true) {\n      // 1729131870093\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvbG9jYWwvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJhcHAvbGF5b3V0LnRzeFwiLFwiaW1wb3J0XCI6XCJcIixcImFyZ3VtZW50c1wiOlt7XCJzcmNcIjpcIi4vZm9udHMvR2Vpc3RWRi53b2ZmXCIsXCJ2YXJpYWJsZVwiOlwiLS1mb250LWdlaXN0LXNhbnNcIixcIndlaWdodFwiOlwiMTAwIDkwMFwifV0sXCJ2YXJpYWJsZU5hbWVcIjpcImdlaXN0U2Fuc1wifSIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGtCQUFrQixTQUFTLG1FQUFtRTtBQUM5RixPQUFPLElBQVU7QUFDakI7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyx3TUFBNEgsY0FBYyxzREFBc0Q7QUFDOU4sTUFBTSxVQUFVO0FBQ2hCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9mb250L2xvY2FsL3RhcmdldC5jc3M/YWUyOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wic3R5bGVcIjp7XCJmb250RmFtaWx5XCI6XCInX19nZWlzdFNhbnNfMWU0MzEwJywgJ19fZ2Vpc3RTYW5zX0ZhbGxiYWNrXzFlNDMxMCdcIn0sXCJjbGFzc05hbWVcIjpcIl9fY2xhc3NOYW1lXzFlNDMxMFwiLFwidmFyaWFibGVcIjpcIl9fdmFyaWFibGVfMWU0MzEwXCJ9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MjkxMzE4NzAwOTNcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiL1VzZXJzL3NvZGVyc3Ryb20va2ktcmVwb3MvbW9iaWxlLWRldnMvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJwdWJsaWNQYXRoXCI6XCIvX25leHQvXCIsXCJlc01vZHVsZVwiOmZhbHNlLFwibG9jYWxzXCI6dHJ1ZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/local/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistVF.woff\",\"variable\":\"--font-geist-sans\",\"weight\":\"100 900\"}],\"variableName\":\"geistSans\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/OWNmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGdCQUFnQjs7QUFFaEI7QUFDQTs7QUFFQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxLQUFLLEtBQTZCO0FBQ2xDO0FBQ0E7QUFDQSxHQUFHLFNBQVMsSUFBNEU7QUFDeEY7QUFDQSxFQUFFLGlDQUFxQixFQUFFLG1DQUFFO0FBQzNCO0FBQ0EsR0FBRztBQUFBLGtHQUFDO0FBQ0osR0FBRyxLQUFLLEVBRU47QUFDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzPzg3YjciXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG5cdENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxuXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuXHRodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMgKCkge1xuXHRcdHZhciBjbGFzc2VzID0gJyc7XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmIChhcmcpIHtcblx0XHRcdFx0Y2xhc3NlcyA9IGFwcGVuZENsYXNzKGNsYXNzZXMsIHBhcnNlVmFsdWUoYXJnKSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXM7XG5cdH1cblxuXHRmdW5jdGlvbiBwYXJzZVZhbHVlIChhcmcpIHtcblx0XHRpZiAodHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcblx0XHRcdHJldHVybiBhcmc7XG5cdFx0fVxuXG5cdFx0aWYgKHR5cGVvZiBhcmcgIT09ICdvYmplY3QnKSB7XG5cdFx0XHRyZXR1cm4gJyc7XG5cdFx0fVxuXG5cdFx0aWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHR9XG5cblx0XHRpZiAoYXJnLnRvU3RyaW5nICE9PSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nICYmICFhcmcudG9TdHJpbmcudG9TdHJpbmcoKS5pbmNsdWRlcygnW25hdGl2ZSBjb2RlXScpKSB7XG5cdFx0XHRyZXR1cm4gYXJnLnRvU3RyaW5nKCk7XG5cdFx0fVxuXG5cdFx0dmFyIGNsYXNzZXMgPSAnJztcblxuXHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0Y2xhc3NlcyA9IGFwcGVuZENsYXNzKGNsYXNzZXMsIGtleSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXM7XG5cdH1cblxuXHRmdW5jdGlvbiBhcHBlbmRDbGFzcyAodmFsdWUsIG5ld0NsYXNzKSB7XG5cdFx0aWYgKCFuZXdDbGFzcykge1xuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblx0XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRyZXR1cm4gdmFsdWUgKyAnICcgKyBuZXdDbGFzcztcblx0XHR9XG5cdFxuXHRcdHJldHVybiB2YWx1ZSArIG5ld0NsYXNzO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/classnames/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/react/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@ai-sdk/react/dist/index.mjs ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   experimental_useAssistant: function() { return /* binding */ experimental_useAssistant; },\n/* harmony export */   experimental_useObject: function() { return /* binding */ experimental_useObject; },\n/* harmony export */   useAssistant: function() { return /* binding */ useAssistant; },\n/* harmony export */   useChat: function() { return /* binding */ useChat; },\n/* harmony export */   useCompletion: function() { return /* binding */ useCompletion; }\n/* harmony export */ });\n/* harmony import */ var _ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ai-sdk/provider-utils */ \"(app-pages-browser)/./node_modules/@ai-sdk/react/node_modules/@ai-sdk/provider-utils/dist/index.mjs\");\n/* harmony import */ var _ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ai-sdk/ui-utils */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/dist/index.mjs\");\n/* harmony import */ var _ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ai-sdk/ui-utils */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! swr */ \"(app-pages-browser)/./node_modules/swr/dist/core/index.mjs\");\n// src/use-assistant.ts\n\n\n\nvar getOriginalFetch = () => fetch;\nfunction useAssistant({\n  api,\n  threadId: threadIdParam,\n  credentials,\n  headers,\n  body,\n  onError,\n  fetch: fetch2\n}) {\n  const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const [currentThreadId, setCurrentThreadId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    void 0\n  );\n  const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"awaiting_message\");\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);\n  const handleInputChange = (event) => {\n    setInput(event.target.value);\n  };\n  const abortControllerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n  }, []);\n  const append = async (message, requestOptions) => {\n    var _a, _b;\n    setStatus(\"in_progress\");\n    setMessages((messages2) => {\n      var _a2;\n      return [\n        ...messages2,\n        {\n          ...message,\n          id: (_a2 = message.id) != null ? _a2 : (0,_ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_1__.generateId)()\n        }\n      ];\n    });\n    setInput(\"\");\n    const abortController = new AbortController();\n    try {\n      abortControllerRef.current = abortController;\n      const actualFetch = fetch2 != null ? fetch2 : getOriginalFetch();\n      const response = await actualFetch(api, {\n        method: \"POST\",\n        credentials,\n        signal: abortController.signal,\n        headers: { \"Content-Type\": \"application/json\", ...headers },\n        body: JSON.stringify({\n          ...body,\n          // always use user-provided threadId when available:\n          threadId: (_a = threadIdParam != null ? threadIdParam : currentThreadId) != null ? _a : null,\n          message: message.content,\n          // optional request data:\n          data: requestOptions == null ? void 0 : requestOptions.data\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\n          (_b = await response.text()) != null ? _b : \"Failed to fetch the assistant response.\"\n        );\n      }\n      if (response.body == null) {\n        throw new Error(\"The response body is empty.\");\n      }\n      for await (const { type, value } of (0,_ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_2__.readDataStream)(\n        response.body.getReader()\n      )) {\n        switch (type) {\n          case \"assistant_message\": {\n            setMessages((messages2) => [\n              ...messages2,\n              {\n                id: value.id,\n                role: value.role,\n                content: value.content[0].text.value\n              }\n            ]);\n            break;\n          }\n          case \"text\": {\n            setMessages((messages2) => {\n              const lastMessage = messages2[messages2.length - 1];\n              return [\n                ...messages2.slice(0, messages2.length - 1),\n                {\n                  id: lastMessage.id,\n                  role: lastMessage.role,\n                  content: lastMessage.content + value\n                }\n              ];\n            });\n            break;\n          }\n          case \"data_message\": {\n            setMessages((messages2) => {\n              var _a2;\n              return [\n                ...messages2,\n                {\n                  id: (_a2 = value.id) != null ? _a2 : (0,_ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_1__.generateId)(),\n                  role: \"data\",\n                  content: \"\",\n                  data: value.data\n                }\n              ];\n            });\n            break;\n          }\n          case \"assistant_control_data\": {\n            setCurrentThreadId(value.threadId);\n            setMessages((messages2) => {\n              const lastMessage = messages2[messages2.length - 1];\n              lastMessage.id = value.messageId;\n              return [...messages2.slice(0, messages2.length - 1), lastMessage];\n            });\n            break;\n          }\n          case \"error\": {\n            setError(new Error(value));\n            break;\n          }\n        }\n      }\n    } catch (error2) {\n      if ((0,_ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_3__.isAbortError)(error2) && abortController.signal.aborted) {\n        abortControllerRef.current = null;\n        return;\n      }\n      if (onError && error2 instanceof Error) {\n        onError(error2);\n      }\n      setError(error2);\n    } finally {\n      abortControllerRef.current = null;\n      setStatus(\"awaiting_message\");\n    }\n  };\n  const submitMessage = async (event, requestOptions) => {\n    var _a;\n    (_a = event == null ? void 0 : event.preventDefault) == null ? void 0 : _a.call(event);\n    if (input === \"\") {\n      return;\n    }\n    append({ role: \"user\", content: input }, requestOptions);\n  };\n  const setThreadId = (threadId) => {\n    setCurrentThreadId(threadId);\n    setMessages([]);\n  };\n  return {\n    append,\n    messages,\n    setMessages,\n    threadId: currentThreadId,\n    setThreadId,\n    input,\n    setInput,\n    handleInputChange,\n    submitMessage,\n    status,\n    error,\n    stop\n  };\n}\nvar experimental_useAssistant = useAssistant;\n\n// src/use-chat.ts\n\n\n\nvar getStreamedResponse = async (api, chatRequest, mutate, mutateStreamData, existingDataRef, extraMetadataRef, messagesRef, abortControllerRef, generateId2, streamProtocol, onFinish, onResponse, onToolCall, sendExtraMessageFields, experimental_prepareRequestBody, fetch2, keepLastMessageOnError) => {\n  var _a;\n  const previousMessages = messagesRef.current;\n  mutate(chatRequest.messages, false);\n  const constructedMessagesPayload = sendExtraMessageFields ? chatRequest.messages : chatRequest.messages.map(\n    ({\n      role,\n      content,\n      experimental_attachments,\n      name,\n      data,\n      annotations,\n      toolInvocations,\n      function_call,\n      tool_calls,\n      tool_call_id\n    }) => ({\n      role,\n      content,\n      ...experimental_attachments !== void 0 && {\n        experimental_attachments\n      },\n      ...name !== void 0 && { name },\n      ...data !== void 0 && { data },\n      ...annotations !== void 0 && { annotations },\n      ...toolInvocations !== void 0 && { toolInvocations },\n      // outdated function/tool call handling (TODO deprecate):\n      tool_call_id,\n      ...function_call !== void 0 && { function_call },\n      ...tool_calls !== void 0 && { tool_calls }\n    })\n  );\n  const existingData = existingDataRef.current;\n  return await (0,_ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callChatApi)({\n    api,\n    body: (_a = experimental_prepareRequestBody == null ? void 0 : experimental_prepareRequestBody({\n      messages: chatRequest.messages,\n      requestData: chatRequest.data,\n      requestBody: chatRequest.body\n    })) != null ? _a : {\n      messages: constructedMessagesPayload,\n      data: chatRequest.data,\n      ...extraMetadataRef.current.body,\n      ...chatRequest.body,\n      ...chatRequest.functions !== void 0 && {\n        functions: chatRequest.functions\n      },\n      ...chatRequest.function_call !== void 0 && {\n        function_call: chatRequest.function_call\n      },\n      ...chatRequest.tools !== void 0 && {\n        tools: chatRequest.tools\n      },\n      ...chatRequest.tool_choice !== void 0 && {\n        tool_choice: chatRequest.tool_choice\n      }\n    },\n    streamProtocol,\n    credentials: extraMetadataRef.current.credentials,\n    headers: {\n      ...extraMetadataRef.current.headers,\n      ...chatRequest.headers\n    },\n    abortController: () => abortControllerRef.current,\n    restoreMessagesOnFailure() {\n      if (!keepLastMessageOnError) {\n        mutate(previousMessages, false);\n      }\n    },\n    onResponse,\n    onUpdate(merged, data) {\n      mutate([...chatRequest.messages, ...merged], false);\n      mutateStreamData([...existingData != null ? existingData : [], ...data != null ? data : []], false);\n    },\n    onToolCall,\n    onFinish,\n    generateId: generateId2,\n    fetch: fetch2\n  });\n};\nfunction useChat({\n  api = \"/api/chat\",\n  id,\n  initialMessages,\n  initialInput = \"\",\n  sendExtraMessageFields,\n  experimental_onFunctionCall,\n  experimental_onToolCall,\n  onToolCall,\n  experimental_prepareRequestBody,\n  experimental_maxAutomaticRoundtrips = 0,\n  maxAutomaticRoundtrips = experimental_maxAutomaticRoundtrips,\n  maxToolRoundtrips = maxAutomaticRoundtrips,\n  maxSteps = maxToolRoundtrips != null ? maxToolRoundtrips + 1 : 1,\n  streamMode,\n  streamProtocol,\n  onResponse,\n  onFinish,\n  onError,\n  credentials,\n  headers,\n  body,\n  generateId: generateId2 = _ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_1__.generateId,\n  fetch: fetch2,\n  keepLastMessageOnError = false\n} = {}) {\n  if (streamMode) {\n    streamProtocol != null ? streamProtocol : streamProtocol = streamMode === \"text\" ? \"text\" : void 0;\n  }\n  const hookId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  const idKey = id != null ? id : hookId;\n  const chatKey = typeof api === \"string\" ? [api, idKey] : idKey;\n  const [initialMessagesFallback] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const { data: messages, mutate } = (0,swr__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n    [chatKey, \"messages\"],\n    null,\n    { fallbackData: initialMessages != null ? initialMessages : initialMessagesFallback }\n  );\n  const messagesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(messages || []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    messagesRef.current = messages || [];\n  }, [messages]);\n  const { data: streamData, mutate: mutateStreamData } = (0,swr__WEBPACK_IMPORTED_MODULE_4__[\"default\"])([chatKey, \"streamData\"], null);\n  const streamDataRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(streamData);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    streamDataRef.current = streamData;\n  }, [streamData]);\n  const { data: isLoading = false, mutate: mutateLoading } = (0,swr__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n    [chatKey, \"loading\"],\n    null\n  );\n  const { data: error = void 0, mutate: setError } = (0,swr__WEBPACK_IMPORTED_MODULE_4__[\"default\"])([chatKey, \"error\"], null);\n  const abortControllerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const extraMetadataRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    credentials,\n    headers,\n    body\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    extraMetadataRef.current = {\n      credentials,\n      headers,\n      body\n    };\n  }, [credentials, headers, body]);\n  const triggerRequest = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    async (chatRequest) => {\n      const messageCount = messagesRef.current.length;\n      try {\n        mutateLoading(true);\n        setError(void 0);\n        const abortController = new AbortController();\n        abortControllerRef.current = abortController;\n        await (0,_ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_2__.processChatStream)({\n          getStreamedResponse: () => getStreamedResponse(\n            api,\n            chatRequest,\n            mutate,\n            mutateStreamData,\n            streamDataRef,\n            extraMetadataRef,\n            messagesRef,\n            abortControllerRef,\n            generateId2,\n            streamProtocol,\n            onFinish,\n            onResponse,\n            onToolCall,\n            sendExtraMessageFields,\n            experimental_prepareRequestBody,\n            fetch2,\n            keepLastMessageOnError\n          ),\n          experimental_onFunctionCall,\n          experimental_onToolCall,\n          updateChatRequest: (chatRequestParam) => {\n            chatRequest = chatRequestParam;\n          },\n          getCurrentMessages: () => messagesRef.current\n        });\n        abortControllerRef.current = null;\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          abortControllerRef.current = null;\n          return null;\n        }\n        if (onError && err instanceof Error) {\n          onError(err);\n        }\n        setError(err);\n      } finally {\n        mutateLoading(false);\n      }\n      const messages2 = messagesRef.current;\n      const lastMessage = messages2[messages2.length - 1];\n      if (\n        // ensure we actually have new messages (to prevent infinite loops in case of errors):\n        messages2.length > messageCount && // ensure there is a last message:\n        lastMessage != null && // check if the feature is enabled:\n        maxSteps > 1 && // check that next step is possible:\n        isAssistantMessageWithCompletedToolCalls(lastMessage) && // limit the number of automatic steps:\n        countTrailingAssistantMessages(messages2) < maxSteps\n      ) {\n        await triggerRequest({ messages: messages2 });\n      }\n    },\n    [\n      mutate,\n      mutateLoading,\n      api,\n      extraMetadataRef,\n      onResponse,\n      onFinish,\n      onError,\n      setError,\n      mutateStreamData,\n      streamData,\n      streamProtocol,\n      sendExtraMessageFields,\n      experimental_onFunctionCall,\n      experimental_onToolCall,\n      experimental_prepareRequestBody,\n      onToolCall,\n      maxSteps,\n      messagesRef,\n      abortControllerRef,\n      generateId2,\n      fetch2,\n      keepLastMessageOnError\n    ]\n  );\n  const append = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    async (message, {\n      options,\n      functions,\n      function_call,\n      tools,\n      tool_choice,\n      data,\n      headers: headers2,\n      body: body2,\n      experimental_attachments\n    } = {}) => {\n      var _a, _b;\n      if (!message.id) {\n        message.id = generateId2();\n      }\n      const attachmentsForRequest = await prepareAttachmentsForRequest(\n        experimental_attachments\n      );\n      const requestOptions = {\n        headers: headers2 != null ? headers2 : options == null ? void 0 : options.headers,\n        body: body2 != null ? body2 : options == null ? void 0 : options.body\n      };\n      const messages2 = messagesRef.current.concat({\n        ...message,\n        id: (_a = message.id) != null ? _a : generateId2(),\n        createdAt: (_b = message.createdAt) != null ? _b : /* @__PURE__ */ new Date(),\n        experimental_attachments: attachmentsForRequest.length > 0 ? attachmentsForRequest : void 0\n      });\n      const chatRequest = {\n        messages: messages2,\n        options: requestOptions,\n        headers: requestOptions.headers,\n        body: requestOptions.body,\n        data,\n        ...functions !== void 0 && { functions },\n        ...function_call !== void 0 && { function_call },\n        ...tools !== void 0 && { tools },\n        ...tool_choice !== void 0 && { tool_choice }\n      };\n      return triggerRequest(chatRequest);\n    },\n    [triggerRequest, generateId2]\n  );\n  const reload = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    async ({\n      options,\n      functions,\n      function_call,\n      tools,\n      tool_choice,\n      data,\n      headers: headers2,\n      body: body2\n    } = {}) => {\n      if (messagesRef.current.length === 0)\n        return null;\n      const requestOptions = {\n        headers: headers2 != null ? headers2 : options == null ? void 0 : options.headers,\n        body: body2 != null ? body2 : options == null ? void 0 : options.body\n      };\n      const lastMessage = messagesRef.current[messagesRef.current.length - 1];\n      if (lastMessage.role === \"assistant\") {\n        const chatRequest2 = {\n          messages: messagesRef.current.slice(0, -1),\n          options: requestOptions,\n          headers: requestOptions.headers,\n          body: requestOptions.body,\n          data,\n          ...functions !== void 0 && { functions },\n          ...function_call !== void 0 && { function_call },\n          ...tools !== void 0 && { tools },\n          ...tool_choice !== void 0 && { tool_choice }\n        };\n        return triggerRequest(chatRequest2);\n      }\n      const chatRequest = {\n        messages: messagesRef.current,\n        options: requestOptions,\n        headers: requestOptions.headers,\n        body: requestOptions.body,\n        data,\n        ...functions !== void 0 && { functions },\n        ...function_call !== void 0 && { function_call },\n        ...tools !== void 0 && { tools },\n        ...tool_choice !== void 0 && { tool_choice }\n      };\n      return triggerRequest(chatRequest);\n    },\n    [triggerRequest]\n  );\n  const stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n  }, []);\n  const setMessages = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (messages2) => {\n      if (typeof messages2 === \"function\") {\n        messages2 = messages2(messagesRef.current);\n      }\n      mutate(messages2, false);\n      messagesRef.current = messages2;\n    },\n    [mutate]\n  );\n  const setData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (data) => {\n      if (typeof data === \"function\") {\n        data = data(streamDataRef.current);\n      }\n      mutateStreamData(data, false);\n      streamDataRef.current = data;\n    },\n    [mutateStreamData]\n  );\n  const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialInput);\n  const handleSubmit = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    async (event, options = {}, metadata) => {\n      var _a, _b, _c, _d, _e;\n      (_a = event == null ? void 0 : event.preventDefault) == null ? void 0 : _a.call(event);\n      if (!input && !options.allowEmptySubmit)\n        return;\n      if (metadata) {\n        extraMetadataRef.current = {\n          ...extraMetadataRef.current,\n          ...metadata\n        };\n      }\n      const attachmentsForRequest = await prepareAttachmentsForRequest(\n        options.experimental_attachments\n      );\n      const requestOptions = {\n        headers: (_c = options.headers) != null ? _c : (_b = options.options) == null ? void 0 : _b.headers,\n        body: (_e = options.body) != null ? _e : (_d = options.options) == null ? void 0 : _d.body\n      };\n      const messages2 = !input && !attachmentsForRequest.length && options.allowEmptySubmit ? messagesRef.current : messagesRef.current.concat({\n        id: generateId2(),\n        createdAt: /* @__PURE__ */ new Date(),\n        role: \"user\",\n        content: input,\n        experimental_attachments: attachmentsForRequest.length > 0 ? attachmentsForRequest : void 0\n      });\n      const chatRequest = {\n        messages: messages2,\n        options: requestOptions,\n        headers: requestOptions.headers,\n        body: requestOptions.body,\n        data: options.data\n      };\n      triggerRequest(chatRequest);\n      setInput(\"\");\n    },\n    [input, generateId2, triggerRequest]\n  );\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n  const addToolResult = ({\n    toolCallId,\n    result\n  }) => {\n    const updatedMessages = messagesRef.current.map(\n      (message, index, arr) => (\n        // update the tool calls in the last assistant message:\n        index === arr.length - 1 && message.role === \"assistant\" && message.toolInvocations ? {\n          ...message,\n          toolInvocations: message.toolInvocations.map(\n            (toolInvocation) => toolInvocation.toolCallId === toolCallId ? { ...toolInvocation, result } : toolInvocation\n          )\n        } : message\n      )\n    );\n    mutate(updatedMessages, false);\n    const lastMessage = updatedMessages[updatedMessages.length - 1];\n    if (isAssistantMessageWithCompletedToolCalls(lastMessage)) {\n      triggerRequest({ messages: updatedMessages });\n    }\n  };\n  return {\n    messages: messages || [],\n    setMessages,\n    data: streamData,\n    setData,\n    error,\n    append,\n    reload,\n    stop,\n    input,\n    setInput,\n    handleInputChange,\n    handleSubmit,\n    isLoading,\n    addToolResult,\n    experimental_addToolResult: addToolResult\n  };\n}\nfunction isAssistantMessageWithCompletedToolCalls(message) {\n  return message.role === \"assistant\" && message.toolInvocations && message.toolInvocations.length > 0 && message.toolInvocations.every((toolInvocation) => \"result\" in toolInvocation);\n}\nfunction countTrailingAssistantMessages(messages) {\n  let count = 0;\n  for (let i = messages.length - 1; i >= 0; i--) {\n    if (messages[i].role === \"assistant\") {\n      count++;\n    } else {\n      break;\n    }\n  }\n  return count;\n}\nasync function prepareAttachmentsForRequest(attachmentsFromOptions) {\n  if (attachmentsFromOptions == null) {\n    return [];\n  }\n  if (attachmentsFromOptions instanceof FileList) {\n    return Promise.all(\n      Array.from(attachmentsFromOptions).map(async (attachment) => {\n        const { name, type } = attachment;\n        const dataUrl = await new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.onload = (readerEvent) => {\n            var _a;\n            resolve((_a = readerEvent.target) == null ? void 0 : _a.result);\n          };\n          reader.onerror = (error) => reject(error);\n          reader.readAsDataURL(attachment);\n        });\n        return {\n          name,\n          contentType: type,\n          url: dataUrl\n        };\n      })\n    );\n  }\n  if (Array.isArray(attachmentsFromOptions)) {\n    return attachmentsFromOptions;\n  }\n  throw new Error(\"Invalid attachments type\");\n}\n\n// src/use-completion.ts\n\n\n\nfunction useCompletion({\n  api = \"/api/completion\",\n  id,\n  initialCompletion = \"\",\n  initialInput = \"\",\n  credentials,\n  headers,\n  body,\n  streamMode,\n  streamProtocol,\n  fetch: fetch2,\n  onResponse,\n  onFinish,\n  onError\n} = {}) {\n  if (streamMode) {\n    streamProtocol != null ? streamProtocol : streamProtocol = streamMode === \"text\" ? \"text\" : void 0;\n  }\n  const hookId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  const completionId = id || hookId;\n  const { data, mutate } = (0,swr__WEBPACK_IMPORTED_MODULE_4__[\"default\"])([api, completionId], null, {\n    fallbackData: initialCompletion\n  });\n  const { data: isLoading = false, mutate: mutateLoading } = (0,swr__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n    [completionId, \"loading\"],\n    null\n  );\n  const { data: streamData, mutate: mutateStreamData } = (0,swr__WEBPACK_IMPORTED_MODULE_4__[\"default\"])([completionId, \"streamData\"], null);\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);\n  const completion = data;\n  const [abortController, setAbortController] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const extraMetadataRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    credentials,\n    headers,\n    body\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    extraMetadataRef.current = {\n      credentials,\n      headers,\n      body\n    };\n  }, [credentials, headers, body]);\n  const triggerRequest = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    async (prompt, options) => (0,_ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_2__.callCompletionApi)({\n      api,\n      prompt,\n      credentials: extraMetadataRef.current.credentials,\n      headers: { ...extraMetadataRef.current.headers, ...options == null ? void 0 : options.headers },\n      body: {\n        ...extraMetadataRef.current.body,\n        ...options == null ? void 0 : options.body\n      },\n      streamProtocol,\n      fetch: fetch2,\n      setCompletion: (completion2) => mutate(completion2, false),\n      setLoading: mutateLoading,\n      setError,\n      setAbortController,\n      onResponse,\n      onFinish,\n      onError,\n      onData: (data2) => {\n        mutateStreamData([...streamData || [], ...data2 || []], false);\n      }\n    }),\n    [\n      mutate,\n      mutateLoading,\n      api,\n      extraMetadataRef,\n      setAbortController,\n      onResponse,\n      onFinish,\n      onError,\n      setError,\n      streamData,\n      streamProtocol,\n      fetch2,\n      mutateStreamData\n    ]\n  );\n  const stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (abortController) {\n      abortController.abort();\n      setAbortController(null);\n    }\n  }, [abortController]);\n  const setCompletion = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (completion2) => {\n      mutate(completion2, false);\n    },\n    [mutate]\n  );\n  const complete = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    async (prompt, options) => {\n      return triggerRequest(prompt, options);\n    },\n    [triggerRequest]\n  );\n  const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialInput);\n  const handleSubmit = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (event) => {\n      var _a;\n      (_a = event == null ? void 0 : event.preventDefault) == null ? void 0 : _a.call(event);\n      return input ? complete(input) : void 0;\n    },\n    [input, complete]\n  );\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n  return {\n    completion,\n    complete,\n    error,\n    setCompletion,\n    stop,\n    input,\n    setInput,\n    handleInputChange,\n    handleSubmit,\n    isLoading,\n    data: streamData\n  };\n}\n\n// src/use-object.ts\n\n\n\n\nvar getOriginalFetch2 = () => fetch;\nfunction useObject({\n  api,\n  id,\n  schema,\n  // required, in the future we will use it for validation\n  initialValue,\n  fetch: fetch2,\n  onError,\n  onFinish,\n  headers\n}) {\n  const hookId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  const completionId = id != null ? id : hookId;\n  const { data, mutate } = (0,swr__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n    [api, completionId],\n    null,\n    { fallbackData: initialValue }\n  );\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);\n  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const abortControllerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    var _a;\n    try {\n      (_a = abortControllerRef.current) == null ? void 0 : _a.abort();\n    } catch (ignored) {\n    } finally {\n      setIsLoading(false);\n      abortControllerRef.current = null;\n    }\n  }, []);\n  const submit = async (input) => {\n    var _a;\n    try {\n      mutate(void 0);\n      setIsLoading(true);\n      setError(void 0);\n      const abortController = new AbortController();\n      abortControllerRef.current = abortController;\n      const actualFetch = fetch2 != null ? fetch2 : getOriginalFetch2();\n      const response = await actualFetch(api, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...headers\n        },\n        signal: abortController.signal,\n        body: JSON.stringify(input)\n      });\n      if (!response.ok) {\n        throw new Error(\n          (_a = await response.text()) != null ? _a : \"Failed to fetch the response.\"\n        );\n      }\n      if (response.body == null) {\n        throw new Error(\"The response body is empty.\");\n      }\n      let accumulatedText = \"\";\n      let latestObject = void 0;\n      await response.body.pipeThrough(new TextDecoderStream()).pipeTo(\n        new WritableStream({\n          write(chunk) {\n            accumulatedText += chunk;\n            const { value } = (0,_ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_2__.parsePartialJson)(accumulatedText);\n            const currentObject = value;\n            if (!(0,_ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_2__.isDeepEqualData)(latestObject, currentObject)) {\n              latestObject = currentObject;\n              mutate(currentObject);\n            }\n          },\n          close() {\n            setIsLoading(false);\n            abortControllerRef.current = null;\n            if (onFinish != null) {\n              const validationResult = (0,_ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_3__.safeValidateTypes)({\n                value: latestObject,\n                schema: (0,_ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_2__.asSchema)(schema)\n              });\n              onFinish(\n                validationResult.success ? { object: validationResult.value, error: void 0 } : { object: void 0, error: validationResult.error }\n              );\n            }\n          }\n        })\n      );\n    } catch (error2) {\n      if ((0,_ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_3__.isAbortError)(error2)) {\n        return;\n      }\n      if (onError && error2 instanceof Error) {\n        onError(error2);\n      }\n      setIsLoading(false);\n      setError(error2 instanceof Error ? error2 : new Error(String(error2)));\n    }\n  };\n  return {\n    setInput: submit,\n    // Deprecated\n    submit,\n    object: data,\n    error,\n    isLoading,\n    stop\n  };\n}\nvar experimental_useObject = useObject;\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/react/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/react/node_modules/@ai-sdk/provider-utils/dist/index.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/react/node_modules/@ai-sdk/provider-utils/dist/index.mjs ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asValidator: function() { return /* binding */ asValidator; },\n/* harmony export */   combineHeaders: function() { return /* binding */ combineHeaders; },\n/* harmony export */   convertAsyncGeneratorToReadableStream: function() { return /* binding */ convertAsyncGeneratorToReadableStream; },\n/* harmony export */   convertBase64ToUint8Array: function() { return /* binding */ convertBase64ToUint8Array; },\n/* harmony export */   convertUint8ArrayToBase64: function() { return /* binding */ convertUint8ArrayToBase64; },\n/* harmony export */   createEventSourceResponseHandler: function() { return /* binding */ createEventSourceResponseHandler; },\n/* harmony export */   createIdGenerator: function() { return /* binding */ createIdGenerator; },\n/* harmony export */   createJsonErrorResponseHandler: function() { return /* binding */ createJsonErrorResponseHandler; },\n/* harmony export */   createJsonResponseHandler: function() { return /* binding */ createJsonResponseHandler; },\n/* harmony export */   createJsonStreamResponseHandler: function() { return /* binding */ createJsonStreamResponseHandler; },\n/* harmony export */   extractResponseHeaders: function() { return /* binding */ extractResponseHeaders; },\n/* harmony export */   generateId: function() { return /* binding */ generateId; },\n/* harmony export */   getErrorMessage: function() { return /* binding */ getErrorMessage; },\n/* harmony export */   isAbortError: function() { return /* binding */ isAbortError; },\n/* harmony export */   isParsableJson: function() { return /* binding */ isParsableJson; },\n/* harmony export */   isParseableJson: function() { return /* binding */ isParseableJson; },\n/* harmony export */   isValidator: function() { return /* binding */ isValidator; },\n/* harmony export */   loadApiKey: function() { return /* binding */ loadApiKey; },\n/* harmony export */   loadOptionalSetting: function() { return /* binding */ loadOptionalSetting; },\n/* harmony export */   loadSetting: function() { return /* binding */ loadSetting; },\n/* harmony export */   parseJSON: function() { return /* binding */ parseJSON; },\n/* harmony export */   postJsonToApi: function() { return /* binding */ postJsonToApi; },\n/* harmony export */   postToApi: function() { return /* binding */ postToApi; },\n/* harmony export */   safeParseJSON: function() { return /* binding */ safeParseJSON; },\n/* harmony export */   safeValidateTypes: function() { return /* binding */ safeValidateTypes; },\n/* harmony export */   validateTypes: function() { return /* binding */ validateTypes; },\n/* harmony export */   validator: function() { return /* binding */ validator; },\n/* harmony export */   validatorSymbol: function() { return /* binding */ validatorSymbol; },\n/* harmony export */   withoutTrailingSlash: function() { return /* binding */ withoutTrailingSlash; },\n/* harmony export */   zodValidator: function() { return /* binding */ zodValidator; }\n/* harmony export */ });\n/* harmony import */ var nanoid_non_secure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nanoid/non-secure */ \"(app-pages-browser)/./node_modules/@ai-sdk/react/node_modules/nanoid/non-secure/index.js\");\n/* harmony import */ var _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ai-sdk/provider */ \"(app-pages-browser)/./node_modules/@ai-sdk/react/node_modules/@ai-sdk/provider/dist/index.mjs\");\n/* harmony import */ var secure_json_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! secure-json-parse */ \"(app-pages-browser)/./node_modules/secure-json-parse/index.js\");\n/* harmony import */ var eventsource_parser_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventsource-parser/stream */ \"(app-pages-browser)/./node_modules/eventsource-parser/dist/stream.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// src/combine-headers.ts\nfunction combineHeaders(...headers) {\n  return headers.reduce(\n    (combinedHeaders, currentHeaders) => ({\n      ...combinedHeaders,\n      ...currentHeaders != null ? currentHeaders : {}\n    }),\n    {}\n  );\n}\n\n// src/convert-async-generator-to-readable-stream.ts\nfunction convertAsyncGeneratorToReadableStream(stream) {\n  return new ReadableStream({\n    /**\n     * Called when the consumer wants to pull more data from the stream.\n     *\n     * @param {ReadableStreamDefaultController<T>} controller - The controller to enqueue data into the stream.\n     * @returns {Promise<void>}\n     */\n    async pull(controller) {\n      try {\n        const { value, done } = await stream.next();\n        if (done) {\n          controller.close();\n        } else {\n          controller.enqueue(value);\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    /**\n     * Called when the consumer cancels the stream.\n     */\n    cancel() {\n    }\n  });\n}\n\n// src/extract-response-headers.ts\nfunction extractResponseHeaders(response) {\n  const headers = {};\n  response.headers.forEach((value, key) => {\n    headers[key] = value;\n  });\n  return headers;\n}\n\n// src/generate-id.ts\n\nvar createIdGenerator = ({\n  prefix = \"\",\n  size: defaultSize = 7,\n  alphabet = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n} = {}) => {\n  const generator = (0,nanoid_non_secure__WEBPACK_IMPORTED_MODULE_0__.customAlphabet)(alphabet, defaultSize);\n  return (size) => `${prefix}${generator(size)}`;\n};\nvar generateId = createIdGenerator();\n\n// src/get-error-message.ts\nfunction getErrorMessage(error) {\n  if (error == null) {\n    return \"unknown error\";\n  }\n  if (typeof error === \"string\") {\n    return error;\n  }\n  if (error instanceof Error) {\n    return error.message;\n  }\n  return JSON.stringify(error);\n}\n\n// src/is-abort-error.ts\nfunction isAbortError(error) {\n  return error instanceof Error && (error.name === \"AbortError\" || error.name === \"TimeoutError\");\n}\n\n// src/load-api-key.ts\n\nfunction loadApiKey({\n  apiKey,\n  environmentVariableName,\n  apiKeyParameterName = \"apiKey\",\n  description\n}) {\n  if (typeof apiKey === \"string\") {\n    return apiKey;\n  }\n  if (apiKey != null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadAPIKeyError({\n      message: `${description} API key must be a string.`\n    });\n  }\n  if (typeof process === \"undefined\") {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter. Environment variables is not supported in this environment.`\n    });\n  }\n  apiKey = process.env[environmentVariableName];\n  if (apiKey == null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter or the ${environmentVariableName} environment variable.`\n    });\n  }\n  if (typeof apiKey !== \"string\") {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadAPIKeyError({\n      message: `${description} API key must be a string. The value of the ${environmentVariableName} environment variable is not a string.`\n    });\n  }\n  return apiKey;\n}\n\n// src/load-setting.ts\n\nfunction loadSetting({\n  settingValue,\n  environmentVariableName,\n  settingName,\n  description\n}) {\n  if (typeof settingValue === \"string\") {\n    return settingValue;\n  }\n  if (settingValue != null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadSettingError({\n      message: `${description} setting must be a string.`\n    });\n  }\n  if (typeof process === \"undefined\") {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadSettingError({\n      message: `${description} setting is missing. Pass it using the '${settingName}' parameter. Environment variables is not supported in this environment.`\n    });\n  }\n  settingValue = process.env[environmentVariableName];\n  if (settingValue == null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadSettingError({\n      message: `${description} setting is missing. Pass it using the '${settingName}' parameter or the ${environmentVariableName} environment variable.`\n    });\n  }\n  if (typeof settingValue !== \"string\") {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadSettingError({\n      message: `${description} setting must be a string. The value of the ${environmentVariableName} environment variable is not a string.`\n    });\n  }\n  return settingValue;\n}\n\n// src/load-optional-setting.ts\nfunction loadOptionalSetting({\n  settingValue,\n  environmentVariableName\n}) {\n  if (typeof settingValue === \"string\") {\n    return settingValue;\n  }\n  if (settingValue != null || typeof process === \"undefined\") {\n    return void 0;\n  }\n  settingValue = process.env[environmentVariableName];\n  if (settingValue == null || typeof settingValue !== \"string\") {\n    return void 0;\n  }\n  return settingValue;\n}\n\n// src/parse-json.ts\n\n\n\n// src/validate-types.ts\n\n\n// src/validator.ts\nvar validatorSymbol = Symbol.for(\"vercel.ai.validator\");\nfunction validator(validate) {\n  return { [validatorSymbol]: true, validate };\n}\nfunction isValidator(value) {\n  return typeof value === \"object\" && value !== null && validatorSymbol in value && value[validatorSymbol] === true && \"validate\" in value;\n}\nfunction asValidator(value) {\n  return isValidator(value) ? value : zodValidator(value);\n}\nfunction zodValidator(zodSchema) {\n  return validator((value) => {\n    const result = zodSchema.safeParse(value);\n    return result.success ? { success: true, value: result.data } : { success: false, error: result.error };\n  });\n}\n\n// src/validate-types.ts\nfunction validateTypes({\n  value,\n  schema: inputSchema\n}) {\n  const result = safeValidateTypes({ value, schema: inputSchema });\n  if (!result.success) {\n    throw _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.TypeValidationError.wrap({ value, cause: result.error });\n  }\n  return result.value;\n}\nfunction safeValidateTypes({\n  value,\n  schema\n}) {\n  const validator2 = asValidator(schema);\n  try {\n    if (validator2.validate == null) {\n      return { success: true, value };\n    }\n    const result = validator2.validate(value);\n    if (result.success) {\n      return result;\n    }\n    return {\n      success: false,\n      error: _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.TypeValidationError.wrap({ value, cause: result.error })\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.TypeValidationError.wrap({ value, cause: error })\n    };\n  }\n}\n\n// src/parse-json.ts\nfunction parseJSON({\n  text,\n  schema\n}) {\n  try {\n    const value = secure_json_parse__WEBPACK_IMPORTED_MODULE_2__.parse(text);\n    if (schema == null) {\n      return value;\n    }\n    return validateTypes({ value, schema });\n  } catch (error) {\n    if (_ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.JSONParseError.isJSONParseError(error) || _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.TypeValidationError.isTypeValidationError(error)) {\n      throw error;\n    }\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.JSONParseError({ text, cause: error });\n  }\n}\nfunction safeParseJSON({\n  text,\n  schema\n}) {\n  try {\n    const value = secure_json_parse__WEBPACK_IMPORTED_MODULE_2__.parse(text);\n    if (schema == null) {\n      return {\n        success: true,\n        value\n      };\n    }\n    return safeValidateTypes({ value, schema });\n  } catch (error) {\n    return {\n      success: false,\n      error: _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.JSONParseError.isJSONParseError(error) ? error : new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.JSONParseError({ text, cause: error })\n    };\n  }\n}\nfunction isParsableJson(input) {\n  try {\n    secure_json_parse__WEBPACK_IMPORTED_MODULE_2__.parse(input);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar isParseableJson = isParsableJson;\n\n// src/post-to-api.ts\n\n\n// src/remove-undefined-entries.ts\nfunction removeUndefinedEntries(record) {\n  return Object.fromEntries(\n    Object.entries(record).filter(([_key, value]) => value != null)\n  );\n}\n\n// src/post-to-api.ts\nvar getOriginalFetch = () => globalThis.fetch;\nvar postJsonToApi = async ({\n  url,\n  headers,\n  body,\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch\n}) => postToApi({\n  url,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    ...headers\n  },\n  body: {\n    content: JSON.stringify(body),\n    values: body\n  },\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch\n});\nvar postToApi = async ({\n  url,\n  headers = {},\n  body,\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch()\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: removeUndefinedEntries(headers),\n      body: body.content,\n      signal: abortSignal\n    });\n    const responseHeaders = extractResponseHeaders(response);\n    if (!response.ok) {\n      let errorInformation;\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: body.values\n        });\n      } catch (error) {\n        if (isAbortError(error) || _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError.isAPICallError(error)) {\n          throw error;\n        }\n        throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n          message: \"Failed to process error response\",\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: body.values\n        });\n      }\n      throw errorInformation.value;\n    }\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: body.values\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError.isAPICallError(error)) {\n          throw error;\n        }\n      }\n      throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n        message: \"Failed to process successful response\",\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: body.values\n      });\n    }\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error;\n    }\n    if (error instanceof TypeError && error.message === \"fetch failed\") {\n      const cause = error.cause;\n      if (cause != null) {\n        throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n          message: `Cannot connect to API: ${cause.message}`,\n          cause,\n          url,\n          requestBodyValues: body.values,\n          isRetryable: true\n          // retry when network error\n        });\n      }\n    }\n    throw error;\n  }\n};\n\n// src/response-handler.ts\n\n\nvar createJsonErrorResponseHandler = ({\n  errorSchema,\n  errorToMessage,\n  isRetryable\n}) => async ({ response, url, requestBodyValues }) => {\n  const responseBody = await response.text();\n  const responseHeaders = extractResponseHeaders(response);\n  if (responseBody.trim() === \"\") {\n    return {\n      responseHeaders,\n      value: new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n        message: response.statusText,\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        isRetryable: isRetryable == null ? void 0 : isRetryable(response)\n      })\n    };\n  }\n  try {\n    const parsedError = parseJSON({\n      text: responseBody,\n      schema: errorSchema\n    });\n    return {\n      responseHeaders,\n      value: new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n        message: errorToMessage(parsedError),\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        data: parsedError,\n        isRetryable: isRetryable == null ? void 0 : isRetryable(response, parsedError)\n      })\n    };\n  } catch (parseError) {\n    return {\n      responseHeaders,\n      value: new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n        message: response.statusText,\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        isRetryable: isRetryable == null ? void 0 : isRetryable(response)\n      })\n    };\n  }\n};\nvar createEventSourceResponseHandler = (chunkSchema) => async ({ response }) => {\n  const responseHeaders = extractResponseHeaders(response);\n  if (response.body == null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.EmptyResponseBodyError({});\n  }\n  return {\n    responseHeaders,\n    value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(new eventsource_parser_stream__WEBPACK_IMPORTED_MODULE_3__.EventSourceParserStream()).pipeThrough(\n      new TransformStream({\n        transform({ data }, controller) {\n          if (data === \"[DONE]\") {\n            return;\n          }\n          controller.enqueue(\n            safeParseJSON({\n              text: data,\n              schema: chunkSchema\n            })\n          );\n        }\n      })\n    )\n  };\n};\nvar createJsonStreamResponseHandler = (chunkSchema) => async ({ response }) => {\n  const responseHeaders = extractResponseHeaders(response);\n  if (response.body == null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.EmptyResponseBodyError({});\n  }\n  let buffer = \"\";\n  return {\n    responseHeaders,\n    value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(\n      new TransformStream({\n        transform(chunkText, controller) {\n          if (chunkText.endsWith(\"\\n\")) {\n            controller.enqueue(\n              safeParseJSON({\n                text: buffer + chunkText,\n                schema: chunkSchema\n              })\n            );\n            buffer = \"\";\n          } else {\n            buffer += chunkText;\n          }\n        }\n      })\n    )\n  };\n};\nvar createJsonResponseHandler = (responseSchema) => async ({ response, url, requestBodyValues }) => {\n  const responseBody = await response.text();\n  const parsedResult = safeParseJSON({\n    text: responseBody,\n    schema: responseSchema\n  });\n  const responseHeaders = extractResponseHeaders(response);\n  if (!parsedResult.success) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n      message: \"Invalid JSON response\",\n      cause: parsedResult.error,\n      statusCode: response.status,\n      responseHeaders,\n      responseBody,\n      url,\n      requestBodyValues\n    });\n  }\n  return {\n    responseHeaders,\n    value: parsedResult.value\n  };\n};\n\n// src/uint8-utils.ts\nvar { btoa, atob } = globalThis;\nfunction convertBase64ToUint8Array(base64String) {\n  const base64Url = base64String.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const latin1string = atob(base64Url);\n  return Uint8Array.from(latin1string, (byte) => byte.codePointAt(0));\n}\nfunction convertUint8ArrayToBase64(array) {\n  let latin1string = \"\";\n  for (let i = 0; i < array.length; i++) {\n    latin1string += String.fromCodePoint(array[i]);\n  }\n  return btoa(latin1string);\n}\n\n// src/without-trailing-slash.ts\nfunction withoutTrailingSlash(url) {\n  return url == null ? void 0 : url.replace(/\\/$/, \"\");\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/react/node_modules/@ai-sdk/provider-utils/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/react/node_modules/@ai-sdk/provider/dist/index.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ai-sdk/react/node_modules/@ai-sdk/provider/dist/index.mjs ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AISDKError: function() { return /* binding */ AISDKError; },\n/* harmony export */   APICallError: function() { return /* binding */ APICallError; },\n/* harmony export */   EmptyResponseBodyError: function() { return /* binding */ EmptyResponseBodyError; },\n/* harmony export */   InvalidPromptError: function() { return /* binding */ InvalidPromptError; },\n/* harmony export */   InvalidResponseDataError: function() { return /* binding */ InvalidResponseDataError; },\n/* harmony export */   JSONParseError: function() { return /* binding */ JSONParseError; },\n/* harmony export */   LoadAPIKeyError: function() { return /* binding */ LoadAPIKeyError; },\n/* harmony export */   LoadSettingError: function() { return /* binding */ LoadSettingError; },\n/* harmony export */   NoContentGeneratedError: function() { return /* binding */ NoContentGeneratedError; },\n/* harmony export */   NoSuchModelError: function() { return /* binding */ NoSuchModelError; },\n/* harmony export */   TooManyEmbeddingValuesForCallError: function() { return /* binding */ TooManyEmbeddingValuesForCallError; },\n/* harmony export */   TypeValidationError: function() { return /* binding */ TypeValidationError; },\n/* harmony export */   UnsupportedFunctionalityError: function() { return /* binding */ UnsupportedFunctionalityError; },\n/* harmony export */   getErrorMessage: function() { return /* binding */ getErrorMessage; },\n/* harmony export */   isJSONArray: function() { return /* binding */ isJSONArray; },\n/* harmony export */   isJSONObject: function() { return /* binding */ isJSONObject; },\n/* harmony export */   isJSONValue: function() { return /* binding */ isJSONValue; }\n/* harmony export */ });\n// src/errors/ai-sdk-error.ts\nvar marker = \"vercel.ai.error\";\nvar symbol = Symbol.for(marker);\nvar _a;\nvar _AISDKError = class _AISDKError extends Error {\n  /**\n   * Creates an AI SDK Error.\n   *\n   * @param {Object} params - The parameters for creating the error.\n   * @param {string} params.name - The name of the error.\n   * @param {string} params.message - The error message.\n   * @param {unknown} [params.cause] - The underlying cause of the error.\n   */\n  constructor({\n    name: name13,\n    message,\n    cause\n  }) {\n    super(message);\n    this[_a] = true;\n    this.name = name13;\n    this.cause = cause;\n  }\n  /**\n   * Checks if the given error is an AI SDK Error.\n   * @param {unknown} error - The error to check.\n   * @returns {boolean} True if the error is an AI SDK Error, false otherwise.\n   */\n  static isInstance(error) {\n    return _AISDKError.hasMarker(error, marker);\n  }\n  static hasMarker(error, marker14) {\n    const markerSymbol = Symbol.for(marker14);\n    return error != null && typeof error === \"object\" && markerSymbol in error && typeof error[markerSymbol] === \"boolean\" && error[markerSymbol] === true;\n  }\n  /**\n   * Returns a JSON representation of the error.\n   * @returns {Object} An object containing the error's name, message, and cause.\n   *\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message\n    };\n  }\n};\n_a = symbol;\nvar AISDKError = _AISDKError;\n\n// src/errors/api-call-error.ts\nvar name = \"AI_APICallError\";\nvar marker2 = `vercel.ai.error.${name}`;\nvar symbol2 = Symbol.for(marker2);\nvar _a2;\nvar APICallError = class extends AISDKError {\n  constructor({\n    message,\n    url,\n    requestBodyValues,\n    statusCode,\n    responseHeaders,\n    responseBody,\n    cause,\n    isRetryable = statusCode != null && (statusCode === 408 || // request timeout\n    statusCode === 409 || // conflict\n    statusCode === 429 || // too many requests\n    statusCode >= 500),\n    // server error\n    data\n  }) {\n    super({ name, message, cause });\n    this[_a2] = true;\n    this.url = url;\n    this.requestBodyValues = requestBodyValues;\n    this.statusCode = statusCode;\n    this.responseHeaders = responseHeaders;\n    this.responseBody = responseBody;\n    this.isRetryable = isRetryable;\n    this.data = data;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker2);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isAPICallError(error) {\n    return error instanceof Error && error.name === name && typeof error.url === \"string\" && typeof error.requestBodyValues === \"object\" && (error.statusCode == null || typeof error.statusCode === \"number\") && (error.responseHeaders == null || typeof error.responseHeaders === \"object\") && (error.responseBody == null || typeof error.responseBody === \"string\") && (error.cause == null || typeof error.cause === \"object\") && typeof error.isRetryable === \"boolean\" && (error.data == null || typeof error.data === \"object\");\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      url: this.url,\n      requestBodyValues: this.requestBodyValues,\n      statusCode: this.statusCode,\n      responseHeaders: this.responseHeaders,\n      responseBody: this.responseBody,\n      cause: this.cause,\n      isRetryable: this.isRetryable,\n      data: this.data\n    };\n  }\n};\n_a2 = symbol2;\n\n// src/errors/empty-response-body-error.ts\nvar name2 = \"AI_EmptyResponseBodyError\";\nvar marker3 = `vercel.ai.error.${name2}`;\nvar symbol3 = Symbol.for(marker3);\nvar _a3;\nvar EmptyResponseBodyError = class extends AISDKError {\n  // used in isInstance\n  constructor({ message = \"Empty response body\" } = {}) {\n    super({ name: name2, message });\n    this[_a3] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker3);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isEmptyResponseBodyError(error) {\n    return error instanceof Error && error.name === name2;\n  }\n};\n_a3 = symbol3;\n\n// src/errors/get-error-message.ts\nfunction getErrorMessage(error) {\n  if (error == null) {\n    return \"unknown error\";\n  }\n  if (typeof error === \"string\") {\n    return error;\n  }\n  if (error instanceof Error) {\n    return error.message;\n  }\n  return JSON.stringify(error);\n}\n\n// src/errors/invalid-prompt-error.ts\nvar name3 = \"AI_InvalidPromptError\";\nvar marker4 = `vercel.ai.error.${name3}`;\nvar symbol4 = Symbol.for(marker4);\nvar _a4;\nvar InvalidPromptError = class extends AISDKError {\n  constructor({\n    prompt: prompt2,\n    message,\n    cause\n  }) {\n    super({ name: name3, message: `Invalid prompt: ${message}`, cause });\n    this[_a4] = true;\n    this.prompt = prompt2;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker4);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidPromptError(error) {\n    return error instanceof Error && error.name === name3 && prompt != null;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      prompt: this.prompt\n    };\n  }\n};\n_a4 = symbol4;\n\n// src/errors/invalid-response-data-error.ts\nvar name4 = \"AI_InvalidResponseDataError\";\nvar marker5 = `vercel.ai.error.${name4}`;\nvar symbol5 = Symbol.for(marker5);\nvar _a5;\nvar InvalidResponseDataError = class extends AISDKError {\n  constructor({\n    data,\n    message = `Invalid response data: ${JSON.stringify(data)}.`\n  }) {\n    super({ name: name4, message });\n    this[_a5] = true;\n    this.data = data;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker5);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidResponseDataError(error) {\n    return error instanceof Error && error.name === name4 && error.data != null;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      data: this.data\n    };\n  }\n};\n_a5 = symbol5;\n\n// src/errors/json-parse-error.ts\nvar name5 = \"AI_JSONParseError\";\nvar marker6 = `vercel.ai.error.${name5}`;\nvar symbol6 = Symbol.for(marker6);\nvar _a6;\nvar JSONParseError = class extends AISDKError {\n  constructor({ text, cause }) {\n    super({\n      name: name5,\n      message: `JSON parsing failed: Text: ${text}.\nError message: ${getErrorMessage(cause)}`,\n      cause\n    });\n    this[_a6] = true;\n    this.text = text;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker6);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isJSONParseError(error) {\n    return error instanceof Error && error.name === name5 && \"text\" in error && typeof error.text === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n      valueText: this.text\n    };\n  }\n};\n_a6 = symbol6;\n\n// src/errors/load-api-key-error.ts\nvar name6 = \"AI_LoadAPIKeyError\";\nvar marker7 = `vercel.ai.error.${name6}`;\nvar symbol7 = Symbol.for(marker7);\nvar _a7;\nvar LoadAPIKeyError = class extends AISDKError {\n  // used in isInstance\n  constructor({ message }) {\n    super({ name: name6, message });\n    this[_a7] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker7);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isLoadAPIKeyError(error) {\n    return error instanceof Error && error.name === name6;\n  }\n};\n_a7 = symbol7;\n\n// src/errors/load-setting-error.ts\nvar name7 = \"AI_LoadSettingError\";\nvar marker8 = `vercel.ai.error.${name7}`;\nvar symbol8 = Symbol.for(marker8);\nvar _a8;\nvar LoadSettingError = class extends AISDKError {\n  // used in isInstance\n  constructor({ message }) {\n    super({ name: name7, message });\n    this[_a8] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker8);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isLoadSettingError(error) {\n    return error instanceof Error && error.name === name7;\n  }\n};\n_a8 = symbol8;\n\n// src/errors/no-content-generated-error.ts\nvar name8 = \"AI_NoContentGeneratedError\";\nvar marker9 = `vercel.ai.error.${name8}`;\nvar symbol9 = Symbol.for(marker9);\nvar _a9;\nvar NoContentGeneratedError = class extends AISDKError {\n  // used in isInstance\n  constructor({\n    message = \"No content generated.\"\n  } = {}) {\n    super({ name: name8, message });\n    this[_a9] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker9);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isNoContentGeneratedError(error) {\n    return error instanceof Error && error.name === name8;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      cause: this.cause,\n      message: this.message,\n      stack: this.stack\n    };\n  }\n};\n_a9 = symbol9;\n\n// src/errors/no-such-model-error.ts\nvar name9 = \"AI_NoSuchModelError\";\nvar marker10 = `vercel.ai.error.${name9}`;\nvar symbol10 = Symbol.for(marker10);\nvar _a10;\nvar NoSuchModelError = class extends AISDKError {\n  constructor({\n    errorName = name9,\n    modelId,\n    modelType,\n    message = `No such ${modelType}: ${modelId}`\n  }) {\n    super({ name: errorName, message });\n    this[_a10] = true;\n    this.modelId = modelId;\n    this.modelType = modelType;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker10);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isNoSuchModelError(error) {\n    return error instanceof Error && error.name === name9 && typeof error.modelId === \"string\" && typeof error.modelType === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      modelId: this.modelId,\n      modelType: this.modelType\n    };\n  }\n};\n_a10 = symbol10;\n\n// src/errors/too-many-embedding-values-for-call-error.ts\nvar name10 = \"AI_TooManyEmbeddingValuesForCallError\";\nvar marker11 = `vercel.ai.error.${name10}`;\nvar symbol11 = Symbol.for(marker11);\nvar _a11;\nvar TooManyEmbeddingValuesForCallError = class extends AISDKError {\n  constructor(options) {\n    super({\n      name: name10,\n      message: `Too many values for a single embedding call. The ${options.provider} model \"${options.modelId}\" can only embed up to ${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`\n    });\n    this[_a11] = true;\n    this.provider = options.provider;\n    this.modelId = options.modelId;\n    this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;\n    this.values = options.values;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker11);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isTooManyEmbeddingValuesForCallError(error) {\n    return error instanceof Error && error.name === name10 && \"provider\" in error && typeof error.provider === \"string\" && \"modelId\" in error && typeof error.modelId === \"string\" && \"maxEmbeddingsPerCall\" in error && typeof error.maxEmbeddingsPerCall === \"number\" && \"values\" in error && Array.isArray(error.values);\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      provider: this.provider,\n      modelId: this.modelId,\n      maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n      values: this.values\n    };\n  }\n};\n_a11 = symbol11;\n\n// src/errors/type-validation-error.ts\nvar name11 = \"AI_TypeValidationError\";\nvar marker12 = `vercel.ai.error.${name11}`;\nvar symbol12 = Symbol.for(marker12);\nvar _a12;\nvar _TypeValidationError = class _TypeValidationError extends AISDKError {\n  constructor({ value, cause }) {\n    super({\n      name: name11,\n      message: `Type validation failed: Value: ${JSON.stringify(value)}.\nError message: ${getErrorMessage(cause)}`,\n      cause\n    });\n    this[_a12] = true;\n    this.value = value;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker12);\n  }\n  /**\n   * Wraps an error into a TypeValidationError.\n   * If the cause is already a TypeValidationError with the same value, it returns the cause.\n   * Otherwise, it creates a new TypeValidationError.\n   *\n   * @param {Object} params - The parameters for wrapping the error.\n   * @param {unknown} params.value - The value that failed validation.\n   * @param {unknown} params.cause - The original error or cause of the validation failure.\n   * @returns {TypeValidationError} A TypeValidationError instance.\n   */\n  static wrap({\n    value,\n    cause\n  }) {\n    return _TypeValidationError.isInstance(cause) && cause.value === value ? cause : new _TypeValidationError({ value, cause });\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isTypeValidationError(error) {\n    return error instanceof Error && error.name === name11;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n      value: this.value\n    };\n  }\n};\n_a12 = symbol12;\nvar TypeValidationError = _TypeValidationError;\n\n// src/errors/unsupported-functionality-error.ts\nvar name12 = \"AI_UnsupportedFunctionalityError\";\nvar marker13 = `vercel.ai.error.${name12}`;\nvar symbol13 = Symbol.for(marker13);\nvar _a13;\nvar UnsupportedFunctionalityError = class extends AISDKError {\n  constructor({ functionality }) {\n    super({\n      name: name12,\n      message: `'${functionality}' functionality not supported.`\n    });\n    this[_a13] = true;\n    this.functionality = functionality;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker13);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isUnsupportedFunctionalityError(error) {\n    return error instanceof Error && error.name === name12 && typeof error.functionality === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      functionality: this.functionality\n    };\n  }\n};\n_a13 = symbol13;\n\n// src/json-value/is-json.ts\nfunction isJSONValue(value) {\n  if (value === null || typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n    return true;\n  }\n  if (Array.isArray(value)) {\n    return value.every(isJSONValue);\n  }\n  if (typeof value === \"object\") {\n    return Object.entries(value).every(\n      ([key, val]) => typeof key === \"string\" && isJSONValue(val)\n    );\n  }\n  return false;\n}\nfunction isJSONArray(value) {\n  return Array.isArray(value) && value.every(isJSONValue);\n}\nfunction isJSONObject(value) {\n  return value != null && typeof value === \"object\" && Object.entries(value).every(\n    ([key, val]) => typeof key === \"string\" && isJSONValue(val)\n  );\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/react/node_modules/@ai-sdk/provider/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/react/node_modules/nanoid/non-secure/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ai-sdk/react/node_modules/nanoid/non-secure/index.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   customAlphabet: function() { return /* binding */ customAlphabet; },\n/* harmony export */   nanoid: function() { return /* binding */ nanoid; }\n/* harmony export */ });\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3JlYWN0L25vZGVfbW9kdWxlcy9uYW5vaWQvbm9uLXNlY3VyZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvcmVhY3Qvbm9kZV9tb2R1bGVzL25hbm9pZC9ub24tc2VjdXJlL2luZGV4LmpzP2JmOTciXSwic291cmNlc0NvbnRlbnQiOlsibGV0IHVybEFscGhhYmV0ID1cbiAgJ3VzZWFuZG9tLTI2VDE5ODM0MFBYNzVweEpBQ0tWRVJZTUlOREJVU0hXT0xGX0dRWmJmZ2hqa2xxdnd5enJpY3QnXG5sZXQgY3VzdG9tQWxwaGFiZXQgPSAoYWxwaGFiZXQsIGRlZmF1bHRTaXplID0gMjEpID0+IHtcbiAgcmV0dXJuIChzaXplID0gZGVmYXVsdFNpemUpID0+IHtcbiAgICBsZXQgaWQgPSAnJ1xuICAgIGxldCBpID0gc2l6ZVxuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgIGlkICs9IGFscGhhYmV0WyhNYXRoLnJhbmRvbSgpICogYWxwaGFiZXQubGVuZ3RoKSB8IDBdXG4gICAgfVxuICAgIHJldHVybiBpZFxuICB9XG59XG5sZXQgbmFub2lkID0gKHNpemUgPSAyMSkgPT4ge1xuICBsZXQgaWQgPSAnJ1xuICBsZXQgaSA9IHNpemVcbiAgd2hpbGUgKGktLSkge1xuICAgIGlkICs9IHVybEFscGhhYmV0WyhNYXRoLnJhbmRvbSgpICogNjQpIHwgMF1cbiAgfVxuICByZXR1cm4gaWRcbn1cbmV4cG9ydCB7IG5hbm9pZCwgY3VzdG9tQWxwaGFiZXQgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/react/node_modules/nanoid/non-secure/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/dist/index.mjs ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asSchema: function() { return /* binding */ asSchema; },\n/* harmony export */   callChatApi: function() { return /* binding */ callChatApi; },\n/* harmony export */   callCompletionApi: function() { return /* binding */ callCompletionApi; },\n/* harmony export */   createChunkDecoder: function() { return /* binding */ createChunkDecoder; },\n/* harmony export */   formatStreamPart: function() { return /* binding */ formatStreamPart; },\n/* harmony export */   generateId: function() { return /* reexport safe */ _ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_1__.generateId; },\n/* harmony export */   getTextFromDataUrl: function() { return /* binding */ getTextFromDataUrl; },\n/* harmony export */   isDeepEqualData: function() { return /* binding */ isDeepEqualData; },\n/* harmony export */   jsonSchema: function() { return /* binding */ jsonSchema; },\n/* harmony export */   parsePartialJson: function() { return /* binding */ parsePartialJson; },\n/* harmony export */   parseStreamPart: function() { return /* binding */ parseStreamPart; },\n/* harmony export */   processChatStream: function() { return /* binding */ processChatStream; },\n/* harmony export */   processDataProtocolResponse: function() { return /* binding */ processDataProtocolResponse; },\n/* harmony export */   readDataStream: function() { return /* binding */ readDataStream; },\n/* harmony export */   zodSchema: function() { return /* binding */ zodSchema; }\n/* harmony export */ });\n/* harmony import */ var _ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ai-sdk/provider-utils */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/dist/index.mjs\");\n/* harmony import */ var secure_json_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! secure-json-parse */ \"(app-pages-browser)/./node_modules/secure-json-parse/index.js\");\n/* harmony import */ var zod_to_json_schema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod-to-json-schema */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/index.js\");\n// src/index.ts\n\n\n// src/process-data-protocol-response.ts\n\n\n// src/parse-partial-json.ts\n\n\n// src/fix-json.ts\nfunction fixJson(input) {\n  const stack = [\"ROOT\"];\n  let lastValidIndex = -1;\n  let literalStart = null;\n  function processValueStart(char, i, swapState) {\n    {\n      switch (char) {\n        case '\"': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_STRING\");\n          break;\n        }\n        case \"f\":\n        case \"t\":\n        case \"n\": {\n          lastValidIndex = i;\n          literalStart = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_LITERAL\");\n          break;\n        }\n        case \"-\": {\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_NUMBER\");\n          break;\n        }\n        case \"0\":\n        case \"1\":\n        case \"2\":\n        case \"3\":\n        case \"4\":\n        case \"5\":\n        case \"6\":\n        case \"7\":\n        case \"8\":\n        case \"9\": {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_NUMBER\");\n          break;\n        }\n        case \"{\": {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_OBJECT_START\");\n          break;\n        }\n        case \"[\": {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_ARRAY_START\");\n          break;\n        }\n      }\n    }\n  }\n  function processAfterObjectValue(char, i) {\n    switch (char) {\n      case \",\": {\n        stack.pop();\n        stack.push(\"INSIDE_OBJECT_AFTER_COMMA\");\n        break;\n      }\n      case \"}\": {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n  function processAfterArrayValue(char, i) {\n    switch (char) {\n      case \",\": {\n        stack.pop();\n        stack.push(\"INSIDE_ARRAY_AFTER_COMMA\");\n        break;\n      }\n      case \"]\": {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n  for (let i = 0; i < input.length; i++) {\n    const char = input[i];\n    const currentState = stack[stack.length - 1];\n    switch (currentState) {\n      case \"ROOT\":\n        processValueStart(char, i, \"FINISH\");\n        break;\n      case \"INSIDE_OBJECT_START\": {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push(\"INSIDE_OBJECT_KEY\");\n            break;\n          }\n          case \"}\": {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_OBJECT_AFTER_COMMA\": {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push(\"INSIDE_OBJECT_KEY\");\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_OBJECT_KEY\": {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push(\"INSIDE_OBJECT_AFTER_KEY\");\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_OBJECT_AFTER_KEY\": {\n        switch (char) {\n          case \":\": {\n            stack.pop();\n            stack.push(\"INSIDE_OBJECT_BEFORE_VALUE\");\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_OBJECT_BEFORE_VALUE\": {\n        processValueStart(char, i, \"INSIDE_OBJECT_AFTER_VALUE\");\n        break;\n      }\n      case \"INSIDE_OBJECT_AFTER_VALUE\": {\n        processAfterObjectValue(char, i);\n        break;\n      }\n      case \"INSIDE_STRING\": {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            lastValidIndex = i;\n            break;\n          }\n          case \"\\\\\": {\n            stack.push(\"INSIDE_STRING_ESCAPE\");\n            break;\n          }\n          default: {\n            lastValidIndex = i;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_ARRAY_START\": {\n        switch (char) {\n          case \"]\": {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n          default: {\n            lastValidIndex = i;\n            processValueStart(char, i, \"INSIDE_ARRAY_AFTER_VALUE\");\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_ARRAY_AFTER_VALUE\": {\n        switch (char) {\n          case \",\": {\n            stack.pop();\n            stack.push(\"INSIDE_ARRAY_AFTER_COMMA\");\n            break;\n          }\n          case \"]\": {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n          default: {\n            lastValidIndex = i;\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_ARRAY_AFTER_COMMA\": {\n        processValueStart(char, i, \"INSIDE_ARRAY_AFTER_VALUE\");\n        break;\n      }\n      case \"INSIDE_STRING_ESCAPE\": {\n        stack.pop();\n        lastValidIndex = i;\n        break;\n      }\n      case \"INSIDE_NUMBER\": {\n        switch (char) {\n          case \"0\":\n          case \"1\":\n          case \"2\":\n          case \"3\":\n          case \"4\":\n          case \"5\":\n          case \"6\":\n          case \"7\":\n          case \"8\":\n          case \"9\": {\n            lastValidIndex = i;\n            break;\n          }\n          case \"e\":\n          case \"E\":\n          case \"-\":\n          case \".\": {\n            break;\n          }\n          case \",\": {\n            stack.pop();\n            if (stack[stack.length - 1] === \"INSIDE_ARRAY_AFTER_VALUE\") {\n              processAfterArrayValue(char, i);\n            }\n            if (stack[stack.length - 1] === \"INSIDE_OBJECT_AFTER_VALUE\") {\n              processAfterObjectValue(char, i);\n            }\n            break;\n          }\n          case \"}\": {\n            stack.pop();\n            if (stack[stack.length - 1] === \"INSIDE_OBJECT_AFTER_VALUE\") {\n              processAfterObjectValue(char, i);\n            }\n            break;\n          }\n          case \"]\": {\n            stack.pop();\n            if (stack[stack.length - 1] === \"INSIDE_ARRAY_AFTER_VALUE\") {\n              processAfterArrayValue(char, i);\n            }\n            break;\n          }\n          default: {\n            stack.pop();\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_LITERAL\": {\n        const partialLiteral = input.substring(literalStart, i + 1);\n        if (!\"false\".startsWith(partialLiteral) && !\"true\".startsWith(partialLiteral) && !\"null\".startsWith(partialLiteral)) {\n          stack.pop();\n          if (stack[stack.length - 1] === \"INSIDE_OBJECT_AFTER_VALUE\") {\n            processAfterObjectValue(char, i);\n          } else if (stack[stack.length - 1] === \"INSIDE_ARRAY_AFTER_VALUE\") {\n            processAfterArrayValue(char, i);\n          }\n        } else {\n          lastValidIndex = i;\n        }\n        break;\n      }\n    }\n  }\n  let result = input.slice(0, lastValidIndex + 1);\n  for (let i = stack.length - 1; i >= 0; i--) {\n    const state = stack[i];\n    switch (state) {\n      case \"INSIDE_STRING\": {\n        result += '\"';\n        break;\n      }\n      case \"INSIDE_OBJECT_KEY\":\n      case \"INSIDE_OBJECT_AFTER_KEY\":\n      case \"INSIDE_OBJECT_AFTER_COMMA\":\n      case \"INSIDE_OBJECT_START\":\n      case \"INSIDE_OBJECT_BEFORE_VALUE\":\n      case \"INSIDE_OBJECT_AFTER_VALUE\": {\n        result += \"}\";\n        break;\n      }\n      case \"INSIDE_ARRAY_START\":\n      case \"INSIDE_ARRAY_AFTER_COMMA\":\n      case \"INSIDE_ARRAY_AFTER_VALUE\": {\n        result += \"]\";\n        break;\n      }\n      case \"INSIDE_LITERAL\": {\n        const partialLiteral = input.substring(literalStart, input.length);\n        if (\"true\".startsWith(partialLiteral)) {\n          result += \"true\".slice(partialLiteral.length);\n        } else if (\"false\".startsWith(partialLiteral)) {\n          result += \"false\".slice(partialLiteral.length);\n        } else if (\"null\".startsWith(partialLiteral)) {\n          result += \"null\".slice(partialLiteral.length);\n        }\n      }\n    }\n  }\n  return result;\n}\n\n// src/parse-partial-json.ts\nfunction parsePartialJson(jsonText) {\n  if (jsonText === void 0) {\n    return { value: void 0, state: \"undefined-input\" };\n  }\n  try {\n    return {\n      value: secure_json_parse__WEBPACK_IMPORTED_MODULE_0__.parse(jsonText),\n      state: \"successful-parse\"\n    };\n  } catch (ignored) {\n    try {\n      return {\n        value: secure_json_parse__WEBPACK_IMPORTED_MODULE_0__.parse(fixJson(jsonText)),\n        state: \"repaired-parse\"\n      };\n    } catch (ignored2) {\n    }\n  }\n  return { value: void 0, state: \"failed-parse\" };\n}\n\n// src/stream-parts.ts\nvar textStreamPart = {\n  code: \"0\",\n  name: \"text\",\n  parse: (value) => {\n    if (typeof value !== \"string\") {\n      throw new Error('\"text\" parts expect a string value.');\n    }\n    return { type: \"text\", value };\n  }\n};\nvar functionCallStreamPart = {\n  code: \"1\",\n  name: \"function_call\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"function_call\" in value) || typeof value.function_call !== \"object\" || value.function_call == null || !(\"name\" in value.function_call) || !(\"arguments\" in value.function_call) || typeof value.function_call.name !== \"string\" || typeof value.function_call.arguments !== \"string\") {\n      throw new Error(\n        '\"function_call\" parts expect an object with a \"function_call\" property.'\n      );\n    }\n    return {\n      type: \"function_call\",\n      value\n    };\n  }\n};\nvar dataStreamPart = {\n  code: \"2\",\n  name: \"data\",\n  parse: (value) => {\n    if (!Array.isArray(value)) {\n      throw new Error('\"data\" parts expect an array value.');\n    }\n    return { type: \"data\", value };\n  }\n};\nvar errorStreamPart = {\n  code: \"3\",\n  name: \"error\",\n  parse: (value) => {\n    if (typeof value !== \"string\") {\n      throw new Error('\"error\" parts expect a string value.');\n    }\n    return { type: \"error\", value };\n  }\n};\nvar assistantMessageStreamPart = {\n  code: \"4\",\n  name: \"assistant_message\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"id\" in value) || !(\"role\" in value) || !(\"content\" in value) || typeof value.id !== \"string\" || typeof value.role !== \"string\" || value.role !== \"assistant\" || !Array.isArray(value.content) || !value.content.every(\n      (item) => item != null && typeof item === \"object\" && \"type\" in item && item.type === \"text\" && \"text\" in item && item.text != null && typeof item.text === \"object\" && \"value\" in item.text && typeof item.text.value === \"string\"\n    )) {\n      throw new Error(\n        '\"assistant_message\" parts expect an object with an \"id\", \"role\", and \"content\" property.'\n      );\n    }\n    return {\n      type: \"assistant_message\",\n      value\n    };\n  }\n};\nvar assistantControlDataStreamPart = {\n  code: \"5\",\n  name: \"assistant_control_data\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"threadId\" in value) || !(\"messageId\" in value) || typeof value.threadId !== \"string\" || typeof value.messageId !== \"string\") {\n      throw new Error(\n        '\"assistant_control_data\" parts expect an object with a \"threadId\" and \"messageId\" property.'\n      );\n    }\n    return {\n      type: \"assistant_control_data\",\n      value: {\n        threadId: value.threadId,\n        messageId: value.messageId\n      }\n    };\n  }\n};\nvar dataMessageStreamPart = {\n  code: \"6\",\n  name: \"data_message\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"role\" in value) || !(\"data\" in value) || typeof value.role !== \"string\" || value.role !== \"data\") {\n      throw new Error(\n        '\"data_message\" parts expect an object with a \"role\" and \"data\" property.'\n      );\n    }\n    return {\n      type: \"data_message\",\n      value\n    };\n  }\n};\nvar toolCallsStreamPart = {\n  code: \"7\",\n  name: \"tool_calls\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"tool_calls\" in value) || typeof value.tool_calls !== \"object\" || value.tool_calls == null || !Array.isArray(value.tool_calls) || value.tool_calls.some(\n      (tc) => tc == null || typeof tc !== \"object\" || !(\"id\" in tc) || typeof tc.id !== \"string\" || !(\"type\" in tc) || typeof tc.type !== \"string\" || !(\"function\" in tc) || tc.function == null || typeof tc.function !== \"object\" || !(\"arguments\" in tc.function) || typeof tc.function.name !== \"string\" || typeof tc.function.arguments !== \"string\"\n    )) {\n      throw new Error(\n        '\"tool_calls\" parts expect an object with a ToolCallPayload.'\n      );\n    }\n    return {\n      type: \"tool_calls\",\n      value\n    };\n  }\n};\nvar messageAnnotationsStreamPart = {\n  code: \"8\",\n  name: \"message_annotations\",\n  parse: (value) => {\n    if (!Array.isArray(value)) {\n      throw new Error('\"message_annotations\" parts expect an array value.');\n    }\n    return { type: \"message_annotations\", value };\n  }\n};\nvar toolCallStreamPart = {\n  code: \"9\",\n  name: \"tool_call\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"toolCallId\" in value) || typeof value.toolCallId !== \"string\" || !(\"toolName\" in value) || typeof value.toolName !== \"string\" || !(\"args\" in value) || typeof value.args !== \"object\") {\n      throw new Error(\n        '\"tool_call\" parts expect an object with a \"toolCallId\", \"toolName\", and \"args\" property.'\n      );\n    }\n    return {\n      type: \"tool_call\",\n      value\n    };\n  }\n};\nvar toolResultStreamPart = {\n  code: \"a\",\n  name: \"tool_result\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"toolCallId\" in value) || typeof value.toolCallId !== \"string\" || !(\"result\" in value)) {\n      throw new Error(\n        '\"tool_result\" parts expect an object with a \"toolCallId\" and a \"result\" property.'\n      );\n    }\n    return {\n      type: \"tool_result\",\n      value\n    };\n  }\n};\nvar toolCallStreamingStartStreamPart = {\n  code: \"b\",\n  name: \"tool_call_streaming_start\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"toolCallId\" in value) || typeof value.toolCallId !== \"string\" || !(\"toolName\" in value) || typeof value.toolName !== \"string\") {\n      throw new Error(\n        '\"tool_call_streaming_start\" parts expect an object with a \"toolCallId\" and \"toolName\" property.'\n      );\n    }\n    return {\n      type: \"tool_call_streaming_start\",\n      value\n    };\n  }\n};\nvar toolCallDeltaStreamPart = {\n  code: \"c\",\n  name: \"tool_call_delta\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"toolCallId\" in value) || typeof value.toolCallId !== \"string\" || !(\"argsTextDelta\" in value) || typeof value.argsTextDelta !== \"string\") {\n      throw new Error(\n        '\"tool_call_delta\" parts expect an object with a \"toolCallId\" and \"argsTextDelta\" property.'\n      );\n    }\n    return {\n      type: \"tool_call_delta\",\n      value\n    };\n  }\n};\nvar finishMessageStreamPart = {\n  code: \"d\",\n  name: \"finish_message\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"finishReason\" in value) || typeof value.finishReason !== \"string\") {\n      throw new Error(\n        '\"finish_message\" parts expect an object with a \"finishReason\" property.'\n      );\n    }\n    const result = {\n      finishReason: value.finishReason\n    };\n    if (\"usage\" in value && value.usage != null && typeof value.usage === \"object\" && \"promptTokens\" in value.usage && \"completionTokens\" in value.usage) {\n      result.usage = {\n        promptTokens: typeof value.usage.promptTokens === \"number\" ? value.usage.promptTokens : Number.NaN,\n        completionTokens: typeof value.usage.completionTokens === \"number\" ? value.usage.completionTokens : Number.NaN\n      };\n    }\n    return {\n      type: \"finish_message\",\n      value: result\n    };\n  }\n};\nvar finishStepStreamPart = {\n  code: \"e\",\n  name: \"finish_step\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"finishReason\" in value) || typeof value.finishReason !== \"string\") {\n      throw new Error(\n        '\"finish_step\" parts expect an object with a \"finishReason\" property.'\n      );\n    }\n    const result = {\n      finishReason: value.finishReason,\n      isContinued: false\n    };\n    if (\"usage\" in value && value.usage != null && typeof value.usage === \"object\" && \"promptTokens\" in value.usage && \"completionTokens\" in value.usage) {\n      result.usage = {\n        promptTokens: typeof value.usage.promptTokens === \"number\" ? value.usage.promptTokens : Number.NaN,\n        completionTokens: typeof value.usage.completionTokens === \"number\" ? value.usage.completionTokens : Number.NaN\n      };\n    }\n    if (\"isContinued\" in value && typeof value.isContinued === \"boolean\") {\n      result.isContinued = value.isContinued;\n    }\n    return {\n      type: \"finish_step\",\n      value: result\n    };\n  }\n};\nvar streamParts = [\n  textStreamPart,\n  functionCallStreamPart,\n  dataStreamPart,\n  errorStreamPart,\n  assistantMessageStreamPart,\n  assistantControlDataStreamPart,\n  dataMessageStreamPart,\n  toolCallsStreamPart,\n  messageAnnotationsStreamPart,\n  toolCallStreamPart,\n  toolResultStreamPart,\n  toolCallStreamingStartStreamPart,\n  toolCallDeltaStreamPart,\n  finishMessageStreamPart,\n  finishStepStreamPart\n];\nvar streamPartsByCode = {\n  [textStreamPart.code]: textStreamPart,\n  [functionCallStreamPart.code]: functionCallStreamPart,\n  [dataStreamPart.code]: dataStreamPart,\n  [errorStreamPart.code]: errorStreamPart,\n  [assistantMessageStreamPart.code]: assistantMessageStreamPart,\n  [assistantControlDataStreamPart.code]: assistantControlDataStreamPart,\n  [dataMessageStreamPart.code]: dataMessageStreamPart,\n  [toolCallsStreamPart.code]: toolCallsStreamPart,\n  [messageAnnotationsStreamPart.code]: messageAnnotationsStreamPart,\n  [toolCallStreamPart.code]: toolCallStreamPart,\n  [toolResultStreamPart.code]: toolResultStreamPart,\n  [toolCallStreamingStartStreamPart.code]: toolCallStreamingStartStreamPart,\n  [toolCallDeltaStreamPart.code]: toolCallDeltaStreamPart,\n  [finishMessageStreamPart.code]: finishMessageStreamPart,\n  [finishStepStreamPart.code]: finishStepStreamPart\n};\nvar StreamStringPrefixes = {\n  [textStreamPart.name]: textStreamPart.code,\n  [functionCallStreamPart.name]: functionCallStreamPart.code,\n  [dataStreamPart.name]: dataStreamPart.code,\n  [errorStreamPart.name]: errorStreamPart.code,\n  [assistantMessageStreamPart.name]: assistantMessageStreamPart.code,\n  [assistantControlDataStreamPart.name]: assistantControlDataStreamPart.code,\n  [dataMessageStreamPart.name]: dataMessageStreamPart.code,\n  [toolCallsStreamPart.name]: toolCallsStreamPart.code,\n  [messageAnnotationsStreamPart.name]: messageAnnotationsStreamPart.code,\n  [toolCallStreamPart.name]: toolCallStreamPart.code,\n  [toolResultStreamPart.name]: toolResultStreamPart.code,\n  [toolCallStreamingStartStreamPart.name]: toolCallStreamingStartStreamPart.code,\n  [toolCallDeltaStreamPart.name]: toolCallDeltaStreamPart.code,\n  [finishMessageStreamPart.name]: finishMessageStreamPart.code,\n  [finishStepStreamPart.name]: finishStepStreamPart.code\n};\nvar validCodes = streamParts.map((part) => part.code);\nvar parseStreamPart = (line) => {\n  const firstSeparatorIndex = line.indexOf(\":\");\n  if (firstSeparatorIndex === -1) {\n    throw new Error(\"Failed to parse stream string. No separator found.\");\n  }\n  const prefix = line.slice(0, firstSeparatorIndex);\n  if (!validCodes.includes(prefix)) {\n    throw new Error(`Failed to parse stream string. Invalid code ${prefix}.`);\n  }\n  const code = prefix;\n  const textValue = line.slice(firstSeparatorIndex + 1);\n  const jsonValue = JSON.parse(textValue);\n  return streamPartsByCode[code].parse(jsonValue);\n};\nfunction formatStreamPart(type, value) {\n  const streamPart = streamParts.find((part) => part.name === type);\n  if (!streamPart) {\n    throw new Error(`Invalid stream part type: ${type}`);\n  }\n  return `${streamPart.code}:${JSON.stringify(value)}\n`;\n}\n\n// src/read-data-stream.ts\nvar NEWLINE = \"\\n\".charCodeAt(0);\nfunction concatChunks(chunks, totalLength) {\n  const concatenatedChunks = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const chunk of chunks) {\n    concatenatedChunks.set(chunk, offset);\n    offset += chunk.length;\n  }\n  chunks.length = 0;\n  return concatenatedChunks;\n}\nasync function* readDataStream(reader, {\n  isAborted\n} = {}) {\n  const decoder = new TextDecoder();\n  const chunks = [];\n  let totalLength = 0;\n  while (true) {\n    const { value } = await reader.read();\n    if (value) {\n      chunks.push(value);\n      totalLength += value.length;\n      if (value[value.length - 1] !== NEWLINE) {\n        continue;\n      }\n    }\n    if (chunks.length === 0) {\n      break;\n    }\n    const concatenatedChunks = concatChunks(chunks, totalLength);\n    totalLength = 0;\n    const streamParts2 = decoder.decode(concatenatedChunks, { stream: true }).split(\"\\n\").filter((line) => line !== \"\").map(parseStreamPart);\n    for (const streamPart of streamParts2) {\n      yield streamPart;\n    }\n    if (isAborted == null ? void 0 : isAborted()) {\n      reader.cancel();\n      break;\n    }\n  }\n}\n\n// src/process-data-protocol-response.ts\nfunction assignAnnotationsToMessage(message, annotations) {\n  if (!message || !annotations || !annotations.length)\n    return message;\n  return { ...message, annotations: [...annotations] };\n}\nasync function processDataProtocolResponse({\n  reader,\n  abortControllerRef,\n  update,\n  onToolCall,\n  onFinish,\n  generateId: generateId2 = _ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_1__.generateId,\n  getCurrentDate = () => /* @__PURE__ */ new Date()\n}) {\n  var _a;\n  const createdAt = getCurrentDate();\n  let prefixMap = {};\n  let nextPrefixMap = void 0;\n  const previousMessages = [];\n  const data = [];\n  let message_annotations = void 0;\n  const partialToolCalls = {};\n  let usage = {\n    completionTokens: NaN,\n    promptTokens: NaN,\n    totalTokens: NaN\n  };\n  let finishReason = \"unknown\";\n  for await (const { type, value } of readDataStream(reader, {\n    isAborted: () => (abortControllerRef == null ? void 0 : abortControllerRef.current) === null\n  })) {\n    if (type === \"error\") {\n      throw new Error(value);\n    }\n    if (type === \"finish_step\") {\n      if (!value.isContinued) {\n        nextPrefixMap = {};\n      }\n      continue;\n    }\n    if (type === \"finish_message\") {\n      finishReason = value.finishReason;\n      if (value.usage != null) {\n        const { completionTokens, promptTokens } = value.usage;\n        usage = {\n          completionTokens,\n          promptTokens,\n          totalTokens: completionTokens + promptTokens\n        };\n      }\n      continue;\n    }\n    if (nextPrefixMap) {\n      if (prefixMap.text) {\n        previousMessages.push(prefixMap.text);\n      }\n      if (prefixMap.function_call) {\n        previousMessages.push(prefixMap.function_call);\n      }\n      if (prefixMap.tool_calls) {\n        previousMessages.push(prefixMap.tool_calls);\n      }\n      prefixMap = nextPrefixMap;\n      nextPrefixMap = void 0;\n    }\n    if (type === \"text\") {\n      if (prefixMap[\"text\"]) {\n        prefixMap[\"text\"] = {\n          ...prefixMap[\"text\"],\n          content: (prefixMap[\"text\"].content || \"\") + value\n        };\n      } else {\n        prefixMap[\"text\"] = {\n          id: generateId2(),\n          role: \"assistant\",\n          content: value,\n          createdAt\n        };\n      }\n    }\n    if (type === \"tool_call_streaming_start\") {\n      if (prefixMap.text == null) {\n        prefixMap.text = {\n          id: generateId2(),\n          role: \"assistant\",\n          content: \"\",\n          createdAt\n        };\n      }\n      if (prefixMap.text.toolInvocations == null) {\n        prefixMap.text.toolInvocations = [];\n      }\n      partialToolCalls[value.toolCallId] = {\n        text: \"\",\n        toolName: value.toolName,\n        prefixMapIndex: prefixMap.text.toolInvocations.length\n      };\n      prefixMap.text.toolInvocations.push({\n        state: \"partial-call\",\n        toolCallId: value.toolCallId,\n        toolName: value.toolName,\n        args: void 0\n      });\n    } else if (type === \"tool_call_delta\") {\n      const partialToolCall = partialToolCalls[value.toolCallId];\n      partialToolCall.text += value.argsTextDelta;\n      const { value: partialArgs } = parsePartialJson(partialToolCall.text);\n      prefixMap.text.toolInvocations[partialToolCall.prefixMapIndex] = {\n        state: \"partial-call\",\n        toolCallId: value.toolCallId,\n        toolName: partialToolCall.toolName,\n        args: partialArgs\n      };\n      prefixMap.text.internalUpdateId = generateId2();\n    } else if (type === \"tool_call\") {\n      if (partialToolCalls[value.toolCallId] != null) {\n        prefixMap.text.toolInvocations[partialToolCalls[value.toolCallId].prefixMapIndex] = { state: \"call\", ...value };\n      } else {\n        if (prefixMap.text == null) {\n          prefixMap.text = {\n            id: generateId2(),\n            role: \"assistant\",\n            content: \"\",\n            createdAt\n          };\n        }\n        if (prefixMap.text.toolInvocations == null) {\n          prefixMap.text.toolInvocations = [];\n        }\n        prefixMap.text.toolInvocations.push({\n          state: \"call\",\n          ...value\n        });\n      }\n      prefixMap.text.internalUpdateId = generateId2();\n      if (onToolCall) {\n        const result = await onToolCall({ toolCall: value });\n        if (result != null) {\n          prefixMap.text.toolInvocations[prefixMap.text.toolInvocations.length - 1] = { state: \"result\", ...value, result };\n        }\n      }\n    } else if (type === \"tool_result\") {\n      const toolInvocations = (_a = prefixMap.text) == null ? void 0 : _a.toolInvocations;\n      if (toolInvocations == null) {\n        throw new Error(\"tool_result must be preceded by a tool_call\");\n      }\n      const toolInvocationIndex = toolInvocations.findIndex(\n        (invocation) => invocation.toolCallId === value.toolCallId\n      );\n      if (toolInvocationIndex === -1) {\n        throw new Error(\n          \"tool_result must be preceded by a tool_call with the same toolCallId\"\n        );\n      }\n      toolInvocations[toolInvocationIndex] = {\n        ...toolInvocations[toolInvocationIndex],\n        state: \"result\",\n        ...value\n      };\n    }\n    let functionCallMessage = null;\n    if (type === \"function_call\") {\n      prefixMap[\"function_call\"] = {\n        id: generateId2(),\n        role: \"assistant\",\n        content: \"\",\n        function_call: value.function_call,\n        name: value.function_call.name,\n        createdAt\n      };\n      functionCallMessage = prefixMap[\"function_call\"];\n    }\n    let toolCallMessage = null;\n    if (type === \"tool_calls\") {\n      prefixMap[\"tool_calls\"] = {\n        id: generateId2(),\n        role: \"assistant\",\n        content: \"\",\n        tool_calls: value.tool_calls,\n        createdAt\n      };\n      toolCallMessage = prefixMap[\"tool_calls\"];\n    }\n    if (type === \"data\") {\n      data.push(...value);\n    }\n    let responseMessage = prefixMap[\"text\"];\n    if (type === \"message_annotations\") {\n      if (!message_annotations) {\n        message_annotations = [...value];\n      } else {\n        message_annotations.push(...value);\n      }\n      functionCallMessage = assignAnnotationsToMessage(\n        prefixMap[\"function_call\"],\n        message_annotations\n      );\n      toolCallMessage = assignAnnotationsToMessage(\n        prefixMap[\"tool_calls\"],\n        message_annotations\n      );\n      responseMessage = assignAnnotationsToMessage(\n        prefixMap[\"text\"],\n        message_annotations\n      );\n    }\n    if (message_annotations == null ? void 0 : message_annotations.length) {\n      if (prefixMap.text) {\n        prefixMap.text.annotations = [...message_annotations];\n      }\n      if (prefixMap.function_call) {\n        prefixMap.function_call.annotations = [...message_annotations];\n      }\n      if (prefixMap.tool_calls) {\n        prefixMap.tool_calls.annotations = [...message_annotations];\n      }\n    }\n    const merged = [functionCallMessage, toolCallMessage, responseMessage].filter(Boolean).map((message) => ({\n      ...assignAnnotationsToMessage(message, message_annotations)\n    }));\n    update([...previousMessages, ...merged], [...data]);\n  }\n  onFinish == null ? void 0 : onFinish({ message: prefixMap.text, finishReason, usage });\n  return {\n    messages: [\n      prefixMap.text,\n      prefixMap.function_call,\n      prefixMap.tool_calls\n    ].filter(Boolean),\n    data\n  };\n}\n\n// src/call-chat-api.ts\nvar getOriginalFetch = () => fetch;\nasync function callChatApi({\n  api,\n  body,\n  streamProtocol = \"data\",\n  credentials,\n  headers,\n  abortController,\n  restoreMessagesOnFailure,\n  onResponse,\n  onUpdate,\n  onFinish,\n  onToolCall,\n  generateId: generateId2,\n  fetch: fetch2 = getOriginalFetch()\n}) {\n  var _a, _b;\n  const response = await fetch2(api, {\n    method: \"POST\",\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...headers\n    },\n    signal: (_a = abortController == null ? void 0 : abortController()) == null ? void 0 : _a.signal,\n    credentials\n  }).catch((err) => {\n    restoreMessagesOnFailure();\n    throw err;\n  });\n  if (onResponse) {\n    try {\n      await onResponse(response);\n    } catch (err) {\n      throw err;\n    }\n  }\n  if (!response.ok) {\n    restoreMessagesOnFailure();\n    throw new Error(\n      (_b = await response.text()) != null ? _b : \"Failed to fetch the chat response.\"\n    );\n  }\n  if (!response.body) {\n    throw new Error(\"The response body is empty.\");\n  }\n  const reader = response.body.getReader();\n  switch (streamProtocol) {\n    case \"text\": {\n      const decoder = createChunkDecoder();\n      const resultMessage = {\n        id: generateId2(),\n        createdAt: /* @__PURE__ */ new Date(),\n        role: \"assistant\",\n        content: \"\"\n      };\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n          break;\n        }\n        resultMessage.content += decoder(value);\n        onUpdate([{ ...resultMessage }], []);\n        if ((abortController == null ? void 0 : abortController()) === null) {\n          reader.cancel();\n          break;\n        }\n      }\n      onFinish == null ? void 0 : onFinish(resultMessage, {\n        usage: { completionTokens: NaN, promptTokens: NaN, totalTokens: NaN },\n        finishReason: \"unknown\"\n      });\n      return {\n        messages: [resultMessage],\n        data: []\n      };\n    }\n    case \"data\": {\n      return await processDataProtocolResponse({\n        reader,\n        abortControllerRef: abortController != null ? { current: abortController() } : void 0,\n        update: onUpdate,\n        onToolCall,\n        onFinish({ message, finishReason, usage }) {\n          if (onFinish && message != null) {\n            onFinish(message, { usage, finishReason });\n          }\n        },\n        generateId: generateId2\n      });\n    }\n    default: {\n      const exhaustiveCheck = streamProtocol;\n      throw new Error(`Unknown stream protocol: ${exhaustiveCheck}`);\n    }\n  }\n}\n\n// src/call-completion-api.ts\nvar getOriginalFetch2 = () => fetch;\nasync function callCompletionApi({\n  api,\n  prompt,\n  credentials,\n  headers,\n  body,\n  streamProtocol = \"data\",\n  setCompletion,\n  setLoading,\n  setError,\n  setAbortController,\n  onResponse,\n  onFinish,\n  onError,\n  onData,\n  fetch: fetch2 = getOriginalFetch2()\n}) {\n  try {\n    setLoading(true);\n    setError(void 0);\n    const abortController = new AbortController();\n    setAbortController(abortController);\n    setCompletion(\"\");\n    const res = await fetch2(api, {\n      method: \"POST\",\n      body: JSON.stringify({\n        prompt,\n        ...body\n      }),\n      credentials,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...headers\n      },\n      signal: abortController.signal\n    }).catch((err) => {\n      throw err;\n    });\n    if (onResponse) {\n      try {\n        await onResponse(res);\n      } catch (err) {\n        throw err;\n      }\n    }\n    if (!res.ok) {\n      throw new Error(\n        await res.text() || \"Failed to fetch the chat response.\"\n      );\n    }\n    if (!res.body) {\n      throw new Error(\"The response body is empty.\");\n    }\n    let result = \"\";\n    const reader = res.body.getReader();\n    switch (streamProtocol) {\n      case \"text\": {\n        const decoder = createChunkDecoder();\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) {\n            break;\n          }\n          result += decoder(value);\n          setCompletion(result);\n          if (abortController === null) {\n            reader.cancel();\n            break;\n          }\n        }\n        break;\n      }\n      case \"data\": {\n        for await (const { type, value } of readDataStream(reader, {\n          isAborted: () => abortController === null\n        })) {\n          switch (type) {\n            case \"text\": {\n              result += value;\n              setCompletion(result);\n              break;\n            }\n            case \"data\": {\n              onData == null ? void 0 : onData(value);\n              break;\n            }\n          }\n        }\n        break;\n      }\n      default: {\n        const exhaustiveCheck = streamProtocol;\n        throw new Error(`Unknown stream protocol: ${exhaustiveCheck}`);\n      }\n    }\n    if (onFinish) {\n      onFinish(prompt, result);\n    }\n    setAbortController(null);\n    return result;\n  } catch (err) {\n    if (err.name === \"AbortError\") {\n      setAbortController(null);\n      return null;\n    }\n    if (err instanceof Error) {\n      if (onError) {\n        onError(err);\n      }\n    }\n    setError(err);\n  } finally {\n    setLoading(false);\n  }\n}\n\n// src/create-chunk-decoder.ts\nfunction createChunkDecoder(complex) {\n  const decoder = new TextDecoder();\n  if (!complex) {\n    return function(chunk) {\n      if (!chunk)\n        return \"\";\n      return decoder.decode(chunk, { stream: true });\n    };\n  }\n  return function(chunk) {\n    const decoded = decoder.decode(chunk, { stream: true }).split(\"\\n\").filter((line) => line !== \"\");\n    return decoded.map(parseStreamPart).filter(Boolean);\n  };\n}\n\n// src/data-url.ts\nfunction getTextFromDataUrl(dataUrl) {\n  const [header, base64Content] = dataUrl.split(\",\");\n  const mimeType = header.split(\";\")[0].split(\":\")[1];\n  if (mimeType == null || base64Content == null) {\n    throw new Error(\"Invalid data URL format\");\n  }\n  try {\n    return window.atob(base64Content);\n  } catch (error) {\n    throw new Error(`Error decoding data URL`);\n  }\n}\n\n// src/is-deep-equal-data.ts\nfunction isDeepEqualData(obj1, obj2) {\n  if (obj1 === obj2)\n    return true;\n  if (obj1 == null || obj2 == null)\n    return false;\n  if (typeof obj1 !== \"object\" && typeof obj2 !== \"object\")\n    return obj1 === obj2;\n  if (obj1.constructor !== obj2.constructor)\n    return false;\n  if (obj1 instanceof Date && obj2 instanceof Date) {\n    return obj1.getTime() === obj2.getTime();\n  }\n  if (Array.isArray(obj1)) {\n    if (obj1.length !== obj2.length)\n      return false;\n    for (let i = 0; i < obj1.length; i++) {\n      if (!isDeepEqualData(obj1[i], obj2[i]))\n        return false;\n    }\n    return true;\n  }\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n  if (keys1.length !== keys2.length)\n    return false;\n  for (const key of keys1) {\n    if (!keys2.includes(key))\n      return false;\n    if (!isDeepEqualData(obj1[key], obj2[key]))\n      return false;\n  }\n  return true;\n}\n\n// src/process-chat-stream.ts\nasync function processChatStream({\n  getStreamedResponse,\n  experimental_onFunctionCall,\n  experimental_onToolCall,\n  updateChatRequest,\n  getCurrentMessages\n}) {\n  while (true) {\n    const messagesAndDataOrJustMessage = await getStreamedResponse();\n    if (\"messages\" in messagesAndDataOrJustMessage) {\n      let hasFollowingResponse = false;\n      for (const message of messagesAndDataOrJustMessage.messages) {\n        if ((message.function_call === void 0 || typeof message.function_call === \"string\") && (message.tool_calls === void 0 || typeof message.tool_calls === \"string\")) {\n          continue;\n        }\n        hasFollowingResponse = true;\n        if (experimental_onFunctionCall) {\n          const functionCall = message.function_call;\n          if (typeof functionCall !== \"object\") {\n            console.warn(\n              \"experimental_onFunctionCall should not be defined when using tools\"\n            );\n            continue;\n          }\n          const functionCallResponse = await experimental_onFunctionCall(\n            getCurrentMessages(),\n            functionCall\n          );\n          if (functionCallResponse === void 0) {\n            hasFollowingResponse = false;\n            break;\n          }\n          updateChatRequest(functionCallResponse);\n        }\n        if (experimental_onToolCall) {\n          const toolCalls = message.tool_calls;\n          if (!Array.isArray(toolCalls) || toolCalls.some((toolCall) => typeof toolCall !== \"object\")) {\n            console.warn(\n              \"experimental_onToolCall should not be defined when using tools\"\n            );\n            continue;\n          }\n          const toolCallResponse = await experimental_onToolCall(getCurrentMessages(), toolCalls);\n          if (toolCallResponse === void 0) {\n            hasFollowingResponse = false;\n            break;\n          }\n          updateChatRequest(toolCallResponse);\n        }\n      }\n      if (!hasFollowingResponse) {\n        break;\n      }\n    } else {\n      let fixFunctionCallArguments2 = function(response) {\n        for (const message of response.messages) {\n          if (message.tool_calls !== void 0) {\n            for (const toolCall of message.tool_calls) {\n              if (typeof toolCall === \"object\") {\n                if (toolCall.function.arguments && typeof toolCall.function.arguments !== \"string\") {\n                  toolCall.function.arguments = JSON.stringify(\n                    toolCall.function.arguments\n                  );\n                }\n              }\n            }\n          }\n          if (message.function_call !== void 0) {\n            if (typeof message.function_call === \"object\") {\n              if (message.function_call.arguments && typeof message.function_call.arguments !== \"string\") {\n                message.function_call.arguments = JSON.stringify(\n                  message.function_call.arguments\n                );\n              }\n            }\n          }\n        }\n      };\n      var fixFunctionCallArguments = fixFunctionCallArguments2;\n      const streamedResponseMessage = messagesAndDataOrJustMessage;\n      if ((streamedResponseMessage.function_call === void 0 || typeof streamedResponseMessage.function_call === \"string\") && (streamedResponseMessage.tool_calls === void 0 || typeof streamedResponseMessage.tool_calls === \"string\")) {\n        break;\n      }\n      if (experimental_onFunctionCall) {\n        const functionCall = streamedResponseMessage.function_call;\n        if (!(typeof functionCall === \"object\")) {\n          console.warn(\n            \"experimental_onFunctionCall should not be defined when using tools\"\n          );\n          continue;\n        }\n        const functionCallResponse = await experimental_onFunctionCall(getCurrentMessages(), functionCall);\n        if (functionCallResponse === void 0)\n          break;\n        fixFunctionCallArguments2(functionCallResponse);\n        updateChatRequest(functionCallResponse);\n      }\n      if (experimental_onToolCall) {\n        const toolCalls = streamedResponseMessage.tool_calls;\n        if (!(typeof toolCalls === \"object\")) {\n          console.warn(\n            \"experimental_onToolCall should not be defined when using functions\"\n          );\n          continue;\n        }\n        const toolCallResponse = await experimental_onToolCall(getCurrentMessages(), toolCalls);\n        if (toolCallResponse === void 0)\n          break;\n        fixFunctionCallArguments2(toolCallResponse);\n        updateChatRequest(toolCallResponse);\n      }\n    }\n  }\n}\n\n// src/schema.ts\n\n\nvar schemaSymbol = Symbol.for(\"vercel.ai.schema\");\nfunction jsonSchema(jsonSchema2, {\n  validate\n} = {}) {\n  return {\n    [schemaSymbol]: true,\n    _type: void 0,\n    // should never be used directly\n    [_ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_1__.validatorSymbol]: true,\n    jsonSchema: jsonSchema2,\n    validate\n  };\n}\nfunction isSchema(value) {\n  return typeof value === \"object\" && value !== null && schemaSymbol in value && value[schemaSymbol] === true && \"jsonSchema\" in value && \"validate\" in value;\n}\nfunction asSchema(schema) {\n  return isSchema(schema) ? schema : zodSchema(schema);\n}\nfunction zodSchema(zodSchema2) {\n  return jsonSchema(\n    // we assume that zodToJsonSchema will return a valid JSONSchema7:\n    (0,zod_to_json_schema__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(zodSchema2),\n    {\n      validate: (value) => {\n        const result = zodSchema2.safeParse(value);\n        return result.success ? { success: true, value: result.data } : { success: false, error: result.error };\n      }\n    }\n  );\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/dist/index.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/dist/index.mjs ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asValidator: function() { return /* binding */ asValidator; },\n/* harmony export */   combineHeaders: function() { return /* binding */ combineHeaders; },\n/* harmony export */   convertAsyncGeneratorToReadableStream: function() { return /* binding */ convertAsyncGeneratorToReadableStream; },\n/* harmony export */   convertBase64ToUint8Array: function() { return /* binding */ convertBase64ToUint8Array; },\n/* harmony export */   convertUint8ArrayToBase64: function() { return /* binding */ convertUint8ArrayToBase64; },\n/* harmony export */   createEventSourceResponseHandler: function() { return /* binding */ createEventSourceResponseHandler; },\n/* harmony export */   createIdGenerator: function() { return /* binding */ createIdGenerator; },\n/* harmony export */   createJsonErrorResponseHandler: function() { return /* binding */ createJsonErrorResponseHandler; },\n/* harmony export */   createJsonResponseHandler: function() { return /* binding */ createJsonResponseHandler; },\n/* harmony export */   createJsonStreamResponseHandler: function() { return /* binding */ createJsonStreamResponseHandler; },\n/* harmony export */   extractResponseHeaders: function() { return /* binding */ extractResponseHeaders; },\n/* harmony export */   generateId: function() { return /* binding */ generateId; },\n/* harmony export */   getErrorMessage: function() { return /* binding */ getErrorMessage; },\n/* harmony export */   isAbortError: function() { return /* binding */ isAbortError; },\n/* harmony export */   isParsableJson: function() { return /* binding */ isParsableJson; },\n/* harmony export */   isParseableJson: function() { return /* binding */ isParseableJson; },\n/* harmony export */   isValidator: function() { return /* binding */ isValidator; },\n/* harmony export */   loadApiKey: function() { return /* binding */ loadApiKey; },\n/* harmony export */   loadOptionalSetting: function() { return /* binding */ loadOptionalSetting; },\n/* harmony export */   loadSetting: function() { return /* binding */ loadSetting; },\n/* harmony export */   parseJSON: function() { return /* binding */ parseJSON; },\n/* harmony export */   postJsonToApi: function() { return /* binding */ postJsonToApi; },\n/* harmony export */   postToApi: function() { return /* binding */ postToApi; },\n/* harmony export */   safeParseJSON: function() { return /* binding */ safeParseJSON; },\n/* harmony export */   safeValidateTypes: function() { return /* binding */ safeValidateTypes; },\n/* harmony export */   validateTypes: function() { return /* binding */ validateTypes; },\n/* harmony export */   validator: function() { return /* binding */ validator; },\n/* harmony export */   validatorSymbol: function() { return /* binding */ validatorSymbol; },\n/* harmony export */   withoutTrailingSlash: function() { return /* binding */ withoutTrailingSlash; },\n/* harmony export */   zodValidator: function() { return /* binding */ zodValidator; }\n/* harmony export */ });\n/* harmony import */ var nanoid_non_secure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nanoid/non-secure */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/nanoid/non-secure/index.js\");\n/* harmony import */ var _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ai-sdk/provider */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/dist/index.mjs\");\n/* harmony import */ var secure_json_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! secure-json-parse */ \"(app-pages-browser)/./node_modules/secure-json-parse/index.js\");\n/* harmony import */ var eventsource_parser_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventsource-parser/stream */ \"(app-pages-browser)/./node_modules/eventsource-parser/dist/stream.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// src/combine-headers.ts\nfunction combineHeaders(...headers) {\n  return headers.reduce(\n    (combinedHeaders, currentHeaders) => ({\n      ...combinedHeaders,\n      ...currentHeaders != null ? currentHeaders : {}\n    }),\n    {}\n  );\n}\n\n// src/convert-async-generator-to-readable-stream.ts\nfunction convertAsyncGeneratorToReadableStream(stream) {\n  return new ReadableStream({\n    /**\n     * Called when the consumer wants to pull more data from the stream.\n     *\n     * @param {ReadableStreamDefaultController<T>} controller - The controller to enqueue data into the stream.\n     * @returns {Promise<void>}\n     */\n    async pull(controller) {\n      try {\n        const { value, done } = await stream.next();\n        if (done) {\n          controller.close();\n        } else {\n          controller.enqueue(value);\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    /**\n     * Called when the consumer cancels the stream.\n     */\n    cancel() {\n    }\n  });\n}\n\n// src/extract-response-headers.ts\nfunction extractResponseHeaders(response) {\n  const headers = {};\n  response.headers.forEach((value, key) => {\n    headers[key] = value;\n  });\n  return headers;\n}\n\n// src/generate-id.ts\n\nvar createIdGenerator = ({\n  prefix = \"\",\n  size: defaultSize = 7,\n  alphabet = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n} = {}) => {\n  const generator = (0,nanoid_non_secure__WEBPACK_IMPORTED_MODULE_0__.customAlphabet)(alphabet, defaultSize);\n  return (size) => `${prefix}${generator(size)}`;\n};\nvar generateId = createIdGenerator();\n\n// src/get-error-message.ts\nfunction getErrorMessage(error) {\n  if (error == null) {\n    return \"unknown error\";\n  }\n  if (typeof error === \"string\") {\n    return error;\n  }\n  if (error instanceof Error) {\n    return error.message;\n  }\n  return JSON.stringify(error);\n}\n\n// src/is-abort-error.ts\nfunction isAbortError(error) {\n  return error instanceof Error && (error.name === \"AbortError\" || error.name === \"TimeoutError\");\n}\n\n// src/load-api-key.ts\n\nfunction loadApiKey({\n  apiKey,\n  environmentVariableName,\n  apiKeyParameterName = \"apiKey\",\n  description\n}) {\n  if (typeof apiKey === \"string\") {\n    return apiKey;\n  }\n  if (apiKey != null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadAPIKeyError({\n      message: `${description} API key must be a string.`\n    });\n  }\n  if (typeof process === \"undefined\") {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter. Environment variables is not supported in this environment.`\n    });\n  }\n  apiKey = process.env[environmentVariableName];\n  if (apiKey == null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter or the ${environmentVariableName} environment variable.`\n    });\n  }\n  if (typeof apiKey !== \"string\") {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadAPIKeyError({\n      message: `${description} API key must be a string. The value of the ${environmentVariableName} environment variable is not a string.`\n    });\n  }\n  return apiKey;\n}\n\n// src/load-setting.ts\n\nfunction loadSetting({\n  settingValue,\n  environmentVariableName,\n  settingName,\n  description\n}) {\n  if (typeof settingValue === \"string\") {\n    return settingValue;\n  }\n  if (settingValue != null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadSettingError({\n      message: `${description} setting must be a string.`\n    });\n  }\n  if (typeof process === \"undefined\") {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadSettingError({\n      message: `${description} setting is missing. Pass it using the '${settingName}' parameter. Environment variables is not supported in this environment.`\n    });\n  }\n  settingValue = process.env[environmentVariableName];\n  if (settingValue == null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadSettingError({\n      message: `${description} setting is missing. Pass it using the '${settingName}' parameter or the ${environmentVariableName} environment variable.`\n    });\n  }\n  if (typeof settingValue !== \"string\") {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.LoadSettingError({\n      message: `${description} setting must be a string. The value of the ${environmentVariableName} environment variable is not a string.`\n    });\n  }\n  return settingValue;\n}\n\n// src/load-optional-setting.ts\nfunction loadOptionalSetting({\n  settingValue,\n  environmentVariableName\n}) {\n  if (typeof settingValue === \"string\") {\n    return settingValue;\n  }\n  if (settingValue != null || typeof process === \"undefined\") {\n    return void 0;\n  }\n  settingValue = process.env[environmentVariableName];\n  if (settingValue == null || typeof settingValue !== \"string\") {\n    return void 0;\n  }\n  return settingValue;\n}\n\n// src/parse-json.ts\n\n\n\n// src/validate-types.ts\n\n\n// src/validator.ts\nvar validatorSymbol = Symbol.for(\"vercel.ai.validator\");\nfunction validator(validate) {\n  return { [validatorSymbol]: true, validate };\n}\nfunction isValidator(value) {\n  return typeof value === \"object\" && value !== null && validatorSymbol in value && value[validatorSymbol] === true && \"validate\" in value;\n}\nfunction asValidator(value) {\n  return isValidator(value) ? value : zodValidator(value);\n}\nfunction zodValidator(zodSchema) {\n  return validator((value) => {\n    const result = zodSchema.safeParse(value);\n    return result.success ? { success: true, value: result.data } : { success: false, error: result.error };\n  });\n}\n\n// src/validate-types.ts\nfunction validateTypes({\n  value,\n  schema: inputSchema\n}) {\n  const result = safeValidateTypes({ value, schema: inputSchema });\n  if (!result.success) {\n    throw _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.TypeValidationError.wrap({ value, cause: result.error });\n  }\n  return result.value;\n}\nfunction safeValidateTypes({\n  value,\n  schema\n}) {\n  const validator2 = asValidator(schema);\n  try {\n    if (validator2.validate == null) {\n      return { success: true, value };\n    }\n    const result = validator2.validate(value);\n    if (result.success) {\n      return result;\n    }\n    return {\n      success: false,\n      error: _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.TypeValidationError.wrap({ value, cause: result.error })\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.TypeValidationError.wrap({ value, cause: error })\n    };\n  }\n}\n\n// src/parse-json.ts\nfunction parseJSON({\n  text,\n  schema\n}) {\n  try {\n    const value = secure_json_parse__WEBPACK_IMPORTED_MODULE_2__.parse(text);\n    if (schema == null) {\n      return value;\n    }\n    return validateTypes({ value, schema });\n  } catch (error) {\n    if (_ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.JSONParseError.isJSONParseError(error) || _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.TypeValidationError.isTypeValidationError(error)) {\n      throw error;\n    }\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.JSONParseError({ text, cause: error });\n  }\n}\nfunction safeParseJSON({\n  text,\n  schema\n}) {\n  try {\n    const value = secure_json_parse__WEBPACK_IMPORTED_MODULE_2__.parse(text);\n    if (schema == null) {\n      return {\n        success: true,\n        value\n      };\n    }\n    return safeValidateTypes({ value, schema });\n  } catch (error) {\n    return {\n      success: false,\n      error: _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.JSONParseError.isJSONParseError(error) ? error : new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.JSONParseError({ text, cause: error })\n    };\n  }\n}\nfunction isParsableJson(input) {\n  try {\n    secure_json_parse__WEBPACK_IMPORTED_MODULE_2__.parse(input);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar isParseableJson = isParsableJson;\n\n// src/post-to-api.ts\n\n\n// src/remove-undefined-entries.ts\nfunction removeUndefinedEntries(record) {\n  return Object.fromEntries(\n    Object.entries(record).filter(([_key, value]) => value != null)\n  );\n}\n\n// src/post-to-api.ts\nvar getOriginalFetch = () => globalThis.fetch;\nvar postJsonToApi = async ({\n  url,\n  headers,\n  body,\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch\n}) => postToApi({\n  url,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    ...headers\n  },\n  body: {\n    content: JSON.stringify(body),\n    values: body\n  },\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch\n});\nvar postToApi = async ({\n  url,\n  headers = {},\n  body,\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch()\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: removeUndefinedEntries(headers),\n      body: body.content,\n      signal: abortSignal\n    });\n    const responseHeaders = extractResponseHeaders(response);\n    if (!response.ok) {\n      let errorInformation;\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: body.values\n        });\n      } catch (error) {\n        if (isAbortError(error) || _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError.isAPICallError(error)) {\n          throw error;\n        }\n        throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n          message: \"Failed to process error response\",\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: body.values\n        });\n      }\n      throw errorInformation.value;\n    }\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: body.values\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError.isAPICallError(error)) {\n          throw error;\n        }\n      }\n      throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n        message: \"Failed to process successful response\",\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: body.values\n      });\n    }\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error;\n    }\n    if (error instanceof TypeError && error.message === \"fetch failed\") {\n      const cause = error.cause;\n      if (cause != null) {\n        throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n          message: `Cannot connect to API: ${cause.message}`,\n          cause,\n          url,\n          requestBodyValues: body.values,\n          isRetryable: true\n          // retry when network error\n        });\n      }\n    }\n    throw error;\n  }\n};\n\n// src/response-handler.ts\n\n\nvar createJsonErrorResponseHandler = ({\n  errorSchema,\n  errorToMessage,\n  isRetryable\n}) => async ({ response, url, requestBodyValues }) => {\n  const responseBody = await response.text();\n  const responseHeaders = extractResponseHeaders(response);\n  if (responseBody.trim() === \"\") {\n    return {\n      responseHeaders,\n      value: new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n        message: response.statusText,\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        isRetryable: isRetryable == null ? void 0 : isRetryable(response)\n      })\n    };\n  }\n  try {\n    const parsedError = parseJSON({\n      text: responseBody,\n      schema: errorSchema\n    });\n    return {\n      responseHeaders,\n      value: new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n        message: errorToMessage(parsedError),\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        data: parsedError,\n        isRetryable: isRetryable == null ? void 0 : isRetryable(response, parsedError)\n      })\n    };\n  } catch (parseError) {\n    return {\n      responseHeaders,\n      value: new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n        message: response.statusText,\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        isRetryable: isRetryable == null ? void 0 : isRetryable(response)\n      })\n    };\n  }\n};\nvar createEventSourceResponseHandler = (chunkSchema) => async ({ response }) => {\n  const responseHeaders = extractResponseHeaders(response);\n  if (response.body == null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.EmptyResponseBodyError({});\n  }\n  return {\n    responseHeaders,\n    value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(new eventsource_parser_stream__WEBPACK_IMPORTED_MODULE_3__.EventSourceParserStream()).pipeThrough(\n      new TransformStream({\n        transform({ data }, controller) {\n          if (data === \"[DONE]\") {\n            return;\n          }\n          controller.enqueue(\n            safeParseJSON({\n              text: data,\n              schema: chunkSchema\n            })\n          );\n        }\n      })\n    )\n  };\n};\nvar createJsonStreamResponseHandler = (chunkSchema) => async ({ response }) => {\n  const responseHeaders = extractResponseHeaders(response);\n  if (response.body == null) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.EmptyResponseBodyError({});\n  }\n  let buffer = \"\";\n  return {\n    responseHeaders,\n    value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(\n      new TransformStream({\n        transform(chunkText, controller) {\n          if (chunkText.endsWith(\"\\n\")) {\n            controller.enqueue(\n              safeParseJSON({\n                text: buffer + chunkText,\n                schema: chunkSchema\n              })\n            );\n            buffer = \"\";\n          } else {\n            buffer += chunkText;\n          }\n        }\n      })\n    )\n  };\n};\nvar createJsonResponseHandler = (responseSchema) => async ({ response, url, requestBodyValues }) => {\n  const responseBody = await response.text();\n  const parsedResult = safeParseJSON({\n    text: responseBody,\n    schema: responseSchema\n  });\n  const responseHeaders = extractResponseHeaders(response);\n  if (!parsedResult.success) {\n    throw new _ai_sdk_provider__WEBPACK_IMPORTED_MODULE_1__.APICallError({\n      message: \"Invalid JSON response\",\n      cause: parsedResult.error,\n      statusCode: response.status,\n      responseHeaders,\n      responseBody,\n      url,\n      requestBodyValues\n    });\n  }\n  return {\n    responseHeaders,\n    value: parsedResult.value\n  };\n};\n\n// src/uint8-utils.ts\nvar { btoa, atob } = globalThis;\nfunction convertBase64ToUint8Array(base64String) {\n  const base64Url = base64String.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const latin1string = atob(base64Url);\n  return Uint8Array.from(latin1string, (byte) => byte.codePointAt(0));\n}\nfunction convertUint8ArrayToBase64(array) {\n  let latin1string = \"\";\n  for (let i = 0; i < array.length; i++) {\n    latin1string += String.fromCodePoint(array[i]);\n  }\n  return btoa(latin1string);\n}\n\n// src/without-trailing-slash.ts\nfunction withoutTrailingSlash(url) {\n  return url == null ? void 0 : url.replace(/\\/$/, \"\");\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/dist/index.mjs":
/*!************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/dist/index.mjs ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AISDKError: function() { return /* binding */ AISDKError; },\n/* harmony export */   APICallError: function() { return /* binding */ APICallError; },\n/* harmony export */   EmptyResponseBodyError: function() { return /* binding */ EmptyResponseBodyError; },\n/* harmony export */   InvalidPromptError: function() { return /* binding */ InvalidPromptError; },\n/* harmony export */   InvalidResponseDataError: function() { return /* binding */ InvalidResponseDataError; },\n/* harmony export */   JSONParseError: function() { return /* binding */ JSONParseError; },\n/* harmony export */   LoadAPIKeyError: function() { return /* binding */ LoadAPIKeyError; },\n/* harmony export */   LoadSettingError: function() { return /* binding */ LoadSettingError; },\n/* harmony export */   NoContentGeneratedError: function() { return /* binding */ NoContentGeneratedError; },\n/* harmony export */   NoSuchModelError: function() { return /* binding */ NoSuchModelError; },\n/* harmony export */   TooManyEmbeddingValuesForCallError: function() { return /* binding */ TooManyEmbeddingValuesForCallError; },\n/* harmony export */   TypeValidationError: function() { return /* binding */ TypeValidationError; },\n/* harmony export */   UnsupportedFunctionalityError: function() { return /* binding */ UnsupportedFunctionalityError; },\n/* harmony export */   getErrorMessage: function() { return /* binding */ getErrorMessage; },\n/* harmony export */   isJSONArray: function() { return /* binding */ isJSONArray; },\n/* harmony export */   isJSONObject: function() { return /* binding */ isJSONObject; },\n/* harmony export */   isJSONValue: function() { return /* binding */ isJSONValue; }\n/* harmony export */ });\n// src/errors/ai-sdk-error.ts\nvar marker = \"vercel.ai.error\";\nvar symbol = Symbol.for(marker);\nvar _a;\nvar _AISDKError = class _AISDKError extends Error {\n  /**\n   * Creates an AI SDK Error.\n   *\n   * @param {Object} params - The parameters for creating the error.\n   * @param {string} params.name - The name of the error.\n   * @param {string} params.message - The error message.\n   * @param {unknown} [params.cause] - The underlying cause of the error.\n   */\n  constructor({\n    name: name13,\n    message,\n    cause\n  }) {\n    super(message);\n    this[_a] = true;\n    this.name = name13;\n    this.cause = cause;\n  }\n  /**\n   * Checks if the given error is an AI SDK Error.\n   * @param {unknown} error - The error to check.\n   * @returns {boolean} True if the error is an AI SDK Error, false otherwise.\n   */\n  static isInstance(error) {\n    return _AISDKError.hasMarker(error, marker);\n  }\n  static hasMarker(error, marker14) {\n    const markerSymbol = Symbol.for(marker14);\n    return error != null && typeof error === \"object\" && markerSymbol in error && typeof error[markerSymbol] === \"boolean\" && error[markerSymbol] === true;\n  }\n  /**\n   * Returns a JSON representation of the error.\n   * @returns {Object} An object containing the error's name, message, and cause.\n   *\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message\n    };\n  }\n};\n_a = symbol;\nvar AISDKError = _AISDKError;\n\n// src/errors/api-call-error.ts\nvar name = \"AI_APICallError\";\nvar marker2 = `vercel.ai.error.${name}`;\nvar symbol2 = Symbol.for(marker2);\nvar _a2;\nvar APICallError = class extends AISDKError {\n  constructor({\n    message,\n    url,\n    requestBodyValues,\n    statusCode,\n    responseHeaders,\n    responseBody,\n    cause,\n    isRetryable = statusCode != null && (statusCode === 408 || // request timeout\n    statusCode === 409 || // conflict\n    statusCode === 429 || // too many requests\n    statusCode >= 500),\n    // server error\n    data\n  }) {\n    super({ name, message, cause });\n    this[_a2] = true;\n    this.url = url;\n    this.requestBodyValues = requestBodyValues;\n    this.statusCode = statusCode;\n    this.responseHeaders = responseHeaders;\n    this.responseBody = responseBody;\n    this.isRetryable = isRetryable;\n    this.data = data;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker2);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isAPICallError(error) {\n    return error instanceof Error && error.name === name && typeof error.url === \"string\" && typeof error.requestBodyValues === \"object\" && (error.statusCode == null || typeof error.statusCode === \"number\") && (error.responseHeaders == null || typeof error.responseHeaders === \"object\") && (error.responseBody == null || typeof error.responseBody === \"string\") && (error.cause == null || typeof error.cause === \"object\") && typeof error.isRetryable === \"boolean\" && (error.data == null || typeof error.data === \"object\");\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      url: this.url,\n      requestBodyValues: this.requestBodyValues,\n      statusCode: this.statusCode,\n      responseHeaders: this.responseHeaders,\n      responseBody: this.responseBody,\n      cause: this.cause,\n      isRetryable: this.isRetryable,\n      data: this.data\n    };\n  }\n};\n_a2 = symbol2;\n\n// src/errors/empty-response-body-error.ts\nvar name2 = \"AI_EmptyResponseBodyError\";\nvar marker3 = `vercel.ai.error.${name2}`;\nvar symbol3 = Symbol.for(marker3);\nvar _a3;\nvar EmptyResponseBodyError = class extends AISDKError {\n  // used in isInstance\n  constructor({ message = \"Empty response body\" } = {}) {\n    super({ name: name2, message });\n    this[_a3] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker3);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isEmptyResponseBodyError(error) {\n    return error instanceof Error && error.name === name2;\n  }\n};\n_a3 = symbol3;\n\n// src/errors/get-error-message.ts\nfunction getErrorMessage(error) {\n  if (error == null) {\n    return \"unknown error\";\n  }\n  if (typeof error === \"string\") {\n    return error;\n  }\n  if (error instanceof Error) {\n    return error.message;\n  }\n  return JSON.stringify(error);\n}\n\n// src/errors/invalid-prompt-error.ts\nvar name3 = \"AI_InvalidPromptError\";\nvar marker4 = `vercel.ai.error.${name3}`;\nvar symbol4 = Symbol.for(marker4);\nvar _a4;\nvar InvalidPromptError = class extends AISDKError {\n  constructor({\n    prompt: prompt2,\n    message,\n    cause\n  }) {\n    super({ name: name3, message: `Invalid prompt: ${message}`, cause });\n    this[_a4] = true;\n    this.prompt = prompt2;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker4);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidPromptError(error) {\n    return error instanceof Error && error.name === name3 && prompt != null;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      prompt: this.prompt\n    };\n  }\n};\n_a4 = symbol4;\n\n// src/errors/invalid-response-data-error.ts\nvar name4 = \"AI_InvalidResponseDataError\";\nvar marker5 = `vercel.ai.error.${name4}`;\nvar symbol5 = Symbol.for(marker5);\nvar _a5;\nvar InvalidResponseDataError = class extends AISDKError {\n  constructor({\n    data,\n    message = `Invalid response data: ${JSON.stringify(data)}.`\n  }) {\n    super({ name: name4, message });\n    this[_a5] = true;\n    this.data = data;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker5);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidResponseDataError(error) {\n    return error instanceof Error && error.name === name4 && error.data != null;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      data: this.data\n    };\n  }\n};\n_a5 = symbol5;\n\n// src/errors/json-parse-error.ts\nvar name5 = \"AI_JSONParseError\";\nvar marker6 = `vercel.ai.error.${name5}`;\nvar symbol6 = Symbol.for(marker6);\nvar _a6;\nvar JSONParseError = class extends AISDKError {\n  constructor({ text, cause }) {\n    super({\n      name: name5,\n      message: `JSON parsing failed: Text: ${text}.\nError message: ${getErrorMessage(cause)}`,\n      cause\n    });\n    this[_a6] = true;\n    this.text = text;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker6);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isJSONParseError(error) {\n    return error instanceof Error && error.name === name5 && \"text\" in error && typeof error.text === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n      valueText: this.text\n    };\n  }\n};\n_a6 = symbol6;\n\n// src/errors/load-api-key-error.ts\nvar name6 = \"AI_LoadAPIKeyError\";\nvar marker7 = `vercel.ai.error.${name6}`;\nvar symbol7 = Symbol.for(marker7);\nvar _a7;\nvar LoadAPIKeyError = class extends AISDKError {\n  // used in isInstance\n  constructor({ message }) {\n    super({ name: name6, message });\n    this[_a7] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker7);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isLoadAPIKeyError(error) {\n    return error instanceof Error && error.name === name6;\n  }\n};\n_a7 = symbol7;\n\n// src/errors/load-setting-error.ts\nvar name7 = \"AI_LoadSettingError\";\nvar marker8 = `vercel.ai.error.${name7}`;\nvar symbol8 = Symbol.for(marker8);\nvar _a8;\nvar LoadSettingError = class extends AISDKError {\n  // used in isInstance\n  constructor({ message }) {\n    super({ name: name7, message });\n    this[_a8] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker8);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isLoadSettingError(error) {\n    return error instanceof Error && error.name === name7;\n  }\n};\n_a8 = symbol8;\n\n// src/errors/no-content-generated-error.ts\nvar name8 = \"AI_NoContentGeneratedError\";\nvar marker9 = `vercel.ai.error.${name8}`;\nvar symbol9 = Symbol.for(marker9);\nvar _a9;\nvar NoContentGeneratedError = class extends AISDKError {\n  // used in isInstance\n  constructor({\n    message = \"No content generated.\"\n  } = {}) {\n    super({ name: name8, message });\n    this[_a9] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker9);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isNoContentGeneratedError(error) {\n    return error instanceof Error && error.name === name8;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      cause: this.cause,\n      message: this.message,\n      stack: this.stack\n    };\n  }\n};\n_a9 = symbol9;\n\n// src/errors/no-such-model-error.ts\nvar name9 = \"AI_NoSuchModelError\";\nvar marker10 = `vercel.ai.error.${name9}`;\nvar symbol10 = Symbol.for(marker10);\nvar _a10;\nvar NoSuchModelError = class extends AISDKError {\n  constructor({\n    errorName = name9,\n    modelId,\n    modelType,\n    message = `No such ${modelType}: ${modelId}`\n  }) {\n    super({ name: errorName, message });\n    this[_a10] = true;\n    this.modelId = modelId;\n    this.modelType = modelType;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker10);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isNoSuchModelError(error) {\n    return error instanceof Error && error.name === name9 && typeof error.modelId === \"string\" && typeof error.modelType === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      modelId: this.modelId,\n      modelType: this.modelType\n    };\n  }\n};\n_a10 = symbol10;\n\n// src/errors/too-many-embedding-values-for-call-error.ts\nvar name10 = \"AI_TooManyEmbeddingValuesForCallError\";\nvar marker11 = `vercel.ai.error.${name10}`;\nvar symbol11 = Symbol.for(marker11);\nvar _a11;\nvar TooManyEmbeddingValuesForCallError = class extends AISDKError {\n  constructor(options) {\n    super({\n      name: name10,\n      message: `Too many values for a single embedding call. The ${options.provider} model \"${options.modelId}\" can only embed up to ${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`\n    });\n    this[_a11] = true;\n    this.provider = options.provider;\n    this.modelId = options.modelId;\n    this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;\n    this.values = options.values;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker11);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isTooManyEmbeddingValuesForCallError(error) {\n    return error instanceof Error && error.name === name10 && \"provider\" in error && typeof error.provider === \"string\" && \"modelId\" in error && typeof error.modelId === \"string\" && \"maxEmbeddingsPerCall\" in error && typeof error.maxEmbeddingsPerCall === \"number\" && \"values\" in error && Array.isArray(error.values);\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      provider: this.provider,\n      modelId: this.modelId,\n      maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n      values: this.values\n    };\n  }\n};\n_a11 = symbol11;\n\n// src/errors/type-validation-error.ts\nvar name11 = \"AI_TypeValidationError\";\nvar marker12 = `vercel.ai.error.${name11}`;\nvar symbol12 = Symbol.for(marker12);\nvar _a12;\nvar _TypeValidationError = class _TypeValidationError extends AISDKError {\n  constructor({ value, cause }) {\n    super({\n      name: name11,\n      message: `Type validation failed: Value: ${JSON.stringify(value)}.\nError message: ${getErrorMessage(cause)}`,\n      cause\n    });\n    this[_a12] = true;\n    this.value = value;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker12);\n  }\n  /**\n   * Wraps an error into a TypeValidationError.\n   * If the cause is already a TypeValidationError with the same value, it returns the cause.\n   * Otherwise, it creates a new TypeValidationError.\n   *\n   * @param {Object} params - The parameters for wrapping the error.\n   * @param {unknown} params.value - The value that failed validation.\n   * @param {unknown} params.cause - The original error or cause of the validation failure.\n   * @returns {TypeValidationError} A TypeValidationError instance.\n   */\n  static wrap({\n    value,\n    cause\n  }) {\n    return _TypeValidationError.isInstance(cause) && cause.value === value ? cause : new _TypeValidationError({ value, cause });\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isTypeValidationError(error) {\n    return error instanceof Error && error.name === name11;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n      value: this.value\n    };\n  }\n};\n_a12 = symbol12;\nvar TypeValidationError = _TypeValidationError;\n\n// src/errors/unsupported-functionality-error.ts\nvar name12 = \"AI_UnsupportedFunctionalityError\";\nvar marker13 = `vercel.ai.error.${name12}`;\nvar symbol13 = Symbol.for(marker13);\nvar _a13;\nvar UnsupportedFunctionalityError = class extends AISDKError {\n  constructor({ functionality }) {\n    super({\n      name: name12,\n      message: `'${functionality}' functionality not supported.`\n    });\n    this[_a13] = true;\n    this.functionality = functionality;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker13);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isUnsupportedFunctionalityError(error) {\n    return error instanceof Error && error.name === name12 && typeof error.functionality === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      functionality: this.functionality\n    };\n  }\n};\n_a13 = symbol13;\n\n// src/json-value/is-json.ts\nfunction isJSONValue(value) {\n  if (value === null || typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n    return true;\n  }\n  if (Array.isArray(value)) {\n    return value.every(isJSONValue);\n  }\n  if (typeof value === \"object\") {\n    return Object.entries(value).every(\n      ([key, val]) => typeof key === \"string\" && isJSONValue(val)\n    );\n  }\n  return false;\n}\nfunction isJSONArray(value) {\n  return Array.isArray(value) && value.every(isJSONValue);\n}\nfunction isJSONObject(value) {\n  return value != null && typeof value === \"object\" && Object.entries(value).every(\n    ([key, val]) => typeof key === \"string\" && isJSONValue(val)\n  );\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/nanoid/non-secure/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/nanoid/non-secure/index.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   customAlphabet: function() { return /* binding */ customAlphabet; },\n/* harmony export */   nanoid: function() { return /* binding */ nanoid; }\n/* harmony export */ });\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy9uYW5vaWQvbm9uLXNlY3VyZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL25hbm9pZC9ub24tc2VjdXJlL2luZGV4LmpzP2QyNjAiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IHVybEFscGhhYmV0ID1cbiAgJ3VzZWFuZG9tLTI2VDE5ODM0MFBYNzVweEpBQ0tWRVJZTUlOREJVU0hXT0xGX0dRWmJmZ2hqa2xxdnd5enJpY3QnXG5sZXQgY3VzdG9tQWxwaGFiZXQgPSAoYWxwaGFiZXQsIGRlZmF1bHRTaXplID0gMjEpID0+IHtcbiAgcmV0dXJuIChzaXplID0gZGVmYXVsdFNpemUpID0+IHtcbiAgICBsZXQgaWQgPSAnJ1xuICAgIGxldCBpID0gc2l6ZVxuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgIGlkICs9IGFscGhhYmV0WyhNYXRoLnJhbmRvbSgpICogYWxwaGFiZXQubGVuZ3RoKSB8IDBdXG4gICAgfVxuICAgIHJldHVybiBpZFxuICB9XG59XG5sZXQgbmFub2lkID0gKHNpemUgPSAyMSkgPT4ge1xuICBsZXQgaWQgPSAnJ1xuICBsZXQgaSA9IHNpemVcbiAgd2hpbGUgKGktLSkge1xuICAgIGlkICs9IHVybEFscGhhYmV0WyhNYXRoLnJhbmRvbSgpICogNjQpIHwgMF1cbiAgfVxuICByZXR1cm4gaWRcbn1cbmV4cG9ydCB7IG5hbm9pZCwgY3VzdG9tQWxwaGFiZXQgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/nanoid/non-secure/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/Options.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/Options.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultOptions: function() { return /* binding */ defaultOptions; },\n/* harmony export */   getDefaultOptions: function() { return /* binding */ getDefaultOptions; },\n/* harmony export */   ignoreOverride: function() { return /* binding */ ignoreOverride; }\n/* harmony export */ });\nconst ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nconst defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\"\n};\nconst getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vT3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTztBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9PcHRpb25zLmpzPzNjZTAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGlnbm9yZU92ZXJyaWRlID0gU3ltYm9sKFwiTGV0IHpvZFRvSnNvblNjaGVtYSBkZWNpZGUgb24gd2hpY2ggcGFyc2VyIHRvIHVzZVwiKTtcbmV4cG9ydCBjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICBuYW1lOiB1bmRlZmluZWQsXG4gICAgJHJlZlN0cmF0ZWd5OiBcInJvb3RcIixcbiAgICBiYXNlUGF0aDogW1wiI1wiXSxcbiAgICBlZmZlY3RTdHJhdGVneTogXCJpbnB1dFwiLFxuICAgIHBpcGVTdHJhdGVneTogXCJhbGxcIixcbiAgICBkYXRlU3RyYXRlZ3k6IFwiZm9ybWF0OmRhdGUtdGltZVwiLFxuICAgIG1hcFN0cmF0ZWd5OiBcImVudHJpZXNcIixcbiAgICByZW1vdmVBZGRpdGlvbmFsU3RyYXRlZ3k6IFwicGFzc3Rocm91Z2hcIixcbiAgICBkZWZpbml0aW9uUGF0aDogXCJkZWZpbml0aW9uc1wiLFxuICAgIHRhcmdldDogXCJqc29uU2NoZW1hN1wiLFxuICAgIHN0cmljdFVuaW9uczogZmFsc2UsXG4gICAgZGVmaW5pdGlvbnM6IHt9LFxuICAgIGVycm9yTWVzc2FnZXM6IGZhbHNlLFxuICAgIG1hcmtkb3duRGVzY3JpcHRpb246IGZhbHNlLFxuICAgIHBhdHRlcm5TdHJhdGVneTogXCJlc2NhcGVcIixcbiAgICBhcHBseVJlZ2V4RmxhZ3M6IGZhbHNlLFxuICAgIGVtYWlsU3RyYXRlZ3k6IFwiZm9ybWF0OmVtYWlsXCIsXG4gICAgYmFzZTY0U3RyYXRlZ3k6IFwiY29udGVudEVuY29kaW5nOmJhc2U2NFwiLFxuICAgIG5hbWVTdHJhdGVneTogXCJyZWZcIlxufTtcbmV4cG9ydCBjb25zdCBnZXREZWZhdWx0T3B0aW9ucyA9IChvcHRpb25zKSA9PiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCJcbiAgICA/IHtcbiAgICAgICAgLi4uZGVmYXVsdE9wdGlvbnMsXG4gICAgICAgIG5hbWU6IG9wdGlvbnMsXG4gICAgfVxuICAgIDoge1xuICAgICAgICAuLi5kZWZhdWx0T3B0aW9ucyxcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/Options.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/Refs.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/Refs.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRefs: function() { return /* binding */ getRefs; }\n/* harmony export */ });\n/* harmony import */ var _Options_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Options.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/Options.js\");\n\nconst getRefs = (options) => {\n    const _options = (0,_Options_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultOptions)(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vUmVmcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUMxQztBQUNQLHFCQUFxQiw4REFBaUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9SZWZzLmpzP2M1ODkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RGVmYXVsdE9wdGlvbnMgfSBmcm9tIFwiLi9PcHRpb25zLmpzXCI7XG5leHBvcnQgY29uc3QgZ2V0UmVmcyA9IChvcHRpb25zKSA9PiB7XG4gICAgY29uc3QgX29wdGlvbnMgPSBnZXREZWZhdWx0T3B0aW9ucyhvcHRpb25zKTtcbiAgICBjb25zdCBjdXJyZW50UGF0aCA9IF9vcHRpb25zLm5hbWUgIT09IHVuZGVmaW5lZFxuICAgICAgICA/IFsuLi5fb3B0aW9ucy5iYXNlUGF0aCwgX29wdGlvbnMuZGVmaW5pdGlvblBhdGgsIF9vcHRpb25zLm5hbWVdXG4gICAgICAgIDogX29wdGlvbnMuYmFzZVBhdGg7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgLi4uX29wdGlvbnMsXG4gICAgICAgIGN1cnJlbnRQYXRoOiBjdXJyZW50UGF0aCxcbiAgICAgICAgcHJvcGVydHlQYXRoOiB1bmRlZmluZWQsXG4gICAgICAgIHNlZW46IG5ldyBNYXAoT2JqZWN0LmVudHJpZXMoX29wdGlvbnMuZGVmaW5pdGlvbnMpLm1hcCgoW25hbWUsIGRlZl0pID0+IFtcbiAgICAgICAgICAgIGRlZi5fZGVmLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGRlZjogZGVmLl9kZWYsXG4gICAgICAgICAgICAgICAgcGF0aDogWy4uLl9vcHRpb25zLmJhc2VQYXRoLCBfb3B0aW9ucy5kZWZpbml0aW9uUGF0aCwgbmFtZV0sXG4gICAgICAgICAgICAgICAgLy8gUmVzb2x1dGlvbiBvZiByZWZlcmVuY2VzIHdpbGwgYmUgZm9yY2VkIGV2ZW4gdGhvdWdoIHNlZW4sIHNvIGl0J3Mgb2sgdGhhdCB0aGUgc2NoZW1hIGlzIHVuZGVmaW5lZCBoZXJlIGZvciBub3cuXG4gICAgICAgICAgICAgICAganNvblNjaGVtYTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSkpLFxuICAgIH07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/Refs.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/errorMessages.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/errorMessages.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addErrorMessage: function() { return /* binding */ addErrorMessage; },\n/* harmony export */   setResponseValueAndErrors: function() { return /* binding */ setResponseValueAndErrors; }\n/* harmony export */ });\nfunction addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nfunction setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vZXJyb3JNZXNzYWdlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9lcnJvck1lc3NhZ2VzLmpzPzgyZDQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGFkZEVycm9yTWVzc2FnZShyZXMsIGtleSwgZXJyb3JNZXNzYWdlLCByZWZzKSB7XG4gICAgaWYgKCFyZWZzPy5lcnJvck1lc3NhZ2VzKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKGVycm9yTWVzc2FnZSkge1xuICAgICAgICByZXMuZXJyb3JNZXNzYWdlID0ge1xuICAgICAgICAgICAgLi4ucmVzLmVycm9yTWVzc2FnZSxcbiAgICAgICAgICAgIFtrZXldOiBlcnJvck1lc3NhZ2UsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMocmVzLCBrZXksIHZhbHVlLCBlcnJvck1lc3NhZ2UsIHJlZnMpIHtcbiAgICByZXNba2V5XSA9IHZhbHVlO1xuICAgIGFkZEVycm9yTWVzc2FnZShyZXMsIGtleSwgZXJyb3JNZXNzYWdlLCByZWZzKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/errorMessages.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/index.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addErrorMessage: function() { return /* reexport safe */ _errorMessages_js__WEBPACK_IMPORTED_MODULE_2__.addErrorMessage; },\n/* harmony export */   defaultOptions: function() { return /* reexport safe */ _Options_js__WEBPACK_IMPORTED_MODULE_0__.defaultOptions; },\n/* harmony export */   getDefaultOptions: function() { return /* reexport safe */ _Options_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultOptions; },\n/* harmony export */   getRefs: function() { return /* reexport safe */ _Refs_js__WEBPACK_IMPORTED_MODULE_1__.getRefs; },\n/* harmony export */   ignoreOverride: function() { return /* reexport safe */ _Options_js__WEBPACK_IMPORTED_MODULE_0__.ignoreOverride; },\n/* harmony export */   parseAnyDef: function() { return /* reexport safe */ _parsers_any_js__WEBPACK_IMPORTED_MODULE_4__.parseAnyDef; },\n/* harmony export */   parseArrayDef: function() { return /* reexport safe */ _parsers_array_js__WEBPACK_IMPORTED_MODULE_5__.parseArrayDef; },\n/* harmony export */   parseBigintDef: function() { return /* reexport safe */ _parsers_bigint_js__WEBPACK_IMPORTED_MODULE_6__.parseBigintDef; },\n/* harmony export */   parseBooleanDef: function() { return /* reexport safe */ _parsers_boolean_js__WEBPACK_IMPORTED_MODULE_7__.parseBooleanDef; },\n/* harmony export */   parseBrandedDef: function() { return /* reexport safe */ _parsers_branded_js__WEBPACK_IMPORTED_MODULE_8__.parseBrandedDef; },\n/* harmony export */   parseCatchDef: function() { return /* reexport safe */ _parsers_catch_js__WEBPACK_IMPORTED_MODULE_9__.parseCatchDef; },\n/* harmony export */   parseDateDef: function() { return /* reexport safe */ _parsers_date_js__WEBPACK_IMPORTED_MODULE_10__.parseDateDef; },\n/* harmony export */   parseDef: function() { return /* reexport safe */ _parseDef_js__WEBPACK_IMPORTED_MODULE_3__.parseDef; },\n/* harmony export */   parseDefaultDef: function() { return /* reexport safe */ _parsers_default_js__WEBPACK_IMPORTED_MODULE_11__.parseDefaultDef; },\n/* harmony export */   parseEffectsDef: function() { return /* reexport safe */ _parsers_effects_js__WEBPACK_IMPORTED_MODULE_12__.parseEffectsDef; },\n/* harmony export */   parseEnumDef: function() { return /* reexport safe */ _parsers_enum_js__WEBPACK_IMPORTED_MODULE_13__.parseEnumDef; },\n/* harmony export */   parseIntersectionDef: function() { return /* reexport safe */ _parsers_intersection_js__WEBPACK_IMPORTED_MODULE_14__.parseIntersectionDef; },\n/* harmony export */   parseLiteralDef: function() { return /* reexport safe */ _parsers_literal_js__WEBPACK_IMPORTED_MODULE_15__.parseLiteralDef; },\n/* harmony export */   parseMapDef: function() { return /* reexport safe */ _parsers_map_js__WEBPACK_IMPORTED_MODULE_16__.parseMapDef; },\n/* harmony export */   parseNativeEnumDef: function() { return /* reexport safe */ _parsers_nativeEnum_js__WEBPACK_IMPORTED_MODULE_17__.parseNativeEnumDef; },\n/* harmony export */   parseNeverDef: function() { return /* reexport safe */ _parsers_never_js__WEBPACK_IMPORTED_MODULE_18__.parseNeverDef; },\n/* harmony export */   parseNullDef: function() { return /* reexport safe */ _parsers_null_js__WEBPACK_IMPORTED_MODULE_19__.parseNullDef; },\n/* harmony export */   parseNullableDef: function() { return /* reexport safe */ _parsers_nullable_js__WEBPACK_IMPORTED_MODULE_20__.parseNullableDef; },\n/* harmony export */   parseNumberDef: function() { return /* reexport safe */ _parsers_number_js__WEBPACK_IMPORTED_MODULE_21__.parseNumberDef; },\n/* harmony export */   parseObjectDef: function() { return /* reexport safe */ _parsers_object_js__WEBPACK_IMPORTED_MODULE_22__.parseObjectDef; },\n/* harmony export */   parseObjectDefX: function() { return /* reexport safe */ _parsers_object_js__WEBPACK_IMPORTED_MODULE_22__.parseObjectDefX; },\n/* harmony export */   parseOptionalDef: function() { return /* reexport safe */ _parsers_optional_js__WEBPACK_IMPORTED_MODULE_23__.parseOptionalDef; },\n/* harmony export */   parsePipelineDef: function() { return /* reexport safe */ _parsers_pipeline_js__WEBPACK_IMPORTED_MODULE_24__.parsePipelineDef; },\n/* harmony export */   parsePromiseDef: function() { return /* reexport safe */ _parsers_promise_js__WEBPACK_IMPORTED_MODULE_25__.parsePromiseDef; },\n/* harmony export */   parseReadonlyDef: function() { return /* reexport safe */ _parsers_readonly_js__WEBPACK_IMPORTED_MODULE_26__.parseReadonlyDef; },\n/* harmony export */   parseRecordDef: function() { return /* reexport safe */ _parsers_record_js__WEBPACK_IMPORTED_MODULE_27__.parseRecordDef; },\n/* harmony export */   parseSetDef: function() { return /* reexport safe */ _parsers_set_js__WEBPACK_IMPORTED_MODULE_28__.parseSetDef; },\n/* harmony export */   parseStringDef: function() { return /* reexport safe */ _parsers_string_js__WEBPACK_IMPORTED_MODULE_29__.parseStringDef; },\n/* harmony export */   parseTupleDef: function() { return /* reexport safe */ _parsers_tuple_js__WEBPACK_IMPORTED_MODULE_30__.parseTupleDef; },\n/* harmony export */   parseUndefinedDef: function() { return /* reexport safe */ _parsers_undefined_js__WEBPACK_IMPORTED_MODULE_31__.parseUndefinedDef; },\n/* harmony export */   parseUnionDef: function() { return /* reexport safe */ _parsers_union_js__WEBPACK_IMPORTED_MODULE_32__.parseUnionDef; },\n/* harmony export */   parseUnknownDef: function() { return /* reexport safe */ _parsers_unknown_js__WEBPACK_IMPORTED_MODULE_33__.parseUnknownDef; },\n/* harmony export */   primitiveMappings: function() { return /* reexport safe */ _parsers_union_js__WEBPACK_IMPORTED_MODULE_32__.primitiveMappings; },\n/* harmony export */   setResponseValueAndErrors: function() { return /* reexport safe */ _errorMessages_js__WEBPACK_IMPORTED_MODULE_2__.setResponseValueAndErrors; },\n/* harmony export */   zodPatterns: function() { return /* reexport safe */ _parsers_string_js__WEBPACK_IMPORTED_MODULE_29__.zodPatterns; },\n/* harmony export */   zodToJsonSchema: function() { return /* reexport safe */ _zodToJsonSchema_js__WEBPACK_IMPORTED_MODULE_34__.zodToJsonSchema; }\n/* harmony export */ });\n/* harmony import */ var _Options_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Options.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/Options.js\");\n/* harmony import */ var _Refs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Refs.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/Refs.js\");\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errorMessages.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n/* harmony import */ var _parsers_any_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parsers/any.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/any.js\");\n/* harmony import */ var _parsers_array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parsers/array.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/array.js\");\n/* harmony import */ var _parsers_bigint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parsers/bigint.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js\");\n/* harmony import */ var _parsers_boolean_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parsers/boolean.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js\");\n/* harmony import */ var _parsers_branded_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parsers/branded.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/branded.js\");\n/* harmony import */ var _parsers_catch_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./parsers/catch.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/catch.js\");\n/* harmony import */ var _parsers_date_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parsers/date.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/date.js\");\n/* harmony import */ var _parsers_default_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./parsers/default.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/default.js\");\n/* harmony import */ var _parsers_effects_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./parsers/effects.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/effects.js\");\n/* harmony import */ var _parsers_enum_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./parsers/enum.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/enum.js\");\n/* harmony import */ var _parsers_intersection_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./parsers/intersection.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js\");\n/* harmony import */ var _parsers_literal_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./parsers/literal.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/literal.js\");\n/* harmony import */ var _parsers_map_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./parsers/map.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/map.js\");\n/* harmony import */ var _parsers_nativeEnum_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./parsers/nativeEnum.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js\");\n/* harmony import */ var _parsers_never_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./parsers/never.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/never.js\");\n/* harmony import */ var _parsers_null_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./parsers/null.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/null.js\");\n/* harmony import */ var _parsers_nullable_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./parsers/nullable.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js\");\n/* harmony import */ var _parsers_number_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./parsers/number.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/number.js\");\n/* harmony import */ var _parsers_object_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./parsers/object.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/object.js\");\n/* harmony import */ var _parsers_optional_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./parsers/optional.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/optional.js\");\n/* harmony import */ var _parsers_pipeline_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./parsers/pipeline.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js\");\n/* harmony import */ var _parsers_promise_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./parsers/promise.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/promise.js\");\n/* harmony import */ var _parsers_readonly_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./parsers/readonly.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js\");\n/* harmony import */ var _parsers_record_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./parsers/record.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/record.js\");\n/* harmony import */ var _parsers_set_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./parsers/set.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/set.js\");\n/* harmony import */ var _parsers_string_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./parsers/string.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/string.js\");\n/* harmony import */ var _parsers_tuple_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./parsers/tuple.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js\");\n/* harmony import */ var _parsers_undefined_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./parsers/undefined.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js\");\n/* harmony import */ var _parsers_union_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./parsers/union.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/union.js\");\n/* harmony import */ var _parsers_unknown_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./parsers/unknown.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js\");\n/* harmony import */ var _zodToJsonSchema_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./zodToJsonSchema.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_zodToJsonSchema_js__WEBPACK_IMPORTED_MODULE_34__.zodToJsonSchema);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE2QjtBQUNIO0FBQ1M7QUFDTDtBQUNHO0FBQ0U7QUFDQztBQUNDO0FBQ0E7QUFDRjtBQUNEO0FBQ0c7QUFDQTtBQUNIO0FBQ1E7QUFDTDtBQUNKO0FBQ087QUFDTDtBQUNEO0FBQ0k7QUFDRjtBQUNBO0FBQ0U7QUFDQTtBQUNEO0FBQ0M7QUFDRjtBQUNIO0FBQ0c7QUFDRDtBQUNJO0FBQ0o7QUFDRTtBQUNBO0FBQ2tCO0FBQ3ZELCtEQUFlLGlFQUFlLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9pbmRleC5qcz8wNGIzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL09wdGlvbnMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1JlZnMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Vycm9yTWVzc2FnZXMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL2FueS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9hcnJheS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9iaWdpbnQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvYm9vbGVhbi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9icmFuZGVkLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL2NhdGNoLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL2RhdGUuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvZGVmYXVsdC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9lZmZlY3RzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL2VudW0uanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvaW50ZXJzZWN0aW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL2xpdGVyYWwuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvbWFwLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL25hdGl2ZUVudW0uanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvbmV2ZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvbnVsbC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9udWxsYWJsZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9udW1iZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvb2JqZWN0LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL29wdGlvbmFsLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL3BpcGVsaW5lLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL3Byb21pc2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvcmVhZG9ubHkuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvcmVjb3JkLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL3NldC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9zdHJpbmcuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvdHVwbGUuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvdW5kZWZpbmVkLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL3VuaW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL3Vua25vd24uanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3pvZFRvSnNvblNjaGVtYS5qc1wiO1xuaW1wb3J0IHsgem9kVG9Kc29uU2NoZW1hIH0gZnJvbSBcIi4vem9kVG9Kc29uU2NoZW1hLmpzXCI7XG5leHBvcnQgZGVmYXVsdCB6b2RUb0pzb25TY2hlbWE7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseDef: function() { return /* binding */ parseDef; }\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _parsers_any_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsers/any.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/any.js\");\n/* harmony import */ var _parsers_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parsers/array.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/array.js\");\n/* harmony import */ var _parsers_bigint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parsers/bigint.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js\");\n/* harmony import */ var _parsers_boolean_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parsers/boolean.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js\");\n/* harmony import */ var _parsers_branded_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parsers/branded.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/branded.js\");\n/* harmony import */ var _parsers_catch_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parsers/catch.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/catch.js\");\n/* harmony import */ var _parsers_date_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parsers/date.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/date.js\");\n/* harmony import */ var _parsers_default_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parsers/default.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/default.js\");\n/* harmony import */ var _parsers_effects_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parsers/effects.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/effects.js\");\n/* harmony import */ var _parsers_enum_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./parsers/enum.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/enum.js\");\n/* harmony import */ var _parsers_intersection_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parsers/intersection.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js\");\n/* harmony import */ var _parsers_literal_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./parsers/literal.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/literal.js\");\n/* harmony import */ var _parsers_map_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./parsers/map.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/map.js\");\n/* harmony import */ var _parsers_nativeEnum_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./parsers/nativeEnum.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js\");\n/* harmony import */ var _parsers_never_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./parsers/never.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/never.js\");\n/* harmony import */ var _parsers_null_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./parsers/null.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/null.js\");\n/* harmony import */ var _parsers_nullable_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./parsers/nullable.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js\");\n/* harmony import */ var _parsers_number_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./parsers/number.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/number.js\");\n/* harmony import */ var _parsers_object_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./parsers/object.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/object.js\");\n/* harmony import */ var _parsers_optional_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./parsers/optional.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/optional.js\");\n/* harmony import */ var _parsers_pipeline_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./parsers/pipeline.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js\");\n/* harmony import */ var _parsers_promise_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./parsers/promise.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/promise.js\");\n/* harmony import */ var _parsers_record_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./parsers/record.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/record.js\");\n/* harmony import */ var _parsers_set_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./parsers/set.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/set.js\");\n/* harmony import */ var _parsers_string_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./parsers/string.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/string.js\");\n/* harmony import */ var _parsers_tuple_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./parsers/tuple.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js\");\n/* harmony import */ var _parsers_undefined_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./parsers/undefined.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js\");\n/* harmony import */ var _parsers_union_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./parsers/union.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/union.js\");\n/* harmony import */ var _parsers_unknown_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./parsers/unknown.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js\");\n/* harmony import */ var _parsers_readonly_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./parsers/readonly.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js\");\n/* harmony import */ var _Options_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./Options.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/Options.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== _Options_js__WEBPACK_IMPORTED_MODULE_30__.ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchema = selectParser(def, def.typeName, refs);\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === \"seen\" ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\nconst selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodString:\n            return (0,_parsers_string_js__WEBPACK_IMPORTED_MODULE_24__.parseStringDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNumber:\n            return (0,_parsers_number_js__WEBPACK_IMPORTED_MODULE_17__.parseNumberDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodObject:\n            return (0,_parsers_object_js__WEBPACK_IMPORTED_MODULE_18__.parseObjectDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodBigInt:\n            return (0,_parsers_bigint_js__WEBPACK_IMPORTED_MODULE_2__.parseBigintDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodBoolean:\n            return (0,_parsers_boolean_js__WEBPACK_IMPORTED_MODULE_3__.parseBooleanDef)();\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodDate:\n            return (0,_parsers_date_js__WEBPACK_IMPORTED_MODULE_6__.parseDateDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodUndefined:\n            return (0,_parsers_undefined_js__WEBPACK_IMPORTED_MODULE_26__.parseUndefinedDef)();\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNull:\n            return (0,_parsers_null_js__WEBPACK_IMPORTED_MODULE_15__.parseNullDef)(refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodArray:\n            return (0,_parsers_array_js__WEBPACK_IMPORTED_MODULE_1__.parseArrayDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodUnion:\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return (0,_parsers_union_js__WEBPACK_IMPORTED_MODULE_27__.parseUnionDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodIntersection:\n            return (0,_parsers_intersection_js__WEBPACK_IMPORTED_MODULE_10__.parseIntersectionDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodTuple:\n            return (0,_parsers_tuple_js__WEBPACK_IMPORTED_MODULE_25__.parseTupleDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodRecord:\n            return (0,_parsers_record_js__WEBPACK_IMPORTED_MODULE_22__.parseRecordDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodLiteral:\n            return (0,_parsers_literal_js__WEBPACK_IMPORTED_MODULE_11__.parseLiteralDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodEnum:\n            return (0,_parsers_enum_js__WEBPACK_IMPORTED_MODULE_9__.parseEnumDef)(def);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNativeEnum:\n            return (0,_parsers_nativeEnum_js__WEBPACK_IMPORTED_MODULE_13__.parseNativeEnumDef)(def);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNullable:\n            return (0,_parsers_nullable_js__WEBPACK_IMPORTED_MODULE_16__.parseNullableDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodOptional:\n            return (0,_parsers_optional_js__WEBPACK_IMPORTED_MODULE_19__.parseOptionalDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodMap:\n            return (0,_parsers_map_js__WEBPACK_IMPORTED_MODULE_12__.parseMapDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodSet:\n            return (0,_parsers_set_js__WEBPACK_IMPORTED_MODULE_23__.parseSetDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodLazy:\n            return parseDef(def.getter()._def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodPromise:\n            return (0,_parsers_promise_js__WEBPACK_IMPORTED_MODULE_21__.parsePromiseDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNaN:\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNever:\n            return (0,_parsers_never_js__WEBPACK_IMPORTED_MODULE_14__.parseNeverDef)();\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodEffects:\n            return (0,_parsers_effects_js__WEBPACK_IMPORTED_MODULE_8__.parseEffectsDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodAny:\n            return (0,_parsers_any_js__WEBPACK_IMPORTED_MODULE_0__.parseAnyDef)();\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodUnknown:\n            return (0,_parsers_unknown_js__WEBPACK_IMPORTED_MODULE_28__.parseUnknownDef)();\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodDefault:\n            return (0,_parsers_default_js__WEBPACK_IMPORTED_MODULE_7__.parseDefaultDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodBranded:\n            return (0,_parsers_branded_js__WEBPACK_IMPORTED_MODULE_4__.parseBrandedDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodReadonly:\n            return (0,_parsers_readonly_js__WEBPACK_IMPORTED_MODULE_29__.parseReadonlyDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodCatch:\n            return (0,_parsers_catch_js__WEBPACK_IMPORTED_MODULE_5__.parseCatchDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodPipeline:\n            return (0,_parsers_pipeline_js__WEBPACK_IMPORTED_MODULE_20__.parsePipelineDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodFunction:\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodVoid:\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            return ((_) => undefined)(typeName);\n    }\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/any.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/any.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseAnyDef: function() { return /* binding */ parseAnyDef; }\n/* harmony export */ });\nfunction parseAnyDef() {\n    return {};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9hbnkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGFpLXNkay91aS11dGlscy9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvYW55LmpzPzc2YTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQW55RGVmKCkge1xuICAgIHJldHVybiB7fTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/any.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/array.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/array.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseArrayDef: function() { return /* binding */ parseArrayDef; }\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\n\n\nfunction parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def?.typeName !== zod__WEBPACK_IMPORTED_MODULE_2__.ZodFirstPartyTypeKind.ZodAny) {\n        res.items = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_1__.parseDef)(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9hcnJheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTRDO0FBQ29CO0FBQ3RCO0FBQ25DO0FBQ1A7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHNEQUFxQjtBQUMxRCxvQkFBb0Isc0RBQVE7QUFDNUI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsUUFBUSw0RUFBeUI7QUFDakM7QUFDQTtBQUNBLFFBQVEsNEVBQXlCO0FBQ2pDO0FBQ0E7QUFDQSxRQUFRLDRFQUF5QjtBQUNqQyxRQUFRLDRFQUF5QjtBQUNqQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2FycmF5LmpzPzcyZjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgWm9kRmlyc3RQYXJ0eVR5cGVLaW5kIH0gZnJvbSBcInpvZFwiO1xuaW1wb3J0IHsgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyB9IGZyb20gXCIuLi9lcnJvck1lc3NhZ2VzLmpzXCI7XG5pbXBvcnQgeyBwYXJzZURlZiB9IGZyb20gXCIuLi9wYXJzZURlZi5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQXJyYXlEZWYoZGVmLCByZWZzKSB7XG4gICAgY29uc3QgcmVzID0ge1xuICAgICAgICB0eXBlOiBcImFycmF5XCIsXG4gICAgfTtcbiAgICBpZiAoZGVmLnR5cGU/Ll9kZWY/LnR5cGVOYW1lICE9PSBab2RGaXJzdFBhcnR5VHlwZUtpbmQuWm9kQW55KSB7XG4gICAgICAgIHJlcy5pdGVtcyA9IHBhcnNlRGVmKGRlZi50eXBlLl9kZWYsIHtcbiAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwiaXRlbXNcIl0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoZGVmLm1pbkxlbmd0aCkge1xuICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtaW5JdGVtc1wiLCBkZWYubWluTGVuZ3RoLnZhbHVlLCBkZWYubWluTGVuZ3RoLm1lc3NhZ2UsIHJlZnMpO1xuICAgIH1cbiAgICBpZiAoZGVmLm1heExlbmd0aCkge1xuICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtYXhJdGVtc1wiLCBkZWYubWF4TGVuZ3RoLnZhbHVlLCBkZWYubWF4TGVuZ3RoLm1lc3NhZ2UsIHJlZnMpO1xuICAgIH1cbiAgICBpZiAoZGVmLmV4YWN0TGVuZ3RoKSB7XG4gICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMocmVzLCBcIm1pbkl0ZW1zXCIsIGRlZi5leGFjdExlbmd0aC52YWx1ZSwgZGVmLmV4YWN0TGVuZ3RoLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtYXhJdGVtc1wiLCBkZWYuZXhhY3RMZW5ndGgudmFsdWUsIGRlZi5leGFjdExlbmd0aC5tZXNzYWdlLCByZWZzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/array.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseBigintDef: function() { return /* binding */ parseBigintDef; }\n/* harmony export */ });\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n\nfunction parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9iaWdpbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0U7QUFDekQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDRFQUF5QjtBQUNqRDtBQUNBO0FBQ0Esd0JBQXdCLDRFQUF5QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNEVBQXlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNEVBQXlCO0FBQ2pEO0FBQ0E7QUFDQSx3QkFBd0IsNEVBQXlCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0RUFBeUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDRFQUF5QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9iaWdpbnQuanM/MWM3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzIH0gZnJvbSBcIi4uL2Vycm9yTWVzc2FnZXMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUJpZ2ludERlZihkZWYsIHJlZnMpIHtcbiAgICBjb25zdCByZXMgPSB7XG4gICAgICAgIHR5cGU6IFwiaW50ZWdlclwiLFxuICAgICAgICBmb3JtYXQ6IFwiaW50NjRcIixcbiAgICB9O1xuICAgIGlmICghZGVmLmNoZWNrcylcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICBmb3IgKGNvbnN0IGNoZWNrIG9mIGRlZi5jaGVja3MpIHtcbiAgICAgICAgc3dpdGNoIChjaGVjay5raW5kKSB7XG4gICAgICAgICAgICBjYXNlIFwibWluXCI6XG4gICAgICAgICAgICAgICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcImpzb25TY2hlbWE3XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrLmluY2x1c2l2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhyZXMsIFwibWluaW11bVwiLCBjaGVjay52YWx1ZSwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJleGNsdXNpdmVNaW5pbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjaGVjay5pbmNsdXNpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5leGNsdXNpdmVNaW5pbXVtID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtaW5pbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWF4XCI6XG4gICAgICAgICAgICAgICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcImpzb25TY2hlbWE3XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrLmluY2x1c2l2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhyZXMsIFwibWF4aW11bVwiLCBjaGVjay52YWx1ZSwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJleGNsdXNpdmVNYXhpbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjaGVjay5pbmNsdXNpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5leGNsdXNpdmVNYXhpbXVtID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtYXhpbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibXVsdGlwbGVPZlwiOlxuICAgICAgICAgICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMocmVzLCBcIm11bHRpcGxlT2ZcIiwgY2hlY2sudmFsdWUsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseBooleanDef: function() { return /* binding */ parseBooleanDef; }\n/* harmony export */ });\nfunction parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9ib29sZWFuLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9ib29sZWFuLmpzP2EyNDMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQm9vbGVhbkRlZigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcImJvb2xlYW5cIixcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/branded.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/branded.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseBrandedDef: function() { return /* binding */ parseBrandedDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction parseBrandedDef(_def, refs) {\n    return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(_def.type._def, refs);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9icmFuZGVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQ25DO0FBQ1AsV0FBVyxzREFBUTtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGFpLXNkay91aS11dGlscy9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvYnJhbmRlZC5qcz9iN2E0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VCcmFuZGVkRGVmKF9kZWYsIHJlZnMpIHtcbiAgICByZXR1cm4gcGFyc2VEZWYoX2RlZi50eXBlLl9kZWYsIHJlZnMpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/branded.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/catch.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/catch.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseCatchDef: function() { return /* binding */ parseCatchDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst parseCatchDef = (def, refs) => {\n    return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, refs);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9jYXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQztBQUNQLFdBQVcsc0RBQVE7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2NhdGNoLmpzPzc1OWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VEZWYgfSBmcm9tIFwiLi4vcGFyc2VEZWYuanNcIjtcbmV4cG9ydCBjb25zdCBwYXJzZUNhdGNoRGVmID0gKGRlZiwgcmVmcykgPT4ge1xuICAgIHJldHVybiBwYXJzZURlZihkZWYuaW5uZXJUeXBlLl9kZWYsIHJlZnMpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/catch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/date.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/date.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseDateDef: function() { return /* binding */ parseDateDef; }\n/* harmony export */ });\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n\nfunction parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9kYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdFO0FBQ3pEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDRFQUF5QjtBQUN6QztBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNEVBQXlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGFpLXNkay91aS11dGlscy9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvZGF0ZS5qcz8xODQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMgfSBmcm9tIFwiLi4vZXJyb3JNZXNzYWdlcy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRGF0ZURlZihkZWYsIHJlZnMsIG92ZXJyaWRlRGF0ZVN0cmF0ZWd5KSB7XG4gICAgY29uc3Qgc3RyYXRlZ3kgPSBvdmVycmlkZURhdGVTdHJhdGVneSA/PyByZWZzLmRhdGVTdHJhdGVneTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShzdHJhdGVneSkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGFueU9mOiBzdHJhdGVneS5tYXAoKGl0ZW0sIGkpID0+IHBhcnNlRGF0ZURlZihkZWYsIHJlZnMsIGl0ZW0pKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgc3dpdGNoIChzdHJhdGVneSkge1xuICAgICAgICBjYXNlIFwic3RyaW5nXCI6XG4gICAgICAgIGNhc2UgXCJmb3JtYXQ6ZGF0ZS10aW1lXCI6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICAgICAgZm9ybWF0OiBcImRhdGUtdGltZVwiLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgY2FzZSBcImZvcm1hdDpkYXRlXCI6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICAgICAgZm9ybWF0OiBcImRhdGVcIixcbiAgICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgXCJpbnRlZ2VyXCI6XG4gICAgICAgICAgICByZXR1cm4gaW50ZWdlckRhdGVQYXJzZXIoZGVmLCByZWZzKTtcbiAgICB9XG59XG5jb25zdCBpbnRlZ2VyRGF0ZVBhcnNlciA9IChkZWYsIHJlZnMpID0+IHtcbiAgICBjb25zdCByZXMgPSB7XG4gICAgICAgIHR5cGU6IFwiaW50ZWdlclwiLFxuICAgICAgICBmb3JtYXQ6IFwidW5peC10aW1lXCIsXG4gICAgfTtcbiAgICBpZiAocmVmcy50YXJnZXQgPT09IFwib3BlbkFwaTNcIikge1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGNoZWNrIG9mIGRlZi5jaGVja3MpIHtcbiAgICAgICAgc3dpdGNoIChjaGVjay5raW5kKSB7XG4gICAgICAgICAgICBjYXNlIFwibWluXCI6XG4gICAgICAgICAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhyZXMsIFwibWluaW11bVwiLCBjaGVjay52YWx1ZSwgLy8gVGhpcyBpcyBpbiBtaWxsaXNlY29uZHNcbiAgICAgICAgICAgICAgICBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJtYXhcIjpcbiAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtYXhpbXVtXCIsIGNoZWNrLnZhbHVlLCAvLyBUaGlzIGlzIGluIG1pbGxpc2Vjb25kc1xuICAgICAgICAgICAgICAgIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/date.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/default.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/default.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseDefaultDef: function() { return /* binding */ parseDefaultDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction parseDefaultDef(_def, refs) {\n    return {\n        ...(0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9kZWZhdWx0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQ25DO0FBQ1A7QUFDQSxXQUFXLHNEQUFRO0FBQ25CO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGFpLXNkay91aS11dGlscy9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvZGVmYXVsdC5qcz84ZjIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VEZWZhdWx0RGVmKF9kZWYsIHJlZnMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5wYXJzZURlZihfZGVmLmlubmVyVHlwZS5fZGVmLCByZWZzKSxcbiAgICAgICAgZGVmYXVsdDogX2RlZi5kZWZhdWx0VmFsdWUoKSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/default.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/effects.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/effects.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseEffectsDef: function() { return /* binding */ parseEffectsDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(_def.schema._def, refs)\n        : {};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9lZmZlY3RzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQ25DO0FBQ1A7QUFDQSxVQUFVLHNEQUFRO0FBQ2xCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2VmZmVjdHMuanM/NDgyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZURlZiB9IGZyb20gXCIuLi9wYXJzZURlZi5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRWZmZWN0c0RlZihfZGVmLCByZWZzKSB7XG4gICAgcmV0dXJuIHJlZnMuZWZmZWN0U3RyYXRlZ3kgPT09IFwiaW5wdXRcIlxuICAgICAgICA/IHBhcnNlRGVmKF9kZWYuc2NoZW1hLl9kZWYsIHJlZnMpXG4gICAgICAgIDoge307XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/effects.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/enum.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/enum.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseEnumDef: function() { return /* binding */ parseEnumDef; }\n/* harmony export */ });\nfunction parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: def.values,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9lbnVtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2VudW0uanM/NzAxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcGFyc2VFbnVtRGVmKGRlZikge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgIGVudW06IGRlZi52YWx1ZXMsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/enum.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseIntersectionDef: function() { return /* binding */ parseIntersectionDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nfunction parseIntersectionDef(def, refs) {\n    const allOf = [\n        (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9pbnRlcnNlY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxRQUFRLHNEQUFRO0FBQ2hCO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUSxzREFBUTtBQUNoQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0NBQWdDO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2ludGVyc2VjdGlvbi5qcz9hNWRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5jb25zdCBpc0pzb25TY2hlbWE3QWxsT2ZUeXBlID0gKHR5cGUpID0+IHtcbiAgICBpZiAoXCJ0eXBlXCIgaW4gdHlwZSAmJiB0eXBlLnR5cGUgPT09IFwic3RyaW5nXCIpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gXCJhbGxPZlwiIGluIHR5cGU7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSW50ZXJzZWN0aW9uRGVmKGRlZiwgcmVmcykge1xuICAgIGNvbnN0IGFsbE9mID0gW1xuICAgICAgICBwYXJzZURlZihkZWYubGVmdC5fZGVmLCB7XG4gICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFsbE9mXCIsIFwiMFwiXSxcbiAgICAgICAgfSksXG4gICAgICAgIHBhcnNlRGVmKGRlZi5yaWdodC5fZGVmLCB7XG4gICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFsbE9mXCIsIFwiMVwiXSxcbiAgICAgICAgfSksXG4gICAgXS5maWx0ZXIoKHgpID0+ICEheCk7XG4gICAgbGV0IHVuZXZhbHVhdGVkUHJvcGVydGllcyA9IHJlZnMudGFyZ2V0ID09PSBcImpzb25TY2hlbWEyMDE5LTA5XCJcbiAgICAgICAgPyB7IHVuZXZhbHVhdGVkUHJvcGVydGllczogZmFsc2UgfVxuICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBtZXJnZWRBbGxPZiA9IFtdO1xuICAgIC8vIElmIGVpdGhlciBvZiB0aGUgc2NoZW1hcyBpcyBhbiBhbGxPZiwgbWVyZ2UgdGhlbSBpbnRvIGEgc2luZ2xlIGFsbE9mXG4gICAgYWxsT2YuZm9yRWFjaCgoc2NoZW1hKSA9PiB7XG4gICAgICAgIGlmIChpc0pzb25TY2hlbWE3QWxsT2ZUeXBlKHNjaGVtYSkpIHtcbiAgICAgICAgICAgIG1lcmdlZEFsbE9mLnB1c2goLi4uc2NoZW1hLmFsbE9mKTtcbiAgICAgICAgICAgIGlmIChzY2hlbWEudW5ldmFsdWF0ZWRQcm9wZXJ0aWVzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBvbmUgb2YgdGhlIHNjaGVtYXMgaGFzIG5vIHVuZXZhbHVhdGVkUHJvcGVydGllcyBzZXQsXG4gICAgICAgICAgICAgICAgLy8gdGhlIG1lcmdlZCBzY2hlbWEgc2hvdWxkIGFsc28gaGF2ZSBubyB1bmV2YWx1YXRlZFByb3BlcnRpZXMgc2V0XG4gICAgICAgICAgICAgICAgdW5ldmFsdWF0ZWRQcm9wZXJ0aWVzID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbGV0IG5lc3RlZFNjaGVtYSA9IHNjaGVtYTtcbiAgICAgICAgICAgIGlmIChcImFkZGl0aW9uYWxQcm9wZXJ0aWVzXCIgaW4gc2NoZW1hICYmXG4gICAgICAgICAgICAgICAgc2NoZW1hLmFkZGl0aW9uYWxQcm9wZXJ0aWVzID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgYWRkaXRpb25hbFByb3BlcnRpZXMsIC4uLnJlc3QgfSA9IHNjaGVtYTtcbiAgICAgICAgICAgICAgICBuZXN0ZWRTY2hlbWEgPSByZXN0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gQXMgc29vbiBhcyBvbmUgb2YgdGhlIHNjaGVtYXMgaGFzIGFkZGl0aW9uYWxQcm9wZXJ0aWVzIHNldCBub3QgdG8gZmFsc2UsIHdlIGFsbG93IHVuZXZhbHVhdGVkUHJvcGVydGllc1xuICAgICAgICAgICAgICAgIHVuZXZhbHVhdGVkUHJvcGVydGllcyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1lcmdlZEFsbE9mLnB1c2gobmVzdGVkU2NoZW1hKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBtZXJnZWRBbGxPZi5sZW5ndGhcbiAgICAgICAgPyB7XG4gICAgICAgICAgICBhbGxPZjogbWVyZ2VkQWxsT2YsXG4gICAgICAgICAgICAuLi51bmV2YWx1YXRlZFByb3BlcnRpZXMsXG4gICAgICAgIH1cbiAgICAgICAgOiB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/literal.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/literal.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseLiteralDef: function() { return /* binding */ parseLiteralDef; }\n/* harmony export */ });\nfunction parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9saXRlcmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2xpdGVyYWwuanM/M2I4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcGFyc2VMaXRlcmFsRGVmKGRlZiwgcmVmcykge1xuICAgIGNvbnN0IHBhcnNlZFR5cGUgPSB0eXBlb2YgZGVmLnZhbHVlO1xuICAgIGlmIChwYXJzZWRUeXBlICE9PSBcImJpZ2ludFwiICYmXG4gICAgICAgIHBhcnNlZFR5cGUgIT09IFwibnVtYmVyXCIgJiZcbiAgICAgICAgcGFyc2VkVHlwZSAhPT0gXCJib29sZWFuXCIgJiZcbiAgICAgICAgcGFyc2VkVHlwZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogQXJyYXkuaXNBcnJheShkZWYudmFsdWUpID8gXCJhcnJheVwiIDogXCJvYmplY3RcIixcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcIm9wZW5BcGkzXCIpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6IHBhcnNlZFR5cGUgPT09IFwiYmlnaW50XCIgPyBcImludGVnZXJcIiA6IHBhcnNlZFR5cGUsXG4gICAgICAgICAgICBlbnVtOiBbZGVmLnZhbHVlXSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogcGFyc2VkVHlwZSA9PT0gXCJiaWdpbnRcIiA/IFwiaW50ZWdlclwiIDogcGFyc2VkVHlwZSxcbiAgICAgICAgY29uc3Q6IGRlZi52YWx1ZSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/literal.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/map.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/map.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseMapDef: function() { return /* binding */ parseMapDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n/* harmony import */ var _record_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./record.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/record.js\");\n\n\nfunction parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return (0,_record_js__WEBPACK_IMPORTED_MODULE_1__.parseRecordDef)(def, refs);\n    }\n    const keys = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || {};\n    const values = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || {};\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9tYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQ0c7QUFDdEM7QUFDUDtBQUNBLGVBQWUsMERBQWM7QUFDN0I7QUFDQSxpQkFBaUIsc0RBQVE7QUFDekI7QUFDQTtBQUNBLEtBQUs7QUFDTCxtQkFBbUIsc0RBQVE7QUFDM0I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL21hcC5qcz80ZDI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5pbXBvcnQgeyBwYXJzZVJlY29yZERlZiB9IGZyb20gXCIuL3JlY29yZC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTWFwRGVmKGRlZiwgcmVmcykge1xuICAgIGlmIChyZWZzLm1hcFN0cmF0ZWd5ID09PSBcInJlY29yZFwiKSB7XG4gICAgICAgIHJldHVybiBwYXJzZVJlY29yZERlZihkZWYsIHJlZnMpO1xuICAgIH1cbiAgICBjb25zdCBrZXlzID0gcGFyc2VEZWYoZGVmLmtleVR5cGUuX2RlZiwge1xuICAgICAgICAuLi5yZWZzLFxuICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwiaXRlbXNcIiwgXCJpdGVtc1wiLCBcIjBcIl0sXG4gICAgfSkgfHwge307XG4gICAgY29uc3QgdmFsdWVzID0gcGFyc2VEZWYoZGVmLnZhbHVlVHlwZS5fZGVmLCB7XG4gICAgICAgIC4uLnJlZnMsXG4gICAgICAgIGN1cnJlbnRQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJpdGVtc1wiLCBcIml0ZW1zXCIsIFwiMVwiXSxcbiAgICB9KSB8fCB7fTtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcImFycmF5XCIsXG4gICAgICAgIG1heEl0ZW1zOiAxMjUsXG4gICAgICAgIGl0ZW1zOiB7XG4gICAgICAgICAgICB0eXBlOiBcImFycmF5XCIsXG4gICAgICAgICAgICBpdGVtczogW2tleXMsIHZhbHVlc10sXG4gICAgICAgICAgICBtaW5JdGVtczogMixcbiAgICAgICAgICAgIG1heEl0ZW1zOiAyLFxuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/map.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseNativeEnumDef: function() { return /* binding */ parseNativeEnumDef; }\n/* harmony export */ });\nfunction parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9uYXRpdmVFbnVtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9uYXRpdmVFbnVtLmpzP2Q1NGEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTmF0aXZlRW51bURlZihkZWYpIHtcbiAgICBjb25zdCBvYmplY3QgPSBkZWYudmFsdWVzO1xuICAgIGNvbnN0IGFjdHVhbEtleXMgPSBPYmplY3Qua2V5cyhkZWYudmFsdWVzKS5maWx0ZXIoKGtleSkgPT4ge1xuICAgICAgICByZXR1cm4gdHlwZW9mIG9iamVjdFtvYmplY3Rba2V5XV0gIT09IFwibnVtYmVyXCI7XG4gICAgfSk7XG4gICAgY29uc3QgYWN0dWFsVmFsdWVzID0gYWN0dWFsS2V5cy5tYXAoKGtleSkgPT4gb2JqZWN0W2tleV0pO1xuICAgIGNvbnN0IHBhcnNlZFR5cGVzID0gQXJyYXkuZnJvbShuZXcgU2V0KGFjdHVhbFZhbHVlcy5tYXAoKHZhbHVlcykgPT4gdHlwZW9mIHZhbHVlcykpKTtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBwYXJzZWRUeXBlcy5sZW5ndGggPT09IDFcbiAgICAgICAgICAgID8gcGFyc2VkVHlwZXNbMF0gPT09IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICA/IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICA6IFwibnVtYmVyXCJcbiAgICAgICAgICAgIDogW1wic3RyaW5nXCIsIFwibnVtYmVyXCJdLFxuICAgICAgICBlbnVtOiBhY3R1YWxWYWx1ZXMsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/never.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/never.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseNeverDef: function() { return /* binding */ parseNeverDef; }\n/* harmony export */ });\nfunction parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9uZXZlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBLGVBQWU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9uZXZlci5qcz84NzBkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBwYXJzZU5ldmVyRGVmKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5vdDoge30sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/never.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/null.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/null.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseNullDef: function() { return /* binding */ parseNullDef; }\n/* harmony export */ });\nfunction parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9udWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGFpLXNkay91aS11dGlscy9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvbnVsbC5qcz84ZTE5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBwYXJzZU51bGxEZWYocmVmcykge1xuICAgIHJldHVybiByZWZzLnRhcmdldCA9PT0gXCJvcGVuQXBpM1wiXG4gICAgICAgID8ge1xuICAgICAgICAgICAgZW51bTogW1wibnVsbFwiXSxcbiAgICAgICAgICAgIG51bGxhYmxlOiB0cnVlLFxuICAgICAgICB9XG4gICAgICAgIDoge1xuICAgICAgICAgICAgdHlwZTogXCJudWxsXCIsXG4gICAgICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/null.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseNullableDef: function() { return /* binding */ parseNullableDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n/* harmony import */ var _union_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./union.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/union.js\");\n\n\nfunction parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: _union_js__WEBPACK_IMPORTED_MODULE_1__.primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                _union_js__WEBPACK_IMPORTED_MODULE_1__.primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && '$ref' in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9udWxsYWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEM7QUFDSztBQUN4QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHdEQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHdEQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHNEQUFRO0FBQzdCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxxQkFBcUI7QUFDckIseUJBQXlCO0FBQ3pCO0FBQ0EsaUJBQWlCLHNEQUFRO0FBQ3pCO0FBQ0E7QUFDQSxLQUFLO0FBQ0wscUJBQXFCLGdCQUFnQixjQUFjO0FBQ25EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9udWxsYWJsZS5qcz84NDQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5pbXBvcnQgeyBwcmltaXRpdmVNYXBwaW5ncyB9IGZyb20gXCIuL3VuaW9uLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VOdWxsYWJsZURlZihkZWYsIHJlZnMpIHtcbiAgICBpZiAoW1wiWm9kU3RyaW5nXCIsIFwiWm9kTnVtYmVyXCIsIFwiWm9kQmlnSW50XCIsIFwiWm9kQm9vbGVhblwiLCBcIlpvZE51bGxcIl0uaW5jbHVkZXMoZGVmLmlubmVyVHlwZS5fZGVmLnR5cGVOYW1lKSAmJlxuICAgICAgICAoIWRlZi5pbm5lclR5cGUuX2RlZi5jaGVja3MgfHwgIWRlZi5pbm5lclR5cGUuX2RlZi5jaGVja3MubGVuZ3RoKSkge1xuICAgICAgICBpZiAocmVmcy50YXJnZXQgPT09IFwib3BlbkFwaTNcIikge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiBwcmltaXRpdmVNYXBwaW5nc1tkZWYuaW5uZXJUeXBlLl9kZWYudHlwZU5hbWVdLFxuICAgICAgICAgICAgICAgIG51bGxhYmxlOiB0cnVlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogW1xuICAgICAgICAgICAgICAgIHByaW1pdGl2ZU1hcHBpbmdzW2RlZi5pbm5lclR5cGUuX2RlZi50eXBlTmFtZV0sXG4gICAgICAgICAgICAgICAgXCJudWxsXCIsXG4gICAgICAgICAgICBdLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAocmVmcy50YXJnZXQgPT09IFwib3BlbkFwaTNcIikge1xuICAgICAgICBjb25zdCBiYXNlID0gcGFyc2VEZWYoZGVmLmlubmVyVHlwZS5fZGVmLCB7XG4gICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoXSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChiYXNlICYmICckcmVmJyBpbiBiYXNlKVxuICAgICAgICAgICAgcmV0dXJuIHsgYWxsT2Y6IFtiYXNlXSwgbnVsbGFibGU6IHRydWUgfTtcbiAgICAgICAgcmV0dXJuIGJhc2UgJiYgeyAuLi5iYXNlLCBudWxsYWJsZTogdHJ1ZSB9O1xuICAgIH1cbiAgICBjb25zdCBiYXNlID0gcGFyc2VEZWYoZGVmLmlubmVyVHlwZS5fZGVmLCB7XG4gICAgICAgIC4uLnJlZnMsXG4gICAgICAgIGN1cnJlbnRQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJhbnlPZlwiLCBcIjBcIl0sXG4gICAgfSk7XG4gICAgcmV0dXJuIGJhc2UgJiYgeyBhbnlPZjogW2Jhc2UsIHsgdHlwZTogXCJudWxsXCIgfV0gfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/number.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/number.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseNumberDef: function() { return /* binding */ parseNumberDef; }\n/* harmony export */ });\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n\nfunction parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.addErrorMessage)(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9udW1iZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0Y7QUFDM0U7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isa0VBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNEVBQXlCO0FBQ2pEO0FBQ0E7QUFDQSx3QkFBd0IsNEVBQXlCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0RUFBeUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw0RUFBeUI7QUFDakQ7QUFDQTtBQUNBLHdCQUF3Qiw0RUFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDRFQUF5QjtBQUM3QztBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNEVBQXlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL251bWJlci5qcz9hNDQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZEVycm9yTWVzc2FnZSwgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycywgfSBmcm9tIFwiLi4vZXJyb3JNZXNzYWdlcy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTnVtYmVyRGVmKGRlZiwgcmVmcykge1xuICAgIGNvbnN0IHJlcyA9IHtcbiAgICAgICAgdHlwZTogXCJudW1iZXJcIixcbiAgICB9O1xuICAgIGlmICghZGVmLmNoZWNrcylcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICBmb3IgKGNvbnN0IGNoZWNrIG9mIGRlZi5jaGVja3MpIHtcbiAgICAgICAgc3dpdGNoIChjaGVjay5raW5kKSB7XG4gICAgICAgICAgICBjYXNlIFwiaW50XCI6XG4gICAgICAgICAgICAgICAgcmVzLnR5cGUgPSBcImludGVnZXJcIjtcbiAgICAgICAgICAgICAgICBhZGRFcnJvck1lc3NhZ2UocmVzLCBcInR5cGVcIiwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWluXCI6XG4gICAgICAgICAgICAgICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcImpzb25TY2hlbWE3XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrLmluY2x1c2l2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhyZXMsIFwibWluaW11bVwiLCBjaGVjay52YWx1ZSwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJleGNsdXNpdmVNaW5pbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjaGVjay5pbmNsdXNpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5leGNsdXNpdmVNaW5pbXVtID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtaW5pbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWF4XCI6XG4gICAgICAgICAgICAgICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcImpzb25TY2hlbWE3XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrLmluY2x1c2l2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhyZXMsIFwibWF4aW11bVwiLCBjaGVjay52YWx1ZSwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJleGNsdXNpdmVNYXhpbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjaGVjay5pbmNsdXNpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5leGNsdXNpdmVNYXhpbXVtID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtYXhpbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibXVsdGlwbGVPZlwiOlxuICAgICAgICAgICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMocmVzLCBcIm11bHRpcGxlT2ZcIiwgY2hlY2sudmFsdWUsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/number.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/object.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/object.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseObjectDef: function() { return /* binding */ parseObjectDef; },\n/* harmony export */   parseObjectDefX: function() { return /* binding */ parseObjectDefX; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction decideAdditionalProperties(def, refs) {\n    if (refs.removeAdditionalStrategy === \"strict\") {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys !== \"strict\"\n            : (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n    else {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys === \"passthrough\"\n            : (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n}\n;\nfunction parseObjectDefX(def, refs) {\n    Object.keys(def.shape()).reduce((schema, key) => {\n        let prop = def.shape()[key];\n        const isOptional = prop.isOptional();\n        if (!isOptional) {\n            prop = { ...prop._def.innerSchema };\n        }\n        const propSchema = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(prop._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"properties\", key],\n            propertyPath: [...refs.currentPath, \"properties\", key],\n        });\n        if (propSchema !== undefined) {\n            schema.properties[key] = propSchema;\n            if (!isOptional) {\n                if (!schema.required) {\n                    schema.required = [];\n                }\n                schema.required.push(key);\n            }\n        }\n        return schema;\n    }, {\n        type: \"object\",\n        properties: {},\n        additionalProperties: decideAdditionalProperties(def, refs),\n    });\n    const result = {\n        type: \"object\",\n        ...Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\n            if (propDef === undefined || propDef._def === undefined)\n                return acc;\n            const parsedDef = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(propDef._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"properties\", propName],\n                propertyPath: [...refs.currentPath, \"properties\", propName],\n            });\n            if (parsedDef === undefined)\n                return acc;\n            return {\n                properties: { ...acc.properties, [propName]: parsedDef },\n                required: propDef.isOptional()\n                    ? acc.required\n                    : [...acc.required, propName],\n            };\n        }, { properties: {}, required: [] }),\n        additionalProperties: decideAdditionalProperties(def, refs),\n    };\n    if (!result.required.length)\n        delete result.required;\n    return result;\n}\nfunction parseObjectDef(def, refs) {\n    const result = {\n        type: \"object\",\n        ...Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\n            if (propDef === undefined || propDef._def === undefined)\n                return acc;\n            const parsedDef = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(propDef._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"properties\", propName],\n                propertyPath: [...refs.currentPath, \"properties\", propName],\n            });\n            if (parsedDef === undefined)\n                return acc;\n            return {\n                properties: { ...acc.properties, [propName]: parsedDef },\n                required: propDef.isOptional()\n                    ? acc.required\n                    : [...acc.required, propName],\n            };\n        }, { properties: {}, required: [] }),\n        additionalProperties: decideAdditionalProperties(def, refs),\n    };\n    if (!result.required.length)\n        delete result.required;\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9vYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxzREFBUTtBQUN0QjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxzREFBUTtBQUN0QjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSwyQkFBMkIsc0RBQVE7QUFDbkM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0RBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwwQ0FBMEM7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLElBQUksY0FBYyxnQkFBZ0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHNEQUFRO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsMENBQTBDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxJQUFJLGNBQWMsZ0JBQWdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGFpLXNkay91aS11dGlscy9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvb2JqZWN0LmpzPzkyY2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VEZWYgfSBmcm9tIFwiLi4vcGFyc2VEZWYuanNcIjtcbmZ1bmN0aW9uIGRlY2lkZUFkZGl0aW9uYWxQcm9wZXJ0aWVzKGRlZiwgcmVmcykge1xuICAgIGlmIChyZWZzLnJlbW92ZUFkZGl0aW9uYWxTdHJhdGVneSA9PT0gXCJzdHJpY3RcIikge1xuICAgICAgICByZXR1cm4gZGVmLmNhdGNoYWxsLl9kZWYudHlwZU5hbWUgPT09IFwiWm9kTmV2ZXJcIlxuICAgICAgICAgICAgPyBkZWYudW5rbm93bktleXMgIT09IFwic3RyaWN0XCJcbiAgICAgICAgICAgIDogcGFyc2VEZWYoZGVmLmNhdGNoYWxsLl9kZWYsIHtcbiAgICAgICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgICAgIGN1cnJlbnRQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJhZGRpdGlvbmFsUHJvcGVydGllc1wiXSxcbiAgICAgICAgICAgIH0pID8/IHRydWU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gZGVmLmNhdGNoYWxsLl9kZWYudHlwZU5hbWUgPT09IFwiWm9kTmV2ZXJcIlxuICAgICAgICAgICAgPyBkZWYudW5rbm93bktleXMgPT09IFwicGFzc3Rocm91Z2hcIlxuICAgICAgICAgICAgOiBwYXJzZURlZihkZWYuY2F0Y2hhbGwuX2RlZiwge1xuICAgICAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFkZGl0aW9uYWxQcm9wZXJ0aWVzXCJdLFxuICAgICAgICAgICAgfSkgPz8gdHJ1ZTtcbiAgICB9XG59XG47XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VPYmplY3REZWZYKGRlZiwgcmVmcykge1xuICAgIE9iamVjdC5rZXlzKGRlZi5zaGFwZSgpKS5yZWR1Y2UoKHNjaGVtYSwga2V5KSA9PiB7XG4gICAgICAgIGxldCBwcm9wID0gZGVmLnNoYXBlKClba2V5XTtcbiAgICAgICAgY29uc3QgaXNPcHRpb25hbCA9IHByb3AuaXNPcHRpb25hbCgpO1xuICAgICAgICBpZiAoIWlzT3B0aW9uYWwpIHtcbiAgICAgICAgICAgIHByb3AgPSB7IC4uLnByb3AuX2RlZi5pbm5lclNjaGVtYSB9O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHByb3BTY2hlbWEgPSBwYXJzZURlZihwcm9wLl9kZWYsIHtcbiAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwicHJvcGVydGllc1wiLCBrZXldLFxuICAgICAgICAgICAgcHJvcGVydHlQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJwcm9wZXJ0aWVzXCIsIGtleV0sXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAocHJvcFNjaGVtYSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBzY2hlbWEucHJvcGVydGllc1trZXldID0gcHJvcFNjaGVtYTtcbiAgICAgICAgICAgIGlmICghaXNPcHRpb25hbCkge1xuICAgICAgICAgICAgICAgIGlmICghc2NoZW1hLnJlcXVpcmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHNjaGVtYS5yZXF1aXJlZCA9IFtdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzY2hlbWEucmVxdWlyZWQucHVzaChrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzY2hlbWE7XG4gICAgfSwge1xuICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICBwcm9wZXJ0aWVzOiB7fSxcbiAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6IGRlY2lkZUFkZGl0aW9uYWxQcm9wZXJ0aWVzKGRlZiwgcmVmcyksXG4gICAgfSk7XG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAuLi5PYmplY3QuZW50cmllcyhkZWYuc2hhcGUoKSkucmVkdWNlKChhY2MsIFtwcm9wTmFtZSwgcHJvcERlZl0pID0+IHtcbiAgICAgICAgICAgIGlmIChwcm9wRGVmID09PSB1bmRlZmluZWQgfHwgcHJvcERlZi5fZGVmID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZERlZiA9IHBhcnNlRGVmKHByb3BEZWYuX2RlZiwge1xuICAgICAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcInByb3BlcnRpZXNcIiwgcHJvcE5hbWVdLFxuICAgICAgICAgICAgICAgIHByb3BlcnR5UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwicHJvcGVydGllc1wiLCBwcm9wTmFtZV0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChwYXJzZWREZWYgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiB7IC4uLmFjYy5wcm9wZXJ0aWVzLCBbcHJvcE5hbWVdOiBwYXJzZWREZWYgfSxcbiAgICAgICAgICAgICAgICByZXF1aXJlZDogcHJvcERlZi5pc09wdGlvbmFsKClcbiAgICAgICAgICAgICAgICAgICAgPyBhY2MucmVxdWlyZWRcbiAgICAgICAgICAgICAgICAgICAgOiBbLi4uYWNjLnJlcXVpcmVkLCBwcm9wTmFtZV0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LCB7IHByb3BlcnRpZXM6IHt9LCByZXF1aXJlZDogW10gfSksXG4gICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiBkZWNpZGVBZGRpdGlvbmFsUHJvcGVydGllcyhkZWYsIHJlZnMpLFxuICAgIH07XG4gICAgaWYgKCFyZXN1bHQucmVxdWlyZWQubGVuZ3RoKVxuICAgICAgICBkZWxldGUgcmVzdWx0LnJlcXVpcmVkO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VPYmplY3REZWYoZGVmLCByZWZzKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAuLi5PYmplY3QuZW50cmllcyhkZWYuc2hhcGUoKSkucmVkdWNlKChhY2MsIFtwcm9wTmFtZSwgcHJvcERlZl0pID0+IHtcbiAgICAgICAgICAgIGlmIChwcm9wRGVmID09PSB1bmRlZmluZWQgfHwgcHJvcERlZi5fZGVmID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZERlZiA9IHBhcnNlRGVmKHByb3BEZWYuX2RlZiwge1xuICAgICAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcInByb3BlcnRpZXNcIiwgcHJvcE5hbWVdLFxuICAgICAgICAgICAgICAgIHByb3BlcnR5UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwicHJvcGVydGllc1wiLCBwcm9wTmFtZV0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChwYXJzZWREZWYgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiB7IC4uLmFjYy5wcm9wZXJ0aWVzLCBbcHJvcE5hbWVdOiBwYXJzZWREZWYgfSxcbiAgICAgICAgICAgICAgICByZXF1aXJlZDogcHJvcERlZi5pc09wdGlvbmFsKClcbiAgICAgICAgICAgICAgICAgICAgPyBhY2MucmVxdWlyZWRcbiAgICAgICAgICAgICAgICAgICAgOiBbLi4uYWNjLnJlcXVpcmVkLCBwcm9wTmFtZV0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LCB7IHByb3BlcnRpZXM6IHt9LCByZXF1aXJlZDogW10gfSksXG4gICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiBkZWNpZGVBZGRpdGlvbmFsUHJvcGVydGllcyhkZWYsIHJlZnMpLFxuICAgIH07XG4gICAgaWYgKCFyZXN1bHQucmVxdWlyZWQubGVuZ3RoKVxuICAgICAgICBkZWxldGUgcmVzdWx0LnJlcXVpcmVkO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/object.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/optional.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/optional.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseOptionalDef: function() { return /* binding */ parseOptionalDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, refs);\n    }\n    const innerSchema = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9vcHRpb25hbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQztBQUNQO0FBQ0EsZUFBZSxzREFBUTtBQUN2QjtBQUNBLHdCQUF3QixzREFBUTtBQUNoQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9vcHRpb25hbC5qcz8yN2U3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgY29uc3QgcGFyc2VPcHRpb25hbERlZiA9IChkZWYsIHJlZnMpID0+IHtcbiAgICBpZiAocmVmcy5jdXJyZW50UGF0aC50b1N0cmluZygpID09PSByZWZzLnByb3BlcnR5UGF0aD8udG9TdHJpbmcoKSkge1xuICAgICAgICByZXR1cm4gcGFyc2VEZWYoZGVmLmlubmVyVHlwZS5fZGVmLCByZWZzKTtcbiAgICB9XG4gICAgY29uc3QgaW5uZXJTY2hlbWEgPSBwYXJzZURlZihkZWYuaW5uZXJUeXBlLl9kZWYsIHtcbiAgICAgICAgLi4ucmVmcyxcbiAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFueU9mXCIsIFwiMVwiXSxcbiAgICB9KTtcbiAgICByZXR1cm4gaW5uZXJTY2hlbWFcbiAgICAgICAgPyB7XG4gICAgICAgICAgICBhbnlPZjogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbm90OiB7fSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGlubmVyU2NoZW1hLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfVxuICAgICAgICA6IHt9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/optional.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePipelineDef: function() { return /* binding */ parsePipelineDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.out._def, refs);\n    }\n    const a = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9waXBlbGluZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQztBQUNQO0FBQ0EsZUFBZSxzREFBUTtBQUN2QjtBQUNBO0FBQ0EsZUFBZSxzREFBUTtBQUN2QjtBQUNBLGNBQWMsc0RBQVE7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTCxjQUFjLHNEQUFRO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL3BpcGVsaW5lLmpzPzg4NWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VEZWYgfSBmcm9tIFwiLi4vcGFyc2VEZWYuanNcIjtcbmV4cG9ydCBjb25zdCBwYXJzZVBpcGVsaW5lRGVmID0gKGRlZiwgcmVmcykgPT4ge1xuICAgIGlmIChyZWZzLnBpcGVTdHJhdGVneSA9PT0gXCJpbnB1dFwiKSB7XG4gICAgICAgIHJldHVybiBwYXJzZURlZihkZWYuaW4uX2RlZiwgcmVmcyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHJlZnMucGlwZVN0cmF0ZWd5ID09PSBcIm91dHB1dFwiKSB7XG4gICAgICAgIHJldHVybiBwYXJzZURlZihkZWYub3V0Ll9kZWYsIHJlZnMpO1xuICAgIH1cbiAgICBjb25zdCBhID0gcGFyc2VEZWYoZGVmLmluLl9kZWYsIHtcbiAgICAgICAgLi4ucmVmcyxcbiAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFsbE9mXCIsIFwiMFwiXSxcbiAgICB9KTtcbiAgICBjb25zdCBiID0gcGFyc2VEZWYoZGVmLm91dC5fZGVmLCB7XG4gICAgICAgIC4uLnJlZnMsXG4gICAgICAgIGN1cnJlbnRQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJhbGxPZlwiLCBhID8gXCIxXCIgOiBcIjBcIl0sXG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYWxsT2Y6IFthLCBiXS5maWx0ZXIoKHgpID0+IHggIT09IHVuZGVmaW5lZCksXG4gICAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/promise.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/promise.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePromiseDef: function() { return /* binding */ parsePromiseDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction parsePromiseDef(def, refs) {\n    return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.type._def, refs);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9wcm9taXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQ25DO0FBQ1AsV0FBVyxzREFBUTtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGFpLXNkay91aS11dGlscy9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvcHJvbWlzZS5qcz83NWRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VQcm9taXNlRGVmKGRlZiwgcmVmcykge1xuICAgIHJldHVybiBwYXJzZURlZihkZWYudHlwZS5fZGVmLCByZWZzKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/promise.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseReadonlyDef: function() { return /* binding */ parseReadonlyDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst parseReadonlyDef = (def, refs) => {\n    return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, refs);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9yZWFkb25seS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQztBQUNQLFdBQVcsc0RBQVE7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL3JlYWRvbmx5LmpzP2M3OGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VEZWYgfSBmcm9tIFwiLi4vcGFyc2VEZWYuanNcIjtcbmV4cG9ydCBjb25zdCBwYXJzZVJlYWRvbmx5RGVmID0gKGRlZiwgcmVmcykgPT4ge1xuICAgIHJldHVybiBwYXJzZURlZihkZWYuaW5uZXJUeXBlLl9kZWYsIHJlZnMpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/record.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/record.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseRecordDef: function() { return /* binding */ parseRecordDef; }\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/string.js\");\n\n\n\nfunction parseRecordDef(def, refs) {\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === zod__WEBPACK_IMPORTED_MODULE_2__.ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? {},\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === zod__WEBPACK_IMPORTED_MODULE_2__.ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const keyType = Object.entries((0,_string_js__WEBPACK_IMPORTED_MODULE_1__.parseStringDef)(def.keyType._def, refs)).reduce((acc, [key, value]) => (key === \"type\" ? acc : { ...acc, [key]: value }), {});\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === zod__WEBPACK_IMPORTED_MODULE_2__.ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    return schema;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9yZWNvcmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2QztBQUNIO0FBQ0c7QUFDdEM7QUFDUDtBQUNBLHVDQUF1QyxzREFBcUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzREFBUTtBQUMvQjtBQUNBO0FBQ0EsaUJBQWlCLE9BQU87QUFDeEIsYUFBYSxLQUFLO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0RBQVE7QUFDdEM7QUFDQTtBQUNBLFNBQVMsT0FBTztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxzREFBcUI7QUFDNUQ7QUFDQSx1Q0FBdUMsMERBQWMsa0ZBQWtGLHNCQUFzQixLQUFLO0FBQ2xLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsc0RBQXFCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9yZWNvcmQuanM/MThiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBab2RGaXJzdFBhcnR5VHlwZUtpbmQsIH0gZnJvbSBcInpvZFwiO1xuaW1wb3J0IHsgcGFyc2VEZWYgfSBmcm9tIFwiLi4vcGFyc2VEZWYuanNcIjtcbmltcG9ydCB7IHBhcnNlU3RyaW5nRGVmIH0gZnJvbSBcIi4vc3RyaW5nLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VSZWNvcmREZWYoZGVmLCByZWZzKSB7XG4gICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcIm9wZW5BcGkzXCIgJiZcbiAgICAgICAgZGVmLmtleVR5cGU/Ll9kZWYudHlwZU5hbWUgPT09IFpvZEZpcnN0UGFydHlUeXBlS2luZC5ab2RFbnVtKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAgICAgcmVxdWlyZWQ6IGRlZi5rZXlUeXBlLl9kZWYudmFsdWVzLFxuICAgICAgICAgICAgcHJvcGVydGllczogZGVmLmtleVR5cGUuX2RlZi52YWx1ZXMucmVkdWNlKChhY2MsIGtleSkgPT4gKHtcbiAgICAgICAgICAgICAgICAuLi5hY2MsXG4gICAgICAgICAgICAgICAgW2tleV06IHBhcnNlRGVmKGRlZi52YWx1ZVR5cGUuX2RlZiwge1xuICAgICAgICAgICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwicHJvcGVydGllc1wiLCBrZXldLFxuICAgICAgICAgICAgICAgIH0pID8/IHt9LFxuICAgICAgICAgICAgfSksIHt9KSxcbiAgICAgICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3Qgc2NoZW1hID0ge1xuICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllczogcGFyc2VEZWYoZGVmLnZhbHVlVHlwZS5fZGVmLCB7XG4gICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFkZGl0aW9uYWxQcm9wZXJ0aWVzXCJdLFxuICAgICAgICB9KSA/PyB7fSxcbiAgICB9O1xuICAgIGlmIChyZWZzLnRhcmdldCA9PT0gXCJvcGVuQXBpM1wiKSB7XG4gICAgICAgIHJldHVybiBzY2hlbWE7XG4gICAgfVxuICAgIGlmIChkZWYua2V5VHlwZT8uX2RlZi50eXBlTmFtZSA9PT0gWm9kRmlyc3RQYXJ0eVR5cGVLaW5kLlpvZFN0cmluZyAmJlxuICAgICAgICBkZWYua2V5VHlwZS5fZGVmLmNoZWNrcz8ubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IGtleVR5cGUgPSBPYmplY3QuZW50cmllcyhwYXJzZVN0cmluZ0RlZihkZWYua2V5VHlwZS5fZGVmLCByZWZzKSkucmVkdWNlKChhY2MsIFtrZXksIHZhbHVlXSkgPT4gKGtleSA9PT0gXCJ0eXBlXCIgPyBhY2MgOiB7IC4uLmFjYywgW2tleV06IHZhbHVlIH0pLCB7fSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zY2hlbWEsXG4gICAgICAgICAgICBwcm9wZXJ0eU5hbWVzOiBrZXlUeXBlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmIChkZWYua2V5VHlwZT8uX2RlZi50eXBlTmFtZSA9PT0gWm9kRmlyc3RQYXJ0eVR5cGVLaW5kLlpvZEVudW0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnNjaGVtYSxcbiAgICAgICAgICAgIHByb3BlcnR5TmFtZXM6IHtcbiAgICAgICAgICAgICAgICBlbnVtOiBkZWYua2V5VHlwZS5fZGVmLnZhbHVlcyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBzY2hlbWE7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/record.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/set.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/set.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseSetDef: function() { return /* binding */ parseSetDef; }\n/* harmony export */ });\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\n\nfunction parseSetDef(def, refs) {\n    const items = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_1__.parseDef)(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9zZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdFO0FBQ3RCO0FBQ25DO0FBQ1Asa0JBQWtCLHNEQUFRO0FBQzFCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw0RUFBeUI7QUFDakM7QUFDQTtBQUNBLFFBQVEsNEVBQXlCO0FBQ2pDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGFpLXNkay91aS11dGlscy9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvc2V0LmpzPzdlNjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyB9IGZyb20gXCIuLi9lcnJvck1lc3NhZ2VzLmpzXCI7XG5pbXBvcnQgeyBwYXJzZURlZiB9IGZyb20gXCIuLi9wYXJzZURlZi5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlU2V0RGVmKGRlZiwgcmVmcykge1xuICAgIGNvbnN0IGl0ZW1zID0gcGFyc2VEZWYoZGVmLnZhbHVlVHlwZS5fZGVmLCB7XG4gICAgICAgIC4uLnJlZnMsXG4gICAgICAgIGN1cnJlbnRQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJpdGVtc1wiXSxcbiAgICB9KTtcbiAgICBjb25zdCBzY2hlbWEgPSB7XG4gICAgICAgIHR5cGU6IFwiYXJyYXlcIixcbiAgICAgICAgdW5pcXVlSXRlbXM6IHRydWUsXG4gICAgICAgIGl0ZW1zLFxuICAgIH07XG4gICAgaWYgKGRlZi5taW5TaXplKSB7XG4gICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMoc2NoZW1hLCBcIm1pbkl0ZW1zXCIsIGRlZi5taW5TaXplLnZhbHVlLCBkZWYubWluU2l6ZS5tZXNzYWdlLCByZWZzKTtcbiAgICB9XG4gICAgaWYgKGRlZi5tYXhTaXplKSB7XG4gICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMoc2NoZW1hLCBcIm1heEl0ZW1zXCIsIGRlZi5tYXhTaXplLnZhbHVlLCBkZWYubWF4U2l6ZS5tZXNzYWdlLCByZWZzKTtcbiAgICB9XG4gICAgcmV0dXJuIHNjaGVtYTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/set.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/string.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/string.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseStringDef: function() { return /* binding */ parseStringDef; },\n/* harmony export */   zodPatterns: function() { return /* binding */ zodPatterns; }\n/* harmony export */ });\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n\nlet emojiRegex;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nconst zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n};\nfunction parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    function processPattern(value) {\n        return refs.patternStrategy === \"escape\"\n            ? escapeNonAlphaNumeric(value)\n            : value;\n    }\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${processPattern(check.value)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${processPattern(check.value)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(processPattern(check.value)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji, check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nconst escapeNonAlphaNumeric = (value) => Array.from(value)\n    .map((c) => (/[a-zA-Z0-9]/.test(c) ? c : `\\\\${c}`))\n    .join(\"\");\nconst addFormat = (schema, value, message, refs) => {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(schema, \"format\", value, message, refs);\n    }\n};\nconst addPattern = (schema, regex, message, refs) => {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: processRegExp(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(schema, \"pattern\", processRegExp(regex, refs), message, refs);\n    }\n};\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nconst processRegExp = (regexOrFunction, refs) => {\n    const regex = typeof regexOrFunction === \"function\" ? regexOrFunction() : regexOrFunction;\n    if (!refs.applyRegexFlags || !regex.flags)\n        return regex.source;\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        const regexTest = new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9zdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdFO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsR0FBRztBQUMxQjtBQUNBLCtCQUErQixHQUFHO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLHdHQUF3RyxHQUFHO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHNCQUFzQixLQUFLLGdCQUFnQjtBQUNsRjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixFQUFFLGVBQWUsRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLGVBQWUsR0FBRztBQUMvRjtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsRUFBRTtBQUN6RTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsSUFBSSxHQUFHLEVBQUUsYUFBYSxJQUFJLEdBQUcsSUFBSSxXQUFXLElBQUksR0FBRyxFQUFFLFdBQVcsSUFBSSxHQUFHLElBQUksV0FBVyxJQUFJLEdBQUcsRUFBRSxXQUFXLElBQUksR0FBRyxJQUFJLFdBQVcsSUFBSSxHQUFHLEVBQUUsV0FBVyxJQUFJLEdBQUcsSUFBSSxXQUFXLElBQUksR0FBRyxFQUFFLFdBQVcsSUFBSSxHQUFHLElBQUksV0FBVyxJQUFJLEdBQUcsRUFBRSxXQUFXLElBQUksR0FBRyxJQUFJLFdBQVcsSUFBSSxtQ0FBbUMsRUFBRSxTQUFTLElBQUksTUFBTSxFQUFFLGlDQUFpQyxFQUFFLFNBQVMsSUFBSTtBQUNuWSw2QkFBNkIsRUFBRSxrQkFBa0IsRUFBRSxtQkFBbUIsRUFBRTtBQUN4RSw0QkFBNEIsR0FBRztBQUMv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L0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL3N0cmluZy5qcz9jZjk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMgfSBmcm9tIFwiLi4vZXJyb3JNZXNzYWdlcy5qc1wiO1xubGV0IGVtb2ppUmVnZXg7XG4vKipcbiAqIEdlbmVyYXRlZCBmcm9tIHRoZSByZWd1bGFyIGV4cHJlc3Npb25zIGZvdW5kIGhlcmUgYXMgb2YgMjAyNC0wNS0yMjpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9jb2xpbmhhY2tzL3pvZC9ibG9iL21hc3Rlci9zcmMvdHlwZXMudHMuXG4gKlxuICogRXhwcmVzc2lvbnMgd2l0aCAvaSBmbGFnIGhhdmUgYmVlbiBjaGFuZ2VkIGFjY29yZGluZ2x5LlxuICovXG5leHBvcnQgY29uc3Qgem9kUGF0dGVybnMgPSB7XG4gICAgLyoqXG4gICAgICogYGNgIHdhcyBjaGFuZ2VkIHRvIGBbY0NdYCB0byByZXBsaWNhdGUgL2kgZmxhZ1xuICAgICAqL1xuICAgIGN1aWQ6IC9eW2NDXVteXFxzLV17OCx9JC8sXG4gICAgY3VpZDI6IC9eWzAtOWEtel0rJC8sXG4gICAgdWxpZDogL15bMC05QS1ISktNTlAtVFYtWl17MjZ9JC8sXG4gICAgLyoqXG4gICAgICogYGEtemAgd2FzIGFkZGVkIHRvIHJlcGxpY2F0ZSAvaSBmbGFnXG4gICAgICovXG4gICAgZW1haWw6IC9eKD8hXFwuKSg/IS4qXFwuXFwuKShbYS16QS1aMC05XycrXFwtXFwuXSopW2EtekEtWjAtOV8rLV1AKFthLXpBLVowLTldW2EtekEtWjAtOVxcLV0qXFwuKStbYS16QS1aXXsyLH0kLyxcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RlZCBhIHZhbGlkIFVuaWNvZGUgUmVnRXhwXG4gICAgICpcbiAgICAgKiBMYXppbHkgaW5zdGFudGlhdGUgc2luY2UgdGhpcyB0eXBlIG9mIHJlZ2V4IGlzbid0IHN1cHBvcnRlZFxuICAgICAqIGluIGFsbCBlbnZzIChlLmcuIFJlYWN0IE5hdGl2ZSkuXG4gICAgICpcbiAgICAgKiBTZWU6XG4gICAgICogaHR0cHM6Ly9naXRodWIuY29tL2NvbGluaGFja3Mvem9kL2lzc3Vlcy8yNDMzXG4gICAgICogRml4IGluIFpvZDpcbiAgICAgKiBodHRwczovL2dpdGh1Yi5jb20vY29saW5oYWNrcy96b2QvY29tbWl0LzkzNDBmZDUxZTQ4NTc2YTc1YWRjOTE5YmZmNjVkYmM0YTVkNGM5OWJcbiAgICAgKi9cbiAgICBlbW9qaTogKCkgPT4ge1xuICAgICAgICBpZiAoZW1vamlSZWdleCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBlbW9qaVJlZ2V4ID0gUmVnRXhwKFwiXihcXFxccHtFeHRlbmRlZF9QaWN0b2dyYXBoaWN9fFxcXFxwe0Vtb2ppX0NvbXBvbmVudH0pKyRcIiwgXCJ1XCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbW9qaVJlZ2V4O1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogVW51c2VkXG4gICAgICovXG4gICAgdXVpZDogL15bMC05YS1mQS1GXXs4fVxcYi1bMC05YS1mQS1GXXs0fVxcYi1bMC05YS1mQS1GXXs0fVxcYi1bMC05YS1mQS1GXXs0fVxcYi1bMC05YS1mQS1GXXsxMn0kLyxcbiAgICAvKipcbiAgICAgKiBVbnVzZWRcbiAgICAgKi9cbiAgICBpcHY0OiAvXig/Oig/OjI1WzAtNV18MlswLTRdWzAtOV18MVswLTldWzAtOV18WzEtOV1bMC05XXxbMC05XSlcXC4pezN9KD86MjVbMC01XXwyWzAtNF1bMC05XXwxWzAtOV1bMC05XXxbMS05XVswLTldfFswLTldKSQvLFxuICAgIC8qKlxuICAgICAqIFVudXNlZFxuICAgICAqL1xuICAgIGlwdjY6IC9eKChbYS1mMC05XXsxLDR9Oil7N318OjooW2EtZjAtOV17MSw0fTopezAsNn18KFthLWYwLTldezEsNH06KXsxfTooW2EtZjAtOV17MSw0fTopezAsNX18KFthLWYwLTldezEsNH06KXsyfTooW2EtZjAtOV17MSw0fTopezAsNH18KFthLWYwLTldezEsNH06KXszfTooW2EtZjAtOV17MSw0fTopezAsM318KFthLWYwLTldezEsNH06KXs0fTooW2EtZjAtOV17MSw0fTopezAsMn18KFthLWYwLTldezEsNH06KXs1fTooW2EtZjAtOV17MSw0fTopezAsMX0pKFthLWYwLTldezEsNH18KCgoMjVbMC01XSl8KDJbMC00XVswLTldKXwoMVswLTldezJ9KXwoWzAtOV17MSwyfSkpXFwuKXszfSgoMjVbMC01XSl8KDJbMC00XVswLTldKXwoMVswLTldezJ9KXwoWzAtOV17MSwyfSkpKSQvLFxuICAgIGJhc2U2NDogL14oWzAtOWEtekEtWisvXXs0fSkqKChbMC05YS16QS1aKy9dezJ9PT0pfChbMC05YS16QS1aKy9dezN9PSkpPyQvLFxuICAgIG5hbm9pZDogL15bYS16QS1aMC05Xy1dezIxfSQvLFxufTtcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVN0cmluZ0RlZihkZWYsIHJlZnMpIHtcbiAgICBjb25zdCByZXMgPSB7XG4gICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgfTtcbiAgICBmdW5jdGlvbiBwcm9jZXNzUGF0dGVybih2YWx1ZSkge1xuICAgICAgICByZXR1cm4gcmVmcy5wYXR0ZXJuU3RyYXRlZ3kgPT09IFwiZXNjYXBlXCJcbiAgICAgICAgICAgID8gZXNjYXBlTm9uQWxwaGFOdW1lcmljKHZhbHVlKVxuICAgICAgICAgICAgOiB2YWx1ZTtcbiAgICB9XG4gICAgaWYgKGRlZi5jaGVja3MpIHtcbiAgICAgICAgZm9yIChjb25zdCBjaGVjayBvZiBkZWYuY2hlY2tzKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKGNoZWNrLmtpbmQpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwibWluXCI6XG4gICAgICAgICAgICAgICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMocmVzLCBcIm1pbkxlbmd0aFwiLCB0eXBlb2YgcmVzLm1pbkxlbmd0aCA9PT0gXCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPyBNYXRoLm1heChyZXMubWluTGVuZ3RoLCBjaGVjay52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIDogY2hlY2sudmFsdWUsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwibWF4XCI6XG4gICAgICAgICAgICAgICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMocmVzLCBcIm1heExlbmd0aFwiLCB0eXBlb2YgcmVzLm1heExlbmd0aCA9PT0gXCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPyBNYXRoLm1pbihyZXMubWF4TGVuZ3RoLCBjaGVjay52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIDogY2hlY2sudmFsdWUsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwiZW1haWxcIjpcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChyZWZzLmVtYWlsU3RyYXRlZ3kpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJmb3JtYXQ6ZW1haWxcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRGb3JtYXQocmVzLCBcImVtYWlsXCIsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImZvcm1hdDppZG4tZW1haWxcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRGb3JtYXQocmVzLCBcImlkbi1lbWFpbFwiLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJwYXR0ZXJuOnpvZFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZFBhdHRlcm4ocmVzLCB6b2RQYXR0ZXJucy5lbWFpbCwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcInVybFwiOlxuICAgICAgICAgICAgICAgICAgICBhZGRGb3JtYXQocmVzLCBcInVyaVwiLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcInV1aWRcIjpcbiAgICAgICAgICAgICAgICAgICAgYWRkRm9ybWF0KHJlcywgXCJ1dWlkXCIsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwicmVnZXhcIjpcbiAgICAgICAgICAgICAgICAgICAgYWRkUGF0dGVybihyZXMsIGNoZWNrLnJlZ2V4LCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcImN1aWRcIjpcbiAgICAgICAgICAgICAgICAgICAgYWRkUGF0dGVybihyZXMsIHpvZFBhdHRlcm5zLmN1aWQsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwiY3VpZDJcIjpcbiAgICAgICAgICAgICAgICAgICAgYWRkUGF0dGVybihyZXMsIHpvZFBhdHRlcm5zLmN1aWQyLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcInN0YXJ0c1dpdGhcIjpcbiAgICAgICAgICAgICAgICAgICAgYWRkUGF0dGVybihyZXMsIFJlZ0V4cChgXiR7cHJvY2Vzc1BhdHRlcm4oY2hlY2sudmFsdWUpfWApLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcImVuZHNXaXRoXCI6XG4gICAgICAgICAgICAgICAgICAgIGFkZFBhdHRlcm4ocmVzLCBSZWdFeHAoYCR7cHJvY2Vzc1BhdHRlcm4oY2hlY2sudmFsdWUpfSRgKSwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJkYXRldGltZVwiOlxuICAgICAgICAgICAgICAgICAgICBhZGRGb3JtYXQocmVzLCBcImRhdGUtdGltZVwiLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcImRhdGVcIjpcbiAgICAgICAgICAgICAgICAgICAgYWRkRm9ybWF0KHJlcywgXCJkYXRlXCIsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwidGltZVwiOlxuICAgICAgICAgICAgICAgICAgICBhZGRGb3JtYXQocmVzLCBcInRpbWVcIiwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJkdXJhdGlvblwiOlxuICAgICAgICAgICAgICAgICAgICBhZGRGb3JtYXQocmVzLCBcImR1cmF0aW9uXCIsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwibGVuZ3RoXCI6XG4gICAgICAgICAgICAgICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMocmVzLCBcIm1pbkxlbmd0aFwiLCB0eXBlb2YgcmVzLm1pbkxlbmd0aCA9PT0gXCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPyBNYXRoLm1heChyZXMubWluTGVuZ3RoLCBjaGVjay52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIDogY2hlY2sudmFsdWUsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtYXhMZW5ndGhcIiwgdHlwZW9mIHJlcy5tYXhMZW5ndGggPT09IFwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gTWF0aC5taW4ocmVzLm1heExlbmd0aCwgY2hlY2sudmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcImluY2x1ZGVzXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgYWRkUGF0dGVybihyZXMsIFJlZ0V4cChwcm9jZXNzUGF0dGVybihjaGVjay52YWx1ZSkpLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgXCJpcFwiOiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGVjay52ZXJzaW9uICE9PSBcInY2XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZEZvcm1hdChyZXMsIFwiaXB2NFwiLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoY2hlY2sudmVyc2lvbiAhPT0gXCJ2NFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRGb3JtYXQocmVzLCBcImlwdjZcIiwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgXCJlbW9qaVwiOlxuICAgICAgICAgICAgICAgICAgICBhZGRQYXR0ZXJuKHJlcywgem9kUGF0dGVybnMuZW1vamksIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwidWxpZFwiOiB7XG4gICAgICAgICAgICAgICAgICAgIGFkZFBhdHRlcm4ocmVzLCB6b2RQYXR0ZXJucy51bGlkLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgXCJiYXNlNjRcIjoge1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHJlZnMuYmFzZTY0U3RyYXRlZ3kpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJmb3JtYXQ6YmluYXJ5XCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRGb3JtYXQocmVzLCBcImJpbmFyeVwiLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJjb250ZW50RW5jb2Rpbmc6YmFzZTY0XCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJjb250ZW50RW5jb2RpbmdcIiwgXCJiYXNlNjRcIiwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwicGF0dGVybjp6b2RcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZFBhdHRlcm4ocmVzLCB6b2RQYXR0ZXJucy5iYXNlNjQsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlIFwibmFub2lkXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgYWRkUGF0dGVybihyZXMsIHpvZFBhdHRlcm5zLm5hbm9pZCwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgXCJ0b0xvd2VyQ2FzZVwiOlxuICAgICAgICAgICAgICAgIGNhc2UgXCJ0b1VwcGVyQ2FzZVwiOlxuICAgICAgICAgICAgICAgIGNhc2UgXCJ0cmltXCI6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICgoXykgPT4geyB9KShjaGVjayk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbmNvbnN0IGVzY2FwZU5vbkFscGhhTnVtZXJpYyA9ICh2YWx1ZSkgPT4gQXJyYXkuZnJvbSh2YWx1ZSlcbiAgICAubWFwKChjKSA9PiAoL1thLXpBLVowLTldLy50ZXN0KGMpID8gYyA6IGBcXFxcJHtjfWApKVxuICAgIC5qb2luKFwiXCIpO1xuY29uc3QgYWRkRm9ybWF0ID0gKHNjaGVtYSwgdmFsdWUsIG1lc3NhZ2UsIHJlZnMpID0+IHtcbiAgICBpZiAoc2NoZW1hLmZvcm1hdCB8fCBzY2hlbWEuYW55T2Y/LnNvbWUoKHgpID0+IHguZm9ybWF0KSkge1xuICAgICAgICBpZiAoIXNjaGVtYS5hbnlPZikge1xuICAgICAgICAgICAgc2NoZW1hLmFueU9mID0gW107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNjaGVtYS5mb3JtYXQpIHtcbiAgICAgICAgICAgIHNjaGVtYS5hbnlPZi5wdXNoKHtcbiAgICAgICAgICAgICAgICBmb3JtYXQ6IHNjaGVtYS5mb3JtYXQsXG4gICAgICAgICAgICAgICAgLi4uKHNjaGVtYS5lcnJvck1lc3NhZ2UgJiZcbiAgICAgICAgICAgICAgICAgICAgcmVmcy5lcnJvck1lc3NhZ2VzICYmIHtcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlOiB7IGZvcm1hdDogc2NoZW1hLmVycm9yTWVzc2FnZS5mb3JtYXQgfSxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZGVsZXRlIHNjaGVtYS5mb3JtYXQ7XG4gICAgICAgICAgICBpZiAoc2NoZW1hLmVycm9yTWVzc2FnZSkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBzY2hlbWEuZXJyb3JNZXNzYWdlLmZvcm1hdDtcbiAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMoc2NoZW1hLmVycm9yTWVzc2FnZSkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBzY2hlbWEuZXJyb3JNZXNzYWdlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzY2hlbWEuYW55T2YucHVzaCh7XG4gICAgICAgICAgICBmb3JtYXQ6IHZhbHVlLFxuICAgICAgICAgICAgLi4uKG1lc3NhZ2UgJiZcbiAgICAgICAgICAgICAgICByZWZzLmVycm9yTWVzc2FnZXMgJiYgeyBlcnJvck1lc3NhZ2U6IHsgZm9ybWF0OiBtZXNzYWdlIH0gfSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhzY2hlbWEsIFwiZm9ybWF0XCIsIHZhbHVlLCBtZXNzYWdlLCByZWZzKTtcbiAgICB9XG59O1xuY29uc3QgYWRkUGF0dGVybiA9IChzY2hlbWEsIHJlZ2V4LCBtZXNzYWdlLCByZWZzKSA9PiB7XG4gICAgaWYgKHNjaGVtYS5wYXR0ZXJuIHx8IHNjaGVtYS5hbGxPZj8uc29tZSgoeCkgPT4geC5wYXR0ZXJuKSkge1xuICAgICAgICBpZiAoIXNjaGVtYS5hbGxPZikge1xuICAgICAgICAgICAgc2NoZW1hLmFsbE9mID0gW107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNjaGVtYS5wYXR0ZXJuKSB7XG4gICAgICAgICAgICBzY2hlbWEuYWxsT2YucHVzaCh7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogc2NoZW1hLnBhdHRlcm4sXG4gICAgICAgICAgICAgICAgLi4uKHNjaGVtYS5lcnJvck1lc3NhZ2UgJiZcbiAgICAgICAgICAgICAgICAgICAgcmVmcy5lcnJvck1lc3NhZ2VzICYmIHtcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlOiB7IHBhdHRlcm46IHNjaGVtYS5lcnJvck1lc3NhZ2UucGF0dGVybiB9LFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBkZWxldGUgc2NoZW1hLnBhdHRlcm47XG4gICAgICAgICAgICBpZiAoc2NoZW1hLmVycm9yTWVzc2FnZSkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBzY2hlbWEuZXJyb3JNZXNzYWdlLnBhdHRlcm47XG4gICAgICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKHNjaGVtYS5lcnJvck1lc3NhZ2UpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBkZWxldGUgc2NoZW1hLmVycm9yTWVzc2FnZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc2NoZW1hLmFsbE9mLnB1c2goe1xuICAgICAgICAgICAgcGF0dGVybjogcHJvY2Vzc1JlZ0V4cChyZWdleCwgcmVmcyksXG4gICAgICAgICAgICAuLi4obWVzc2FnZSAmJlxuICAgICAgICAgICAgICAgIHJlZnMuZXJyb3JNZXNzYWdlcyAmJiB7IGVycm9yTWVzc2FnZTogeyBwYXR0ZXJuOiBtZXNzYWdlIH0gfSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhzY2hlbWEsIFwicGF0dGVyblwiLCBwcm9jZXNzUmVnRXhwKHJlZ2V4LCByZWZzKSwgbWVzc2FnZSwgcmVmcyk7XG4gICAgfVxufTtcbi8vIE11dGF0ZSB6LnN0cmluZy5yZWdleCgpIGluIGEgYmVzdCBhdHRlbXB0IHRvIGFjY29tbW9kYXRlIGZvciByZWdleCBmbGFncyB3aGVuIGFwcGx5UmVnZXhGbGFncyBpcyB0cnVlXG5jb25zdCBwcm9jZXNzUmVnRXhwID0gKHJlZ2V4T3JGdW5jdGlvbiwgcmVmcykgPT4ge1xuICAgIGNvbnN0IHJlZ2V4ID0gdHlwZW9mIHJlZ2V4T3JGdW5jdGlvbiA9PT0gXCJmdW5jdGlvblwiID8gcmVnZXhPckZ1bmN0aW9uKCkgOiByZWdleE9yRnVuY3Rpb247XG4gICAgaWYgKCFyZWZzLmFwcGx5UmVnZXhGbGFncyB8fCAhcmVnZXguZmxhZ3MpXG4gICAgICAgIHJldHVybiByZWdleC5zb3VyY2U7XG4gICAgLy8gQ3VycmVudGx5IGhhbmRsZWQgZmxhZ3NcbiAgICBjb25zdCBmbGFncyA9IHtcbiAgICAgICAgaTogcmVnZXguZmxhZ3MuaW5jbHVkZXMoXCJpXCIpLFxuICAgICAgICBtOiByZWdleC5mbGFncy5pbmNsdWRlcyhcIm1cIiksXG4gICAgICAgIHM6IHJlZ2V4LmZsYWdzLmluY2x1ZGVzKFwic1wiKSwgLy8gYC5gIG1hdGNoZXMgbmV3bGluZXNcbiAgICB9O1xuICAgIC8vIFRoZSBnZW5lcmFsIHByaW5jaXBsZSBoZXJlIGlzIHRvIHN0ZXAgdGhyb3VnaCBlYWNoIGNoYXJhY3Rlciwgb25lIGF0IGEgdGltZSwgYXBwbHlpbmcgbXV0YXRpb25zIGFzIGZsYWdzIHJlcXVpcmUuIFdlIGtlZXAgdHJhY2sgd2hlbiB0aGUgY3VycmVudCBjaGFyYWN0ZXIgaXMgZXNjYXBlZCwgYW5kIHdoZW4gaXQncyBpbnNpZGUgYSBncm91cCAvbGlrZSBbdGhpc10vIG9yIChhbHNvKSBhIHJhbmdlIGxpa2UgL1thLXpdLy4gVGhlIGZvbGxvd2luZyBpcyBmYWlybHkgYnJpdHRsZSBpbXBlcmF0aXZlIGNvZGU7IGVkaXQgYXQgeW91ciBwZXJpbCFcbiAgICBjb25zdCBzb3VyY2UgPSBmbGFncy5pID8gcmVnZXguc291cmNlLnRvTG93ZXJDYXNlKCkgOiByZWdleC5zb3VyY2U7XG4gICAgbGV0IHBhdHRlcm4gPSBcIlwiO1xuICAgIGxldCBpc0VzY2FwZWQgPSBmYWxzZTtcbiAgICBsZXQgaW5DaGFyR3JvdXAgPSBmYWxzZTtcbiAgICBsZXQgaW5DaGFyUmFuZ2UgPSBmYWxzZTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNvdXJjZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaXNFc2NhcGVkKSB7XG4gICAgICAgICAgICBwYXR0ZXJuICs9IHNvdXJjZVtpXTtcbiAgICAgICAgICAgIGlzRXNjYXBlZCA9IGZhbHNlO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZsYWdzLmkpIHtcbiAgICAgICAgICAgIGlmIChpbkNoYXJHcm91cCkge1xuICAgICAgICAgICAgICAgIGlmIChzb3VyY2VbaV0ubWF0Y2goL1thLXpdLykpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGluQ2hhclJhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXR0ZXJuICs9IHNvdXJjZVtpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdHRlcm4gKz0gYCR7c291cmNlW2kgLSAyXX0tJHtzb3VyY2VbaV19YC50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5DaGFyUmFuZ2UgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChzb3VyY2VbaSArIDFdID09PSBcIi1cIiAmJiBzb3VyY2VbaSArIDJdPy5tYXRjaCgvW2Etel0vKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGF0dGVybiArPSBzb3VyY2VbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICBpbkNoYXJSYW5nZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXR0ZXJuICs9IGAke3NvdXJjZVtpXX0ke3NvdXJjZVtpXS50b1VwcGVyQ2FzZSgpfWA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoc291cmNlW2ldLm1hdGNoKC9bYS16XS8pKSB7XG4gICAgICAgICAgICAgICAgcGF0dGVybiArPSBgWyR7c291cmNlW2ldfSR7c291cmNlW2ldLnRvVXBwZXJDYXNlKCl9XWA7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZsYWdzLm0pIHtcbiAgICAgICAgICAgIGlmIChzb3VyY2VbaV0gPT09IFwiXlwiKSB7XG4gICAgICAgICAgICAgICAgcGF0dGVybiArPSBgKF58KD88PVtcXHJcXG5dKSlgO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoc291cmNlW2ldID09PSBcIiRcIikge1xuICAgICAgICAgICAgICAgIHBhdHRlcm4gKz0gYCgkfCg/PVtcXHJcXG5dKSlgO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChmbGFncy5zICYmIHNvdXJjZVtpXSA9PT0gXCIuXCIpIHtcbiAgICAgICAgICAgIHBhdHRlcm4gKz0gaW5DaGFyR3JvdXAgPyBgJHtzb3VyY2VbaV19XFxyXFxuYCA6IGBbJHtzb3VyY2VbaV19XFxyXFxuXWA7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBwYXR0ZXJuICs9IHNvdXJjZVtpXTtcbiAgICAgICAgaWYgKHNvdXJjZVtpXSA9PT0gXCJcXFxcXCIpIHtcbiAgICAgICAgICAgIGlzRXNjYXBlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaW5DaGFyR3JvdXAgJiYgc291cmNlW2ldID09PSBcIl1cIikge1xuICAgICAgICAgICAgaW5DaGFyR3JvdXAgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghaW5DaGFyR3JvdXAgJiYgc291cmNlW2ldID09PSBcIltcIikge1xuICAgICAgICAgICAgaW5DaGFyR3JvdXAgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlZ2V4VGVzdCA9IG5ldyBSZWdFeHAocGF0dGVybik7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgY29uc29sZS53YXJuKGBDb3VsZCBub3QgY29udmVydCByZWdleCBwYXR0ZXJuIGF0ICR7cmVmcy5jdXJyZW50UGF0aC5qb2luKFwiL1wiKX0gdG8gYSBmbGFnLWluZGVwZW5kZW50IGZvcm0hIEZhbGxpbmcgYmFjayB0byB0aGUgZmxhZy1pZ25vcmFudCBzb3VyY2VgKTtcbiAgICAgICAgcmV0dXJuIHJlZ2V4LnNvdXJjZTtcbiAgICB9XG4gICAgcmV0dXJuIHBhdHRlcm47XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/string.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTupleDef: function() { return /* binding */ parseTupleDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy90dXBsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isc0RBQVE7QUFDdkM7QUFDQSwrREFBK0QsRUFBRTtBQUNqRSxhQUFhO0FBQ2I7QUFDQSw2QkFBNkIsc0RBQVE7QUFDckM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHNEQUFRO0FBQ3ZDO0FBQ0EsK0RBQStELEVBQUU7QUFDakUsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy90dXBsZS5qcz8xYmQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VUdXBsZURlZihkZWYsIHJlZnMpIHtcbiAgICBpZiAoZGVmLnJlc3QpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6IFwiYXJyYXlcIixcbiAgICAgICAgICAgIG1pbkl0ZW1zOiBkZWYuaXRlbXMubGVuZ3RoLFxuICAgICAgICAgICAgaXRlbXM6IGRlZi5pdGVtc1xuICAgICAgICAgICAgICAgIC5tYXAoKHgsIGkpID0+IHBhcnNlRGVmKHguX2RlZiwge1xuICAgICAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcIml0ZW1zXCIsIGAke2l9YF0sXG4gICAgICAgICAgICB9KSlcbiAgICAgICAgICAgICAgICAucmVkdWNlKChhY2MsIHgpID0+ICh4ID09PSB1bmRlZmluZWQgPyBhY2MgOiBbLi4uYWNjLCB4XSksIFtdKSxcbiAgICAgICAgICAgIGFkZGl0aW9uYWxJdGVtczogcGFyc2VEZWYoZGVmLnJlc3QuX2RlZiwge1xuICAgICAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFkZGl0aW9uYWxJdGVtc1wiXSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6IFwiYXJyYXlcIixcbiAgICAgICAgICAgIG1pbkl0ZW1zOiBkZWYuaXRlbXMubGVuZ3RoLFxuICAgICAgICAgICAgbWF4SXRlbXM6IGRlZi5pdGVtcy5sZW5ndGgsXG4gICAgICAgICAgICBpdGVtczogZGVmLml0ZW1zXG4gICAgICAgICAgICAgICAgLm1hcCgoeCwgaSkgPT4gcGFyc2VEZWYoeC5fZGVmLCB7XG4gICAgICAgICAgICAgICAgLi4ucmVmcyxcbiAgICAgICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwiaXRlbXNcIiwgYCR7aX1gXSxcbiAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgICAgIC5yZWR1Y2UoKGFjYywgeCkgPT4gKHggPT09IHVuZGVmaW5lZCA/IGFjYyA6IFsuLi5hY2MsIHhdKSwgW10pLFxuICAgICAgICB9O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseUndefinedDef: function() { return /* binding */ parseUndefinedDef; }\n/* harmony export */ });\nfunction parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy91bmRlZmluZWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQSxlQUFlO0FBQ2Y7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGFpLXNkay91aS11dGlscy9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvdW5kZWZpbmVkLmpzPzU0NTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHBhcnNlVW5kZWZpbmVkRGVmKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5vdDoge30sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/union.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/union.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseUnionDef: function() { return /* binding */ parseUnionDef; },\n/* harmony export */   primitiveMappings: function() { return /* binding */ primitiveMappings; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nfunction parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy91bmlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEM7QUFDbkM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJGQUEyRjtBQUMzRjtBQUNBLDZEQUE2RDtBQUM3RDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNEQUFRO0FBQy9CO0FBQ0EsdURBQXVELEVBQUU7QUFDekQsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixRQUFRO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy91bmlvbi5qcz9hNDEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgY29uc3QgcHJpbWl0aXZlTWFwcGluZ3MgPSB7XG4gICAgWm9kU3RyaW5nOiBcInN0cmluZ1wiLFxuICAgIFpvZE51bWJlcjogXCJudW1iZXJcIixcbiAgICBab2RCaWdJbnQ6IFwiaW50ZWdlclwiLFxuICAgIFpvZEJvb2xlYW46IFwiYm9vbGVhblwiLFxuICAgIFpvZE51bGw6IFwibnVsbFwiLFxufTtcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVVuaW9uRGVmKGRlZiwgcmVmcykge1xuICAgIGlmIChyZWZzLnRhcmdldCA9PT0gXCJvcGVuQXBpM1wiKVxuICAgICAgICByZXR1cm4gYXNBbnlPZihkZWYsIHJlZnMpO1xuICAgIGNvbnN0IG9wdGlvbnMgPSBkZWYub3B0aW9ucyBpbnN0YW5jZW9mIE1hcCA/IEFycmF5LmZyb20oZGVmLm9wdGlvbnMudmFsdWVzKCkpIDogZGVmLm9wdGlvbnM7XG4gICAgLy8gVGhpcyBibG9ja3MgdHJpZXMgdG8gbG9vayBhaGVhZCBhIGJpdCB0byBwcm9kdWNlIG5pY2VyIGxvb2tpbmcgc2NoZW1hcyB3aXRoIHR5cGUgYXJyYXkgaW5zdGVhZCBvZiBhbnlPZi5cbiAgICBpZiAob3B0aW9ucy5ldmVyeSgoeCkgPT4geC5fZGVmLnR5cGVOYW1lIGluIHByaW1pdGl2ZU1hcHBpbmdzICYmXG4gICAgICAgICgheC5fZGVmLmNoZWNrcyB8fCAheC5fZGVmLmNoZWNrcy5sZW5ndGgpKSkge1xuICAgICAgICAvLyBhbGwgdHlwZXMgaW4gdW5pb24gYXJlIHByaW1pdGl2ZSBhbmQgbGFjayBjaGVja3MsIHNvIG1pZ2h0IGFzIHdlbGwgc3F1YXNoIGludG8ge3R5cGU6IFsuLi5dfVxuICAgICAgICBjb25zdCB0eXBlcyA9IG9wdGlvbnMucmVkdWNlKCh0eXBlcywgeCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdHlwZSA9IHByaW1pdGl2ZU1hcHBpbmdzW3guX2RlZi50eXBlTmFtZV07IC8vQ2FuIGJlIHNhZmVseSBjYXN0ZWQgZHVlIHRvIHJvdyA0M1xuICAgICAgICAgICAgcmV0dXJuIHR5cGUgJiYgIXR5cGVzLmluY2x1ZGVzKHR5cGUpID8gWy4uLnR5cGVzLCB0eXBlXSA6IHR5cGVzO1xuICAgICAgICB9LCBbXSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0eXBlOiB0eXBlcy5sZW5ndGggPiAxID8gdHlwZXMgOiB0eXBlc1swXSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAob3B0aW9ucy5ldmVyeSgoeCkgPT4geC5fZGVmLnR5cGVOYW1lID09PSBcIlpvZExpdGVyYWxcIiAmJiAheC5kZXNjcmlwdGlvbikpIHtcbiAgICAgICAgLy8gYWxsIG9wdGlvbnMgbGl0ZXJhbHNcbiAgICAgICAgY29uc3QgdHlwZXMgPSBvcHRpb25zLnJlZHVjZSgoYWNjLCB4KSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0eXBlID0gdHlwZW9mIHguX2RlZi52YWx1ZTtcbiAgICAgICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJzdHJpbmdcIjpcbiAgICAgICAgICAgICAgICBjYXNlIFwibnVtYmVyXCI6XG4gICAgICAgICAgICAgICAgY2FzZSBcImJvb2xlYW5cIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsuLi5hY2MsIHR5cGVdO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJiaWdpbnRcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsuLi5hY2MsIFwiaW50ZWdlclwiXTtcbiAgICAgICAgICAgICAgICBjYXNlIFwib2JqZWN0XCI6XG4gICAgICAgICAgICAgICAgICAgIGlmICh4Ll9kZWYudmFsdWUgPT09IG51bGwpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWy4uLmFjYywgXCJudWxsXCJdO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJzeW1ib2xcIjpcbiAgICAgICAgICAgICAgICBjYXNlIFwidW5kZWZpbmVkXCI6XG4gICAgICAgICAgICAgICAgY2FzZSBcImZ1bmN0aW9uXCI6XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgW10pO1xuICAgICAgICBpZiAodHlwZXMubGVuZ3RoID09PSBvcHRpb25zLmxlbmd0aCkge1xuICAgICAgICAgICAgLy8gYWxsIHRoZSBsaXRlcmFscyBhcmUgcHJpbWl0aXZlLCBhcyBmYXIgYXMgbnVsbCBjYW4gYmUgY29uc2lkZXJlZCBwcmltaXRpdmVcbiAgICAgICAgICAgIGNvbnN0IHVuaXF1ZVR5cGVzID0gdHlwZXMuZmlsdGVyKCh4LCBpLCBhKSA9PiBhLmluZGV4T2YoeCkgPT09IGkpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiB1bmlxdWVUeXBlcy5sZW5ndGggPiAxID8gdW5pcXVlVHlwZXMgOiB1bmlxdWVUeXBlc1swXSxcbiAgICAgICAgICAgICAgICBlbnVtOiBvcHRpb25zLnJlZHVjZSgoYWNjLCB4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhY2MuaW5jbHVkZXMoeC5fZGVmLnZhbHVlKSA/IGFjYyA6IFsuLi5hY2MsIHguX2RlZi52YWx1ZV07XG4gICAgICAgICAgICAgICAgfSwgW10pLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChvcHRpb25zLmV2ZXJ5KCh4KSA9PiB4Ll9kZWYudHlwZU5hbWUgPT09IFwiWm9kRW51bVwiKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgICAgICAgIGVudW06IG9wdGlvbnMucmVkdWNlKChhY2MsIHgpID0+IFtcbiAgICAgICAgICAgICAgICAuLi5hY2MsXG4gICAgICAgICAgICAgICAgLi4ueC5fZGVmLnZhbHVlcy5maWx0ZXIoKHgpID0+ICFhY2MuaW5jbHVkZXMoeCkpLFxuICAgICAgICAgICAgXSwgW10pLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gYXNBbnlPZihkZWYsIHJlZnMpO1xufVxuY29uc3QgYXNBbnlPZiA9IChkZWYsIHJlZnMpID0+IHtcbiAgICBjb25zdCBhbnlPZiA9IChkZWYub3B0aW9ucyBpbnN0YW5jZW9mIE1hcFxuICAgICAgICA/IEFycmF5LmZyb20oZGVmLm9wdGlvbnMudmFsdWVzKCkpXG4gICAgICAgIDogZGVmLm9wdGlvbnMpXG4gICAgICAgIC5tYXAoKHgsIGkpID0+IHBhcnNlRGVmKHguX2RlZiwge1xuICAgICAgICAuLi5yZWZzLFxuICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwiYW55T2ZcIiwgYCR7aX1gXSxcbiAgICB9KSlcbiAgICAgICAgLmZpbHRlcigoeCkgPT4gISF4ICYmXG4gICAgICAgICghcmVmcy5zdHJpY3RVbmlvbnMgfHxcbiAgICAgICAgICAgICh0eXBlb2YgeCA9PT0gXCJvYmplY3RcIiAmJiBPYmplY3Qua2V5cyh4KS5sZW5ndGggPiAwKSkpO1xuICAgIHJldHVybiBhbnlPZi5sZW5ndGggPyB7IGFueU9mIH0gOiB1bmRlZmluZWQ7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/union.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseUnknownDef: function() { return /* binding */ parseUnknownDef; }\n/* harmony export */ });\nfunction parseUnknownDef() {\n    return {};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy91bmtub3duLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhaS1zZGsvdWktdXRpbHMvbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL3Vua25vd24uanM/ODk3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcGFyc2VVbmtub3duRGVmKCkge1xuICAgIHJldHVybiB7fTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   zodToJsonSchema: function() { return /* binding */ zodToJsonSchema; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parseDef.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n/* harmony import */ var _Refs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Refs.js */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/Refs.js\");\n\n\nconst zodToJsonSchema = (schema, options) => {\n    const refs = (0,_Refs_js__WEBPACK_IMPORTED_MODULE_1__.getRefs)(options);\n    const definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? {},\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? {};\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    return combined;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vem9kVG9Kc29uU2NoZW1hLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUNMO0FBQ3BDO0FBQ0EsaUJBQWlCLGlEQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzREFBUTtBQUM1QjtBQUNBO0FBQ0EsYUFBYSxhQUFhO0FBQzFCLFNBQVMsS0FBSztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixzREFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYWktc2RrL3VpLXV0aWxzL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vem9kVG9Kc29uU2NoZW1hLmpzP2MzYTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VEZWYgfSBmcm9tIFwiLi9wYXJzZURlZi5qc1wiO1xuaW1wb3J0IHsgZ2V0UmVmcyB9IGZyb20gXCIuL1JlZnMuanNcIjtcbmNvbnN0IHpvZFRvSnNvblNjaGVtYSA9IChzY2hlbWEsIG9wdGlvbnMpID0+IHtcbiAgICBjb25zdCByZWZzID0gZ2V0UmVmcyhvcHRpb25zKTtcbiAgICBjb25zdCBkZWZpbml0aW9ucyA9IHR5cGVvZiBvcHRpb25zID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuZGVmaW5pdGlvbnNcbiAgICAgICAgPyBPYmplY3QuZW50cmllcyhvcHRpb25zLmRlZmluaXRpb25zKS5yZWR1Y2UoKGFjYywgW25hbWUsIHNjaGVtYV0pID0+ICh7XG4gICAgICAgICAgICAuLi5hY2MsXG4gICAgICAgICAgICBbbmFtZV06IHBhcnNlRGVmKHNjaGVtYS5fZGVmLCB7XG4gICAgICAgICAgICAgICAgLi4ucmVmcyxcbiAgICAgICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuYmFzZVBhdGgsIHJlZnMuZGVmaW5pdGlvblBhdGgsIG5hbWVdLFxuICAgICAgICAgICAgfSwgdHJ1ZSkgPz8ge30sXG4gICAgICAgIH0pLCB7fSlcbiAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgY29uc3QgbmFtZSA9IHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiXG4gICAgICAgID8gb3B0aW9uc1xuICAgICAgICA6IG9wdGlvbnM/Lm5hbWVTdHJhdGVneSA9PT0gXCJ0aXRsZVwiXG4gICAgICAgICAgICA/IHVuZGVmaW5lZFxuICAgICAgICAgICAgOiBvcHRpb25zPy5uYW1lO1xuICAgIGNvbnN0IG1haW4gPSBwYXJzZURlZihzY2hlbWEuX2RlZiwgbmFtZSA9PT0gdW5kZWZpbmVkXG4gICAgICAgID8gcmVmc1xuICAgICAgICA6IHtcbiAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuYmFzZVBhdGgsIHJlZnMuZGVmaW5pdGlvblBhdGgsIG5hbWVdLFxuICAgICAgICB9LCBmYWxzZSkgPz8ge307XG4gICAgY29uc3QgdGl0bGUgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICBvcHRpb25zLm5hbWUgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICBvcHRpb25zLm5hbWVTdHJhdGVneSA9PT0gXCJ0aXRsZVwiXG4gICAgICAgID8gb3B0aW9ucy5uYW1lXG4gICAgICAgIDogdW5kZWZpbmVkO1xuICAgIGlmICh0aXRsZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG1haW4udGl0bGUgPSB0aXRsZTtcbiAgICB9XG4gICAgY29uc3QgY29tYmluZWQgPSBuYW1lID09PSB1bmRlZmluZWRcbiAgICAgICAgPyBkZWZpbml0aW9uc1xuICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgLi4ubWFpbixcbiAgICAgICAgICAgICAgICBbcmVmcy5kZWZpbml0aW9uUGF0aF06IGRlZmluaXRpb25zLFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgOiBtYWluXG4gICAgICAgIDoge1xuICAgICAgICAgICAgJHJlZjogW1xuICAgICAgICAgICAgICAgIC4uLihyZWZzLiRyZWZTdHJhdGVneSA9PT0gXCJyZWxhdGl2ZVwiID8gW10gOiByZWZzLmJhc2VQYXRoKSxcbiAgICAgICAgICAgICAgICByZWZzLmRlZmluaXRpb25QYXRoLFxuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBdLmpvaW4oXCIvXCIpLFxuICAgICAgICAgICAgW3JlZnMuZGVmaW5pdGlvblBhdGhdOiB7XG4gICAgICAgICAgICAgICAgLi4uZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICAgICAgW25hbWVdOiBtYWluLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICBpZiAocmVmcy50YXJnZXQgPT09IFwianNvblNjaGVtYTdcIikge1xuICAgICAgICBjb21iaW5lZC4kc2NoZW1hID0gXCJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSNcIjtcbiAgICB9XG4gICAgZWxzZSBpZiAocmVmcy50YXJnZXQgPT09IFwianNvblNjaGVtYTIwMTktMDlcIikge1xuICAgICAgICBjb21iaW5lZC4kc2NoZW1hID0gXCJodHRwczovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC8yMDE5LTA5L3NjaGVtYSNcIjtcbiAgICB9XG4gICAgcmV0dXJuIGNvbWJpbmVkO1xufTtcbmV4cG9ydCB7IHpvZFRvSnNvblNjaGVtYSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@assistant-ui/react-ai-sdk/dist/index.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@assistant-ui/react-ai-sdk/dist/index.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVercelAIMessage: function() { return /* binding */ getVercelAIMessages; },\n/* harmony export */   getVercelAIMessages: function() { return /* binding */ getVercelAIMessages; },\n/* harmony export */   getVercelRSCMessage: function() { return /* binding */ getVercelRSCMessage; },\n/* harmony export */   useVercelRSCRuntime: function() { return /* binding */ useVercelRSCRuntime; },\n/* harmony export */   useVercelUseAssistantRuntime: function() { return /* binding */ useVercelUseAssistantRuntime; },\n/* harmony export */   useVercelUseChatRuntime: function() { return /* binding */ useVercelUseChatRuntime; }\n/* harmony export */ });\n/* harmony import */ var _assistant_ui_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @assistant-ui/react */ \"(app-pages-browser)/./node_modules/@assistant-ui/react/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var _ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ai-sdk/ui-utils */ \"(app-pages-browser)/./node_modules/@ai-sdk/ui-utils/node_modules/@ai-sdk/provider-utils/dist/index.mjs\");\n// src/rsc/useVercelRSCRuntime.tsx\n\nvar vercelToThreadMessage = (converter, rawMessage) => {\n  const message = converter(rawMessage);\n  return {\n    id: message.id,\n    role: message.role,\n    content: [{ type: \"ui\", display: message.display }],\n    createdAt: message.createdAt\n  };\n};\nvar useVercelRSCRuntime = (adapter) => {\n  const onNew = adapter.onNew ?? adapter.append;\n  if (!onNew)\n    throw new Error(\"You must pass a onNew function to useVercelRSCRuntime\");\n  const eAdapter = {\n    isRunning: adapter.isRunning,\n    messages: adapter.messages,\n    onNew,\n    onEdit: adapter.onEdit ?? adapter.edit,\n    onReload: adapter.onReload ?? adapter.reload,\n    convertMessage: (m) => vercelToThreadMessage(\n      adapter.convertMessage ?? ((m2) => m2),\n      m\n    ),\n    unstable_capabilities: {\n      copy: false\n    }\n  };\n  const runtime = (0,_assistant_ui_react__WEBPACK_IMPORTED_MODULE_0__.useExternalStoreRuntime)(eAdapter);\n  return runtime;\n};\n\n// src/rsc/getVercelRSCMessage.tsx\n\nvar symbolInnerRSCMessage = Symbol(\"innerVercelRSCMessage\");\nvar getVercelRSCMessage = (message) => {\n  return (0,_assistant_ui_react__WEBPACK_IMPORTED_MODULE_0__.getExternalStoreMessage)(message);\n};\n\n// src/ui/utils/convertMessage.ts\nvar convertMessage = (message) => {\n  switch (message.role) {\n    case \"user\":\n      return {\n        role: \"user\",\n        id: message.id,\n        createdAt: message.createdAt,\n        content: message.content,\n        attachments: message.experimental_attachments?.map(\n          (attachment, idx) => ({\n            id: idx.toString(),\n            type: \"file\",\n            name: attachment.name ?? attachment.url,\n            content: [],\n            status: { type: \"complete\" }\n          })\n        )\n      };\n    case \"system\":\n      return {\n        role: \"system\",\n        id: message.id,\n        createdAt: message.createdAt,\n        content: message.content\n      };\n    case \"assistant\":\n      return {\n        role: \"assistant\",\n        id: message.id,\n        createdAt: message.createdAt,\n        content: [\n          ...message.content ? [\n            {\n              type: \"text\",\n              text: message.content\n            }\n          ] : [],\n          ...message.toolInvocations?.map(\n            (t) => ({\n              type: \"tool-call\",\n              toolName: t.toolName,\n              toolCallId: t.toolCallId,\n              argsText: JSON.stringify(t.args),\n              args: t.args,\n              result: \"result\" in t ? t.result : void 0\n            })\n          ) ?? []\n        ]\n      };\n    case \"data\": {\n      if (!message.data || !(typeof message.data === \"object\") || Array.isArray(message.data))\n        return [];\n      const data = message.data;\n      if (data.type === \"tool-call\") {\n        return {\n          role: \"assistant\",\n          id: message.id,\n          createdAt: message.createdAt,\n          content: [data]\n        };\n      } else if (data.type === \"tool-result\") {\n        return {\n          role: \"tool\",\n          toolCallId: data.toolCallId,\n          result: data.result\n        };\n      }\n      return [];\n    }\n    default:\n      const _unsupported = message.role;\n      throw new Error(\n        `You have a message with an unsupported role. The role ${_unsupported} is not supported.`\n      );\n  }\n};\n\n// src/ui/use-chat/useVercelUseChatRuntime.tsx\n\n\n// src/ui/utils/useInputSync.tsx\n\n\nvar useInputSync = (helpers, runtime) => {\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (runtime.thread.composer.getState().text !== helpers.input) {\n      runtime.thread.composer.setText(helpers.input);\n    }\n  }, [helpers, runtime]);\n  const handleThreadUpdate = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef)(() => {\n    if (runtime.thread.composer.getState().text !== helpers.input) {\n      helpers.setInput(runtime.thread.composer.getState().text);\n    }\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    return runtime.thread.subscribe(handleThreadUpdate);\n  }, [runtime, handleThreadUpdate]);\n};\n\n// src/ui/utils/sliceMessagesUntil.tsx\nvar sliceMessagesUntil = (messages, messageId) => {\n  if (messageId == null) return [];\n  let messageIdx = messages.findIndex((m) => m.id === messageId);\n  if (messageIdx === -1)\n    throw new Error(\n      \"useVercelAIThreadState: Message not found. This is liekly an internal bug in assistant-ui.\"\n    );\n  while (messages[messageIdx + 1]?.role === \"assistant\") {\n    messageIdx++;\n  }\n  return messages.slice(0, messageIdx + 1);\n};\n\n// src/ui/utils/toCreateMessage.ts\nvar toCreateMessage = async (message) => {\n  const content = message.content.filter((part) => part.type === \"text\").map((t) => t.text).join(\"\\n\\n\");\n  const images = message.content.filter((part) => part.type === \"image\").map((part) => ({ url: part.image }));\n  return {\n    role: message.role,\n    content,\n    experimental_attachments: [\n      ...images,\n      ...await Promise.all(\n        (message.attachments ?? []).map(async (m) => {\n          if (m.file == null)\n            throw new Error(\"Attachment did not contain a file\");\n          return {\n            contentType: m.file.type,\n            name: m.file.name,\n            url: await getFileDataURL(m.file)\n          };\n        })\n      )\n    ]\n  };\n};\nvar getFileDataURL = (file) => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = (error) => reject(error);\n  reader.readAsDataURL(file);\n});\n\n// src/ui/utils/vercelAttachmentAdapter.ts\n\nvar vercelAttachmentAdapter = {\n  accept: \"image/*, text/plain, text/html, text/markdown, text/csv, text/xml, text/json, text/css\",\n  async add({ file }) {\n    return {\n      id: (0,_ai_sdk_ui_utils__WEBPACK_IMPORTED_MODULE_3__.generateId)(),\n      type: \"file\",\n      name: file.name,\n      file,\n      contentType: file.type,\n      content: [],\n      status: { type: \"requires-action\", reason: \"composer-send\" }\n    };\n  },\n  async send(attachment) {\n    return {\n      ...attachment,\n      status: { type: \"complete\" },\n      content: []\n    };\n  },\n  async remove() {\n  }\n};\n\n// src/ui/getVercelAIMessages.tsx\n\nvar getVercelAIMessages = (message) => {\n  return (0,_assistant_ui_react__WEBPACK_IMPORTED_MODULE_0__.getExternalStoreMessage)(message);\n};\n\n// src/ui/use-chat/useVercelUseChatRuntime.tsx\nvar useVercelUseChatRuntime = (chatHelpers) => {\n  const messages = (0,_assistant_ui_react__WEBPACK_IMPORTED_MODULE_0__.useExternalMessageConverter)({\n    callback: convertMessage,\n    isRunning: chatHelpers.isLoading,\n    messages: chatHelpers.messages\n  });\n  const runtime = (0,_assistant_ui_react__WEBPACK_IMPORTED_MODULE_0__.useExternalStoreRuntime)({\n    isRunning: chatHelpers.isLoading,\n    messages,\n    setMessages: (messages2) => chatHelpers.setMessages(messages2.map(getVercelAIMessages).flat()),\n    onCancel: async () => chatHelpers.stop(),\n    onNew: async (message) => {\n      await chatHelpers.append(await toCreateMessage(message));\n    },\n    onEdit: async (message) => {\n      const newMessages = sliceMessagesUntil(\n        chatHelpers.messages,\n        message.parentId\n      );\n      chatHelpers.setMessages(newMessages);\n      await chatHelpers.append(await toCreateMessage(message));\n    },\n    onReload: async (parentId) => {\n      const newMessages = sliceMessagesUntil(chatHelpers.messages, parentId);\n      chatHelpers.setMessages(newMessages);\n      await chatHelpers.reload();\n    },\n    onAddToolResult: ({ toolCallId, result }) => {\n      chatHelpers.addToolResult({ toolCallId, result });\n    },\n    onSwitchToNewThread: () => {\n      chatHelpers.messages = [];\n      chatHelpers.input = \"\";\n      chatHelpers.setMessages([]);\n      chatHelpers.setInput(\"\");\n    },\n    adapters: {\n      attachments: vercelAttachmentAdapter\n    }\n  });\n  useInputSync(chatHelpers, runtime);\n  return runtime;\n};\n\n// src/ui/use-assistant/useVercelUseAssistantRuntime.tsx\n\nvar useVercelUseAssistantRuntime = (assistantHelpers) => {\n  const messages = (0,_assistant_ui_react__WEBPACK_IMPORTED_MODULE_0__.useExternalMessageConverter)({\n    callback: convertMessage,\n    isRunning: assistantHelpers.status === \"in_progress\",\n    messages: assistantHelpers.messages\n  });\n  const runtime = (0,_assistant_ui_react__WEBPACK_IMPORTED_MODULE_0__.useExternalStoreRuntime)({\n    isRunning: assistantHelpers.status === \"in_progress\",\n    messages,\n    onCancel: async () => assistantHelpers.stop(),\n    onNew: async (message) => {\n      await assistantHelpers.append(await toCreateMessage(message));\n    },\n    onSwitchToNewThread: () => {\n      assistantHelpers.messages = [];\n      assistantHelpers.input = \"\";\n      assistantHelpers.setMessages([]);\n      assistantHelpers.setInput(\"\");\n    },\n    adapters: {\n      attachments: vercelAttachmentAdapter\n    }\n  });\n  useInputSync(assistantHelpers, runtime);\n  return runtime;\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@assistant-ui/react-ai-sdk/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@assistant-ui/react/dist/chunk-BJPOCE4O.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@assistant-ui/react/dist/chunk-BJPOCE4O.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __export: function() { return /* binding */ __export; }
/* harmony export */ });
/* __next_internal_client_entry_do_not_use__ __export auto */ var __defProp = Object.defineProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
 //# sourceMappingURL=chunk-BJPOCE4O.mjs.map


/***/ }),

/***/ "(app-pages-browser)/./node_modules/@assistant-ui/react/dist/chunk-TWIMAOZR.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@assistant-ui/react/dist/chunk-TWIMAOZR.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PipeableTransformStream: function() { return /* binding */ PipeableTransformStream; },\n/* harmony export */   createEdgeRuntimeAPI: function() { return /* binding */ createEdgeRuntimeAPI; },\n/* harmony export */   getEdgeRuntimeResponse: function() { return /* binding */ getEdgeRuntimeResponse; },\n/* harmony export */   getEdgeRuntimeStream: function() { return /* binding */ getEdgeRuntimeStream; },\n/* harmony export */   mergeModelConfigs: function() { return /* binding */ mergeModelConfigs; },\n/* harmony export */   runResultStream: function() { return /* binding */ runResultStream; },\n/* harmony export */   streamPartEncoderStream: function() { return /* binding */ streamPartEncoderStream; },\n/* harmony export */   toCoreMessage: function() { return /* binding */ toCoreMessage; },\n/* harmony export */   toCoreMessages: function() { return /* binding */ toCoreMessages; },\n/* harmony export */   toLanguageModelMessages: function() { return /* binding */ toLanguageModelMessages; },\n/* harmony export */   toLanguageModelTools: function() { return /* binding */ toLanguageModelTools; },\n/* harmony export */   toolResultStream: function() { return /* binding */ toolResultStream; }\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod-to-json-schema */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/index.js\");\n/* harmony import */ var secure_json_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! secure-json-parse */ \"(app-pages-browser)/./node_modules/secure-json-parse/index.js\");\n/* __next_internal_client_entry_do_not_use__ mergeModelConfigs,toLanguageModelMessages,toLanguageModelTools,toolResultStream,runResultStream,toCoreMessages,toCoreMessage,PipeableTransformStream,streamPartEncoderStream,getEdgeRuntimeStream,getEdgeRuntimeResponse,createEdgeRuntimeAPI auto */ // src/runtimes/edge/converters/toLanguageModelMessages.ts\nvar assistantMessageSplitter = ()=>{\n    const stash = [];\n    let assistantMessage = {\n        role: \"assistant\",\n        content: []\n    };\n    let toolMessage = {\n        role: \"tool\",\n        content: []\n    };\n    return {\n        addTextContentPart: (part)=>{\n            if (toolMessage.content.length > 0) {\n                stash.push(assistantMessage);\n                stash.push(toolMessage);\n                assistantMessage = {\n                    role: \"assistant\",\n                    content: []\n                };\n                toolMessage = {\n                    role: \"tool\",\n                    content: []\n                };\n            }\n            assistantMessage.content.push(part);\n        },\n        addToolCallPart: (part)=>{\n            assistantMessage.content.push({\n                type: \"tool-call\",\n                toolCallId: part.toolCallId,\n                toolName: part.toolName,\n                args: part.args\n            });\n            var _part_result, _part_isError;\n            toolMessage.content.push({\n                type: \"tool-result\",\n                toolCallId: part.toolCallId,\n                toolName: part.toolName,\n                result: (_part_result = part.result) !== null && _part_result !== void 0 ? _part_result : \"<no result>\",\n                isError: (_part_isError = part.isError) !== null && _part_isError !== void 0 ? _part_isError : false\n            });\n        },\n        getMessages: ()=>{\n            if (toolMessage.content.length > 0) {\n                return [\n                    ...stash,\n                    assistantMessage,\n                    toolMessage\n                ];\n            }\n            return [\n                ...stash,\n                assistantMessage\n            ];\n        }\n    };\n};\nfunction toLanguageModelMessages(message) {\n    return message.flatMap((message2)=>{\n        const role = message2.role;\n        switch(role){\n            case \"system\":\n                {\n                    return [\n                        {\n                            role: \"system\",\n                            content: message2.content[0].text\n                        }\n                    ];\n                }\n            case \"user\":\n                {\n                    const msg = {\n                        role: \"user\",\n                        content: message2.content.map((part)=>{\n                            const type = part.type;\n                            switch(type){\n                                case \"text\":\n                                    {\n                                        return part;\n                                    }\n                                case \"image\":\n                                    {\n                                        return {\n                                            type: \"image\",\n                                            image: new URL(part.image)\n                                        };\n                                    }\n                                default:\n                                    {\n                                        const unhandledType = type;\n                                        throw new Error(\"Unspported content part type: \".concat(unhandledType));\n                                    }\n                            }\n                        })\n                    };\n                    return [\n                        msg\n                    ];\n                }\n            case \"assistant\":\n                {\n                    const splitter = assistantMessageSplitter();\n                    for (const part of message2.content){\n                        const type = part.type;\n                        switch(type){\n                            case \"text\":\n                                {\n                                    splitter.addTextContentPart(part);\n                                    break;\n                                }\n                            case \"tool-call\":\n                                {\n                                    splitter.addToolCallPart(part);\n                                    break;\n                                }\n                            default:\n                                {\n                                    const unhandledType = type;\n                                    throw new Error(\"Unhandled content part type: \".concat(unhandledType));\n                                }\n                        }\n                    }\n                    return splitter.getMessages();\n                }\n            default:\n                {\n                    const unhandledRole = role;\n                    throw new Error(\"Unknown message role: \".concat(unhandledRole));\n                }\n        }\n    });\n}\n// src/runtimes/edge/converters/toLanguageModelTools.ts\n\n\nvar toLanguageModelTools = (tools)=>{\n    return Object.entries(tools).map((param)=>{\n        let [name, tool] = param;\n        return {\n            type: \"function\",\n            name,\n            ...tool.description ? {\n                description: tool.description\n            } : void 0,\n            parameters: tool.parameters instanceof zod__WEBPACK_IMPORTED_MODULE_1__.z.ZodType ? (0,zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(tool.parameters) : tool.parameters\n        };\n    });\n};\n// src/runtimes/edge/converters/toCoreMessages.ts\nvar toCoreMessages = (message)=>{\n    return message.map(toCoreMessage);\n};\nvar toCoreMessage = (message)=>{\n    const role = message.role;\n    switch(role){\n        case \"assistant\":\n            return {\n                role,\n                content: message.content.map((part)=>{\n                    if (part.type === \"ui\") throw new Error(\"UI parts are not supported\");\n                    if (part.type === \"tool-call\") {\n                        const { argsText, ...rest } = part;\n                        return rest;\n                    }\n                    return part;\n                })\n            };\n        case \"user\":\n            return {\n                role,\n                content: [\n                    ...message.content.map((part)=>{\n                        if (part.type === \"ui\") throw new Error(\"UI parts are not supported\");\n                        return part;\n                    }),\n                    ...message.attachments.map((a)=>a.content).flat()\n                ]\n            };\n        case \"system\":\n            return {\n                role,\n                content: message.content\n            };\n        default:\n            {\n                const unsupportedRole = role;\n                throw new Error(\"Unknown message role: \".concat(unsupportedRole));\n            }\n    }\n};\n// src/runtimes/edge/streams/assistantEncoderStream.ts\nfunction assistantEncoderStream() {\n    const toolCalls = /* @__PURE__ */ new Set();\n    return new TransformStream({\n        transform (chunk, controller) {\n            const chunkType = chunk.type;\n            switch(chunkType){\n                case \"text-delta\":\n                    {\n                        controller.enqueue({\n                            type: \"0\" /* TextDelta */ ,\n                            value: chunk.textDelta\n                        });\n                        break;\n                    }\n                case \"tool-call-delta\":\n                    {\n                        if (!toolCalls.has(chunk.toolCallId)) {\n                            toolCalls.add(chunk.toolCallId);\n                            controller.enqueue({\n                                type: \"b\" /* ToolCallBegin */ ,\n                                value: {\n                                    toolCallId: chunk.toolCallId,\n                                    toolName: chunk.toolName\n                                }\n                            });\n                        }\n                        controller.enqueue({\n                            type: \"c\" /* ToolCallDelta */ ,\n                            value: {\n                                toolCallId: chunk.toolCallId,\n                                argsTextDelta: chunk.argsTextDelta\n                            }\n                        });\n                        break;\n                    }\n                // ignore\n                case \"tool-call\":\n                case \"response-metadata\":\n                    break;\n                case \"tool-result\":\n                    {\n                        controller.enqueue({\n                            type: \"a\" /* ToolCallResult */ ,\n                            value: {\n                                toolCallId: chunk.toolCallId,\n                                result: chunk.result\n                            }\n                        });\n                        break;\n                    }\n                case \"step-finish\":\n                    {\n                        const { type, ...rest } = chunk;\n                        controller.enqueue({\n                            type: \"e\" /* StepFinish */ ,\n                            value: rest\n                        });\n                        break;\n                    }\n                case \"finish\":\n                    {\n                        const { type, ...rest } = chunk;\n                        controller.enqueue({\n                            type: \"d\" /* Finish */ ,\n                            value: rest\n                        });\n                        break;\n                    }\n                case \"error\":\n                    {\n                        controller.enqueue({\n                            type: \"3\" /* Error */ ,\n                            value: chunk.error\n                        });\n                        break;\n                    }\n                default:\n                    {\n                        const unhandledType = chunkType;\n                        throw new Error(\"Unhandled chunk type: \".concat(unhandledType));\n                    }\n            }\n        }\n    });\n}\n// src/types/ModelConfigTypes.ts\n\nvar LanguageModelV1CallSettingsSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    maxTokens: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().int().positive().optional(),\n    temperature: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().optional(),\n    topP: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().optional(),\n    presencePenalty: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().optional(),\n    frequencyPenalty: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().optional(),\n    seed: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().int().optional(),\n    headers: zod__WEBPACK_IMPORTED_MODULE_1__.z.record(zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional()).optional()\n});\nvar LanguageModelConfigSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    apiKey: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    baseUrl: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    modelName: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional()\n});\nvar mergeModelConfigs = (configSet)=>{\n    const configs = Array.from(configSet).map((c)=>c.getModelConfig()).sort((a, b)=>{\n        var _b_priority, _a_priority;\n        return ((_b_priority = b.priority) !== null && _b_priority !== void 0 ? _b_priority : 0) - ((_a_priority = a.priority) !== null && _a_priority !== void 0 ? _a_priority : 0);\n    });\n    return configs.reduce((acc, config)=>{\n        if (config.system) {\n            if (acc.system) {\n                acc.system += \"\\n\\n\".concat(config.system);\n            } else {\n                acc.system = config.system;\n            }\n        }\n        if (config.tools) {\n            for (const [name, tool] of Object.entries(config.tools)){\n                var _acc_tools;\n                if ((_acc_tools = acc.tools) === null || _acc_tools === void 0 ? void 0 : _acc_tools[name]) {\n                    throw new Error(\"You tried to define a tool with the name \".concat(name, \", but it already exists.\"));\n                }\n                if (!acc.tools) acc.tools = {};\n                acc.tools[name] = tool;\n            }\n        }\n        if (config.config) {\n            acc.config = {\n                ...acc.config,\n                ...config.config\n            };\n        }\n        if (config.callSettings) {\n            acc.callSettings = {\n                ...acc.callSettings,\n                ...config.callSettings\n            };\n        }\n        return acc;\n    }, {});\n};\n// src/runtimes/edge/EdgeRuntimeRequestOptions.ts\n\nvar LanguageModelV1FunctionToolSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    type: zod__WEBPACK_IMPORTED_MODULE_1__.z.literal(\"function\"),\n    name: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    description: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    parameters: zod__WEBPACK_IMPORTED_MODULE_1__.z.custom((val)=>typeof val === \"object\" && val !== null)\n});\nvar TextContentPartSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    type: zod__WEBPACK_IMPORTED_MODULE_1__.z.literal(\"text\"),\n    text: zod__WEBPACK_IMPORTED_MODULE_1__.z.string()\n});\nvar ImageContentPartSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    type: zod__WEBPACK_IMPORTED_MODULE_1__.z.literal(\"image\"),\n    image: zod__WEBPACK_IMPORTED_MODULE_1__.z.string()\n});\nvar CoreToolCallContentPartSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    type: zod__WEBPACK_IMPORTED_MODULE_1__.z.literal(\"tool-call\"),\n    toolCallId: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    toolName: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    args: zod__WEBPACK_IMPORTED_MODULE_1__.z.record(zod__WEBPACK_IMPORTED_MODULE_1__.z.unknown()),\n    result: zod__WEBPACK_IMPORTED_MODULE_1__.z.unknown().optional(),\n    isError: zod__WEBPACK_IMPORTED_MODULE_1__.z.boolean().optional()\n});\nvar CoreUserMessageSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    role: zod__WEBPACK_IMPORTED_MODULE_1__.z.literal(\"user\"),\n    content: zod__WEBPACK_IMPORTED_MODULE_1__.z.array(zod__WEBPACK_IMPORTED_MODULE_1__.z.discriminatedUnion(\"type\", [\n        TextContentPartSchema,\n        ImageContentPartSchema\n    ])).min(1)\n});\nvar CoreAssistantMessageSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    role: zod__WEBPACK_IMPORTED_MODULE_1__.z.literal(\"assistant\"),\n    content: zod__WEBPACK_IMPORTED_MODULE_1__.z.array(zod__WEBPACK_IMPORTED_MODULE_1__.z.discriminatedUnion(\"type\", [\n        TextContentPartSchema,\n        CoreToolCallContentPartSchema\n    ])).min(1)\n});\nvar CoreSystemMessageSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    role: zod__WEBPACK_IMPORTED_MODULE_1__.z.literal(\"system\"),\n    content: zod__WEBPACK_IMPORTED_MODULE_1__.z.tuple([\n        TextContentPartSchema\n    ])\n});\nvar CoreMessageSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.discriminatedUnion(\"role\", [\n    CoreSystemMessageSchema,\n    CoreUserMessageSchema,\n    CoreAssistantMessageSchema\n]);\nvar EdgeRuntimeRequestOptionsSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    system: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    messages: zod__WEBPACK_IMPORTED_MODULE_1__.z.array(CoreMessageSchema).min(1),\n    tools: zod__WEBPACK_IMPORTED_MODULE_1__.z.array(LanguageModelV1FunctionToolSchema).optional()\n}).merge(LanguageModelV1CallSettingsSchema).merge(LanguageModelConfigSchema);\n_c = EdgeRuntimeRequestOptionsSchema;\n// src/runtimes/edge/streams/toolResultStream.ts\n\n\nfunction toolResultStream(tools, abortSignal) {\n    const toolCallExecutions = /* @__PURE__ */ new Map();\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            const chunkType = chunk.type;\n            switch(chunkType){\n                case \"tool-call\":\n                    {\n                        const { toolCallId, toolCallType, toolName, args: argsText } = chunk;\n                        const tool = tools === null || tools === void 0 ? void 0 : tools[toolName];\n                        if (!tool || !tool.execute) return;\n                        const args = secure_json_parse__WEBPACK_IMPORTED_MODULE_2__.parse(argsText);\n                        if (tool.parameters instanceof zod__WEBPACK_IMPORTED_MODULE_1__.z.ZodType) {\n                            const result = tool.parameters.safeParse(args);\n                            if (!result.success) {\n                                controller.enqueue({\n                                    type: \"tool-result\",\n                                    toolCallType,\n                                    toolCallId,\n                                    toolName,\n                                    result: \"Function parameter validation failed. \" + JSON.stringify(result.error.issues),\n                                    isError: true\n                                });\n                                return;\n                            } else {\n                                toolCallExecutions.set(toolCallId, (async ()=>{\n                                    if (!tool.execute) return;\n                                    try {\n                                        const result2 = await tool.execute(args, {\n                                            abortSignal\n                                        });\n                                        controller.enqueue({\n                                            type: \"tool-result\",\n                                            toolCallType,\n                                            toolCallId,\n                                            toolName,\n                                            result: result2\n                                        });\n                                    } catch (error) {\n                                        controller.enqueue({\n                                            type: \"tool-result\",\n                                            toolCallType,\n                                            toolCallId,\n                                            toolName,\n                                            result: \"Error: \" + error,\n                                            isError: true\n                                        });\n                                    } finally{\n                                        toolCallExecutions.delete(toolCallId);\n                                    }\n                                })());\n                            }\n                        }\n                        break;\n                    }\n                // ignore other parts\n                case \"text-delta\":\n                case \"tool-call-delta\":\n                case \"tool-result\":\n                case \"step-finish\":\n                case \"finish\":\n                case \"error\":\n                case \"response-metadata\":\n                    break;\n                default:\n                    {\n                        const unhandledType = chunkType;\n                        throw new Error(\"Unhandled chunk type: \".concat(unhandledType));\n                    }\n            }\n        },\n        async flush () {\n            await Promise.all(toolCallExecutions.values());\n        }\n    });\n}\n// src/runtimes/edge/partial-json/parse-partial-json.ts\n\n// src/runtimes/edge/partial-json/fix-json.ts\nfunction fixJson(input) {\n    const stack = [\n        \"ROOT\"\n    ];\n    let lastValidIndex = -1;\n    let literalStart = null;\n    function processValueStart(char, i, swapState) {\n        {\n            switch(char){\n                case '\"':\n                    {\n                        lastValidIndex = i;\n                        stack.pop();\n                        stack.push(swapState);\n                        stack.push(\"INSIDE_STRING\");\n                        break;\n                    }\n                case \"f\":\n                case \"t\":\n                case \"n\":\n                    {\n                        lastValidIndex = i;\n                        literalStart = i;\n                        stack.pop();\n                        stack.push(swapState);\n                        stack.push(\"INSIDE_LITERAL\");\n                        break;\n                    }\n                case \"-\":\n                    {\n                        stack.pop();\n                        stack.push(swapState);\n                        stack.push(\"INSIDE_NUMBER\");\n                        break;\n                    }\n                case \"0\":\n                case \"1\":\n                case \"2\":\n                case \"3\":\n                case \"4\":\n                case \"5\":\n                case \"6\":\n                case \"7\":\n                case \"8\":\n                case \"9\":\n                    {\n                        lastValidIndex = i;\n                        stack.pop();\n                        stack.push(swapState);\n                        stack.push(\"INSIDE_NUMBER\");\n                        break;\n                    }\n                case \"{\":\n                    {\n                        lastValidIndex = i;\n                        stack.pop();\n                        stack.push(swapState);\n                        stack.push(\"INSIDE_OBJECT_START\");\n                        break;\n                    }\n                case \"[\":\n                    {\n                        lastValidIndex = i;\n                        stack.pop();\n                        stack.push(swapState);\n                        stack.push(\"INSIDE_ARRAY_START\");\n                        break;\n                    }\n            }\n        }\n    }\n    function processAfterObjectValue(char, i) {\n        switch(char){\n            case \",\":\n                {\n                    stack.pop();\n                    stack.push(\"INSIDE_OBJECT_AFTER_COMMA\");\n                    break;\n                }\n            case \"}\":\n                {\n                    lastValidIndex = i;\n                    stack.pop();\n                    break;\n                }\n        }\n    }\n    function processAfterArrayValue(char, i) {\n        switch(char){\n            case \",\":\n                {\n                    stack.pop();\n                    stack.push(\"INSIDE_ARRAY_AFTER_COMMA\");\n                    break;\n                }\n            case \"]\":\n                {\n                    lastValidIndex = i;\n                    stack.pop();\n                    break;\n                }\n        }\n    }\n    for(let i = 0; i < input.length; i++){\n        const char = input[i];\n        const currentState = stack[stack.length - 1];\n        switch(currentState){\n            case \"ROOT\":\n                processValueStart(char, i, \"FINISH\");\n                break;\n            case \"INSIDE_OBJECT_START\":\n                {\n                    switch(char){\n                        case '\"':\n                            {\n                                stack.pop();\n                                stack.push(\"INSIDE_OBJECT_KEY\");\n                                break;\n                            }\n                        case \"}\":\n                            {\n                                lastValidIndex = i;\n                                stack.pop();\n                                break;\n                            }\n                    }\n                    break;\n                }\n            case \"INSIDE_OBJECT_AFTER_COMMA\":\n                {\n                    switch(char){\n                        case '\"':\n                            {\n                                stack.pop();\n                                stack.push(\"INSIDE_OBJECT_KEY\");\n                                break;\n                            }\n                    }\n                    break;\n                }\n            case \"INSIDE_OBJECT_KEY\":\n                {\n                    switch(char){\n                        case '\"':\n                            {\n                                stack.pop();\n                                stack.push(\"INSIDE_OBJECT_AFTER_KEY\");\n                                break;\n                            }\n                    }\n                    break;\n                }\n            case \"INSIDE_OBJECT_AFTER_KEY\":\n                {\n                    switch(char){\n                        case \":\":\n                            {\n                                stack.pop();\n                                stack.push(\"INSIDE_OBJECT_BEFORE_VALUE\");\n                                break;\n                            }\n                    }\n                    break;\n                }\n            case \"INSIDE_OBJECT_BEFORE_VALUE\":\n                {\n                    processValueStart(char, i, \"INSIDE_OBJECT_AFTER_VALUE\");\n                    break;\n                }\n            case \"INSIDE_OBJECT_AFTER_VALUE\":\n                {\n                    processAfterObjectValue(char, i);\n                    break;\n                }\n            case \"INSIDE_STRING\":\n                {\n                    switch(char){\n                        case '\"':\n                            {\n                                stack.pop();\n                                lastValidIndex = i;\n                                break;\n                            }\n                        case \"\\\\\":\n                            {\n                                stack.push(\"INSIDE_STRING_ESCAPE\");\n                                break;\n                            }\n                        default:\n                            {\n                                lastValidIndex = i;\n                            }\n                    }\n                    break;\n                }\n            case \"INSIDE_ARRAY_START\":\n                {\n                    switch(char){\n                        case \"]\":\n                            {\n                                lastValidIndex = i;\n                                stack.pop();\n                                break;\n                            }\n                        default:\n                            {\n                                lastValidIndex = i;\n                                processValueStart(char, i, \"INSIDE_ARRAY_AFTER_VALUE\");\n                                break;\n                            }\n                    }\n                    break;\n                }\n            case \"INSIDE_ARRAY_AFTER_VALUE\":\n                {\n                    switch(char){\n                        case \",\":\n                            {\n                                stack.pop();\n                                stack.push(\"INSIDE_ARRAY_AFTER_COMMA\");\n                                break;\n                            }\n                        case \"]\":\n                            {\n                                lastValidIndex = i;\n                                stack.pop();\n                                break;\n                            }\n                        default:\n                            {\n                                lastValidIndex = i;\n                                break;\n                            }\n                    }\n                    break;\n                }\n            case \"INSIDE_ARRAY_AFTER_COMMA\":\n                {\n                    processValueStart(char, i, \"INSIDE_ARRAY_AFTER_VALUE\");\n                    break;\n                }\n            case \"INSIDE_STRING_ESCAPE\":\n                {\n                    stack.pop();\n                    lastValidIndex = i;\n                    break;\n                }\n            case \"INSIDE_NUMBER\":\n                {\n                    switch(char){\n                        case \"0\":\n                        case \"1\":\n                        case \"2\":\n                        case \"3\":\n                        case \"4\":\n                        case \"5\":\n                        case \"6\":\n                        case \"7\":\n                        case \"8\":\n                        case \"9\":\n                            {\n                                lastValidIndex = i;\n                                break;\n                            }\n                        case \"e\":\n                        case \"E\":\n                        case \"-\":\n                        case \".\":\n                            {\n                                break;\n                            }\n                        case \",\":\n                            {\n                                stack.pop();\n                                if (stack[stack.length - 1] === \"INSIDE_ARRAY_AFTER_VALUE\") {\n                                    processAfterArrayValue(char, i);\n                                }\n                                if (stack[stack.length - 1] === \"INSIDE_OBJECT_AFTER_VALUE\") {\n                                    processAfterObjectValue(char, i);\n                                }\n                                break;\n                            }\n                        case \"}\":\n                            {\n                                stack.pop();\n                                if (stack[stack.length - 1] === \"INSIDE_OBJECT_AFTER_VALUE\") {\n                                    processAfterObjectValue(char, i);\n                                }\n                                break;\n                            }\n                        case \"]\":\n                            {\n                                stack.pop();\n                                if (stack[stack.length - 1] === \"INSIDE_ARRAY_AFTER_VALUE\") {\n                                    processAfterArrayValue(char, i);\n                                }\n                                break;\n                            }\n                        default:\n                            {\n                                stack.pop();\n                                break;\n                            }\n                    }\n                    break;\n                }\n            case \"INSIDE_LITERAL\":\n                {\n                    const partialLiteral = input.substring(literalStart, i + 1);\n                    if (!\"false\".startsWith(partialLiteral) && !\"true\".startsWith(partialLiteral) && !\"null\".startsWith(partialLiteral)) {\n                        stack.pop();\n                        if (stack[stack.length - 1] === \"INSIDE_OBJECT_AFTER_VALUE\") {\n                            processAfterObjectValue(char, i);\n                        } else if (stack[stack.length - 1] === \"INSIDE_ARRAY_AFTER_VALUE\") {\n                            processAfterArrayValue(char, i);\n                        }\n                    } else {\n                        lastValidIndex = i;\n                    }\n                    break;\n                }\n        }\n    }\n    let result = input.slice(0, lastValidIndex + 1);\n    for(let i = stack.length - 1; i >= 0; i--){\n        const state = stack[i];\n        switch(state){\n            case \"INSIDE_STRING\":\n                {\n                    result += '\"';\n                    break;\n                }\n            case \"INSIDE_OBJECT_KEY\":\n            case \"INSIDE_OBJECT_AFTER_KEY\":\n            case \"INSIDE_OBJECT_AFTER_COMMA\":\n            case \"INSIDE_OBJECT_START\":\n            case \"INSIDE_OBJECT_BEFORE_VALUE\":\n            case \"INSIDE_OBJECT_AFTER_VALUE\":\n                {\n                    result += \"}\";\n                    break;\n                }\n            case \"INSIDE_ARRAY_START\":\n            case \"INSIDE_ARRAY_AFTER_COMMA\":\n            case \"INSIDE_ARRAY_AFTER_VALUE\":\n                {\n                    result += \"]\";\n                    break;\n                }\n            case \"INSIDE_LITERAL\":\n                {\n                    const partialLiteral = input.substring(literalStart, input.length);\n                    if (\"true\".startsWith(partialLiteral)) {\n                        result += \"true\".slice(partialLiteral.length);\n                    } else if (\"false\".startsWith(partialLiteral)) {\n                        result += \"false\".slice(partialLiteral.length);\n                    } else if (\"null\".startsWith(partialLiteral)) {\n                        result += \"null\".slice(partialLiteral.length);\n                    }\n                }\n        }\n    }\n    return result;\n}\n// src/runtimes/edge/partial-json/parse-partial-json.ts\nvar parsePartialJson = (json)=>{\n    try {\n        return secure_json_parse__WEBPACK_IMPORTED_MODULE_2__.parse(json);\n    } catch (e) {\n        try {\n            return secure_json_parse__WEBPACK_IMPORTED_MODULE_2__.parse(fixJson(json));\n        } catch (e) {\n            return void 0;\n        }\n    }\n};\n// src/runtimes/edge/streams/runResultStream.ts\nfunction runResultStream() {\n    let message = {\n        content: [],\n        status: {\n            type: \"running\"\n        }\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            const chunkType = chunk.type;\n            switch(chunkType){\n                case \"text-delta\":\n                    {\n                        message = appendOrUpdateText(message, chunk.textDelta);\n                        controller.enqueue(message);\n                        break;\n                    }\n                case \"tool-call-delta\":\n                    {\n                        const { toolCallId, toolName, argsTextDelta } = chunk;\n                        message = appendOrUpdateToolCall(message, toolCallId, toolName, argsTextDelta);\n                        controller.enqueue(message);\n                        break;\n                    }\n                case \"tool-call\":\n                case \"response-metadata\":\n                    break;\n                case \"tool-result\":\n                    {\n                        message = appendOrUpdateToolResult(message, chunk.toolCallId, chunk.toolName, chunk.result);\n                        controller.enqueue(message);\n                        break;\n                    }\n                case \"step-finish\":\n                    {\n                        message = appendOrUpdateStepFinish(message, chunk);\n                        controller.enqueue(message);\n                        break;\n                    }\n                case \"finish\":\n                    {\n                        message = appendOrUpdateFinish(message, chunk);\n                        controller.enqueue(message);\n                        break;\n                    }\n                case \"error\":\n                    {\n                        if (chunk.error instanceof Error && chunk.error.name === \"AbortError\") {\n                            message = appendOrUpdateCancel(message);\n                            controller.enqueue(message);\n                            break;\n                        } else {\n                            throw chunk.error;\n                        }\n                    }\n                default:\n                    {\n                        const unhandledType = chunkType;\n                        throw new Error(\"Unhandled chunk type: \".concat(unhandledType));\n                    }\n            }\n        }\n    });\n}\nvar appendOrUpdateText = (message, textDelta)=>{\n    var _message_content;\n    var _message_content1;\n    let contentParts = (_message_content1 = message.content) !== null && _message_content1 !== void 0 ? _message_content1 : [];\n    let contentPart = (_message_content = message.content) === null || _message_content === void 0 ? void 0 : _message_content.at(-1);\n    if ((contentPart === null || contentPart === void 0 ? void 0 : contentPart.type) !== \"text\") {\n        contentPart = {\n            type: \"text\",\n            text: textDelta\n        };\n    } else {\n        contentParts = contentParts.slice(0, -1);\n        contentPart = {\n            type: \"text\",\n            text: contentPart.text + textDelta\n        };\n    }\n    return {\n        ...message,\n        content: contentParts.concat([\n            contentPart\n        ])\n    };\n};\nvar appendOrUpdateToolCall = (message, toolCallId, toolName, argsTextDelta)=>{\n    var _message_content;\n    let contentParts = (_message_content = message.content) !== null && _message_content !== void 0 ? _message_content : [];\n    let contentPartIdx = contentParts.findIndex((c)=>c.type === \"tool-call\" && c.toolCallId === toolCallId);\n    let contentPart = contentPartIdx === -1 ? null : contentParts[contentPartIdx];\n    if (contentPart == null) {\n        contentPart = {\n            type: \"tool-call\",\n            toolCallId,\n            toolName,\n            argsText: argsTextDelta,\n            args: parsePartialJson(argsTextDelta)\n        };\n        contentParts = [\n            ...contentParts,\n            contentPart\n        ];\n    } else {\n        const argsText = contentPart.argsText + argsTextDelta;\n        contentPart = {\n            ...contentPart,\n            argsText,\n            args: parsePartialJson(argsText)\n        };\n        contentParts = [\n            ...contentParts.slice(0, contentPartIdx),\n            contentPart,\n            ...contentParts.slice(contentPartIdx + 1)\n        ];\n    }\n    return {\n        ...message,\n        content: contentParts\n    };\n};\nvar appendOrUpdateToolResult = (message, toolCallId, toolName, result)=>{\n    var _message_content;\n    let found = false;\n    const newContentParts = (_message_content = message.content) === null || _message_content === void 0 ? void 0 : _message_content.map((part)=>{\n        if (part.type !== \"tool-call\" || part.toolCallId !== toolCallId) return part;\n        found = true;\n        if (part.toolName !== toolName) throw new Error(\"Tool call \".concat(toolCallId, \" found with tool name \").concat(part.toolName, \", but expected \").concat(toolName));\n        return {\n            ...part,\n            result\n        };\n    });\n    if (!found) throw new Error('Received tool result for unknown tool call \"'.concat(toolName, '\" / \"').concat(toolCallId, '\". This is likely an internal bug in assistant-ui.'));\n    return {\n        ...message,\n        content: newContentParts\n    };\n};\nvar appendOrUpdateStepFinish = (message, chunk)=>{\n    var _message_metadata;\n    const { type, ...rest } = chunk;\n    var _message_metadata_steps;\n    const steps = [\n        ...(_message_metadata_steps = (_message_metadata = message.metadata) === null || _message_metadata === void 0 ? void 0 : _message_metadata.steps) !== null && _message_metadata_steps !== void 0 ? _message_metadata_steps : [],\n        {\n            usage: rest.usage\n        }\n    ];\n    return {\n        ...message,\n        status: getStatus(chunk),\n        metadata: {\n            ...message.metadata,\n            roundtrips: steps,\n            steps\n        }\n    };\n};\nvar appendOrUpdateFinish = (message, chunk)=>{\n    var _message_metadata;\n    const { type, ...rest } = chunk;\n    var _message_metadata_steps;\n    const steps = [\n        ...(_message_metadata_steps = (_message_metadata = message.metadata) === null || _message_metadata === void 0 ? void 0 : _message_metadata.steps) !== null && _message_metadata_steps !== void 0 ? _message_metadata_steps : [],\n        {\n            logprobs: rest.logprobs,\n            usage: rest.usage\n        }\n    ];\n    return {\n        ...message,\n        status: getStatus(chunk),\n        metadata: {\n            ...message.metadata,\n            roundtrips: steps,\n            steps\n        }\n    };\n};\nvar getStatus = (chunk)=>{\n    if (chunk.finishReason === \"tool-calls\") {\n        return {\n            type: \"requires-action\",\n            reason: \"tool-calls\"\n        };\n    } else if (chunk.finishReason === \"stop\" || chunk.finishReason === \"unknown\") {\n        return {\n            type: \"complete\",\n            reason: chunk.finishReason\n        };\n    } else {\n        return {\n            type: \"incomplete\",\n            reason: chunk.finishReason\n        };\n    }\n};\nvar appendOrUpdateCancel = (message)=>{\n    return {\n        ...message,\n        status: {\n            type: \"incomplete\",\n            reason: \"cancelled\"\n        }\n    };\n};\n// src/runtimes/edge/streams/utils/PipeableTransformStream.ts\nvar PipeableTransformStream = class extends TransformStream {\n    constructor(transform){\n        super();\n        const readable = transform(super.readable);\n        Object.defineProperty(this, \"readable\", {\n            value: readable,\n            writable: false\n        });\n    }\n};\n// src/runtimes/edge/streams/utils/streamPartEncoderStream.ts\nfunction encodeStreamPart(param) {\n    let { type, value } = param;\n    return \"\".concat(type, \":\").concat(JSON.stringify(value), \"\\n\");\n}\nfunction streamPartEncoderStream() {\n    const encodeStream = new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(encodeStreamPart(chunk));\n        }\n    });\n    return new PipeableTransformStream((readable)=>{\n        return readable.pipeThrough(encodeStream).pipeThrough(new TextEncoderStream());\n    });\n}\n// src/runtimes/edge/createEdgeRuntimeAPI.ts\nvar voidStream = ()=>{\n    return new WritableStream({\n        abort (reason) {\n            console.error(\"Server stream processing aborted:\", reason);\n        }\n    });\n};\nvar getEdgeRuntimeStream = async (param)=>{\n    let { abortSignal, requestData: unsafeRequest, options: { model: modelOrCreator, system: serverSystem, tools: serverTools = {}, toolChoice, onFinish, ...unsafeSettings } } = param;\n    const settings = LanguageModelV1CallSettingsSchema.parse(unsafeSettings);\n    const lmServerTools = toLanguageModelTools(serverTools);\n    const hasServerTools = Object.values(serverTools).some((v)=>!!v.execute);\n    const { system: clientSystem, tools: clientTools = [], messages, apiKey, baseUrl, modelName, ...callSettings } = EdgeRuntimeRequestOptionsSchema.parse(unsafeRequest);\n    const systemMessages = [];\n    if (serverSystem) systemMessages.push(serverSystem);\n    if (clientSystem) systemMessages.push(clientSystem);\n    const system = systemMessages.join(\"\\n\\n\");\n    for (const clientTool of clientTools){\n        if (serverTools === null || serverTools === void 0 ? void 0 : serverTools[clientTool.name]) {\n            throw new Error(\"Tool \".concat(clientTool.name, \" was defined in both the client and server tools. This is not allowed.\"));\n        }\n    }\n    const model = typeof modelOrCreator === \"function\" ? await modelOrCreator({\n        apiKey,\n        baseUrl,\n        modelName\n    }) : modelOrCreator;\n    let stream;\n    const streamResult = await streamMessage({\n        ...settings,\n        ...callSettings,\n        model,\n        abortSignal,\n        ...!!system ? {\n            system\n        } : void 0,\n        messages,\n        tools: lmServerTools.concat(clientTools),\n        ...toolChoice ? {\n            toolChoice\n        } : void 0\n    });\n    stream = streamResult.stream;\n    const canExecuteTools = hasServerTools && (toolChoice === null || toolChoice === void 0 ? void 0 : toolChoice.type) !== \"none\";\n    if (canExecuteTools) {\n        stream = stream.pipeThrough(toolResultStream(serverTools, abortSignal));\n    }\n    if (canExecuteTools || onFinish) {\n        const tees = stream.tee();\n        stream = tees[0];\n        let serverStream = tees[1];\n        if (onFinish) {\n            let lastChunk;\n            serverStream = serverStream.pipeThrough(runResultStream()).pipeThrough(new TransformStream({\n                transform (chunk) {\n                    lastChunk = chunk;\n                },\n                flush () {\n                    var _lastChunk_metadata, _lastChunk_metadata1;\n                    if (!(lastChunk === null || lastChunk === void 0 ? void 0 : lastChunk.status) || lastChunk.status.type === \"running\") return;\n                    const resultingMessages = [\n                        ...messages,\n                        toCoreMessage({\n                            role: \"assistant\",\n                            content: lastChunk.content\n                        })\n                    ];\n                    onFinish({\n                        messages: resultingMessages,\n                        metadata: {\n                            // TODO\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n                            roundtrips: (_lastChunk_metadata = lastChunk.metadata) === null || _lastChunk_metadata === void 0 ? void 0 : _lastChunk_metadata.steps,\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n                            steps: (_lastChunk_metadata1 = lastChunk.metadata) === null || _lastChunk_metadata1 === void 0 ? void 0 : _lastChunk_metadata1.steps\n                        }\n                    });\n                }\n            }));\n        }\n        serverStream.pipeTo(voidStream()).catch((e)=>{\n            console.error(\"Server stream processing error:\", e);\n        });\n    }\n    return stream;\n};\nvar getEdgeRuntimeResponse = async (options)=>{\n    const stream = await getEdgeRuntimeStream(options);\n    return new Response(stream.pipeThrough(assistantEncoderStream()).pipeThrough(streamPartEncoderStream()), {\n        headers: {\n            \"Content-Type\": \"text/plain; charset=utf-8\"\n        }\n    });\n};\nvar createEdgeRuntimeAPI = (options)=>({\n        POST: async (request)=>getEdgeRuntimeResponse({\n                abortSignal: request.signal,\n                requestData: await request.json(),\n                options\n            })\n    });\nasync function streamMessage(param) {\n    let { model, system, messages, tools, toolChoice, ...options } = param;\n    return model.doStream({\n        inputFormat: \"messages\",\n        mode: {\n            type: \"regular\",\n            ...tools ? {\n                tools\n            } : void 0,\n            ...toolChoice ? {\n                toolChoice\n            } : void 0\n        },\n        prompt: convertToLanguageModelPrompt(system, messages),\n        ...options\n    });\n}\nfunction convertToLanguageModelPrompt(system, messages) {\n    const languageModelMessages = [];\n    if (system != null) {\n        languageModelMessages.push({\n            role: \"system\",\n            content: system\n        });\n    }\n    languageModelMessages.push(...toLanguageModelMessages(messages));\n    return languageModelMessages;\n}\n //# sourceMappingURL=chunk-TWIMAOZR.mjs.map\nvar _c;\n$RefreshReg$(_c, \"EdgeRuntimeRequestOptionsSchema\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@assistant-ui/react/dist/chunk-TWIMAOZR.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@assistant-ui/react/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@assistant-ui/react/dist/index.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ActionBarPrimitive: function() { return /* binding */ actionBar_exports; },\n/* harmony export */   AssistantActionBar: function() { return /* binding */ assistant_action_bar_default; },\n/* harmony export */   AssistantMessage: function() { return /* binding */ assistant_message_default; },\n/* harmony export */   AssistantModal: function() { return /* binding */ assistant_modal_default; },\n/* harmony export */   AssistantModalPrimitive: function() { return /* binding */ assistantModal_exports; },\n/* harmony export */   AssistantRuntimeProvider: function() { return /* binding */ AssistantRuntimeProvider; },\n/* harmony export */   AttachmentPrimitive: function() { return /* binding */ attachment_exports; },\n/* harmony export */   AttachmentUI: function() { return /* binding */ attachment_default; },\n/* harmony export */   BranchPicker: function() { return /* binding */ branch_picker_default; },\n/* harmony export */   BranchPickerPrimitive: function() { return /* binding */ branchPicker_exports; },\n/* harmony export */   Composer: function() { return /* binding */ composer_default; },\n/* harmony export */   ComposerAttachment: function() { return /* binding */ attachment_default; },\n/* harmony export */   ComposerPrimitive: function() { return /* binding */ composer_exports; },\n/* harmony export */   CompositeAttachmentAdapter: function() { return /* binding */ CompositeAttachmentAdapter; },\n/* harmony export */   ContentPart: function() { return /* binding */ content_part_default; },\n/* harmony export */   ContentPartPrimitive: function() { return /* binding */ contentPart_exports; },\n/* harmony export */   EdgeChatAdapter: function() { return /* binding */ EdgeChatAdapter; },\n/* harmony export */   EditComposer: function() { return /* binding */ edit_composer_default; },\n/* harmony export */   INTERNAL: function() { return /* binding */ internal_exports; },\n/* harmony export */   MessagePrimitive: function() { return /* binding */ message_exports; },\n/* harmony export */   SimpleImageAttachmentAdapter: function() { return /* binding */ SimpleImageAttachmentAdapter; },\n/* harmony export */   SimpleTextAttachmentAdapter: function() { return /* binding */ SimpleTextAttachmentAdapter; },\n/* harmony export */   TextContentPartProvider: function() { return /* binding */ TextContentPartProvider; },\n/* harmony export */   Thread: function() { return /* binding */ thread_default; },\n/* harmony export */   ThreadConfigProvider: function() { return /* binding */ ThreadConfigProvider; },\n/* harmony export */   ThreadPrimitive: function() { return /* binding */ thread_exports; },\n/* harmony export */   ThreadWelcome: function() { return /* binding */ thread_welcome_default; },\n/* harmony export */   UserActionBar: function() { return /* binding */ user_action_bar_default; },\n/* harmony export */   UserMessage: function() { return /* binding */ user_message_default; },\n/* harmony export */   UserMessageAttachment: function() { return /* binding */ attachment_default; },\n/* harmony export */   WebSpeechSynthesisAdapter: function() { return /* binding */ WebSpeechSynthesisAdapter; },\n/* harmony export */   fromCoreMessage: function() { return /* binding */ fromCoreMessage; },\n/* harmony export */   fromCoreMessages: function() { return /* binding */ fromCoreMessages; },\n/* harmony export */   fromLanguageModelMessages: function() { return /* binding */ fromLanguageModelMessages; },\n/* harmony export */   fromLanguageModelTools: function() { return /* binding */ fromLanguageModelTools; },\n/* harmony export */   getExternalStoreMessage: function() { return /* binding */ getExternalStoreMessage; },\n/* harmony export */   makeAssistantTool: function() { return /* binding */ makeAssistantTool; },\n/* harmony export */   makeAssistantToolUI: function() { return /* binding */ makeAssistantToolUI; },\n/* harmony export */   streamUtils: function() { return /* binding */ streamUtils; },\n/* harmony export */   subscribeToMainThread: function() { return /* binding */ subscribeToMainThread; },\n/* harmony export */   toCoreMessage: function() { return /* reexport safe */ _chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.toCoreMessage; },\n/* harmony export */   toCoreMessages: function() { return /* reexport safe */ _chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.toCoreMessages; },\n/* harmony export */   toLanguageModelMessages: function() { return /* reexport safe */ _chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.toLanguageModelMessages; },\n/* harmony export */   toLanguageModelTools: function() { return /* reexport safe */ _chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.toLanguageModelTools; },\n/* harmony export */   useActionBarCopy: function() { return /* binding */ useActionBarCopy; },\n/* harmony export */   useActionBarEdit: function() { return /* binding */ useActionBarEdit; },\n/* harmony export */   useActionBarFeedbackNegative: function() { return /* binding */ useActionBarFeedbackNegative; },\n/* harmony export */   useActionBarFeedbackPositive: function() { return /* binding */ useActionBarFeedbackPositive; },\n/* harmony export */   useActionBarReload: function() { return /* binding */ useActionBarReload; },\n/* harmony export */   useActionBarSpeak: function() { return /* binding */ useActionBarSpeak; },\n/* harmony export */   useActionBarStopSpeaking: function() { return /* binding */ useActionBarStopSpeaking; },\n/* harmony export */   useAppendMessage: function() { return /* binding */ useAppendMessage; },\n/* harmony export */   useAssistantActions: function() { return /* binding */ useAssistantActions; },\n/* harmony export */   useAssistantActionsStore: function() { return /* binding */ useAssistantActionsStore; },\n/* harmony export */   useAssistantContext: function() { return /* binding */ useAssistantContext; },\n/* harmony export */   useAssistantInstructions: function() { return /* binding */ useAssistantInstructions; },\n/* harmony export */   useAssistantRuntime: function() { return /* binding */ useAssistantRuntime; },\n/* harmony export */   useAssistantRuntimeStore: function() { return /* binding */ useAssistantRuntimeStore; },\n/* harmony export */   useAssistantTool: function() { return /* binding */ useAssistantTool; },\n/* harmony export */   useAssistantToolUI: function() { return /* binding */ useAssistantToolUI; },\n/* harmony export */   useBranchPickerCount: function() { return /* binding */ useBranchPickerCount; },\n/* harmony export */   useBranchPickerNext: function() { return /* binding */ useBranchPickerNext; },\n/* harmony export */   useBranchPickerNumber: function() { return /* binding */ useBranchPickerNumber; },\n/* harmony export */   useBranchPickerPrevious: function() { return /* binding */ useBranchPickerPrevious; },\n/* harmony export */   useComposer: function() { return /* binding */ useComposer; },\n/* harmony export */   useComposerAddAttachment: function() { return /* binding */ useComposerAddAttachment; },\n/* harmony export */   useComposerCancel: function() { return /* binding */ useComposerCancel; },\n/* harmony export */   useComposerContext: function() { return /* binding */ useComposerContext; },\n/* harmony export */   useComposerIf: function() { return /* binding */ useComposerIf; },\n/* harmony export */   useComposerRuntime: function() { return /* binding */ useComposerRuntime; },\n/* harmony export */   useComposerSend: function() { return /* binding */ useComposerSend; },\n/* harmony export */   useComposerStore: function() { return /* binding */ useComposerStore; },\n/* harmony export */   useContentPart: function() { return /* binding */ useContentPart; },\n/* harmony export */   useContentPartContext: function() { return /* binding */ useContentPartContext; },\n/* harmony export */   useContentPartDisplay: function() { return /* binding */ useContentPartDisplay; },\n/* harmony export */   useContentPartImage: function() { return /* binding */ useContentPartImage; },\n/* harmony export */   useContentPartRuntime: function() { return /* binding */ useContentPartRuntime; },\n/* harmony export */   useContentPartStore: function() { return /* binding */ useContentPartStore; },\n/* harmony export */   useContentPartText: function() { return /* binding */ useContentPartText; },\n/* harmony export */   useDangerousInBrowserRuntime: function() { return /* binding */ useDangerousInBrowserRuntime; },\n/* harmony export */   useEdgeRuntime: function() { return /* binding */ useEdgeRuntime; },\n/* harmony export */   useEditComposer: function() { return /* binding */ useEditComposer; },\n/* harmony export */   useEditComposerStore: function() { return /* binding */ useEditComposerStore; },\n/* harmony export */   useExternalMessageConverter: function() { return /* binding */ useExternalMessageConverter; },\n/* harmony export */   useExternalStoreRuntime: function() { return /* binding */ useExternalStoreRuntime; },\n/* harmony export */   useLocalRuntime: function() { return /* binding */ useLocalRuntime; },\n/* harmony export */   useMessage: function() { return /* binding */ useMessage; },\n/* harmony export */   useMessageContext: function() { return /* binding */ useMessageContext; },\n/* harmony export */   useMessageIf: function() { return /* binding */ useMessageIf; },\n/* harmony export */   useMessageRuntime: function() { return /* binding */ useMessageRuntime; },\n/* harmony export */   useMessageStore: function() { return /* binding */ useMessageStore; },\n/* harmony export */   useMessageUtils: function() { return /* binding */ useMessageUtils; },\n/* harmony export */   useMessageUtilsStore: function() { return /* binding */ useMessageUtilsStore; },\n/* harmony export */   useSwitchToNewThread: function() { return /* binding */ useSwitchToNewThread; },\n/* harmony export */   useThread: function() { return /* binding */ useThread; },\n/* harmony export */   useThreadActions: function() { return /* binding */ useThreadActions; },\n/* harmony export */   useThreadActionsStore: function() { return /* binding */ useThreadActionsStore; },\n/* harmony export */   useThreadComposer: function() { return /* binding */ useThreadComposer; },\n/* harmony export */   useThreadComposerStore: function() { return /* binding */ useThreadComposerStore; },\n/* harmony export */   useThreadConfig: function() { return /* binding */ useThreadConfig; },\n/* harmony export */   useThreadContext: function() { return /* binding */ useThreadContext; },\n/* harmony export */   useThreadEmpty: function() { return /* binding */ useThreadEmpty; },\n/* harmony export */   useThreadIf: function() { return /* binding */ useThreadIf; },\n/* harmony export */   useThreadMessages: function() { return /* binding */ useThreadMessages; },\n/* harmony export */   useThreadMessagesStore: function() { return /* binding */ useThreadMessagesStore; },\n/* harmony export */   useThreadModelConfig: function() { return /* binding */ useThreadModelConfig; },\n/* harmony export */   useThreadRuntime: function() { return /* binding */ useThreadRuntime; },\n/* harmony export */   useThreadRuntimeStore: function() { return /* binding */ useThreadRuntimeStore; },\n/* harmony export */   useThreadScrollToBottom: function() { return /* binding */ useThreadScrollToBottom; },\n/* harmony export */   useThreadStore: function() { return /* binding */ useThreadStore; },\n/* harmony export */   useThreadSuggestion: function() { return /* binding */ useThreadSuggestion; },\n/* harmony export */   useThreadViewport: function() { return /* binding */ useThreadViewport; },\n/* harmony export */   useThreadViewportStore: function() { return /* binding */ useThreadViewportStore; },\n/* harmony export */   useToolUIs: function() { return /* binding */ useToolUIs; },\n/* harmony export */   useToolUIsStore: function() { return /* binding */ useToolUIsStore; }\n/* harmony export */ });\n/* harmony import */ var _chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./chunk-TWIMAOZR.mjs */ \"(app-pages-browser)/./node_modules/@assistant-ui/react/dist/chunk-TWIMAOZR.mjs\");\n/* harmony import */ var _chunk_BJPOCE4O_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-BJPOCE4O.mjs */ \"(app-pages-browser)/./node_modules/@assistant-ui/react/dist/chunk-BJPOCE4O.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-use-escape-keydown */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @radix-ui/react-popover */ \"(app-pages-browser)/./node_modules/@radix-ui/react-popover/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var react_textarea_autosize__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react-textarea-autosize */ \"(app-pages-browser)/./node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.development.esm.js\");\n/* harmony import */ var nanoid_non_secure__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! nanoid/non-secure */ \"(app-pages-browser)/./node_modules/nanoid/non-secure/index.js\");\n/* harmony import */ var _radix_ui_react_tooltip__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @radix-ui/react-tooltip */ \"(app-pages-browser)/./node_modules/@radix-ui/react-tooltip/dist/index.mjs\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! classnames */ \"(app-pages-browser)/./node_modules/classnames/index.js\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! class-variance-authority */ \"(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! __barrel_optimize__?names=AudioLinesIcon,CheckIcon,CopyIcon,RefreshCwIcon,StopCircleIcon,ThumbsDownIcon,ThumbsUpIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/check.js\");\n/* harmony import */ var _barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! __barrel_optimize__?names=AudioLinesIcon,CheckIcon,CopyIcon,RefreshCwIcon,StopCircleIcon,ThumbsDownIcon,ThumbsUpIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/copy.js\");\n/* harmony import */ var _barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! __barrel_optimize__?names=AudioLinesIcon,CheckIcon,CopyIcon,RefreshCwIcon,StopCircleIcon,ThumbsDownIcon,ThumbsUpIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/audio-lines.js\");\n/* harmony import */ var _barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! __barrel_optimize__?names=AudioLinesIcon,CheckIcon,CopyIcon,RefreshCwIcon,StopCircleIcon,ThumbsDownIcon,ThumbsUpIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-stop.js\");\n/* harmony import */ var _barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! __barrel_optimize__?names=AudioLinesIcon,CheckIcon,CopyIcon,RefreshCwIcon,StopCircleIcon,ThumbsDownIcon,ThumbsUpIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js\");\n/* harmony import */ var _barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! __barrel_optimize__?names=AudioLinesIcon,CheckIcon,CopyIcon,RefreshCwIcon,StopCircleIcon,ThumbsDownIcon,ThumbsUpIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/thumbs-up.js\");\n/* harmony import */ var _barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! __barrel_optimize__?names=AudioLinesIcon,CheckIcon,CopyIcon,RefreshCwIcon,StopCircleIcon,ThumbsDownIcon,ThumbsUpIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/thumbs-down.js\");\n/* harmony import */ var _barrel_optimize_names_ChevronLeftIcon_ChevronRightIcon_lucide_react__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! __barrel_optimize__?names=ChevronLeftIcon,ChevronRightIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/chevron-left.js\");\n/* harmony import */ var _barrel_optimize_names_ChevronLeftIcon_ChevronRightIcon_lucide_react__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! __barrel_optimize__?names=ChevronLeftIcon,ChevronRightIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/chevron-right.js\");\n/* harmony import */ var _radix_ui_react_avatar__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @radix-ui/react-avatar */ \"(app-pages-browser)/./node_modules/@radix-ui/react-avatar/dist/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_BotIcon_ChevronDownIcon_lucide_react__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! __barrel_optimize__?names=BotIcon,ChevronDownIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/bot.js\");\n/* harmony import */ var _barrel_optimize_names_BotIcon_ChevronDownIcon_lucide_react__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! __barrel_optimize__?names=BotIcon,ChevronDownIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/chevron-down.js\");\n/* harmony import */ var _barrel_optimize_names_ArrowDownIcon_lucide_react__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! __barrel_optimize__?names=ArrowDownIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/arrow-down.js\");\n/* harmony import */ var _barrel_optimize_names_PaperclipIcon_SendHorizontalIcon_lucide_react__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! __barrel_optimize__?names=PaperclipIcon,SendHorizontalIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/paperclip.js\");\n/* harmony import */ var _barrel_optimize_names_PaperclipIcon_SendHorizontalIcon_lucide_react__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! __barrel_optimize__?names=PaperclipIcon,SendHorizontalIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/send-horizontal.js\");\n/* harmony import */ var _barrel_optimize_names_CircleXIcon_FileIcon_lucide_react__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! __barrel_optimize__?names=CircleXIcon,FileIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/file.js\");\n/* harmony import */ var _barrel_optimize_names_CircleXIcon_FileIcon_lucide_react__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! __barrel_optimize__?names=CircleXIcon,FileIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-x.js\");\n/* harmony import */ var _radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @radix-ui/react-dialog */ \"(app-pages-browser)/./node_modules/@radix-ui/react-dialog/dist/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_PencilIcon_lucide_react__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! __barrel_optimize__?names=PencilIcon!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/pencil.js\");\n/* __next_internal_client_entry_do_not_use__ ActionBarPrimitive,AssistantActionBar,AssistantMessage,AssistantModal,AssistantModalPrimitive,AssistantRuntimeProvider,AttachmentPrimitive,AttachmentUI,BranchPicker,BranchPickerPrimitive,Composer,ComposerAttachment,ComposerPrimitive,CompositeAttachmentAdapter,ContentPart,ContentPartPrimitive,EdgeChatAdapter,EditComposer,INTERNAL,MessagePrimitive,SimpleImageAttachmentAdapter,SimpleTextAttachmentAdapter,TextContentPartProvider,Thread,ThreadConfigProvider,ThreadPrimitive,ThreadWelcome,UserActionBar,UserMessage,UserMessageAttachment,WebSpeechSynthesisAdapter,fromCoreMessage,fromCoreMessages,fromLanguageModelMessages,fromLanguageModelTools,getExternalStoreMessage,makeAssistantTool,makeAssistantToolUI,streamUtils,subscribeToMainThread,toCoreMessage,toCoreMessages,toLanguageModelMessages,toLanguageModelTools,useActionBarCopy,useActionBarEdit,useActionBarFeedbackNegative,useActionBarFeedbackPositive,useActionBarReload,useActionBarSpeak,useActionBarStopSpeaking,useAppendMessage,useAssistantActions,useAssistantActionsStore,useAssistantContext,useAssistantInstructions,useAssistantRuntime,useAssistantRuntimeStore,useAssistantTool,useAssistantToolUI,useBranchPickerCount,useBranchPickerNext,useBranchPickerNumber,useBranchPickerPrevious,useComposer,useComposerAddAttachment,useComposerCancel,useComposerContext,useComposerIf,useComposerRuntime,useComposerSend,useComposerStore,useContentPart,useContentPartContext,useContentPartDisplay,useContentPartImage,useContentPartRuntime,useContentPartStore,useContentPartText,useDangerousInBrowserRuntime,useEdgeRuntime,useEditComposer,useEditComposerStore,useExternalMessageConverter,useExternalStoreRuntime,useLocalRuntime,useMessage,useMessageContext,useMessageIf,useMessageRuntime,useMessageStore,useMessageUtils,useMessageUtilsStore,useSwitchToNewThread,useThread,useThreadActions,useThreadActionsStore,useThreadComposer,useThreadComposerStore,useThreadConfig,useThreadContext,useThreadEmpty,useThreadIf,useThreadMessages,useThreadMessagesStore,useThreadModelConfig,useThreadRuntime,useThreadRuntimeStore,useThreadScrollToBottom,useThreadStore,useThreadSuggestion,useThreadViewport,useThreadViewportStore,useToolUIs,useToolUIsStore auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$(), _s12 = $RefreshSig$(), _s13 = $RefreshSig$(), _s14 = $RefreshSig$(), _s15 = $RefreshSig$(), _s16 = $RefreshSig$(), _s17 = $RefreshSig$(), _s18 = $RefreshSig$(), _s19 = $RefreshSig$(), _s20 = $RefreshSig$(), _s21 = $RefreshSig$(), _s22 = $RefreshSig$(), _s23 = $RefreshSig$(), _s24 = $RefreshSig$(), _s25 = $RefreshSig$(), _s26 = $RefreshSig$(), _s27 = $RefreshSig$(), _s28 = $RefreshSig$(), _s29 = $RefreshSig$(), _s30 = $RefreshSig$(), _s31 = $RefreshSig$(), _s32 = $RefreshSig$(), _s33 = $RefreshSig$(), _s34 = $RefreshSig$(), _s35 = $RefreshSig$(), _s36 = $RefreshSig$(), _s37 = $RefreshSig$(), _s38 = $RefreshSig$(), _s39 = $RefreshSig$(), _s40 = $RefreshSig$(), _s41 = $RefreshSig$(), _s42 = $RefreshSig$(), _s43 = $RefreshSig$(), _s44 = $RefreshSig$(), _s45 = $RefreshSig$(), _s46 = $RefreshSig$(), _s47 = $RefreshSig$(), _s48 = $RefreshSig$(), _s49 = $RefreshSig$(), _s50 = $RefreshSig$(), _s51 = $RefreshSig$(), _s52 = $RefreshSig$(), _s53 = $RefreshSig$(), _s54 = $RefreshSig$(), _s55 = $RefreshSig$(), _s56 = $RefreshSig$(), _s57 = $RefreshSig$(), _s58 = $RefreshSig$(), _s59 = $RefreshSig$(), _s60 = $RefreshSig$(), _s61 = $RefreshSig$(), _s62 = $RefreshSig$(), _s63 = $RefreshSig$(), _s64 = $RefreshSig$(), _s65 = $RefreshSig$(), _s66 = $RefreshSig$(), _s67 = $RefreshSig$(), _s68 = $RefreshSig$(), _s69 = $RefreshSig$(), _s70 = $RefreshSig$(), _s71 = $RefreshSig$(), _s72 = $RefreshSig$(), _s73 = $RefreshSig$(), _s74 = $RefreshSig$(), _s75 = $RefreshSig$(), _s76 = $RefreshSig$(), _s77 = $RefreshSig$(), _s78 = $RefreshSig$(), _s79 = $RefreshSig$(), _s80 = $RefreshSig$(), _s81 = $RefreshSig$(), _s82 = $RefreshSig$(), _s83 = $RefreshSig$(), _s84 = $RefreshSig$(), _s85 = $RefreshSig$(), _s86 = $RefreshSig$(), _s87 = $RefreshSig$(), _s88 = $RefreshSig$(), _s89 = $RefreshSig$(), _s90 = $RefreshSig$(), _s91 = $RefreshSig$(), _s92 = $RefreshSig$(), _s93 = $RefreshSig$(), _s94 = $RefreshSig$(), _s95 = $RefreshSig$(), _s96 = $RefreshSig$(), _s97 = $RefreshSig$(), _s98 = $RefreshSig$(), _s99 = $RefreshSig$(), _s100 = $RefreshSig$(), _s101 = $RefreshSig$(), _s102 = $RefreshSig$(), _s103 = $RefreshSig$(), _s104 = $RefreshSig$(), _s105 = $RefreshSig$(), _s106 = $RefreshSig$(), _s107 = $RefreshSig$(), _s108 = $RefreshSig$(), _s109 = $RefreshSig$(), _s110 = $RefreshSig$(), _s111 = $RefreshSig$(), _s112 = $RefreshSig$(), _s113 = $RefreshSig$(), _s114 = $RefreshSig$(), _s115 = $RefreshSig$(), _s116 = $RefreshSig$(), _s117 = $RefreshSig$(), _s118 = $RefreshSig$(), _s119 = $RefreshSig$(), _s120 = $RefreshSig$(), _s121 = $RefreshSig$(), _s122 = $RefreshSig$(), _s123 = $RefreshSig$(), _s124 = $RefreshSig$(), _s125 = $RefreshSig$(), _s126 = $RefreshSig$(), _s127 = $RefreshSig$(), _s128 = $RefreshSig$(), _s129 = $RefreshSig$(), _s130 = $RefreshSig$(), _s131 = $RefreshSig$(), _s132 = $RefreshSig$(), _s133 = $RefreshSig$(), _s134 = $RefreshSig$(), _s135 = $RefreshSig$(), _s136 = $RefreshSig$(), _s137 = $RefreshSig$(), _s138 = $RefreshSig$(), _s139 = $RefreshSig$(), _s140 = $RefreshSig$(), _s141 = $RefreshSig$(), _s142 = $RefreshSig$(), _s143 = $RefreshSig$(), _s144 = $RefreshSig$(), _s145 = $RefreshSig$(), _s146 = $RefreshSig$(), _s147 = $RefreshSig$(), _s148 = $RefreshSig$(), _s149 = $RefreshSig$(), _s150 = $RefreshSig$(), _s151 = $RefreshSig$(), _s152 = $RefreshSig$(), _s153 = $RefreshSig$(), _s154 = $RefreshSig$(), _s155 = $RefreshSig$(), _s156 = $RefreshSig$(), _s157 = $RefreshSig$(), _s158 = $RefreshSig$(), _s159 = $RefreshSig$(), _s160 = $RefreshSig$(), _s161 = $RefreshSig$();\n\n\n// src/context/providers/AssistantRuntimeProvider.tsx\n\n// src/context/react/AssistantContext.ts\n\n// src/context/react/utils/createContextHook.ts\n\nfunction createContextHook(context, providerName) {\n    var _s = $RefreshSig$();\n    function useContextHook(options) {\n        _s();\n        const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);\n        if (!(options === null || options === void 0 ? void 0 : options.optional) && !contextValue) {\n            throw new Error(\"This component must be used within \".concat(providerName, \".\"));\n        }\n        return contextValue;\n    }\n    _s(useContextHook, \"LIxFXvZbUdXE/TWxKLLXMjM3Mig=\");\n    return useContextHook;\n}\n// src/context/react/utils/createContextStoreHook.ts\nfunction createContextStoreHook(contextHook, contextKey) {\n    var _s = $RefreshSig$();\n    function useStoreStoreHook(options) {\n        const context = contextHook(options);\n        if (!context) return null;\n        return context[contextKey];\n    }\n    function useStoreHook(param) {\n        _s();\n        let optional = false;\n        let selector;\n        if (typeof param === \"function\") {\n            selector = param;\n        } else if (param && typeof param === \"object\") {\n            optional = !!param.optional;\n            selector = param.selector;\n        }\n        const store = useStoreStoreHook({\n            optional\n        });\n        if (!store) return null;\n        return selector ? store(selector) : store();\n    }\n    _s(useStoreHook, \"0Z0qWgPYYS7oHk4pu9z1XXM6Qu8=\", false, function() {\n        return [\n            useStoreStoreHook\n        ];\n    });\n    return {\n        [contextKey]: useStoreHook,\n        [\"\".concat(contextKey, \"Store\")]: useStoreStoreHook\n    };\n}\n// src/context/react/AssistantContext.ts\nvar AssistantContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar useAssistantContext = createContextHook(AssistantContext, \"AssistantRuntimeProvider\");\nfunction useAssistantRuntime(options) {\n    _s();\n    const context = useAssistantContext(options);\n    if (!context) return null;\n    return context.useAssistantRuntime();\n}\n_s(useAssistantRuntime, \"7eBRQDzUvB5UhuL+wn93ivvJbEg=\", true, function() {\n    return [\n        useAssistantContext\n    ];\n});\nvar actions = createContextStoreHook(useAssistantContext, \"useAssistantActions\");\nvar useAssistantActionsStore = actions.useAssistantActionsStore;\nvar useAssistantActions = actions.useAssistantActions;\nvar useAssistantRuntimeStore = useAssistantActionsStore;\nvar { useToolUIs, useToolUIsStore } = createContextStoreHook(useAssistantContext, \"useToolUIs\");\n// src/context/stores/AssistantToolUIs.ts\n\nvar makeAssistantToolUIsStore = ()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set)=>{\n        const renderers = /* @__PURE__ */ new Map();\n        return Object.freeze({\n            getToolUI: (name)=>{\n                const arr = renderers.get(name);\n                const last = arr === null || arr === void 0 ? void 0 : arr.at(-1);\n                if (last) return last;\n                return null;\n            },\n            setToolUI: (name, render)=>{\n                let arr = renderers.get(name);\n                if (!arr) {\n                    arr = [];\n                    renderers.set(name, arr);\n                }\n                arr.push(render);\n                set({});\n                return ()=>{\n                    const index = arr.indexOf(render);\n                    if (index !== -1) {\n                        arr.splice(index, 1);\n                    }\n                    if (index === arr.length) {\n                        set({});\n                    }\n                };\n            }\n        });\n    });\n// src/context/providers/ThreadRuntimeProvider.tsx\n\n// src/context/react/ThreadContext.ts\n\nvar ThreadContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar useThreadContext = createContextHook(ThreadContext, \"AssistantRuntimeProvider\");\nfunction useThreadRuntime(options) {\n    _s1();\n    const context = useThreadContext(options);\n    if (!context) return null;\n    return context.useThreadRuntime();\n}\n_s1(useThreadRuntime, \"CPePE1HMmSNmCBAnmH41WXq5l08=\", true, function() {\n    return [\n        useThreadContext\n    ];\n});\nvar actions2 = createContextStoreHook(useThreadContext, \"useThreadActions\");\nvar useThreadActionsStore = actions2.useThreadActionsStore;\nvar useThreadActions = actions2.useThreadActions;\nvar useThreadRuntimeStore = useThreadActionsStore;\nvar { useThread, useThreadStore } = createContextStoreHook(useThreadContext, \"useThread\");\nvar messages = createContextStoreHook(useThreadContext, \"useThreadMessages\");\nvar useThreadMessages = messages.useThreadMessages;\nvar useThreadMessagesStore = messages.useThreadMessagesStore;\nvar { useComposer: useThreadComposer, useComposerStore: useThreadComposerStore } = createContextStoreHook(useThreadContext, \"useComposer\");\nvar { useViewport: useThreadViewport, useViewportStore: useThreadViewportStore } = createContextStoreHook(useThreadContext, \"useViewport\");\nfunction useThreadModelConfig(options) {\n    _s2();\n    const [, rerender] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n    const runtime = useThreadRuntime(options);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        return runtime === null || runtime === void 0 ? void 0 : runtime.unstable_on(\"model-config-update\", ()=>rerender({}));\n    }, [\n        runtime\n    ]);\n    if (!runtime) return null;\n    return runtime === null || runtime === void 0 ? void 0 : runtime.getModelConfig();\n}\n_s2(useThreadModelConfig, \"E7muaP/Bp28nSQRMUHXeJMbP50w=\", false, function() {\n    return [\n        useThreadRuntime\n    ];\n});\n// src/context/stores/ThreadViewport.tsx\n\nvar makeThreadViewportStore = ()=>{\n    const scrollToBottomListeners = /* @__PURE__ */ new Set();\n    return (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>({\n            isAtBottom: true,\n            scrollToBottom: ()=>{\n                for (const listener of scrollToBottomListeners){\n                    listener();\n                }\n            },\n            onScrollToBottom: (callback)=>{\n                scrollToBottomListeners.add(callback);\n                return ()=>{\n                    scrollToBottomListeners.delete(callback);\n                };\n            }\n        }));\n};\n// src/context/ReadonlyStore.ts\nvar writableStore = (store)=>{\n    return store;\n};\n// src/context/providers/ThreadRuntimeProvider.tsx\n\n\nvar useThreadRuntimeStore2 = (runtime)=>{\n    _s3();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        writableStore(store).setState(runtime, true);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s3(useThreadRuntimeStore2, \"rdfUqZKThzVF3nj1ofwNc9gR7fg=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar useThreadStore2 = (runtime)=>{\n    _s4();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime.getState()));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const updateState = ()=>writableStore(store).setState(runtime.getState(), true);\n        updateState();\n        return runtime.subscribe(updateState);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s4(useThreadStore2, \"rdfUqZKThzVF3nj1ofwNc9gR7fg=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar useThreadMessagesStore2 = (runtime)=>{\n    _s5();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime.messages));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const updateState = ()=>writableStore(store).setState(runtime.messages, true);\n        updateState();\n        return runtime.subscribe(updateState);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s5(useThreadMessagesStore2, \"rdfUqZKThzVF3nj1ofwNc9gR7fg=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar useThreadComposerStore2 = (runtime)=>{\n    _s6();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime.getState()));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const updateState = ()=>writableStore(store).setState(runtime.getState(), true);\n        updateState();\n        return runtime.subscribe(updateState);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s6(useThreadComposerStore2, \"rdfUqZKThzVF3nj1ofwNc9gR7fg=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar ThreadRuntimeProvider = (param)=>{\n    let { children, runtime } = param;\n    _s7();\n    const useThreadRuntime2 = useThreadRuntimeStore2(runtime);\n    const useThread2 = useThreadStore2(runtime);\n    const useThreadMessages2 = useThreadMessagesStore2(runtime);\n    const useThreadComposer2 = useThreadComposerStore2(runtime.composer);\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const useViewport = makeThreadViewportStore();\n        return {\n            useThread: useThread2,\n            useThreadRuntime: useThreadRuntime2,\n            useThreadMessages: useThreadMessages2,\n            useThreadActions: useThreadRuntime2,\n            useComposer: useThreadComposer2,\n            useViewport\n        };\n    }, [\n        useThread2,\n        useThreadRuntime2,\n        useThreadMessages2,\n        useThreadComposer2\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadContext.Provider, {\n        value: context,\n        children\n    });\n};\n_s7(ThreadRuntimeProvider, \"uPPcLeC6CYkm1BMX9V8RIsAIGjc=\", false, function() {\n    return [\n        useThreadRuntimeStore2,\n        useThreadStore2,\n        useThreadMessagesStore2,\n        useThreadComposerStore2\n    ];\n});\n_c = ThreadRuntimeProvider;\n// src/context/providers/AssistantRuntimeProvider.tsx\n\n\nvar useAssistantRuntimeStore2 = (runtime)=>{\n    _s8();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        writableStore(store).setState(runtime, true);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s8(useAssistantRuntimeStore2, \"kN6QShsNY7D7Jg2IZ//e9sxgeqA=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar useAssistantToolUIsStore = ()=>{\n    _s9();\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>makeAssistantToolUIsStore(), []);\n};\n_s9(useAssistantToolUIsStore, \"EE8w1JogrvaDwFgR/slUv4vJJBs=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\nvar AssistantRuntimeProviderImpl = (param)=>{\n    let { children, runtime } = param;\n    _s10();\n    const useAssistantRuntime2 = useAssistantRuntimeStore2(runtime);\n    const useToolUIs2 = useAssistantToolUIsStore();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        return {\n            useToolUIs: useToolUIs2,\n            useAssistantRuntime: useAssistantRuntime2,\n            useAssistantActions: useAssistantRuntime2\n        };\n    }, [\n        useAssistantRuntime2,\n        useToolUIs2\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantContext.Provider, {\n        value: context,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadRuntimeProvider, {\n            runtime: runtime.thread,\n            children\n        })\n    });\n};\n_s10(AssistantRuntimeProviderImpl, \"V10CKjb+/VdTG4MfTLpwzGn0Zc8=\", false, function() {\n    return [\n        useAssistantRuntimeStore2,\n        useAssistantToolUIsStore,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\n_c1 = AssistantRuntimeProviderImpl;\nvar AssistantRuntimeProvider = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(AssistantRuntimeProviderImpl);\n_c2 = AssistantRuntimeProvider;\n// src/context/providers/TextContentPartProvider.tsx\n\n\n// src/context/react/ContentPartContext.ts\n\nvar ContentPartContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar useContentPartContext = createContextHook(ContentPartContext, \"a component passed to <MessagePrimitive.Content components={...}>\");\nfunction useContentPartRuntime(options) {\n    _s11();\n    const context = useContentPartContext(options);\n    if (!context) return null;\n    return context.useContentPartRuntime();\n}\n_s11(useContentPartRuntime, \"vWWIwedDA72/ep/O5aYUqWeYGys=\", true, function() {\n    return [\n        useContentPartContext\n    ];\n});\nvar { useContentPart, useContentPartStore } = createContextStoreHook(useContentPartContext, \"useContentPart\");\n// src/api/ContentPartRuntime.ts\nvar ContentPartRuntimeImpl = class {\n    get path() {\n        return this.contentBinding.path;\n    }\n    getState() {\n        return this.contentBinding.getState();\n    }\n    addToolResult(result) {\n        const message = this.messageApi.getState();\n        if (!message) throw new Error(\"Message is not available\");\n        const state = this.contentBinding.getState();\n        if (!state) throw new Error(\"Content part is not available\");\n        if (state.type !== \"tool-call\") throw new Error(\"Tried to add tool result to non-tool content part\");\n        const toolName = state.toolName;\n        const toolCallId = state.toolCallId;\n        this.threadApi.getState().addToolResult({\n            messageId: message.id,\n            toolName,\n            toolCallId,\n            result\n        });\n    }\n    subscribe(callback) {\n        return this.contentBinding.subscribe(callback);\n    }\n    constructor(contentBinding, messageApi, threadApi){\n        this.contentBinding = contentBinding;\n        this.messageApi = messageApi;\n        this.threadApi = threadApi;\n    }\n};\n// src/context/providers/TextContentPartProvider.tsx\n\nvar COMPLETE_STATUS = {\n    type: \"complete\"\n};\nvar RUNNING_STATUS = {\n    type: \"running\"\n};\nvar TextContentPartProvider = (param)=>{\n    let { children, text, isRunning } = param;\n    _s12();\n    const [context] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        const useContentPartRuntime2 = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(// TODO\n        ()=>new ContentPartRuntimeImpl(null, null, null));\n        const useContentPart2 = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>({\n                status: isRunning ? RUNNING_STATUS : COMPLETE_STATUS,\n                part: {\n                    type: \"text\",\n                    text\n                },\n                type: \"text\",\n                text\n            }));\n        return {\n            useContentPartRuntime: useContentPartRuntime2,\n            useContentPart: useContentPart2\n        };\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const state = context.useContentPart.getState();\n        const textUpdated = state.text !== text;\n        const targetStatus = isRunning ? RUNNING_STATUS : COMPLETE_STATUS;\n        const statusUpdated = state.status !== targetStatus;\n        if (!textUpdated && !statusUpdated) return;\n        writableStore(context.useContentPart).setState({\n            type: \"text\",\n            text,\n            part: {\n                type: \"text\",\n                text\n            },\n            status: targetStatus\n        }, true);\n    }, [\n        context,\n        isRunning,\n        text\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ContentPartContext.Provider, {\n        value: context,\n        children\n    });\n};\n_s12(TextContentPartProvider, \"IFIVzSEqltoKNtd5DtDbkPjypzc=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\n_c3 = TextContentPartProvider;\n// src/context/react/MessageContext.ts\n\nvar MessageContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar useMessageContext = createContextHook(MessageContext, \"a component passed to <ThreadPrimitive.Messages components={...} />\");\nfunction useMessageRuntime(options) {\n    _s13();\n    const context = useMessageContext(options);\n    if (!context) return null;\n    return context.useMessageRuntime();\n}\n_s13(useMessageRuntime, \"47iG+SmLszCnIFUYpxMsjTm2jN8=\", true, function() {\n    return [\n        useMessageContext\n    ];\n});\nvar { useMessage, useMessageStore } = createContextStoreHook(useMessageContext, \"useMessage\");\nvar { useMessageUtils, useMessageUtilsStore } = createContextStoreHook(useMessageContext, \"useMessageUtils\");\nvar { useEditComposer, useEditComposerStore } = createContextStoreHook(useMessageContext, \"useEditComposer\");\n// src/context/react/ComposerContext.ts\n\nvar useComposerContext = ()=>{\n    _s14();\n    const { useComposer: useThreadComposer2 } = useThreadContext();\n    var _useMessageContext;\n    const { useEditComposer: useEditComposer2 } = (_useMessageContext = useMessageContext({\n        optional: true\n    })) !== null && _useMessageContext !== void 0 ? _useMessageContext : {};\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({\n            useComposer: useEditComposer2 !== null && useEditComposer2 !== void 0 ? useEditComposer2 : useThreadComposer2,\n            type: useEditComposer2 ? \"edit\" : \"new\"\n        }), [\n        useEditComposer2,\n        useThreadComposer2\n    ]);\n};\n_s14(useComposerContext, \"bLse/M8ormftYzvPMTwUUJerJ2o=\", false, function() {\n    return [\n        useThreadContext,\n        useMessageContext,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\nvar { useComposer, useComposerStore } = createContextStoreHook(useComposerContext, \"useComposer\");\nfunction useComposerRuntime(options) {\n    _s15();\n    const messageRuntime = useMessageRuntime({\n        optional: true\n    });\n    const threadRuntime = useThreadRuntime(options);\n    var _threadRuntime_composer;\n    return messageRuntime ? messageRuntime.composer : (_threadRuntime_composer = threadRuntime === null || threadRuntime === void 0 ? void 0 : threadRuntime.composer) !== null && _threadRuntime_composer !== void 0 ? _threadRuntime_composer : null;\n}\n_s15(useComposerRuntime, \"E5+TpP5XPaWzKojtrjqkTzm7Y+w=\", false, function() {\n    return [\n        useMessageRuntime,\n        useThreadRuntime\n    ];\n});\n// src/hooks/useAppendMessage.tsx\n\nvar useAppendMessage = ()=>{\n    _s16();\n    const threadRuntime = useThreadRuntime();\n    const append = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((message)=>{\n        threadRuntime.append(message);\n    }, [\n        threadRuntime\n    ]);\n    return append;\n};\n_s16(useAppendMessage, \"giv+jGV5LPYrukghN2z55zLDP4E=\", false, function() {\n    return [\n        useThreadRuntime\n    ];\n});\n// src/hooks/useSwitchToNewThread.tsx\n\nvar useSwitchToNewThread = ()=>{\n    _s17();\n    const assistantRuntime = useAssistantRuntime();\n    const switchToNewThread = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        assistantRuntime.switchToNewThread();\n    }, [\n        assistantRuntime\n    ]);\n    return switchToNewThread;\n};\n_s17(useSwitchToNewThread, \"d6caJlPMGkjSuBFE64nYlgL2dVM=\", false, function() {\n    return [\n        useAssistantRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/model-config/useAssistantTool.tsx\n\nvar useAssistantTool = (tool)=>{\n    _s18();\n    const assistantRuntime = useAssistantRuntime();\n    const toolUIsStore = useToolUIsStore();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const { toolName, render, ...rest } = tool;\n        const config = {\n            tools: {\n                [tool.toolName]: rest\n            }\n        };\n        const unsub1 = assistantRuntime.registerModelConfigProvider({\n            getModelConfig: ()=>config\n        });\n        const unsub2 = render ? toolUIsStore.getState().setToolUI(toolName, render) : void 0;\n        return ()=>{\n            unsub1();\n            unsub2 === null || unsub2 === void 0 ? void 0 : unsub2();\n        };\n    }, [\n        assistantRuntime,\n        toolUIsStore,\n        tool\n    ]);\n};\n_s18(useAssistantTool, \"u4eOQeq5tmw2wNXRD9bgRbb1alc=\", false, function() {\n    return [\n        useAssistantRuntime,\n        useToolUIsStore,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\n// src/model-config/makeAssistantTool.tsx\nvar makeAssistantTool = (tool)=>{\n    var _s = $RefreshSig$();\n    const Tool = ()=>{\n        _s();\n        useAssistantTool(tool);\n        return null;\n    };\n    _s(Tool, \"SFmV3wpQoFFd0TL/5mfnbK/FHrQ=\", false, function() {\n        return [\n            useAssistantTool\n        ];\n    });\n    Tool.unstable_tool = tool;\n    return Tool;\n};\n// src/model-config/useAssistantToolUI.tsx\n\nvar useAssistantToolUI = (tool)=>{\n    _s19();\n    const toolUIsStore = useToolUIsStore();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!tool) return;\n        const { toolName, render } = tool;\n        return toolUIsStore.getState().setToolUI(toolName, render);\n    }, [\n        toolUIsStore,\n        tool\n    ]);\n};\n_s19(useAssistantToolUI, \"sXzh2FUsZz17BYIsRDwD8etJcD0=\", false, function() {\n    return [\n        useToolUIsStore,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\n// src/model-config/makeAssistantToolUI.tsx\nvar makeAssistantToolUI = (tool)=>{\n    var _s = $RefreshSig$();\n    const ToolUI = ()=>{\n        _s();\n        useAssistantToolUI(tool);\n        return null;\n    };\n    _s(ToolUI, \"z+7ZBTZMDI+M8luspDVswUqdBMo=\", false, function() {\n        return [\n            useAssistantToolUI\n        ];\n    });\n    ToolUI.unstable_tool = tool;\n    return ToolUI;\n};\n// src/model-config/useAssistantInstructions.tsx\n\nvar useAssistantInstructions = (instruction)=>{\n    _s20();\n    const assistantRuntime = useAssistantRuntime();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const config = {\n            system: instruction\n        };\n        return assistantRuntime.registerModelConfigProvider({\n            getModelConfig: ()=>config\n        });\n    }, [\n        assistantRuntime,\n        instruction\n    ]);\n};\n_s20(useAssistantInstructions, \"x0eZQSfSDNDSl06cyZZasclYYvg=\", false, function() {\n    return [\n        useAssistantRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\n// src/primitive-hooks/actionBar/useActionBarCopy.tsx\n\nvar useActionBarCopy = function() {\n    let { copiedDuration = 3e3 } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s21();\n    const messageRuntime = useMessageRuntime();\n    const composerRuntime = useComposerRuntime();\n    const setIsCopied = useMessageUtils((s)=>s.setIsCopied);\n    const hasCopyableContent = useMessage((message)=>{\n        return (message.role !== \"assistant\" || message.status.type !== \"running\") && message.content.some((c)=>c.type === \"text\" && c.text.length > 0);\n    });\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        const { isEditing, text: composerValue } = composerRuntime.getState();\n        const valueToCopy = isEditing ? composerValue : messageRuntime.unstable_getCopyText();\n        navigator.clipboard.writeText(valueToCopy).then(()=>{\n            setIsCopied(true);\n            setTimeout(()=>setIsCopied(false), copiedDuration);\n        });\n    }, [\n        messageRuntime,\n        setIsCopied,\n        composerRuntime,\n        copiedDuration\n    ]);\n    if (!hasCopyableContent) return null;\n    return callback;\n};\n_s21(useActionBarCopy, \"gvJ4/j0LGyadBEsR4CsgvMH+uV0=\", false, function() {\n    return [\n        useMessageRuntime,\n        useComposerRuntime,\n        useMessageUtils,\n        useMessage,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/actionBar/useActionBarEdit.tsx\n\nvar useActionBarEdit = ()=>{\n    _s22();\n    const messageRuntime = useMessageRuntime();\n    const disabled = useEditComposer((c)=>c.isEditing);\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        messageRuntime.composer.beginEdit();\n    }, [\n        messageRuntime\n    ]);\n    if (disabled) return null;\n    return callback;\n};\n_s22(useActionBarEdit, \"PUpKyP89WEXNbtt8Gjk/VDDc0VY=\", false, function() {\n    return [\n        useMessageRuntime,\n        useEditComposer,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/actionBar/useActionBarReload.tsx\n\n// src/utils/combined/useCombinedStore.ts\n\n// src/utils/combined/createCombinedStore.ts\n\nvar createCombinedStore = (stores)=>{\n    var _s = $RefreshSig$();\n    const subscribe = (callback)=>{\n        const unsubscribes = stores.map((store)=>store.subscribe(callback));\n        return ()=>{\n            for (const unsub of unsubscribes){\n                unsub();\n            }\n        };\n    };\n    return _s((selector)=>{\n        _s();\n        const getSnapshot = ()=>selector(...stores.map((store)=>store.getState()));\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(subscribe, getSnapshot, getSnapshot);\n    }, \"FpwL93IKMLJZuQQXefVtWynbBPQ=\", false, function() {\n        return [\n            react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore\n        ];\n    });\n};\n// src/utils/combined/useCombinedStore.ts\nvar useCombinedStore = (stores, selector)=>{\n    _s23();\n    const useCombined = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>createCombinedStore(stores), stores);\n    return useCombined(selector);\n};\n_s23(useCombinedStore, \"UaKlgdzRTIedSTnQA5BTfISTijg=\", true, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\n// src/primitive-hooks/actionBar/useActionBarReload.tsx\nvar useActionBarReload = ()=>{\n    _s24();\n    const messageRuntime = useMessageRuntime();\n    const threadRuntime = useThreadRuntime();\n    const disabled = useCombinedStore([\n        threadRuntime,\n        messageRuntime\n    ], (t, m)=>t.isRunning || t.isDisabled || m.role !== \"assistant\");\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        messageRuntime.reload();\n    }, [\n        messageRuntime\n    ]);\n    if (disabled) return null;\n    return callback;\n};\n_s24(useActionBarReload, \"2vBgfEnCnINy11l5wIXo5nLdIm0=\", false, function() {\n    return [\n        useMessageRuntime,\n        useThreadRuntime,\n        useCombinedStore,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/actionBar/useActionBarSpeak.tsx\n\nvar useActionBarSpeak = ()=>{\n    _s25();\n    const messageRunime = useMessageRuntime();\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        messageRunime.speak();\n    }, [\n        messageRunime\n    ]);\n    const hasSpeakableContent = useMessage((m)=>{\n        return (m.role !== \"assistant\" || m.status.type !== \"running\") && m.content.some((c)=>c.type === \"text\" && c.text.length > 0);\n    });\n    if (!hasSpeakableContent) return null;\n    return callback;\n};\n_s25(useActionBarSpeak, \"XWDzzCwi2ezkG8rAnJIv0CVEt4A=\", false, function() {\n    return [\n        useMessageRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback,\n        useMessage\n    ];\n});\n// src/primitive-hooks/actionBar/useActionBarStopSpeaking.tsx\n\nvar useActionBarStopSpeaking = ()=>{\n    _s26();\n    const messageRuntime = useMessageRuntime();\n    const isSpeaking = useMessage((u)=>u.speech != null);\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        messageRuntime.stopSpeaking();\n    }, [\n        messageRuntime\n    ]);\n    if (!isSpeaking) return null;\n    return callback;\n};\n_s26(useActionBarStopSpeaking, \"zpSOt4TKM8voAps2Qs+s7Ht7eho=\", false, function() {\n    return [\n        useMessageRuntime,\n        useMessage,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/actionBar/useActionBarFeedbackPositive.tsx\n\nvar useActionBarFeedbackPositive = ()=>{\n    _s27();\n    const messageRuntime = useMessageRuntime();\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        messageRuntime.submitFeedback({\n            type: \"positive\"\n        });\n    }, [\n        messageRuntime\n    ]);\n    return callback;\n};\n_s27(useActionBarFeedbackPositive, \"UiI55f7ZILsFnVFdcNPAA2/2SRc=\", false, function() {\n    return [\n        useMessageRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/actionBar/useActionBarFeedbackNegative.tsx\n\nvar useActionBarFeedbackNegative = ()=>{\n    _s28();\n    const messageRuntime = useMessageRuntime();\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        messageRuntime.submitFeedback({\n            type: \"negative\"\n        });\n    }, [\n        messageRuntime\n    ]);\n    return callback;\n};\n_s28(useActionBarFeedbackNegative, \"bjPFy5zR1ugRZharvm7KRJ1pmSM=\", false, function() {\n    return [\n        useMessageRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/branchPicker/useBranchPickerCount.tsx\nvar useBranchPickerCount = ()=>{\n    _s29();\n    const branchCount = useMessage((s)=>s.branchCount);\n    return branchCount;\n};\n_s29(useBranchPickerCount, \"L5KDpBsaqZ0mh/hGNKV/1+JtB50=\", false, function() {\n    return [\n        useMessage\n    ];\n});\n// src/primitive-hooks/branchPicker/useBranchPickerNext.tsx\n\nvar useBranchPickerNext = ()=>{\n    _s30();\n    const messageRuntime = useMessageRuntime();\n    const disabled = useMessage((m)=>m.branchNumber >= m.branchCount);\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        messageRuntime.switchToBranch({\n            position: \"next\"\n        });\n    }, [\n        messageRuntime\n    ]);\n    if (disabled) return null;\n    return callback;\n};\n_s30(useBranchPickerNext, \"sX8bmZ4apK2TdGhLUAFAXit7uM0=\", false, function() {\n    return [\n        useMessageRuntime,\n        useMessage,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/branchPicker/useBranchPickerNumber.tsx\nvar useBranchPickerNumber = ()=>{\n    _s31();\n    const branchNumber = useMessage((s)=>s.branchNumber);\n    return branchNumber;\n};\n_s31(useBranchPickerNumber, \"K43euOTZuLTQ9RIAK1KyYCup91c=\", false, function() {\n    return [\n        useMessage\n    ];\n});\n// src/primitive-hooks/branchPicker/useBranchPickerPrevious.tsx\n\nvar useBranchPickerPrevious = ()=>{\n    _s32();\n    const messageRuntime = useMessageRuntime();\n    const disabled = useMessage((m)=>m.branchNumber <= 1);\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        messageRuntime.switchToBranch({\n            position: \"previous\"\n        });\n    }, [\n        messageRuntime\n    ]);\n    if (disabled) return null;\n    return callback;\n};\n_s32(useBranchPickerPrevious, \"W126N+32hzfqIIJPJShXWNpbB90=\", false, function() {\n    return [\n        useMessageRuntime,\n        useMessage,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/composer/useComposerCancel.tsx\n\nvar useComposerCancel = ()=>{\n    _s33();\n    const composerRuntime = useComposerRuntime();\n    const disabled = useComposer((c)=>!c.canCancel);\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        composerRuntime.cancel();\n    }, [\n        composerRuntime\n    ]);\n    if (disabled) return null;\n    return callback;\n};\n_s33(useComposerCancel, \"R4XoyTszfYYIdz9mTdIs/3SLWL8=\", false, function() {\n    return [\n        useComposerRuntime,\n        useComposer,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/composer/useComposerIf.tsx\nvar useComposerIf = (props)=>{\n    _s34();\n    return useComposer((composer)=>{\n        if (props.editing === true && !composer.isEditing) return false;\n        if (props.editing === false && composer.isEditing) return false;\n        return true;\n    });\n};\n_s34(useComposerIf, \"FhE3vrqSgRidSx/xejAl/x3Gfpo=\", false, function() {\n    return [\n        useComposer\n    ];\n});\n// src/primitive-hooks/composer/useComposerSend.tsx\n\nvar useComposerSend = ()=>{\n    _s35();\n    const composerRuntime = useComposerRuntime();\n    const threadRuntime = useThreadRuntime();\n    const disabled = useCombinedStore([\n        threadRuntime,\n        composerRuntime\n    ], (t, c)=>t.isRunning || !c.isEditing || c.isEmpty);\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (!composerRuntime.getState().isEditing) return;\n        composerRuntime.send();\n    }, [\n        threadRuntime\n    ]);\n    if (disabled) return null;\n    return callback;\n};\n_s35(useComposerSend, \"uRpieLpV9wPhjFsIljW8E5pRsG8=\", false, function() {\n    return [\n        useComposerRuntime,\n        useThreadRuntime,\n        useCombinedStore,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/composer/useComposerAddAttachment.tsx\n\nvar useComposerAddAttachment = ()=>{\n    _s36();\n    const disabled = useComposer((c)=>!c.isEditing);\n    const composerRuntime = useComposerRuntime();\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        const input = document.createElement(\"input\");\n        input.type = \"file\";\n        const attachmentAccept = composerRuntime.getAttachmentAccept();\n        if (attachmentAccept !== \"*\") {\n            input.accept = attachmentAccept;\n        }\n        input.onchange = (e)=>{\n            var _e_target_files;\n            const file = (_e_target_files = e.target.files) === null || _e_target_files === void 0 ? void 0 : _e_target_files[0];\n            if (!file) return;\n            composerRuntime.addAttachment(file);\n        };\n        input.click();\n    }, [\n        composerRuntime\n    ]);\n    if (disabled) return null;\n    return callback;\n};\n_s36(useComposerAddAttachment, \"dUp5PgZuRnqURr2k1qJ7hlPXw2E=\", false, function() {\n    return [\n        useComposer,\n        useComposerRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/contentPart/useContentPartDisplay.tsx\nvar useContentPartDisplay = ()=>{\n    _s37();\n    const display = useContentPart((c)=>{\n        if (c.type !== \"ui\") throw new Error(\"This component can only be used inside ui content parts.\");\n        return c;\n    });\n    return display;\n};\n_s37(useContentPartDisplay, \"hBa6mobQ4aAZeByG/ICOP84R+MU=\", false, function() {\n    return [\n        useContentPart\n    ];\n});\n// src/primitive-hooks/contentPart/useContentPartImage.tsx\nvar useContentPartImage = ()=>{\n    _s38();\n    const image = useContentPart((c)=>{\n        if (c.type !== \"image\") throw new Error(\"ContentPartImage can only be used inside image content parts.\");\n        return c;\n    });\n    return image;\n};\n_s38(useContentPartImage, \"VJl3sFWZEbb4Mu2unL2UVRbEtL4=\", false, function() {\n    return [\n        useContentPart\n    ];\n});\n// src/primitive-hooks/contentPart/useContentPartText.tsx\nvar useContentPartText = ()=>{\n    _s39();\n    const text = useContentPart((c)=>{\n        if (c.type !== \"text\") throw new Error(\"ContentPartText can only be used inside text content parts.\");\n        return c;\n    });\n    return text;\n};\n_s39(useContentPartText, \"tVMbOfeJ0e81efYD8PB+TcxfoRc=\", false, function() {\n    return [\n        useContentPart\n    ];\n});\n// src/primitive-hooks/message/useMessageIf.tsx\nvar useMessageIf = (props)=>{\n    _s40();\n    const messageRuntime = useMessageRuntime();\n    const messageUtilsStore = useMessageUtilsStore();\n    return useCombinedStore([\n        messageRuntime,\n        messageUtilsStore\n    ], (param, param1)=>{\n        let { role, attachments, content, branchCount, isLast, speech, submittedFeedback } = param, { isCopied, isHovering } = param1;\n        if (props.hasBranches === true && branchCount < 2) return false;\n        if (props.user && role !== \"user\") return false;\n        if (props.assistant && role !== \"assistant\") return false;\n        if (props.system && role !== \"system\") return false;\n        if (props.lastOrHover === true && !isHovering && !isLast) return false;\n        if (props.copied === true && !isCopied) return false;\n        if (props.copied === false && isCopied) return false;\n        if (props.speaking === true && speech == null) return false;\n        if (props.speaking === false && speech != null) return false;\n        if (props.hasAttachments === true && (role !== \"user\" || !attachments.length)) return false;\n        if (props.hasAttachments === false && role === \"user\" && !!attachments.length) return false;\n        if (props.hasContent === true && content.length === 0) return false;\n        if (props.hasContent === false && content.length > 0) return false;\n        var _submittedFeedback_type;\n        if (props.submittedFeedback !== void 0 && ((_submittedFeedback_type = submittedFeedback === null || submittedFeedback === void 0 ? void 0 : submittedFeedback.type) !== null && _submittedFeedback_type !== void 0 ? _submittedFeedback_type : null) !== props.submittedFeedback) return false;\n        return true;\n    });\n};\n_s40(useMessageIf, \"lWnolyfqvoXwDyG9RiBgdligfhM=\", false, function() {\n    return [\n        useMessageRuntime,\n        useMessageUtilsStore,\n        useCombinedStore\n    ];\n});\n// src/primitive-hooks/thread/useThreadIf.tsx\nvar useThreadIf = (props)=>{\n    _s41();\n    return useThread((thread)=>{\n        if (props.empty === true && thread.messages.length !== 0) return false;\n        if (props.empty === false && thread.messages.length === 0) return false;\n        if (props.running === true && !thread.isRunning) return false;\n        if (props.running === false && thread.isRunning) return false;\n        if (props.disabled === true && thread.isDisabled) return false;\n        if (props.disabled === false && thread.isDisabled) return false;\n        return true;\n    });\n};\n_s41(useThreadIf, \"nFvWvVjMM0n411LOyYe6KPN0X6k=\", false, function() {\n    return [\n        useThread\n    ];\n});\n// src/primitive-hooks/thread/useThreadEmpty.tsx\nvar useThreadEmpty = ()=>{\n    _s42();\n    return useThreadIf({\n        empty: true\n    });\n};\n_s42(useThreadEmpty, \"bmbsL0d7uUUrZRZiVe1k/VPJ+Pw=\", false, function() {\n    return [\n        useThreadIf\n    ];\n});\n// src/primitive-hooks/thread/useThreadScrollToBottom.tsx\n\nvar useThreadScrollToBottom = ()=>{\n    _s43();\n    const isAtBottom = useThreadViewport((s)=>s.isAtBottom);\n    const threadViewportStore = useThreadViewportStore();\n    const handleScrollToBottom = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        threadViewportStore.getState().scrollToBottom();\n    }, [\n        threadViewportStore\n    ]);\n    if (isAtBottom) return null;\n    return handleScrollToBottom;\n};\n_s43(useThreadScrollToBottom, \"d5ND7hbRuBfDyLDiNEhVdZD5b/M=\", false, function() {\n    return [\n        useThreadViewport,\n        useThreadViewportStore,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitive-hooks/thread/useThreadSuggestion.tsx\n\nvar useThreadSuggestion = (param)=>{\n    let { prompt, autoSend } = param;\n    _s44();\n    const threadRuntime = useThreadRuntime();\n    const disabled = useThread((t)=>t.isDisabled);\n    const callback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (autoSend && !threadRuntime.getState().isRunning) {\n            threadRuntime.append(prompt);\n            threadRuntime.composer.setText(\"\");\n        } else {\n            threadRuntime.composer.setText(prompt);\n        }\n    }, [\n        threadRuntime,\n        autoSend,\n        prompt\n    ]);\n    if (disabled) return null;\n    return callback;\n};\n_s44(useThreadSuggestion, \"QudchgMuN3/fvZk/In9OIX/ntRw=\", false, function() {\n    return [\n        useThreadRuntime,\n        useThread,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitives/actionBar/index.ts\nvar actionBar_exports = {};\n(0,_chunk_BJPOCE4O_mjs__WEBPACK_IMPORTED_MODULE_3__.__export)(actionBar_exports, {\n    Copy: ()=>ActionBarPrimitiveCopy,\n    Edit: ()=>ActionBarPrimitiveEdit,\n    FeedbackNegative: ()=>ActionBarPrimitiveFeedbackNegative,\n    FeedbackPositive: ()=>ActionBarPrimitiveFeedbackPositive,\n    Reload: ()=>ActionBarPrimitiveReload,\n    Root: ()=>ActionBarPrimitiveRoot,\n    Speak: ()=>ActionBarPrimitiveSpeak,\n    StopSpeaking: ()=>ActionBarPrimitiveStopSpeaking\n});\n// src/primitives/actionBar/ActionBarRoot.tsx\n\n\n// src/primitives/actionBar/useActionBarFloatStatus.tsx\nvar useActionBarFloatStatus = (param)=>{\n    let { hideWhenRunning, autohide, autohideFloat } = param;\n    _s45();\n    const threadRuntime = useThreadRuntime();\n    const messageRuntime = useMessageRuntime();\n    const messageUtilsStore = useMessageUtilsStore();\n    return useCombinedStore([\n        threadRuntime,\n        messageRuntime,\n        messageUtilsStore\n    ], (t, m, mu)=>{\n        if (hideWhenRunning && t.isRunning) return \"hidden\" /* Hidden */ ;\n        const autohideEnabled = autohide === \"always\" || autohide === \"not-last\" && !m.isLast;\n        if (!autohideEnabled) return \"normal\" /* Normal */ ;\n        if (!mu.isHovering) return \"hidden\" /* Hidden */ ;\n        if (autohideFloat === \"always\" || autohideFloat === \"single-branch\" && m.branchCount <= 1) return \"floating\" /* Floating */ ;\n        return \"normal\" /* Normal */ ;\n    });\n};\n_s45(useActionBarFloatStatus, \"JdErRo1oqVaDjhr6iDfAtygJxD8=\", false, function() {\n    return [\n        useThreadRuntime,\n        useMessageRuntime,\n        useMessageUtilsStore,\n        useCombinedStore\n    ];\n});\n// src/primitives/actionBar/ActionBarRoot.tsx\n\nvar ActionBarPrimitiveRoot = /*#__PURE__*/ _s46((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c4 = _s46((param, ref)=>{\n    let { hideWhenRunning, autohide, autohideFloat, ...rest } = param;\n    _s46();\n    const hideAndfloatStatus = useActionBarFloatStatus({\n        hideWhenRunning,\n        autohide,\n        autohideFloat\n    });\n    if (hideAndfloatStatus === \"hidden\" /* Hidden */ ) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...hideAndfloatStatus === \"floating\" /* Floating */  ? {\n            \"data-floating\": \"true\"\n        } : null,\n        ...rest,\n        ref\n    });\n}, \"0/0BcKxFr0XAkKHpLnLsVaGDyyQ=\", false, function() {\n    return [\n        useActionBarFloatStatus\n    ];\n})), \"0/0BcKxFr0XAkKHpLnLsVaGDyyQ=\", false, function() {\n    return [\n        useActionBarFloatStatus\n    ];\n});\n_c5 = ActionBarPrimitiveRoot;\nActionBarPrimitiveRoot.displayName = \"ActionBarPrimitive.Root\";\n// src/primitives/actionBar/ActionBarCopy.tsx\n\n\n\n\nvar ActionBarPrimitiveCopy = /*#__PURE__*/ _s47((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c6 = _s47((param, forwardedRef)=>{\n    let { copiedDuration, onClick, disabled, ...props } = param;\n    _s47();\n    const isCopied = useMessageUtils((u)=>u.isCopied);\n    const callback = useActionBarCopy({\n        copiedDuration\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.button, {\n        type: \"button\",\n        ...isCopied ? {\n            \"data-copied\": \"true\"\n        } : {},\n        ...props,\n        ref: forwardedRef,\n        disabled: disabled || !callback,\n        onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(onClick, ()=>{\n            callback === null || callback === void 0 ? void 0 : callback();\n        })\n    });\n}, \"gFWAsjhhqGHbD8G3esipvjGRxRU=\", false, function() {\n    return [\n        useMessageUtils,\n        useActionBarCopy\n    ];\n})), \"gFWAsjhhqGHbD8G3esipvjGRxRU=\", false, function() {\n    return [\n        useMessageUtils,\n        useActionBarCopy\n    ];\n});\n_c7 = ActionBarPrimitiveCopy;\nActionBarPrimitiveCopy.displayName = \"ActionBarPrimitive.Copy\";\n// src/utils/createActionButton.tsx\n\n\n\n\nvar createActionButton = function(displayName, useActionButton) {\n    let forwardProps = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];\n    var _s = $RefreshSig$();\n    const ActionButton = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_s((props, forwardedRef)=>{\n        _s();\n        const forwardedProps = {};\n        const primitiveProps = {};\n        Object.keys(props).forEach((key)=>{\n            if (forwardProps.includes(key)) {\n                forwardedProps[key] = props[key];\n            } else {\n                primitiveProps[key] = props[key];\n            }\n        });\n        const callback = useActionButton(forwardedProps);\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.button, {\n            type: \"button\",\n            ...primitiveProps,\n            ref: forwardedRef,\n            disabled: primitiveProps.disabled || !callback,\n            onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(primitiveProps.onClick, ()=>{\n                callback === null || callback === void 0 ? void 0 : callback();\n            })\n        });\n    }, \"FdChcX5H1rExVMD+giOQOEXUOY0=\", false, function() {\n        return [\n            useActionButton\n        ];\n    }));\n    ActionButton.displayName = displayName;\n    return ActionButton;\n};\n// src/primitives/actionBar/ActionBarReload.tsx\nvar ActionBarPrimitiveReload = createActionButton(\"ActionBarPrimitive.Reload\", useActionBarReload);\n// src/primitives/actionBar/ActionBarEdit.tsx\nvar ActionBarPrimitiveEdit = createActionButton(\"ActionBarPrimitive.Edit\", useActionBarEdit);\n// src/primitives/actionBar/ActionBarSpeak.tsx\nvar ActionBarPrimitiveSpeak = createActionButton(\"ActionBarPrimitive.Speak\", useActionBarSpeak);\n// src/primitives/actionBar/ActionBarStopSpeaking.tsx\n\n\n\n\n\nvar ActionBarPrimitiveStopSpeaking = /*#__PURE__*/ _s48((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c8 = _s48((props, ref)=>{\n    _s48();\n    const callback = useActionBarStopSpeaking();\n    (0,_radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_6__.useEscapeKeydown)((e)=>{\n        if (callback) {\n            e.preventDefault();\n            callback();\n        }\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.button, {\n        type: \"button\",\n        disabled: !callback,\n        ...props,\n        ref,\n        onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onClick, ()=>{\n            callback === null || callback === void 0 ? void 0 : callback();\n        })\n    });\n}, \"YLth4BhInIcuYt1AHDZUVshtehA=\", false, function() {\n    return [\n        useActionBarStopSpeaking,\n        _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_6__.useEscapeKeydown\n    ];\n})), \"YLth4BhInIcuYt1AHDZUVshtehA=\", false, function() {\n    return [\n        useActionBarStopSpeaking,\n        _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_6__.useEscapeKeydown\n    ];\n});\n_c9 = ActionBarPrimitiveStopSpeaking;\nActionBarPrimitiveStopSpeaking.displayName = \"ActionBarPrimitive.StopSpeaking\";\n// src/primitives/actionBar/ActionBarFeedbackPositive.tsx\n\n\n\n\nvar ActionBarPrimitiveFeedbackPositive = /*#__PURE__*/ _s49((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c10 = _s49((param, forwardedRef)=>{\n    let { onClick, disabled, ...props } = param;\n    _s49();\n    const isSubmitted = useMessage((u)=>{\n        var _u_submittedFeedback;\n        return ((_u_submittedFeedback = u.submittedFeedback) === null || _u_submittedFeedback === void 0 ? void 0 : _u_submittedFeedback.type) === \"positive\";\n    });\n    const callback = useActionBarFeedbackPositive();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.button, {\n        type: \"button\",\n        ...isSubmitted ? {\n            \"data-submitted\": \"true\"\n        } : {},\n        ...props,\n        ref: forwardedRef,\n        disabled: disabled || !callback,\n        onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(onClick, ()=>{\n            callback === null || callback === void 0 ? void 0 : callback();\n        })\n    });\n}, \"VibZ7wM6MplswQhx8Me8PXS8SnM=\", false, function() {\n    return [\n        useMessage,\n        useActionBarFeedbackPositive\n    ];\n})), \"VibZ7wM6MplswQhx8Me8PXS8SnM=\", false, function() {\n    return [\n        useMessage,\n        useActionBarFeedbackPositive\n    ];\n});\n_c11 = ActionBarPrimitiveFeedbackPositive;\nActionBarPrimitiveFeedbackPositive.displayName = \"ActionBarPrimitive.FeedbackPositive\";\n// src/primitives/actionBar/ActionBarFeedbackNegative.tsx\n\n\n\n\nvar ActionBarPrimitiveFeedbackNegative = /*#__PURE__*/ _s50((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c12 = _s50((param, forwardedRef)=>{\n    let { onClick, disabled, ...props } = param;\n    _s50();\n    const isSubmitted = useMessage((u)=>{\n        var _u_submittedFeedback;\n        return ((_u_submittedFeedback = u.submittedFeedback) === null || _u_submittedFeedback === void 0 ? void 0 : _u_submittedFeedback.type) === \"negative\";\n    });\n    const callback = useActionBarFeedbackNegative();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.button, {\n        type: \"button\",\n        ...isSubmitted ? {\n            \"data-submitted\": \"true\"\n        } : {},\n        ...props,\n        ref: forwardedRef,\n        disabled: disabled || !callback,\n        onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(onClick, ()=>{\n            callback === null || callback === void 0 ? void 0 : callback();\n        })\n    });\n}, \"PzxnOfXGP5Q/3ak0kD0X/qUmYjw=\", false, function() {\n    return [\n        useMessage,\n        useActionBarFeedbackNegative\n    ];\n})), \"PzxnOfXGP5Q/3ak0kD0X/qUmYjw=\", false, function() {\n    return [\n        useMessage,\n        useActionBarFeedbackNegative\n    ];\n});\n_c13 = ActionBarPrimitiveFeedbackNegative;\nActionBarPrimitiveFeedbackNegative.displayName = \"ActionBarPrimitive.FeedbackNegative\";\n// src/primitives/assistantModal/index.ts\nvar assistantModal_exports = {};\n(0,_chunk_BJPOCE4O_mjs__WEBPACK_IMPORTED_MODULE_3__.__export)(assistantModal_exports, {\n    Anchor: ()=>AssistantModalPrimitiveAnchor,\n    Content: ()=>AssistantModalPrimitiveContent,\n    Root: ()=>AssistantModalPrimitiveRoot,\n    Trigger: ()=>AssistantModalPrimitiveTrigger\n});\n// src/primitives/assistantModal/AssistantModalRoot.tsx\n\n\n\n// src/primitives/assistantModal/scope.tsx\n\nvar usePopoverScope = _radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_7__.createPopoverScope();\n// src/primitives/assistantModal/AssistantModalRoot.tsx\n\nvar useAssistantModalOpenState = (param)=>{\n    let { defaultOpen = false, unstable_openOnRunStart = true } = param;\n    _s51();\n    const state = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultOpen);\n    const [, setOpen] = state;\n    const threadRuntime = useThreadRuntime();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!unstable_openOnRunStart) return void 0;\n        return threadRuntime.unstable_on(\"run-start\", ()=>{\n            setOpen(true);\n        });\n    }, [\n        unstable_openOnRunStart\n    ]);\n    return state;\n};\n_s51(useAssistantModalOpenState, \"yCv+OeSoiWPF4X0p0ILiiUOZ3VU=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        useThreadRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar AssistantModalPrimitiveRoot = (param)=>{\n    let { __scopeAssistantModal, defaultOpen, unstable_openOnRunStart, open, onOpenChange, ...rest } = param;\n    _s52();\n    const scope = usePopoverScope(__scopeAssistantModal);\n    const [modalOpen, setOpen] = useAssistantModalOpenState({\n        defaultOpen,\n        unstable_openOnRunStart\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_7__.Root, {\n        ...scope,\n        open: open === void 0 ? modalOpen : open,\n        onOpenChange: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(onOpenChange, setOpen),\n        ...rest\n    });\n};\n_s52(AssistantModalPrimitiveRoot, \"oNa06/Cm6JAVVEDOFXNi0YKGuh8=\", false, function() {\n    return [\n        usePopoverScope,\n        useAssistantModalOpenState\n    ];\n});\n_c14 = AssistantModalPrimitiveRoot;\nAssistantModalPrimitiveRoot.displayName = \"AssistantModalPrimitive.Root\";\n// src/primitives/assistantModal/AssistantModalTrigger.tsx\n\n\n\nvar AssistantModalPrimitiveTrigger = /*#__PURE__*/ _s53((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c15 = _s53((param, ref)=>{\n    let { __scopeAssistantModal, ...rest } = param;\n    _s53();\n    const scope = usePopoverScope(__scopeAssistantModal);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_7__.Trigger, {\n        ...scope,\n        ...rest,\n        ref\n    });\n}, \"FBGd0uOLHxoE6NZT2L9VHWn41oI=\", false, function() {\n    return [\n        usePopoverScope\n    ];\n})), \"FBGd0uOLHxoE6NZT2L9VHWn41oI=\", false, function() {\n    return [\n        usePopoverScope\n    ];\n});\n_c16 = AssistantModalPrimitiveTrigger;\nAssistantModalPrimitiveTrigger.displayName = \"AssistantModalPrimitive.Trigger\";\n// src/primitives/assistantModal/AssistantModalContent.tsx\n\n\n\n\nvar AssistantModalPrimitiveContent = /*#__PURE__*/ _s54((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c17 = _s54((param, forwardedRef)=>{\n    let { __scopeAssistantModal, side, align, onInteractOutside, dissmissOnInteractOutside = false, ...props } = param;\n    _s54();\n    const scope = usePopoverScope(__scopeAssistantModal);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_7__.Portal, {\n        ...scope,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_7__.Content, {\n            ...scope,\n            ...props,\n            ref: forwardedRef,\n            side: side !== null && side !== void 0 ? side : \"top\",\n            align: align !== null && align !== void 0 ? align : \"end\",\n            onInteractOutside: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(onInteractOutside, dissmissOnInteractOutside ? void 0 : (e)=>e.preventDefault())\n        })\n    });\n}, \"FBGd0uOLHxoE6NZT2L9VHWn41oI=\", false, function() {\n    return [\n        usePopoverScope\n    ];\n})), \"FBGd0uOLHxoE6NZT2L9VHWn41oI=\", false, function() {\n    return [\n        usePopoverScope\n    ];\n});\n_c18 = AssistantModalPrimitiveContent;\nAssistantModalPrimitiveContent.displayName = \"AssistantModalPrimitive.Content\";\n// src/primitives/assistantModal/AssistantModalAnchor.tsx\n\n\n\nvar AssistantModalPrimitiveAnchor = /*#__PURE__*/ _s55((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c19 = _s55((param, ref)=>{\n    let { __scopeAssistantModal, ...rest } = param;\n    _s55();\n    const scope = usePopoverScope(__scopeAssistantModal);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_7__.Anchor, {\n        ...scope,\n        ...rest,\n        ref\n    });\n}, \"FBGd0uOLHxoE6NZT2L9VHWn41oI=\", false, function() {\n    return [\n        usePopoverScope\n    ];\n})), \"FBGd0uOLHxoE6NZT2L9VHWn41oI=\", false, function() {\n    return [\n        usePopoverScope\n    ];\n});\n_c20 = AssistantModalPrimitiveAnchor;\nAssistantModalPrimitiveAnchor.displayName = \"AssistantModalPrimitive.Anchor\";\n// src/primitives/attachment/index.ts\nvar attachment_exports = {};\n(0,_chunk_BJPOCE4O_mjs__WEBPACK_IMPORTED_MODULE_3__.__export)(attachment_exports, {\n    Name: ()=>AttachmentPrimitiveName,\n    Remove: ()=>AttachmentPrimitiveRemove,\n    Root: ()=>AttachmentPrimitiveRoot,\n    unstable_Thumb: ()=>AttachmentPrimitiveThumb\n});\n// src/primitives/attachment/AttachmentRoot.tsx\n\n\n\nvar AttachmentPrimitiveRoot = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c21 = (props, ref)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...props,\n        ref\n    });\n});\n_c22 = AttachmentPrimitiveRoot;\nAttachmentPrimitiveRoot.displayName = \"AttachmentPrimitive.Root\";\n// src/primitives/attachment/AttachmentThumb.tsx\n\n// src/context/react/AttachmentContext.ts\n\nvar AttachmentContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nfunction useAttachmentContext(options) {\n    _s56();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AttachmentContext);\n    if (!(options === null || options === void 0 ? void 0 : options.optional) && !context) throw new Error(\"This component must be used within a ComposerPrimitive.Attachments or MessagePrimitive.Attachments component.\");\n    return context;\n}\n_s56(useAttachmentContext, \"bJmASMjDQSZ2aqedVwXKC9JrbYk=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useContext\n    ];\n});\nfunction useThreadComposerAttachmentContext(options) {\n    _s57();\n    const context = useAttachmentContext(options);\n    if (!context) return null;\n    if (context.source !== \"thread-composer\") throw new Error(\"This component must be used within a thread's ComposerPrimitive.Attachments component.\");\n    return context;\n}\n_s57(useThreadComposerAttachmentContext, \"Vyp7xM7N9ICc4ZtHJJCuLInq928=\", false, function() {\n    return [\n        useAttachmentContext\n    ];\n});\nfunction useEditComposerAttachmentContext(options) {\n    _s58();\n    const context = useAttachmentContext(options);\n    if (!context) return null;\n    if (context.source !== \"edit-composer\") throw new Error(\"This component must be used within a messages's ComposerPrimitive.Attachments component.\");\n    return context;\n}\n_s58(useEditComposerAttachmentContext, \"Vyp7xM7N9ICc4ZtHJJCuLInq928=\", false, function() {\n    return [\n        useAttachmentContext\n    ];\n});\nfunction useMessageAttachmentContext(options) {\n    _s59();\n    const context = useAttachmentContext(options);\n    if (!context) return null;\n    if (context.source !== \"message\") throw new Error(\"This component must be used within a MessagePrimitive.Attachments component.\");\n    return context;\n}\n_s59(useMessageAttachmentContext, \"Vyp7xM7N9ICc4ZtHJJCuLInq928=\", false, function() {\n    return [\n        useAttachmentContext\n    ];\n});\nfunction useAttachmentRuntime(options) {\n    _s60();\n    const attachmentRuntime = useAttachmentContext(options);\n    if (!attachmentRuntime) return null;\n    return attachmentRuntime.useAttachmentRuntime();\n}\n_s60(useAttachmentRuntime, \"RQEhC1aX7ftU7EDJHGJH348O+QQ=\", true, function() {\n    return [\n        useAttachmentContext\n    ];\n});\nvar { useAttachment } = createContextStoreHook(useAttachmentContext, \"useAttachment\");\nvar { useAttachment: useThreadComposerAttachment } = createContextStoreHook(useThreadComposerAttachmentContext, \"useAttachment\");\nvar { useAttachment: useEditComposerAttachment } = createContextStoreHook(useEditComposerAttachmentContext, \"useAttachment\");\nvar { useAttachment: useMessageAttachment } = createContextStoreHook(useMessageAttachmentContext, \"useAttachment\");\n// src/primitives/attachment/AttachmentThumb.tsx\n\n\nvar AttachmentPrimitiveThumb = /*#__PURE__*/ _s61((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c23 = _s61((props, ref)=>{\n    _s61();\n    const ext = useAttachment((a)=>a.name.split(\".\").pop());\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...props,\n        ref,\n        children: [\n            \".\",\n            ext\n        ]\n    });\n}, \"xNdiTqOryZssHsdaHW/zFrzOfG4=\", false, function() {\n    return [\n        useAttachment\n    ];\n})), \"xNdiTqOryZssHsdaHW/zFrzOfG4=\", false, function() {\n    return [\n        useAttachment\n    ];\n});\n_c24 = AttachmentPrimitiveThumb;\nAttachmentPrimitiveThumb.displayName = \"AttachmentPrimitive.Thumb\";\n// src/primitives/attachment/AttachmentName.tsx\n\nvar AttachmentPrimitiveName = ()=>{\n    _s62();\n    const name = useAttachment((a)=>a.name);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n        children: name\n    });\n};\n_s62(AttachmentPrimitiveName, \"XCKIMaBzXxvPvzgINfJSSawvAzo=\", false, function() {\n    return [\n        useAttachment\n    ];\n});\n_c25 = AttachmentPrimitiveName;\nAttachmentPrimitiveName.displayName = \"AttachmentPrimitive.Name\";\n// src/primitive-hooks/attachment/useAttachmentRemove.ts\n\nvar useAttachmentRemove = ()=>{\n    _s63();\n    const attachmentRuntime = useAttachmentRuntime();\n    const handleRemoveAttachment = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        attachmentRuntime.remove();\n    }, [\n        attachmentRuntime\n    ]);\n    return handleRemoveAttachment;\n};\n_s63(useAttachmentRemove, \"k0gzSdUk9wDqA9xbTJUf6Xt+38k=\", false, function() {\n    return [\n        useAttachmentRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitives/attachment/AttachmentRemove.tsx\nvar AttachmentPrimitiveRemove = createActionButton(\"AttachmentPrimitive.Remove\", useAttachmentRemove);\n// src/primitives/branchPicker/index.ts\nvar branchPicker_exports = {};\n(0,_chunk_BJPOCE4O_mjs__WEBPACK_IMPORTED_MODULE_3__.__export)(branchPicker_exports, {\n    Count: ()=>BranchPickerPrimitiveCount,\n    Next: ()=>BranchPickerPrimitiveNext,\n    Number: ()=>BranchPickerPrimitiveNumber,\n    Previous: ()=>BranchPickerPrimitivePrevious,\n    Root: ()=>BranchPickerPrimitiveRoot\n});\n// src/primitives/branchPicker/BranchPickerNext.tsx\nvar BranchPickerPrimitiveNext = createActionButton(\"BranchPickerPrimitive.Next\", useBranchPickerNext);\n// src/primitives/branchPicker/BranchPickerPrevious.tsx\nvar BranchPickerPrimitivePrevious = createActionButton(\"BranchPickerPrimitive.Previous\", useBranchPickerPrevious);\n// src/primitives/branchPicker/BranchPickerCount.tsx\n\nvar BranchPickerPrimitiveCount = ()=>{\n    _s64();\n    const branchCount = useBranchPickerCount();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n        children: branchCount\n    });\n};\n_s64(BranchPickerPrimitiveCount, \"HGXTPOPmd4ElJa2vFjY3z3mI1j8=\", false, function() {\n    return [\n        useBranchPickerCount\n    ];\n});\n_c26 = BranchPickerPrimitiveCount;\nBranchPickerPrimitiveCount.displayName = \"BranchPickerPrimitive.Count\";\n// src/primitives/branchPicker/BranchPickerNumber.tsx\n\nvar BranchPickerPrimitiveNumber = ()=>{\n    _s65();\n    const branchNumber = useBranchPickerNumber();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n        children: branchNumber\n    });\n};\n_s65(BranchPickerPrimitiveNumber, \"J8p2RAwdhadyoy0zl93JAXzx/mY=\", false, function() {\n    return [\n        useBranchPickerNumber\n    ];\n});\n_c27 = BranchPickerPrimitiveNumber;\nBranchPickerPrimitiveNumber.displayName = \"BranchPickerPrimitive.Number\";\n// src/primitives/branchPicker/BranchPickerRoot.tsx\n\n\n// src/primitives/message/index.ts\nvar message_exports = {};\n(0,_chunk_BJPOCE4O_mjs__WEBPACK_IMPORTED_MODULE_3__.__export)(message_exports, {\n    Attachments: ()=>MessagePrimitiveAttachments,\n    Content: ()=>MessagePrimitiveContent,\n    If: ()=>MessagePrimitiveIf,\n    InProgress: ()=>MessagePrimitiveInProgress,\n    Root: ()=>MessagePrimitiveRoot\n});\n// src/primitives/message/MessageRoot.tsx\n\n\n// src/utils/hooks/useManagedRef.ts\n\nvar useManagedRef = (callback)=>{\n    _s66();\n    const cleanupRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((el)=>{\n        if (cleanupRef.current) {\n            cleanupRef.current();\n        }\n        if (el) {\n            cleanupRef.current = callback(el);\n        }\n    }, [\n        callback\n    ]);\n    return ref;\n};\n_s66(useManagedRef, \"oOMnKLKoaIu5CIlCK7dSC5fovTA=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback\n    ];\n});\n// src/primitives/message/MessageRoot.tsx\n\n\nvar useIsHoveringRef = ()=>{\n    _s67();\n    const messageUtilsStore = useMessageUtilsStore();\n    const callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((el)=>{\n        const setIsHovering = messageUtilsStore.getState().setIsHovering;\n        const handleMouseEnter = ()=>{\n            setIsHovering(true);\n        };\n        const handleMouseLeave = ()=>{\n            setIsHovering(false);\n        };\n        el.addEventListener(\"mouseenter\", handleMouseEnter);\n        el.addEventListener(\"mouseleave\", handleMouseLeave);\n        return ()=>{\n            el.removeEventListener(\"mouseenter\", handleMouseEnter);\n            el.removeEventListener(\"mouseleave\", handleMouseLeave);\n            setIsHovering(false);\n        };\n    }, [\n        messageUtilsStore\n    ]);\n    return useManagedRef(callbackRef);\n};\n_s67(useIsHoveringRef, \"aTRl9MyVepTNsJmoW2ew7ltPH1M=\", false, function() {\n    return [\n        useMessageUtilsStore,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback,\n        useManagedRef\n    ];\n});\nvar MessagePrimitiveRoot = /*#__PURE__*/ _s68((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c28 = _s68((props, forwardRef36)=>{\n    _s68();\n    const isHoveringRef = useIsHoveringRef();\n    const ref = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__.useComposedRefs)(forwardRef36, isHoveringRef);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...props,\n        ref\n    });\n}, \"n5UvMOkWQCpZ0zuj8/Re8H/yp+w=\", false, function() {\n    return [\n        useIsHoveringRef,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__.useComposedRefs\n    ];\n})), \"n5UvMOkWQCpZ0zuj8/Re8H/yp+w=\", false, function() {\n    return [\n        useIsHoveringRef,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__.useComposedRefs\n    ];\n});\n_c29 = MessagePrimitiveRoot;\nMessagePrimitiveRoot.displayName = \"MessagePrimitive.Root\";\n// src/primitives/message/MessageIf.tsx\nvar MessagePrimitiveIf = (param)=>{\n    let { children, ...query } = param;\n    _s69();\n    const result = useMessageIf(query);\n    return result ? children : null;\n};\n_s69(MessagePrimitiveIf, \"/5ravk1Os1Cne2DltAgKDLYmME4=\", false, function() {\n    return [\n        useMessageIf\n    ];\n});\n_c30 = MessagePrimitiveIf;\nMessagePrimitiveIf.displayName = \"MessagePrimitive.If\";\n// src/primitives/message/MessageContent.tsx\n\n// src/context/providers/ContentPartRuntimeProvider.tsx\n\n\n\nvar useContentPartRuntimeStore = (runtime)=>{\n    _s70();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        writableStore(store).setState(runtime, true);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s70(useContentPartRuntimeStore, \"ZnGUXSFHchS0UV7/JvmuJUuy6cM=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar useContentPartStore2 = (runtime)=>{\n    _s71();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime.getState()));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const updateState = ()=>writableStore(store).setState(runtime.getState(), true);\n        updateState();\n        return runtime.subscribe(updateState);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s71(useContentPartStore2, \"ZnGUXSFHchS0UV7/JvmuJUuy6cM=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar ContentPartRuntimeProvider = (param)=>{\n    let { runtime, children } = param;\n    _s72();\n    const useContentPartRuntime2 = useContentPartRuntimeStore(runtime);\n    const useContentPart2 = useContentPartStore2(runtime);\n    const [context] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        return {\n            useContentPartRuntime: useContentPartRuntime2,\n            useContentPart: useContentPart2\n        };\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ContentPartContext.Provider, {\n        value: context,\n        children\n    });\n};\n_s72(ContentPartRuntimeProvider, \"q2fJBOLBlaPfwReb10u1BtCf5Pg=\", false, function() {\n    return [\n        useContentPartRuntimeStore,\n        useContentPartStore2,\n        react__WEBPACK_IMPORTED_MODULE_0__.useState\n    ];\n});\n_c31 = ContentPartRuntimeProvider;\n// src/primitives/contentPart/ContentPartText.tsx\n\n// src/utils/smooth/useSmooth.tsx\n\n\n// src/utils/smooth/SmoothContext.tsx\n\n\n\nvar SmoothContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar makeSmoothContext = (initialState)=>{\n    const useSmoothStatus2 = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>initialState);\n    return {\n        useSmoothStatus: useSmoothStatus2\n    };\n};\nvar SmoothContextProvider = (param)=>{\n    let { children } = param;\n    _s73();\n    const outer = useSmoothContext({\n        optional: true\n    });\n    const contentPartStore = useContentPartStore();\n    const [context] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>makeSmoothContext(contentPartStore.getState().status));\n    if (outer) return children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SmoothContext.Provider, {\n        value: context,\n        children\n    });\n};\n_s73(SmoothContextProvider, \"l5qcuYNrVufk2wlUqUmIjAUFDss=\", false, function() {\n    return [\n        useSmoothContext,\n        useContentPartStore,\n        react__WEBPACK_IMPORTED_MODULE_0__.useState\n    ];\n});\n_c32 = SmoothContextProvider;\nvar withSmoothContextProvider = (Component)=>{\n    const Wrapped = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>{\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SmoothContextProvider, {\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Component, {\n                ...props,\n                ref\n            })\n        });\n    });\n    Wrapped.displayName = Component.displayName;\n    return Wrapped;\n};\nfunction useSmoothContext(options) {\n    _s74();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SmoothContext);\n    if (!(options === null || options === void 0 ? void 0 : options.optional) && !context) throw new Error(\"This component must be used within a SmoothContextProvider.\");\n    return context;\n}\n_s74(useSmoothContext, \"cT9JXsrukWAAWussJuQgko69G8k=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useContext\n    ];\n});\nvar { useSmoothStatus, useSmoothStatusStore } = createContextStoreHook(useSmoothContext, \"useSmoothStatus\");\n// src/utils/smooth/useSmooth.tsx\nvar TextStreamAnimator = class {\n    start() {\n        if (this.animationFrameId !== null) return;\n        this.lastUpdateTime = Date.now();\n        this.animate();\n    }\n    stop() {\n        if (this.animationFrameId !== null) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = null;\n        }\n    }\n    constructor(currentText, setText){\n        this.animationFrameId = null;\n        this.lastUpdateTime = Date.now();\n        this.targetText = \"\";\n        this.animate = ()=>{\n            const currentTime = Date.now();\n            const deltaTime = currentTime - this.lastUpdateTime;\n            let timeToConsume = deltaTime;\n            const remainingChars = this.targetText.length - this.currentText.length;\n            const baseTimePerChar = Math.min(5, 250 / remainingChars);\n            let charsToAdd = 0;\n            while(timeToConsume >= baseTimePerChar && charsToAdd < remainingChars){\n                charsToAdd++;\n                timeToConsume -= baseTimePerChar;\n            }\n            if (charsToAdd !== remainingChars) {\n                this.animationFrameId = requestAnimationFrame(this.animate);\n            } else {\n                this.animationFrameId = null;\n            }\n            if (charsToAdd === 0) return;\n            this.currentText = this.targetText.slice(0, this.currentText.length + charsToAdd);\n            this.lastUpdateTime = currentTime - timeToConsume;\n            this.setText(this.currentText);\n        };\n        this.currentText = currentText;\n        this.setText = setText;\n    }\n};\nvar SMOOTH_STATUS = Object.freeze({\n    type: \"running\"\n});\nvar useSmooth = function(state) {\n    let smooth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    _s75();\n    const { text } = state;\n    const id = useMessage({\n        optional: true,\n        selector: (m)=>m.id\n    });\n    const idRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(id);\n    const [displayedText, setDisplayedText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(text);\n    const smoothStatusStore = useSmoothStatusStore({\n        optional: true\n    });\n    const setText = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_9__.useCallbackRef)((text2)=>{\n        setDisplayedText(text2);\n        if (smoothStatusStore) {\n            writableStore(smoothStatusStore).setState(text2 !== state.text ? SMOOTH_STATUS : state.status);\n        }\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (smoothStatusStore) {\n            writableStore(smoothStatusStore).setState(text !== state.text ? SMOOTH_STATUS : state.status);\n        }\n    }, [\n        smoothStatusStore,\n        text,\n        displayedText,\n        state.status,\n        state.text\n    ]);\n    const [animatorRef] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new TextStreamAnimator(text, setText));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!smooth) {\n            animatorRef.stop();\n            return;\n        }\n        if (idRef.current !== id || !text.startsWith(animatorRef.targetText)) {\n            idRef.current = id;\n            setText(text);\n            animatorRef.currentText = text;\n            animatorRef.targetText = text;\n            animatorRef.stop();\n            return;\n        }\n        animatorRef.targetText = text;\n        animatorRef.start();\n    }, [\n        setText,\n        animatorRef,\n        id,\n        smooth,\n        text\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        return ()=>{\n            animatorRef.stop();\n        };\n    }, [\n        animatorRef\n    ]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>smooth ? {\n            type: \"text\",\n            text: displayedText,\n            part: {\n                type: \"text\",\n                text: displayedText\n            },\n            status: text === displayedText ? state.status : SMOOTH_STATUS\n        } : state, [\n        smooth,\n        displayedText,\n        state,\n        text\n    ]);\n};\n_s75(useSmooth, \"a2fVkoHPwLBMC0rzTWUD/wA6fFw=\", false, function() {\n    return [\n        useMessage,\n        react__WEBPACK_IMPORTED_MODULE_0__.useRef,\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        useSmoothStatusStore,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_9__.useCallbackRef,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect,\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\n// src/primitives/contentPart/ContentPartText.tsx\n\nvar ContentPartPrimitiveText = /*#__PURE__*/ _s76((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c33 = _s76((param, forwardedRef)=>{\n    let { smooth = true, component: Component = \"span\", ...rest } = param;\n    _s76();\n    const { text, status } = useSmooth(useContentPartText(), smooth);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Component, {\n        \"data-status\": status.type,\n        ...rest,\n        ref: forwardedRef,\n        children: text\n    });\n}, \"ULeRGV1CpKbvJ3fIZJMcZE712qE=\", false, function() {\n    return [\n        useSmooth\n    ];\n})), \"ULeRGV1CpKbvJ3fIZJMcZE712qE=\", false, function() {\n    return [\n        useSmooth\n    ];\n});\n_c34 = ContentPartPrimitiveText;\nContentPartPrimitiveText.displayName = \"ContentPartPrimitive.Text\";\n// src/primitives/contentPart/ContentPartImage.tsx\n\n\n\nvar ContentPartPrimitiveImage = /*#__PURE__*/ _s77((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c35 = _s77((props, forwardedRef)=>{\n    _s77();\n    const { image } = useContentPartImage();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.img, {\n        src: image,\n        ...props,\n        ref: forwardedRef\n    });\n}, \"JwJg+vJxqtGKZkIZlIEe6dJkgv0=\", false, function() {\n    return [\n        useContentPartImage\n    ];\n})), \"JwJg+vJxqtGKZkIZlIEe6dJkgv0=\", false, function() {\n    return [\n        useContentPartImage\n    ];\n});\n_c36 = ContentPartPrimitiveImage;\nContentPartPrimitiveImage.displayName = \"ContentPartPrimitive.Image\";\n// src/primitives/contentPart/ContentPartDisplay.tsx\nvar ContentPartPrimitiveDisplay = ()=>{\n    _s78();\n    const { display } = useContentPartDisplay();\n    return display !== null && display !== void 0 ? display : null;\n};\n_s78(ContentPartPrimitiveDisplay, \"23sBLHvlw7M4t0r9RSF1KZiFGBc=\", false, function() {\n    return [\n        useContentPartDisplay\n    ];\n});\n_c37 = ContentPartPrimitiveDisplay;\nContentPartPrimitiveDisplay.displayName = \"ContentPartPrimitive.Display\";\n// src/primitives/contentPart/ContentPartInProgress.tsx\nvar ContentPartPrimitiveInProgress = (param)=>{\n    let { children } = param;\n    _s79();\n    const isInProgress = useContentPart((c)=>c.status.type === \"running\");\n    return isInProgress ? children : null;\n};\n_s79(ContentPartPrimitiveInProgress, \"50cGA2oilIYqG4WlQgOH10K2jBE=\", false, function() {\n    return [\n        useContentPart\n    ];\n});\n_c38 = ContentPartPrimitiveInProgress;\nContentPartPrimitiveInProgress.displayName = \"ContentPartPrimitive.InProgress\";\n// src/utils/getThreadMessageText.tsx\nvar getThreadMessageText = (message)=>{\n    const textParts = message.content.filter((part)=>part.type === \"text\");\n    return textParts.map((part)=>part.text).join(\"\\n\\n\");\n};\n// src/api/AttachmentRuntime.ts\nvar AttachmentRuntimeImpl = class {\n    get path() {\n        return this._core.path;\n    }\n    getState() {\n        return this._core.getState();\n    }\n    subscribe(callback) {\n        return this._core.subscribe(callback);\n    }\n    constructor(_core){\n        this._core = _core;\n    }\n};\nvar ComposerAttachmentRuntime = class extends AttachmentRuntimeImpl {\n    remove() {\n        const core = this._composerApi.getState();\n        if (!core) throw new Error(\"Composer is not available\");\n        return core.removeAttachment(this.getState().id);\n    }\n    constructor(core, _composerApi){\n        super(core);\n        this._composerApi = _composerApi;\n    }\n};\nvar ThreadComposerAttachmentRuntimeImpl = class extends ComposerAttachmentRuntime {\n    get source() {\n        return \"thread-composer\";\n    }\n};\nvar EditComposerAttachmentRuntimeImpl = class extends ComposerAttachmentRuntime {\n    get source() {\n        return \"edit-composer\";\n    }\n};\nvar MessageAttachmentRuntimeImpl = class extends AttachmentRuntimeImpl {\n    get source() {\n        return \"message\";\n    }\n    remove() {\n        throw new Error(\"Message attachments cannot be removed\");\n    }\n    constructor(core){\n        super(core);\n    }\n};\n// src/api/subscribable/BaseSubject.ts\nvar BaseSubject = class {\n    get isConnected() {\n        return !!this._connection;\n    }\n    notifySubscribers() {\n        for (const callback of this._subscriptions)callback();\n    }\n    _updateConnection() {\n        if (this._subscriptions.size > 0) {\n            if (this._connection) return;\n            this._connection = this._connect();\n        } else {\n            var _this__connection, _this;\n            (_this__connection = (_this = this)._connection) === null || _this__connection === void 0 ? void 0 : _this__connection.call(_this);\n            this._connection = void 0;\n        }\n    }\n    subscribe(callback) {\n        this._subscriptions.add(callback);\n        this._updateConnection();\n        return ()=>{\n            this._subscriptions.delete(callback);\n            this._updateConnection();\n        };\n    }\n    constructor(){\n        this._subscriptions = /* @__PURE__ */ new Set();\n    }\n};\n// src/api/subscribable/SKIP_UPDATE.ts\nvar SKIP_UPDATE = Symbol(\"skip-update\");\n// src/api/subscribable/LazyMemoizeSubject.ts\nvar LazyMemoizeSubject = class extends BaseSubject {\n    get path() {\n        return this.binding.path;\n    }\n    _connect() {\n        const callback = ()=>{\n            this._previousStateDirty = true;\n            this.notifySubscribers();\n        };\n        return this.binding.subscribe(callback);\n    }\n    constructor(binding){\n        super();\n        this._previousStateDirty = true;\n        this.getState = ()=>{\n            if (!this.isConnected || this._previousStateDirty) {\n                const newState = this.binding.getState();\n                if (newState !== SKIP_UPDATE) {\n                    this._previousState = newState;\n                }\n                this._previousStateDirty = false;\n            }\n            if (this._previousState === void 0) throw new Error(\"Entry not available in the store\");\n            return this._previousState;\n        };\n        this.binding = binding;\n    }\n};\n// src/api/subscribable/shallowEqual.ts\nfunction shallowEqual(objA, objB) {\n    if (objA === void 0 && objB === void 0) return true;\n    if (objA === void 0) return false;\n    if (objB === void 0) return false;\n    for (const key of Object.keys(objA)){\n        const valueA = objA[key];\n        const valueB = objB[key];\n        if (!Object.is(valueA, valueB)) return false;\n    }\n    return true;\n}\n// src/api/subscribable/ShallowMemoizeSubject.ts\nvar ShallowMemoizeSubject = class extends BaseSubject {\n    get path() {\n        return this.binding.path;\n    }\n    _syncState() {\n        const state = this.binding.getState();\n        if (state === SKIP_UPDATE) return false;\n        if (shallowEqual(state, this._previousState)) return false;\n        this._previousState = state;\n        return true;\n    }\n    _connect() {\n        const callback = ()=>{\n            if (this._syncState()) {\n                this.notifySubscribers();\n            }\n        };\n        return this.binding.subscribe(callback);\n    }\n    constructor(binding){\n        super();\n        this.getState = ()=>{\n            if (!this.isConnected) this._syncState();\n            return this._previousState;\n        };\n        this.binding = binding;\n        const state = binding.getState();\n        if (state === SKIP_UPDATE) throw new Error(\"Entry not available in the store\");\n        this._previousState = state;\n    }\n};\n// src/api/ComposerRuntime.ts\nvar METHOD_NOT_SUPPORTED = ()=>{\n    throw new Error(\"Composer is not available\");\n};\n_c39 = METHOD_NOT_SUPPORTED;\nvar EMPTY_ARRAY = Object.freeze([]);\nvar getThreadComposerState = (runtime)=>{\n    var _runtime_isEditing, _runtime_canCancel, _runtime_isEmpty, _runtime_text, _runtime_attachments, _runtime_text1, _runtime_setText_bind, _runtime_setText_bind1, _runtime_send_bind, _runtime_cancel_bind, _runtime_reset_bind, _runtime_addAttachment_bind, _runtime_removeAttachment_bind;\n    return Object.freeze({\n        type: \"thread\",\n        isEditing: (_runtime_isEditing = runtime === null || runtime === void 0 ? void 0 : runtime.isEditing) !== null && _runtime_isEditing !== void 0 ? _runtime_isEditing : false,\n        canCancel: (_runtime_canCancel = runtime === null || runtime === void 0 ? void 0 : runtime.canCancel) !== null && _runtime_canCancel !== void 0 ? _runtime_canCancel : false,\n        isEmpty: (_runtime_isEmpty = runtime === null || runtime === void 0 ? void 0 : runtime.isEmpty) !== null && _runtime_isEmpty !== void 0 ? _runtime_isEmpty : true,\n        text: (_runtime_text = runtime === null || runtime === void 0 ? void 0 : runtime.text) !== null && _runtime_text !== void 0 ? _runtime_text : \"\",\n        attachments: (_runtime_attachments = runtime === null || runtime === void 0 ? void 0 : runtime.attachments) !== null && _runtime_attachments !== void 0 ? _runtime_attachments : EMPTY_ARRAY,\n        value: (_runtime_text1 = runtime === null || runtime === void 0 ? void 0 : runtime.text) !== null && _runtime_text1 !== void 0 ? _runtime_text1 : \"\",\n        setValue: (_runtime_setText_bind = runtime === null || runtime === void 0 ? void 0 : runtime.setText.bind(runtime)) !== null && _runtime_setText_bind !== void 0 ? _runtime_setText_bind : METHOD_NOT_SUPPORTED,\n        setText: (_runtime_setText_bind1 = runtime === null || runtime === void 0 ? void 0 : runtime.setText.bind(runtime)) !== null && _runtime_setText_bind1 !== void 0 ? _runtime_setText_bind1 : METHOD_NOT_SUPPORTED,\n        // edit: beginEdit,\n        send: (_runtime_send_bind = runtime === null || runtime === void 0 ? void 0 : runtime.send.bind(runtime)) !== null && _runtime_send_bind !== void 0 ? _runtime_send_bind : METHOD_NOT_SUPPORTED,\n        cancel: (_runtime_cancel_bind = runtime === null || runtime === void 0 ? void 0 : runtime.cancel.bind(runtime)) !== null && _runtime_cancel_bind !== void 0 ? _runtime_cancel_bind : METHOD_NOT_SUPPORTED,\n        reset: (_runtime_reset_bind = runtime === null || runtime === void 0 ? void 0 : runtime.reset.bind(runtime)) !== null && _runtime_reset_bind !== void 0 ? _runtime_reset_bind : METHOD_NOT_SUPPORTED,\n        addAttachment: (_runtime_addAttachment_bind = runtime === null || runtime === void 0 ? void 0 : runtime.addAttachment.bind(runtime)) !== null && _runtime_addAttachment_bind !== void 0 ? _runtime_addAttachment_bind : METHOD_NOT_SUPPORTED,\n        removeAttachment: (_runtime_removeAttachment_bind = runtime === null || runtime === void 0 ? void 0 : runtime.removeAttachment.bind(runtime)) !== null && _runtime_removeAttachment_bind !== void 0 ? _runtime_removeAttachment_bind : METHOD_NOT_SUPPORTED\n    });\n};\nvar getEditComposerState = (runtime, beginEdit)=>{\n    var _runtime_isEditing, _runtime_canCancel, _runtime_isEmpty, _runtime_text, _runtime_attachments, _runtime_text1, _runtime_setText_bind, _runtime_setText_bind1, _runtime_send_bind, _runtime_cancel_bind;\n    return Object.freeze({\n        type: \"edit\",\n        isEditing: (_runtime_isEditing = runtime === null || runtime === void 0 ? void 0 : runtime.isEditing) !== null && _runtime_isEditing !== void 0 ? _runtime_isEditing : false,\n        canCancel: (_runtime_canCancel = runtime === null || runtime === void 0 ? void 0 : runtime.canCancel) !== null && _runtime_canCancel !== void 0 ? _runtime_canCancel : false,\n        isEmpty: (_runtime_isEmpty = runtime === null || runtime === void 0 ? void 0 : runtime.isEmpty) !== null && _runtime_isEmpty !== void 0 ? _runtime_isEmpty : true,\n        text: (_runtime_text = runtime === null || runtime === void 0 ? void 0 : runtime.text) !== null && _runtime_text !== void 0 ? _runtime_text : \"\",\n        attachments: (_runtime_attachments = runtime === null || runtime === void 0 ? void 0 : runtime.attachments) !== null && _runtime_attachments !== void 0 ? _runtime_attachments : EMPTY_ARRAY,\n        value: (_runtime_text1 = runtime === null || runtime === void 0 ? void 0 : runtime.text) !== null && _runtime_text1 !== void 0 ? _runtime_text1 : \"\",\n        setValue: (_runtime_setText_bind = runtime === null || runtime === void 0 ? void 0 : runtime.setText.bind(runtime)) !== null && _runtime_setText_bind !== void 0 ? _runtime_setText_bind : METHOD_NOT_SUPPORTED,\n        setText: (_runtime_setText_bind1 = runtime === null || runtime === void 0 ? void 0 : runtime.setText.bind(runtime)) !== null && _runtime_setText_bind1 !== void 0 ? _runtime_setText_bind1 : METHOD_NOT_SUPPORTED,\n        edit: beginEdit,\n        send: (_runtime_send_bind = runtime === null || runtime === void 0 ? void 0 : runtime.send.bind(runtime)) !== null && _runtime_send_bind !== void 0 ? _runtime_send_bind : METHOD_NOT_SUPPORTED,\n        cancel: (_runtime_cancel_bind = runtime === null || runtime === void 0 ? void 0 : runtime.cancel.bind(runtime)) !== null && _runtime_cancel_bind !== void 0 ? _runtime_cancel_bind : METHOD_NOT_SUPPORTED\n    });\n};\nvar ComposerRuntimeImpl = class {\n    get path() {\n        return this._core.path;\n    }\n    /**\n   * @deprecated Use `getState().isEditing` instead. This will be removed in 0.6.0.\n   */ get isEditing() {\n        return this.getState().isEditing;\n    }\n    /**\n   * @deprecated Use `getState().isEmpty` instead. This will be removed in 0.6.0.\n   */ get isEmpty() {\n        return this.getState().isEmpty;\n    }\n    /**\n   * @deprecated Use `getState().canCancel` instead. This will be removed in 0.6.0.\n   */ get canCancel() {\n        return this.getState().canCancel;\n    }\n    /**\n   * @deprecated Use `getState().text` instead. This will be removed in 0.6.0.\n   */ get text() {\n        return this.getState().text;\n    }\n    /**\n   * @deprecated Use `getState().attachments` instead. This will be removed in 0.6.0.\n   */ get attachments() {\n        return this.getState().attachments;\n    }\n    /**\n   * @deprecated Use `getState().text` instead. This will be removed in 0.6.0.\n   */ get value() {\n        return this.text;\n    }\n    setText(text) {\n        const core = this._core.getState();\n        if (!core) throw new Error(\"Composer is not available\");\n        core.setText(text);\n    }\n    setValue(text) {\n        this.setText(text);\n    }\n    addAttachment(file) {\n        const core = this._core.getState();\n        if (!core) throw new Error(\"Composer is not available\");\n        return core.addAttachment(file);\n    }\n    /**\n   * @deprecated Use `getAttachmentById(id).removeAttachment()` instead. This will be removed in 0.6.0.\n   */ removeAttachment(attachmentId) {\n        const core = this._core.getState();\n        if (!core) throw new Error(\"Composer is not available\");\n        return core.removeAttachment(attachmentId);\n    }\n    /**\n   * @deprecated This method will be removed in 0.6.0. Submit feedback if you need this functionality.\n   */ reset() {\n        const core = this._core.getState();\n        if (!core) throw new Error(\"Composer is not available\");\n        core.reset();\n    }\n    send() {\n        const core = this._core.getState();\n        if (!core) throw new Error(\"Composer is not available\");\n        core.send();\n    }\n    cancel() {\n        const core = this._core.getState();\n        if (!core) throw new Error(\"Composer is not available\");\n        core.cancel();\n    }\n    subscribe(callback) {\n        return this._core.subscribe(callback);\n    }\n    getAttachmentAccept() {\n        const core = this._core.getState();\n        if (!core) throw new Error(\"Composer is not available\");\n        return core.getAttachmentAccept();\n    }\n    constructor(_core){\n        this._core = _core;\n    }\n};\nvar ThreadComposerRuntimeImpl = class extends ComposerRuntimeImpl {\n    get path() {\n        return this._core.path;\n    }\n    get type() {\n        return \"thread\";\n    }\n    get attachments() {\n        var _this_getState;\n        var _this_getState_attachments;\n        return (_this_getState_attachments = (_this_getState = this.getState()) === null || _this_getState === void 0 ? void 0 : _this_getState.attachments) !== null && _this_getState_attachments !== void 0 ? _this_getState_attachments : EMPTY_ARRAY;\n    }\n    getState() {\n        return this._getState();\n    }\n    getAttachmentByIndex(idx) {\n        return new ThreadComposerAttachmentRuntimeImpl(new ShallowMemoizeSubject({\n            path: {\n                ...this.path,\n                attachmentSource: \"thread-composer\",\n                attachmentSelector: {\n                    type: \"index\",\n                    index: idx\n                },\n                ref: this.path.ref + \"\".concat(this.path.ref, \".attachments[\").concat(idx, \"]\")\n            },\n            getState: ()=>{\n                const attachments = this.getState().attachments;\n                const attachment = attachments[idx];\n                if (!attachment) return SKIP_UPDATE;\n                return {\n                    ...attachment,\n                    attachment,\n                    source: \"thread-composer\"\n                };\n            },\n            subscribe: (callback)=>this._core.subscribe(callback)\n        }), this._core);\n    }\n    constructor(core){\n        const stateBinding = new LazyMemoizeSubject({\n            path: core.path,\n            getState: ()=>getThreadComposerState(core.getState()),\n            subscribe: (callback)=>core.subscribe(callback)\n        });\n        super({\n            path: core.path,\n            getState: ()=>core.getState(),\n            subscribe: (callback)=>stateBinding.subscribe(callback)\n        });\n        this._getState = stateBinding.getState.bind(stateBinding);\n    }\n};\nvar EditComposerRuntimeImpl = class extends ComposerRuntimeImpl {\n    get path() {\n        return this._core.path;\n    }\n    get type() {\n        return \"edit\";\n    }\n    getState() {\n        return this._getState();\n    }\n    beginEdit() {\n        this._beginEdit();\n    }\n    /**\n   * @deprecated Use `beginEdit()` instead. This will be removed in 0.6.0.\n   */ edit() {\n        this.beginEdit();\n    }\n    getAttachmentByIndex(idx) {\n        return new EditComposerAttachmentRuntimeImpl(new ShallowMemoizeSubject({\n            path: {\n                ...this.path,\n                attachmentSource: \"edit-composer\",\n                attachmentSelector: {\n                    type: \"index\",\n                    index: idx\n                },\n                ref: this.path.ref + \"\".concat(this.path.ref, \".attachments[\").concat(idx, \"]\")\n            },\n            getState: ()=>{\n                const attachments = this.getState().attachments;\n                const attachment = attachments[idx];\n                if (!attachment) return SKIP_UPDATE;\n                return {\n                    ...attachment,\n                    attachment,\n                    source: \"edit-composer\"\n                };\n            },\n            subscribe: (callback)=>this._core.subscribe(callback)\n        }), this._core);\n    }\n    constructor(core, _beginEdit){\n        const stateBinding = new LazyMemoizeSubject({\n            path: core.path,\n            getState: ()=>getEditComposerState(core.getState(), this._beginEdit),\n            subscribe: (callback)=>core.subscribe(callback)\n        });\n        super({\n            path: core.path,\n            getState: ()=>core.getState(),\n            subscribe: (callback)=>stateBinding.subscribe(callback)\n        });\n        this._beginEdit = _beginEdit;\n        this._getState = stateBinding.getState.bind(stateBinding);\n    }\n};\n// src/api/subscribable/NestedSubscriptionSubject.ts\nvar NestedSubscriptionSubject = class extends BaseSubject {\n    get path() {\n        return this.binding.path;\n    }\n    getState() {\n        return this.binding.getState();\n    }\n    outerSubscribe(callback) {\n        return this.binding.subscribe(callback);\n    }\n    _connect() {\n        const callback = ()=>{\n            this.notifySubscribers();\n        };\n        let lastState = this.binding.getState();\n        let innerUnsubscribe = lastState === null || lastState === void 0 ? void 0 : lastState.subscribe(callback);\n        const onRuntimeUpdate = ()=>{\n            var _this_binding_getState;\n            const newState = this.binding.getState();\n            if (newState === lastState) return;\n            lastState = newState;\n            innerUnsubscribe === null || innerUnsubscribe === void 0 ? void 0 : innerUnsubscribe();\n            innerUnsubscribe = (_this_binding_getState = this.binding.getState()) === null || _this_binding_getState === void 0 ? void 0 : _this_binding_getState.subscribe(callback);\n            callback();\n        };\n        const outerUnsubscribe = this.outerSubscribe(onRuntimeUpdate);\n        return ()=>{\n            outerUnsubscribe === null || outerUnsubscribe === void 0 ? void 0 : outerUnsubscribe();\n            innerUnsubscribe === null || innerUnsubscribe === void 0 ? void 0 : innerUnsubscribe();\n        };\n    }\n    constructor(binding){\n        super();\n        this.binding = binding;\n    }\n};\n// src/api/MessageRuntime.ts\nvar COMPLETE_STATUS2 = {\n    type: \"complete\"\n};\nvar toContentPartStatus = (message, partIndex, part)=>{\n    if (message.role !== \"assistant\") return COMPLETE_STATUS2;\n    const isLastPart = partIndex === Math.max(0, message.content.length - 1);\n    if (part.type !== \"tool-call\") {\n        if (\"reason\" in message.status && message.status.reason === \"tool-calls\" && isLastPart) throw new Error(\"Encountered unexpected requires-action status. This is likely an internal bug in assistant-ui.\");\n        return isLastPart ? message.status : COMPLETE_STATUS2;\n    }\n    if (!!part.result) {\n        return COMPLETE_STATUS2;\n    }\n    return message.status;\n};\nvar EMPTY_CONTENT = Object.freeze({\n    type: \"text\",\n    text: \"\"\n});\nvar getContentPartState = (message, partIndex)=>{\n    let part = message.content[partIndex];\n    if (!part) {\n        if (message.content.length === 0 && partIndex === 0) {\n            part = EMPTY_CONTENT;\n        } else {\n            return SKIP_UPDATE;\n        }\n    } else if (message.content.length === 1 && part.type === \"text\" && part.text.length === 0) {\n        part = EMPTY_CONTENT;\n    }\n    const status = toContentPartStatus(message, partIndex, part);\n    return Object.freeze({\n        ...part,\n        part,\n        status\n    });\n};\nvar MessageRuntimeImpl = class {\n    get path() {\n        return this._core.path;\n    }\n    getState() {\n        return this._core.getState();\n    }\n    reload() {\n        const state = this._core.getState();\n        if (!state) throw new Error(\"Message is not available\");\n        if (state.role !== \"assistant\") throw new Error(\"Can only reload assistant messages\");\n        this._threadBinding.getState().startRun(state.parentId);\n    }\n    speak() {\n        const state = this._core.getState();\n        if (!state) throw new Error(\"Message is not available\");\n        return this._threadBinding.getState().speak(state.id);\n    }\n    stopSpeaking() {\n        var _thread_speech;\n        const state = this._core.getState();\n        if (!state) throw new Error(\"Message is not available\");\n        const thread = this._threadBinding.getState();\n        if (((_thread_speech = thread.speech) === null || _thread_speech === void 0 ? void 0 : _thread_speech.messageId) === state.id) {\n            this._threadBinding.getState().stopSpeaking();\n        } else {\n            throw new Error(\"Message is not being spoken\");\n        }\n    }\n    submitFeedback(param) {\n        let { type } = param;\n        const state = this._core.getState();\n        if (!state) throw new Error(\"Message is not available\");\n        this._threadBinding.getState().submitFeedback({\n            messageId: state.id,\n            type\n        });\n    }\n    switchToBranch(param) {\n        let { position, branchId } = param;\n        const state = this._core.getState();\n        if (!state) throw new Error(\"Message is not available\");\n        if (branchId && position) {\n            throw new Error(\"May not specify both branchId and position\");\n        } else if (!branchId && !position) {\n            throw new Error(\"Must specify either branchId or position\");\n        }\n        const thread = this._threadBinding.getState();\n        const branches = thread.getBranches(state.id);\n        let targetBranch = branchId;\n        if (position === \"previous\") {\n            targetBranch = branches[state.branchNumber - 2];\n        } else if (position === \"next\") {\n            targetBranch = branches[state.branchNumber];\n        }\n        if (!targetBranch) throw new Error(\"Branch not found\");\n        this._threadBinding.getState().switchToBranch(targetBranch);\n    }\n    unstable_getCopyText() {\n        return getThreadMessageText(this.getState());\n    }\n    subscribe(callback) {\n        return this._core.subscribe(callback);\n    }\n    getContentPartByIndex(idx) {\n        if (idx < 0) throw new Error(\"Content part index must be >= 0\");\n        return new ContentPartRuntimeImpl(new ShallowMemoizeSubject({\n            path: {\n                ...this.path,\n                ref: this.path.ref + \"\".concat(this.path.ref, \".content[\").concat(idx, \"]\"),\n                contentPartSelector: {\n                    type: \"index\",\n                    index: idx\n                }\n            },\n            getState: ()=>{\n                return getContentPartState(this.getState(), idx);\n            },\n            subscribe: (callback)=>this._core.subscribe(callback)\n        }), this._core, this._threadBinding);\n    }\n    getContentPartByToolCallId(toolCallId) {\n        return new ContentPartRuntimeImpl(new ShallowMemoizeSubject({\n            path: {\n                ...this.path,\n                ref: this.path.ref + \"\".concat(this.path.ref, \".content[toolCallId=\").concat(JSON.stringify(toolCallId), \"]\"),\n                contentPartSelector: {\n                    type: \"toolCallId\",\n                    toolCallId\n                }\n            },\n            getState: ()=>{\n                const state = this._core.getState();\n                const idx = state.content.findIndex((part)=>part.type === \"tool-call\" && part.toolCallId === toolCallId);\n                if (idx === -1) return SKIP_UPDATE;\n                return getContentPartState(state, idx);\n            },\n            subscribe: (callback)=>this._core.subscribe(callback)\n        }), this._core, this._threadBinding);\n    }\n    getAttachmentByIndex(idx) {\n        return new MessageAttachmentRuntimeImpl(new ShallowMemoizeSubject({\n            path: {\n                ...this.path,\n                ref: this.path.ref + \"\".concat(this.path.ref, \".attachments[\").concat(idx, \"]\"),\n                attachmentSource: \"message\",\n                attachmentSelector: {\n                    type: \"index\",\n                    index: idx\n                }\n            },\n            getState: ()=>{\n                const attachments = this.getState().attachments;\n                const attachment = attachments === null || attachments === void 0 ? void 0 : attachments[idx];\n                if (!attachment) return SKIP_UPDATE;\n                return {\n                    ...attachment,\n                    attachment,\n                    source: \"message\"\n                };\n            },\n            subscribe: (callback)=>this._core.subscribe(callback)\n        }));\n    }\n    constructor(_core, _threadBinding){\n        this._core = _core;\n        this._threadBinding = _threadBinding;\n        this.composer = new EditComposerRuntimeImpl(new NestedSubscriptionSubject({\n            path: {\n                ...this.path,\n                ref: this.path.ref + \"\".concat(this.path.ref, \".composer\"),\n                composerSource: \"edit\"\n            },\n            getState: ()=>this._threadBinding.getState().getEditComposer(this._core.getState().id),\n            subscribe: (callback)=>this._threadBinding.subscribe(callback)\n        }), ()=>this._threadBinding.getState().beginEdit(this._core.getState().id));\n    }\n};\n// src/primitives/message/MessageContent.tsx\n\nvar ToolUIDisplay = (param)=>{\n    let { UI, ...props } = param;\n    _s80();\n    var _useToolUIs;\n    const Render = (_useToolUIs = useToolUIs((s)=>s.getToolUI(props.toolName))) !== null && _useToolUIs !== void 0 ? _useToolUIs : UI;\n    if (!Render) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Render, {\n        ...props\n    });\n};\n_s80(ToolUIDisplay, \"URX/XCUolTdnhCTdfVdM73kzZcg=\", false, function() {\n    return [\n        useToolUIs\n    ];\n});\n_c40 = ToolUIDisplay;\nvar defaultComponents = {\n    Text: ()=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"p\", {\n            style: {\n                whiteSpace: \"pre-line\"\n            },\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ContentPartPrimitiveText, {}),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ContentPartPrimitiveInProgress, {\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", {\n                        style: {\n                            fontFamily: \"revert\"\n                        },\n                        children: \" ●\"\n                    })\n                })\n            ]\n        }),\n    Image: ()=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ContentPartPrimitiveImage, {}),\n    UI: ()=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ContentPartPrimitiveDisplay, {})\n};\nvar MessageContentPartComponent = (param)=>{\n    let { components: { Text: Text2 = defaultComponents.Text, Empty, Image: Image2 = defaultComponents.Image, UI = defaultComponents.UI, tools: { by_name = {}, Fallback: Fallback2 = void 0 } = {} } = {} } = param;\n    _s81();\n    const contentPartRuntime = useContentPartRuntime();\n    const part = useContentPart();\n    const type = part.type;\n    switch(type){\n        case \"text\":\n            if (part.status.type === \"requires-action\") throw new Error(\"Encountered unexpected requires-action status\");\n            if (part.part === EMPTY_CONTENT && !!Empty) {\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Empty, {\n                    status: part.status\n                });\n            }\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text2, {\n                ...part,\n                part\n            });\n        case \"image\":\n            if (part.status.type === \"requires-action\") throw new Error(\"Encountered unexpected requires-action status\");\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Image2, {\n                ...part,\n                part\n            });\n        case \"ui\":\n            if (part.status.type === \"requires-action\") throw new Error(\"Encountered unexpected requires-action status\");\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(UI, {\n                ...part,\n                part\n            });\n        case \"tool-call\":\n            {\n                const Tool = by_name[part.toolName] || Fallback2;\n                const addResult = (result)=>contentPartRuntime.addToolResult(result);\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToolUIDisplay, {\n                    ...part,\n                    part,\n                    UI: Tool,\n                    addResult\n                });\n            }\n        default:\n            const unhandledType = type;\n            throw new Error(\"Unknown content part type: \".concat(unhandledType));\n    }\n};\n_s81(MessageContentPartComponent, \"ANhH5GODz8IIZkxN1BWCKwO7jcY=\", false, function() {\n    return [\n        useContentPartRuntime,\n        useContentPart\n    ];\n});\n_c41 = MessageContentPartComponent;\nvar MessageContentPartImpl = (param)=>{\n    let { partIndex, components } = param;\n    _s82();\n    const messageRuntime = useMessageRuntime();\n    const runtime = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>messageRuntime.getContentPartByIndex(partIndex), [\n        messageRuntime,\n        partIndex\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ContentPartRuntimeProvider, {\n        runtime,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(MessageContentPartComponent, {\n            components\n        })\n    });\n};\n_s82(MessageContentPartImpl, \"q5HeAkIW0jpMuyjbuVqDTZOPAqI=\", false, function() {\n    return [\n        useMessageRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\n_c42 = MessageContentPartImpl;\nvar MessageContentPart = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(MessageContentPartImpl, (prev, next)=>{\n    var _prev_components, _next_components, _prev_components1, _next_components1, _prev_components2, _next_components2, _prev_components3, _next_components3;\n    return prev.partIndex === next.partIndex && ((_prev_components = prev.components) === null || _prev_components === void 0 ? void 0 : _prev_components.Text) === ((_next_components = next.components) === null || _next_components === void 0 ? void 0 : _next_components.Text) && ((_prev_components1 = prev.components) === null || _prev_components1 === void 0 ? void 0 : _prev_components1.Image) === ((_next_components1 = next.components) === null || _next_components1 === void 0 ? void 0 : _next_components1.Image) && ((_prev_components2 = prev.components) === null || _prev_components2 === void 0 ? void 0 : _prev_components2.UI) === ((_next_components2 = next.components) === null || _next_components2 === void 0 ? void 0 : _next_components2.UI) && ((_prev_components3 = prev.components) === null || _prev_components3 === void 0 ? void 0 : _prev_components3.tools) === ((_next_components3 = next.components) === null || _next_components3 === void 0 ? void 0 : _next_components3.tools);\n});\n_c43 = MessageContentPart;\nvar MessagePrimitiveContent = (param)=>{\n    let { components } = param;\n    _s83();\n    const contentLength = useMessage((s)=>s.content.length) || 1;\n    return Array.from({\n        length: contentLength\n    }, (_, index)=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(MessageContentPart, {\n            partIndex: index,\n            components\n        }, index));\n};\n_s83(MessagePrimitiveContent, \"SelIv9G1N/0P+Ge5UbSRYXI028A=\", false, function() {\n    return [\n        useMessage\n    ];\n});\n_c44 = MessagePrimitiveContent;\nMessagePrimitiveContent.displayName = \"MessagePrimitive.Content\";\n// src/primitives/message/MessageInProgress.tsx\nvar MessagePrimitiveInProgress = ()=>{\n    return null;\n};\n_c45 = MessagePrimitiveInProgress;\nMessagePrimitiveInProgress.displayName = \"MessagePrimitive.InProgress\";\n// src/primitives/message/MessageAttachments.tsx\n\n// src/context/providers/AttachmentRuntimeProvider.tsx\n\n\n\nvar useAttachmentRuntimeStore = (runtime)=>{\n    _s84();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        writableStore(store).setState(runtime, true);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s84(useAttachmentRuntimeStore, \"16OxHo15bEASiixxrPi+A1EMGbM=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar useAttachmentStore = (runtime)=>{\n    _s85();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime.getState()));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const updateState = ()=>writableStore(store).setState(runtime.getState(), true);\n        updateState();\n        return runtime.subscribe(updateState);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s85(useAttachmentStore, \"16OxHo15bEASiixxrPi+A1EMGbM=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar AttachmentRuntimeProvider = (param)=>{\n    let { runtime, children } = param;\n    _s86();\n    const useAttachmentRuntime2 = useAttachmentRuntimeStore(runtime);\n    const useAttachment2 = useAttachmentStore(runtime);\n    const source = useAttachment2((s)=>s.source);\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        return {\n            source,\n            useAttachmentRuntime: useAttachmentRuntime2,\n            useAttachment: useAttachment2\n        };\n    }, [\n        useAttachmentRuntime2,\n        useAttachment2\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AttachmentContext.Provider, {\n        value: context,\n        children\n    });\n};\n_s86(AttachmentRuntimeProvider, \"09nmzvwX2t6mvysbfYIu4Wm5SYc=\", true, function() {\n    return [\n        useAttachmentRuntimeStore,\n        useAttachmentStore,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\n_c46 = AttachmentRuntimeProvider;\n// src/primitives/message/MessageAttachments.tsx\n\nvar getComponent = (components, attachment)=>{\n    const type = attachment.type;\n    switch(type){\n        case \"image\":\n            var _components_Image;\n            return (_components_Image = components === null || components === void 0 ? void 0 : components.Image) !== null && _components_Image !== void 0 ? _components_Image : components === null || components === void 0 ? void 0 : components.Attachment;\n        case \"document\":\n            var _components_Document;\n            return (_components_Document = components === null || components === void 0 ? void 0 : components.Document) !== null && _components_Document !== void 0 ? _components_Document : components === null || components === void 0 ? void 0 : components.Attachment;\n        case \"file\":\n            var _components_File;\n            return (_components_File = components === null || components === void 0 ? void 0 : components.File) !== null && _components_File !== void 0 ? _components_File : components === null || components === void 0 ? void 0 : components.Attachment;\n        default:\n            const _exhaustiveCheck = type;\n            throw new Error(\"Unknown attachment type: \".concat(_exhaustiveCheck));\n    }\n};\nvar AttachmentComponent = (param)=>{\n    let { components } = param;\n    _s87();\n    const Component = useMessageAttachment((a)=>getComponent(components, a.attachment));\n    if (!Component) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Component, {});\n};\n_s87(AttachmentComponent, \"xtT23cnSYRvXrj9T37P4+OvI7G8=\", false, function() {\n    return [\n        useMessageAttachment\n    ];\n});\n_c47 = AttachmentComponent;\nvar MessageAttachmentImpl = (param)=>{\n    let { components, attachmentIndex } = param;\n    _s88();\n    const messageRuntime = useMessageRuntime();\n    const runtime = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>messageRuntime.getAttachmentByIndex(attachmentIndex), [\n        messageRuntime,\n        attachmentIndex\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AttachmentRuntimeProvider, {\n        runtime,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AttachmentComponent, {\n            components\n        })\n    });\n};\n_s88(MessageAttachmentImpl, \"p+MZR1RnENxPoIOPWUr1CIrIV1E=\", false, function() {\n    return [\n        useMessageRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\n_c48 = MessageAttachmentImpl;\nvar MessageAttachment = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(MessageAttachmentImpl, (prev, next)=>{\n    var _prev_components, _next_components, _prev_components1, _next_components1, _prev_components2, _next_components2, _prev_components3, _next_components3;\n    return prev.attachmentIndex === next.attachmentIndex && ((_prev_components = prev.components) === null || _prev_components === void 0 ? void 0 : _prev_components.Image) === ((_next_components = next.components) === null || _next_components === void 0 ? void 0 : _next_components.Image) && ((_prev_components1 = prev.components) === null || _prev_components1 === void 0 ? void 0 : _prev_components1.Document) === ((_next_components1 = next.components) === null || _next_components1 === void 0 ? void 0 : _next_components1.Document) && ((_prev_components2 = prev.components) === null || _prev_components2 === void 0 ? void 0 : _prev_components2.File) === ((_next_components2 = next.components) === null || _next_components2 === void 0 ? void 0 : _next_components2.File) && ((_prev_components3 = prev.components) === null || _prev_components3 === void 0 ? void 0 : _prev_components3.Attachment) === ((_next_components3 = next.components) === null || _next_components3 === void 0 ? void 0 : _next_components3.Attachment);\n});\n_c49 = MessageAttachment;\nvar MessagePrimitiveAttachments = (param)=>{\n    let { components } = param;\n    _s89();\n    const attachmentsCount = useMessage((param)=>{\n        let { message } = param;\n        if (message.role !== \"user\") return 0;\n        return message.attachments.length;\n    });\n    return Array.from({\n        length: attachmentsCount\n    }, (_, index)=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(MessageAttachment, {\n            attachmentIndex: index,\n            components\n        }, index));\n};\n_s89(MessagePrimitiveAttachments, \"xOgg7jClUZLBXhvDJdfhaY7J/bk=\", false, function() {\n    return [\n        useMessage\n    ];\n});\n_c50 = MessagePrimitiveAttachments;\nMessagePrimitiveAttachments.displayName = \"MessagePrimitive.Attachments\";\n// src/primitives/branchPicker/BranchPickerRoot.tsx\n\nvar BranchPickerPrimitiveRoot = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c51 = (param, ref)=>{\n    let { hideWhenSingleBranch, ...rest } = param;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(MessagePrimitiveIf, {\n        hasBranches: hideWhenSingleBranch ? true : void 0,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n            ...rest,\n            ref\n        })\n    });\n});\n_c52 = BranchPickerPrimitiveRoot;\nBranchPickerPrimitiveRoot.displayName = \"BranchPickerPrimitive.Root\";\n// src/primitives/composer/index.ts\nvar composer_exports = {};\n(0,_chunk_BJPOCE4O_mjs__WEBPACK_IMPORTED_MODULE_3__.__export)(composer_exports, {\n    AddAttachment: ()=>ComposerPrimitiveAddAttachment,\n    Attachments: ()=>ComposerPrimitiveAttachments,\n    Cancel: ()=>ComposerPrimitiveCancel,\n    If: ()=>ComposerPrimitiveIf,\n    Input: ()=>ComposerPrimitiveInput,\n    Root: ()=>ComposerPrimitiveRoot,\n    Send: ()=>ComposerPrimitiveSend\n});\n// src/primitives/composer/ComposerRoot.tsx\n\n\n\n\nvar ComposerPrimitiveRoot = /*#__PURE__*/ _s90((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c53 = _s90((param, forwardedRef)=>{\n    let { onSubmit, ...rest } = param;\n    _s90();\n    const send = useComposerSend();\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if (!send) return;\n        send();\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.form, {\n        ...rest,\n        ref: forwardedRef,\n        onSubmit: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(onSubmit, handleSubmit)\n    });\n}, \"i5nYA6t1dRG0P/K7CDDoQqmIK/4=\", false, function() {\n    return [\n        useComposerSend\n    ];\n})), \"i5nYA6t1dRG0P/K7CDDoQqmIK/4=\", false, function() {\n    return [\n        useComposerSend\n    ];\n});\n_c54 = ComposerPrimitiveRoot;\nComposerPrimitiveRoot.displayName = \"ComposerPrimitive.Root\";\n// src/primitives/composer/ComposerInput.tsx\n\n\n\n\n\n\n// src/utils/hooks/useOnScrollToBottom.tsx\n\n\nvar useOnScrollToBottom = (callback)=>{\n    _s91();\n    const callbackRef = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_9__.useCallbackRef)(callback);\n    const onScrollToBottom = useThreadViewport((vp)=>vp.onScrollToBottom);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        return onScrollToBottom(callbackRef);\n    }, [\n        onScrollToBottom,\n        callbackRef\n    ]);\n};\n_s91(useOnScrollToBottom, \"AcDu1Y7V6IOp6AzLXtuMQKXo7Gs=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_9__.useCallbackRef,\n        useThreadViewport,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\n// src/primitives/composer/ComposerInput.tsx\n\nvar ComposerPrimitiveInput = /*#__PURE__*/ _s92((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c55 = _s92((param, forwardedRef)=>{\n    let { autoFocus = false, asChild, disabled: disabledProp, onChange, onKeyDown, submitOnEnter = true, cancelOnEscape = true, unstable_focusOnRunStart = true, unstable_focusOnScrollToBottom = true, unstable_focusOnThreadSwitched = true, ...rest } = param;\n    _s92();\n    const threadRuntime = useThreadRuntime();\n    const composerRuntime = useComposerRuntime();\n    const value = useComposer((c)=>{\n        if (!c.isEditing) return \"\";\n        return c.text;\n    });\n    const Component = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__.Slot : react_textarea_autosize__WEBPACK_IMPORTED_MODULE_11__[\"default\"];\n    var _useThread, _ref;\n    const isDisabled = (_ref = (_useThread = useThread((t)=>t.isDisabled)) !== null && _useThread !== void 0 ? _useThread : disabledProp) !== null && _ref !== void 0 ? _ref : false;\n    const textareaRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const ref = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__.useComposedRefs)(forwardedRef, textareaRef);\n    (0,_radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_6__.useEscapeKeydown)((e)=>{\n        if (!cancelOnEscape) return;\n        if (composerRuntime.getState().canCancel) {\n            composerRuntime.cancel();\n            e.preventDefault();\n        }\n    });\n    const handleKeyPress = (e)=>{\n        if (isDisabled || !submitOnEnter) return;\n        if (e.nativeEvent.isComposing) return;\n        if (e.key === \"Enter\" && e.shiftKey === false) {\n            const { isRunning } = threadRuntime.getState();\n            if (!isRunning) {\n                var _textareaRef_current_closest, _textareaRef_current;\n                e.preventDefault();\n                (_textareaRef_current = textareaRef.current) === null || _textareaRef_current === void 0 ? void 0 : (_textareaRef_current_closest = _textareaRef_current.closest(\"form\")) === null || _textareaRef_current_closest === void 0 ? void 0 : _textareaRef_current_closest.requestSubmit();\n            }\n        }\n    };\n    const autoFocusEnabled = autoFocus && !isDisabled;\n    const focus2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        const textarea = textareaRef.current;\n        if (!textarea || !autoFocusEnabled) return;\n        textarea.focus({\n            preventScroll: true\n        });\n        textarea.setSelectionRange(textareaRef.current.value.length, textareaRef.current.value.length);\n    }, [\n        autoFocusEnabled\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>focus2(), [\n        focus2\n    ]);\n    useOnScrollToBottom(()=>{\n        if (composerRuntime.type === \"thread\" && unstable_focusOnScrollToBottom) {\n            focus2();\n        }\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (composerRuntime.type !== \"thread\" || !unstable_focusOnRunStart) return void 0;\n        return threadRuntime.unstable_on(\"run-start\", focus2);\n    }, [\n        unstable_focusOnRunStart\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (composerRuntime.type !== \"thread\" || !unstable_focusOnThreadSwitched) return void 0;\n        return threadRuntime.unstable_on(\"switched-to\", focus2);\n    }, [\n        unstable_focusOnThreadSwitched\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Component, {\n        name: \"input\",\n        value,\n        ...rest,\n        ref,\n        disabled: isDisabled,\n        onChange: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(onChange, (e)=>{\n            if (!composerRuntime.getState().isEditing) return;\n            return composerRuntime.setText(e.target.value);\n        }),\n        onKeyDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(onKeyDown, handleKeyPress)\n    });\n}, \"QQtTirMHwXJCpZ3UCQLOtAwA/o8=\", false, function() {\n    return [\n        useThreadRuntime,\n        useComposerRuntime,\n        useComposer,\n        useThread,\n        react__WEBPACK_IMPORTED_MODULE_0__.useRef,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__.useComposedRefs,\n        _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_6__.useEscapeKeydown,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect,\n        useOnScrollToBottom,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n})), \"QQtTirMHwXJCpZ3UCQLOtAwA/o8=\", false, function() {\n    return [\n        useThreadRuntime,\n        useComposerRuntime,\n        useComposer,\n        useThread,\n        react__WEBPACK_IMPORTED_MODULE_0__.useRef,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__.useComposedRefs,\n        _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_6__.useEscapeKeydown,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect,\n        useOnScrollToBottom,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\n_c56 = ComposerPrimitiveInput;\nComposerPrimitiveInput.displayName = \"ComposerPrimitive.Input\";\n// src/primitives/composer/ComposerSend.tsx\nvar ComposerPrimitiveSend = createActionButton(\"ComposerPrimitive.Send\", useComposerSend);\n// src/primitives/composer/ComposerCancel.tsx\nvar ComposerPrimitiveCancel = createActionButton(\"ComposerPrimitive.Cancel\", useComposerCancel);\n// src/primitives/composer/ComposerAddAttachment.tsx\nvar ComposerPrimitiveAddAttachment = createActionButton(\"ComposerPrimitive.AddAttachment\", useComposerAddAttachment);\n// src/primitives/composer/ComposerAttachments.tsx\n\n\nvar getComponent2 = (components, attachment)=>{\n    const type = attachment.type;\n    switch(type){\n        case \"image\":\n            var _components_Image;\n            return (_components_Image = components === null || components === void 0 ? void 0 : components.Image) !== null && _components_Image !== void 0 ? _components_Image : components === null || components === void 0 ? void 0 : components.Attachment;\n        case \"document\":\n            var _components_Document;\n            return (_components_Document = components === null || components === void 0 ? void 0 : components.Document) !== null && _components_Document !== void 0 ? _components_Document : components === null || components === void 0 ? void 0 : components.Attachment;\n        case \"file\":\n            var _components_File;\n            return (_components_File = components === null || components === void 0 ? void 0 : components.File) !== null && _components_File !== void 0 ? _components_File : components === null || components === void 0 ? void 0 : components.Attachment;\n        default:\n            const _exhaustiveCheck = type;\n            throw new Error(\"Unknown attachment type: \".concat(_exhaustiveCheck));\n    }\n};\nvar AttachmentComponent2 = (param)=>{\n    let { components } = param;\n    _s93();\n    const Component = useThreadComposerAttachment((a)=>getComponent2(components, a));\n    if (!Component) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Component, {});\n};\n_s93(AttachmentComponent2, \"XES0id0VSIj6Dw992kBjmkhGqh0=\", false, function() {\n    return [\n        useThreadComposerAttachment\n    ];\n});\n_c57 = AttachmentComponent2;\nvar ComposerAttachmentImpl = (param)=>{\n    let { components, attachmentIndex } = param;\n    _s94();\n    const composerRuntime = useComposerRuntime();\n    const runtime = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>composerRuntime.getAttachmentByIndex(attachmentIndex), [\n        composerRuntime,\n        attachmentIndex\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AttachmentRuntimeProvider, {\n        runtime,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AttachmentComponent2, {\n            components\n        })\n    });\n};\n_s94(ComposerAttachmentImpl, \"xsQlmFWZ3PIU0/u4SYUaAhmgfLg=\", false, function() {\n    return [\n        useComposerRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\n_c58 = ComposerAttachmentImpl;\nvar ComposerAttachment = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(ComposerAttachmentImpl, (prev, next)=>{\n    var _prev_components, _next_components, _prev_components1, _next_components1, _prev_components2, _next_components2, _prev_components3, _next_components3;\n    return prev.attachmentIndex === next.attachmentIndex && ((_prev_components = prev.components) === null || _prev_components === void 0 ? void 0 : _prev_components.Image) === ((_next_components = next.components) === null || _next_components === void 0 ? void 0 : _next_components.Image) && ((_prev_components1 = prev.components) === null || _prev_components1 === void 0 ? void 0 : _prev_components1.Document) === ((_next_components1 = next.components) === null || _next_components1 === void 0 ? void 0 : _next_components1.Document) && ((_prev_components2 = prev.components) === null || _prev_components2 === void 0 ? void 0 : _prev_components2.File) === ((_next_components2 = next.components) === null || _next_components2 === void 0 ? void 0 : _next_components2.File) && ((_prev_components3 = prev.components) === null || _prev_components3 === void 0 ? void 0 : _prev_components3.Attachment) === ((_next_components3 = next.components) === null || _next_components3 === void 0 ? void 0 : _next_components3.Attachment);\n});\n_c59 = ComposerAttachment;\nvar ComposerPrimitiveAttachments = (param)=>{\n    let { components } = param;\n    _s95();\n    const attachmentsCount = useComposer((s)=>s.attachments.length);\n    return Array.from({\n        length: attachmentsCount\n    }, (_, index)=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerAttachment, {\n            attachmentIndex: index,\n            components\n        }, index));\n};\n_s95(ComposerPrimitiveAttachments, \"vysBTvN9FH18xzwvcr5D586qFFI=\", false, function() {\n    return [\n        useComposer\n    ];\n});\n_c60 = ComposerPrimitiveAttachments;\nComposerPrimitiveAttachments.displayName = \"ComposerPrimitive.Attachments\";\n// src/primitives/composer/ComposerIf.tsx\nvar ComposerPrimitiveIf = (param)=>{\n    let { children, ...query } = param;\n    _s96();\n    const result = useComposerIf(query);\n    return result ? children : null;\n};\n_s96(ComposerPrimitiveIf, \"Fn/Z2P+G7Z9tI4Q6Ds9U9MYm2fo=\", false, function() {\n    return [\n        useComposerIf\n    ];\n});\n_c61 = ComposerPrimitiveIf;\nComposerPrimitiveIf.displayName = \"ComposerPrimitive.If\";\n// src/primitives/contentPart/index.ts\nvar contentPart_exports = {};\n(0,_chunk_BJPOCE4O_mjs__WEBPACK_IMPORTED_MODULE_3__.__export)(contentPart_exports, {\n    Display: ()=>ContentPartPrimitiveDisplay,\n    Image: ()=>ContentPartPrimitiveImage,\n    InProgress: ()=>ContentPartPrimitiveInProgress,\n    Text: ()=>ContentPartPrimitiveText\n});\n// src/primitives/thread/index.ts\nvar thread_exports = {};\n(0,_chunk_BJPOCE4O_mjs__WEBPACK_IMPORTED_MODULE_3__.__export)(thread_exports, {\n    Empty: ()=>ThreadPrimitiveEmpty,\n    If: ()=>ThreadPrimitiveIf,\n    Messages: ()=>ThreadPrimitiveMessages,\n    Root: ()=>ThreadPrimitiveRoot,\n    ScrollToBottom: ()=>ThreadPrimitiveScrollToBottom,\n    Suggestion: ()=>ThreadPrimitiveSuggestion,\n    Viewport: ()=>ThreadPrimitiveViewport\n});\n// src/primitives/thread/ThreadRoot.tsx\n\n\n\nvar ThreadPrimitiveRoot = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c62 = (props, ref)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...props,\n        ref\n    });\n});\n_c63 = ThreadPrimitiveRoot;\nThreadPrimitiveRoot.displayName = \"ThreadPrimitive.Root\";\n// src/primitives/thread/ThreadEmpty.tsx\nvar ThreadPrimitiveEmpty = (param)=>{\n    let { children } = param;\n    _s97();\n    const empty = useThreadEmpty();\n    return empty ? children : null;\n};\n_s97(ThreadPrimitiveEmpty, \"YJ0hrV37vlLb6igkscj39BBGS/o=\", false, function() {\n    return [\n        useThreadEmpty\n    ];\n});\n_c64 = ThreadPrimitiveEmpty;\nThreadPrimitiveEmpty.displayName = \"ThreadPrimitive.Empty\";\n// src/primitives/thread/ThreadIf.tsx\nvar ThreadPrimitiveIf = (param)=>{\n    let { children, ...query } = param;\n    _s98();\n    const result = useThreadIf(query);\n    return result ? children : null;\n};\n_s98(ThreadPrimitiveIf, \"PH9NJyEiKLZyHvvA3HnqWwPIDAA=\", false, function() {\n    return [\n        useThreadIf\n    ];\n});\n_c65 = ThreadPrimitiveIf;\nThreadPrimitiveIf.displayName = \"ThreadPrimitive.If\";\n// src/primitives/thread/ThreadViewport.tsx\n\n\n\n// src/primitive-hooks/thread/useThreadViewportAutoScroll.tsx\n\n\n// src/utils/hooks/useOnResizeContent.tsx\n\n\nvar useOnResizeContent = (callback)=>{\n    _s99();\n    const callbackRef = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_9__.useCallbackRef)(callback);\n    const refCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((el)=>{\n        const resizeObserver = new ResizeObserver(()=>{\n            callbackRef();\n        });\n        const mutationObserver = new MutationObserver((mutations)=>{\n            for (const mutation of mutations){\n                for (const node of mutation.addedNodes){\n                    if (node instanceof Element) {\n                        resizeObserver.observe(node);\n                    }\n                }\n                for (const node of mutation.removedNodes){\n                    if (node instanceof Element) {\n                        resizeObserver.unobserve(node);\n                    }\n                }\n            }\n            callbackRef();\n        });\n        resizeObserver.observe(el);\n        mutationObserver.observe(el, {\n            childList: true\n        });\n        for (const child of el.children){\n            resizeObserver.observe(child);\n        }\n        return ()=>{\n            resizeObserver.disconnect();\n            mutationObserver.disconnect();\n        };\n    }, [\n        callbackRef\n    ]);\n    return useManagedRef(refCallback);\n};\n_s99(useOnResizeContent, \"5NGuTip9XxYAMn6SllN0P7npD94=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_9__.useCallbackRef,\n        react__WEBPACK_IMPORTED_MODULE_0__.useCallback,\n        useManagedRef\n    ];\n});\n// src/primitive-hooks/thread/useThreadViewportAutoScroll.tsx\nvar useThreadViewportAutoScroll = (param)=>{\n    let { autoScroll = true, unstable_scrollToBottomOnRunStart = true } = param;\n    _s100();\n    const divRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const threadViewportStore = useThreadViewportStore();\n    const lastScrollTop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    const isScrollingToBottomRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const scrollToBottom = (behavior)=>{\n        const div = divRef.current;\n        if (!div || !autoScroll) return;\n        isScrollingToBottomRef.current = true;\n        div.scrollTo({\n            top: div.scrollHeight,\n            behavior\n        });\n    };\n    const handleScroll = ()=>{\n        const div = divRef.current;\n        if (!div) return;\n        const isAtBottom = threadViewportStore.getState().isAtBottom;\n        const newIsAtBottom = div.scrollHeight - div.scrollTop <= div.clientHeight + 1;\n        if (!newIsAtBottom && lastScrollTop.current < div.scrollTop) {} else {\n            if (newIsAtBottom) {\n                isScrollingToBottomRef.current = false;\n            }\n            if (newIsAtBottom !== isAtBottom) {\n                writableStore(threadViewportStore).setState({\n                    isAtBottom: newIsAtBottom\n                });\n            }\n        }\n        lastScrollTop.current = div.scrollTop;\n    };\n    const resizeRef = useOnResizeContent(()=>{\n        if (isScrollingToBottomRef.current || threadViewportStore.getState().isAtBottom) {\n            scrollToBottom(\"instant\");\n        }\n        handleScroll();\n    });\n    const scrollRef = useManagedRef((el)=>{\n        el.addEventListener(\"scroll\", handleScroll);\n        return ()=>{\n            el.removeEventListener(\"scroll\", handleScroll);\n        };\n    });\n    const autoScrollRef = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__.useComposedRefs)(resizeRef, scrollRef, divRef);\n    useOnScrollToBottom(()=>{\n        scrollToBottom(\"auto\");\n    });\n    const threadRuntime = useThreadRuntime();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!unstable_scrollToBottomOnRunStart) return void 0;\n        return threadRuntime.unstable_on(\"run-start\", focus);\n    }, [\n        unstable_scrollToBottomOnRunStart\n    ]);\n    return autoScrollRef;\n};\n_s100(useThreadViewportAutoScroll, \"kqbjGVUdrKtmP3fFryOqOFJ1KfY=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useRef,\n        useThreadViewportStore,\n        react__WEBPACK_IMPORTED_MODULE_0__.useRef,\n        react__WEBPACK_IMPORTED_MODULE_0__.useRef,\n        useOnResizeContent,\n        useManagedRef,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__.useComposedRefs,\n        useOnScrollToBottom,\n        useThreadRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\n// src/primitives/thread/ThreadViewport.tsx\n\nvar ThreadPrimitiveViewport = /*#__PURE__*/ _s101((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c66 = _s101((param, forwardedRef)=>{\n    let { autoScroll, children, ...rest } = param;\n    _s101();\n    const autoScrollRef = useThreadViewportAutoScroll({\n        autoScroll\n    });\n    const ref = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__.useComposedRefs)(forwardedRef, autoScrollRef);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...rest,\n        ref,\n        children\n    });\n}, \"MgUSUFKM+Pl1jsyZxZtXx9bJgww=\", false, function() {\n    return [\n        useThreadViewportAutoScroll,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__.useComposedRefs\n    ];\n})), \"MgUSUFKM+Pl1jsyZxZtXx9bJgww=\", false, function() {\n    return [\n        useThreadViewportAutoScroll,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_8__.useComposedRefs\n    ];\n});\n_c67 = ThreadPrimitiveViewport;\nThreadPrimitiveViewport.displayName = \"ThreadPrimitive.Viewport\";\n// src/primitives/thread/ThreadMessages.tsx\n\n// src/context/providers/MessageRuntimeProvider.tsx\n\n\n// src/context/stores/MessageUtils.ts\n\nvar makeMessageUtilsStore = ()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set)=>{\n        return {\n            isCopied: false,\n            setIsCopied: (value)=>{\n                set({\n                    isCopied: value\n                });\n            },\n            isHovering: false,\n            setIsHovering: (value)=>{\n                set({\n                    isHovering: value\n                });\n            }\n        };\n    });\n// src/context/providers/MessageRuntimeProvider.tsx\n\nvar useMessageRuntimeStore = (runtime)=>{\n    _s102();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        writableStore(store).setState(runtime, true);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s102(useMessageRuntimeStore, \"xBk6DFPDJ8dtUAfHbg/+4Xha9vQ=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar useMessageStore2 = (runtime)=>{\n    _s103();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime.getState()));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const updateState = ()=>writableStore(store).setState(runtime.getState(), true);\n        updateState();\n        return runtime.subscribe(updateState);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s103(useMessageStore2, \"xBk6DFPDJ8dtUAfHbg/+4Xha9vQ=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar useMessageUtilsStore2 = ()=>{\n    _s104();\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>makeMessageUtilsStore());\n    return store;\n};\n_s104(useMessageUtilsStore2, \"o4QM8wGZ2icxBa+/NUqWYwfSEZM=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState\n    ];\n});\nvar useEditComposerStore2 = (useMessageRuntime2)=>{\n    _s105();\n    const runtime = useMessageRuntime2.getState().composer;\n    const [store] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>(0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)(()=>runtime.getState()));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const updateState = ()=>writableStore(store).setState(runtime.getState());\n        updateState();\n        return runtime.subscribe(updateState);\n    }, [\n        runtime,\n        store\n    ]);\n    return store;\n};\n_s105(useEditComposerStore2, \"xBk6DFPDJ8dtUAfHbg/+4Xha9vQ=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar MessageRuntimeProvider = (param)=>{\n    let { runtime, children } = param;\n    _s106();\n    const useMessageRuntime2 = useMessageRuntimeStore(runtime);\n    const useMessage2 = useMessageStore2(runtime);\n    const useMessageUtils2 = useMessageUtilsStore2();\n    const useEditComposer2 = useEditComposerStore2(useMessageRuntime2);\n    const [context] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        return {\n            useMessageRuntime: useMessageRuntime2,\n            useMessage: useMessage2,\n            useMessageUtils: useMessageUtils2,\n            useEditComposer: useEditComposer2\n        };\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(MessageContext.Provider, {\n        value: context,\n        children\n    });\n};\n_s106(MessageRuntimeProvider, \"20SLiYi6Olp3Kp2oNbdzpR6XUTM=\", false, function() {\n    return [\n        useMessageRuntimeStore,\n        useMessageStore2,\n        useMessageUtilsStore2,\n        useEditComposerStore2,\n        react__WEBPACK_IMPORTED_MODULE_0__.useState\n    ];\n});\n_c68 = MessageRuntimeProvider;\n// src/primitives/thread/ThreadMessages.tsx\n\nvar isComponentsSame = (prev, next)=>{\n    return prev.Message === next.Message && prev.EditComposer === next.EditComposer && prev.UserEditComposer === next.UserEditComposer && prev.AssistantEditComposer === next.AssistantEditComposer && prev.SystemEditComposer === next.SystemEditComposer && prev.UserMessage === next.UserMessage && prev.AssistantMessage === next.AssistantMessage && prev.SystemMessage === next.SystemMessage;\n};\nvar DEFAULT_SYSTEM_MESSAGE = ()=>null;\n_c69 = DEFAULT_SYSTEM_MESSAGE;\nvar getComponent3 = (components, role, isEditing)=>{\n    switch(role){\n        case \"user\":\n            if (isEditing) {\n                var _components_UserEditComposer, _ref, _ref1;\n                return (_ref1 = (_ref = (_components_UserEditComposer = components.UserEditComposer) !== null && _components_UserEditComposer !== void 0 ? _components_UserEditComposer : components.EditComposer) !== null && _ref !== void 0 ? _ref : components.UserMessage) !== null && _ref1 !== void 0 ? _ref1 : components.Message;\n            } else {\n                var _components_UserMessage;\n                return (_components_UserMessage = components.UserMessage) !== null && _components_UserMessage !== void 0 ? _components_UserMessage : components.Message;\n            }\n        case \"assistant\":\n            if (isEditing) {\n                var _components_AssistantEditComposer, _ref2, _ref3;\n                return (_ref3 = (_ref2 = (_components_AssistantEditComposer = components.AssistantEditComposer) !== null && _components_AssistantEditComposer !== void 0 ? _components_AssistantEditComposer : components.EditComposer) !== null && _ref2 !== void 0 ? _ref2 : components.AssistantMessage) !== null && _ref3 !== void 0 ? _ref3 : components.Message;\n            } else {\n                var _components_AssistantMessage;\n                return (_components_AssistantMessage = components.AssistantMessage) !== null && _components_AssistantMessage !== void 0 ? _components_AssistantMessage : components.Message;\n            }\n        case \"system\":\n            if (isEditing) {\n                var _components_SystemEditComposer, _ref4, _ref5;\n                return (_ref5 = (_ref4 = (_components_SystemEditComposer = components.SystemEditComposer) !== null && _components_SystemEditComposer !== void 0 ? _components_SystemEditComposer : components.EditComposer) !== null && _ref4 !== void 0 ? _ref4 : components.SystemMessage) !== null && _ref5 !== void 0 ? _ref5 : components.Message;\n            } else {\n                var _components_SystemMessage;\n                return (_components_SystemMessage = components.SystemMessage) !== null && _components_SystemMessage !== void 0 ? _components_SystemMessage : DEFAULT_SYSTEM_MESSAGE;\n            }\n        default:\n            const _exhaustiveCheck = role;\n            throw new Error(\"Unknown message role: \".concat(_exhaustiveCheck));\n    }\n};\nvar ThreadMessageComponent = (param)=>{\n    let { components } = param;\n    _s107();\n    const role = useMessage((m)=>m.role);\n    const isEditing = useEditComposer((c)=>c.isEditing);\n    const Component = getComponent3(components, role, isEditing);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Component, {});\n};\n_s107(ThreadMessageComponent, \"0E65u+fX80rjEKPSlK+ua6Tuie0=\", false, function() {\n    return [\n        useMessage,\n        useEditComposer\n    ];\n});\n_c70 = ThreadMessageComponent;\nvar ThreadMessageImpl = (param)=>{\n    let { messageIndex, components } = param;\n    _s108();\n    const threadRuntime = useThreadRuntime();\n    const runtime = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>threadRuntime.getMesssageByIndex(messageIndex), [\n        threadRuntime,\n        messageIndex\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(MessageRuntimeProvider, {\n        runtime,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadMessageComponent, {\n            components\n        })\n    });\n};\n_s108(ThreadMessageImpl, \"kfXUZAHpp/sF/EsfeibT5CeiQL0=\", false, function() {\n    return [\n        useThreadRuntime,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\n_c71 = ThreadMessageImpl;\nvar ThreadMessage = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(ThreadMessageImpl, (prev, next)=>prev.messageIndex === next.messageIndex && isComponentsSame(prev.components, next.components));\n_c72 = ThreadMessage;\nvar ThreadPrimitiveMessagesImpl = (param)=>{\n    let { components } = param;\n    _s109();\n    const messagesLength = useThread((t)=>t.messages.length);\n    if (messagesLength === 0) return null;\n    return Array.from({\n        length: messagesLength\n    }, (_, index)=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadMessage, {\n            messageIndex: index,\n            components\n        }, index));\n};\n_s109(ThreadPrimitiveMessagesImpl, \"JzpvwjEIPXfjBnpDQDRnAXjXAyE=\", false, function() {\n    return [\n        useThread\n    ];\n});\n_c73 = ThreadPrimitiveMessagesImpl;\nThreadPrimitiveMessagesImpl.displayName = \"ThreadPrimitive.Messages\";\nvar ThreadPrimitiveMessages = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(ThreadPrimitiveMessagesImpl, (prev, next)=>isComponentsSame(prev.components, next.components));\n_c74 = ThreadPrimitiveMessages;\n// src/primitives/thread/ThreadScrollToBottom.tsx\nvar ThreadPrimitiveScrollToBottom = createActionButton(\"ThreadPrimitive.ScrollToBottom\", useThreadScrollToBottom);\n// src/primitives/thread/ThreadSuggestion.tsx\nvar ThreadPrimitiveSuggestion = createActionButton(\"ThreadPrimitive.Suggestion\", useThreadSuggestion, [\n    \"prompt\",\n    \"autoSend\",\n    \"method\"\n]);\n// src/runtimes/core/subscribeToMainThread.ts\nvar subscribeToMainThread = (runtime, callback)=>{\n    let first = true;\n    let cleanup;\n    const inner = ()=>{\n        cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n        cleanup = runtime.thread.subscribe(callback);\n        if (!first) {\n            callback();\n        }\n        first = false;\n    };\n    const unsubscribe = runtime.subscribe(inner);\n    inner();\n    return ()=>{\n        unsubscribe();\n        cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n    };\n};\n// src/runtimes/local/useLocalRuntime.tsx\n\n// src/runtimes/core/BaseAssistantRuntimeCore.tsx\nvar BaseAssistantRuntimeCore = class {\n    get thread() {\n        return this._thread;\n    }\n    set thread(thread) {\n        this._thread = thread;\n        this.subscriptionHandler();\n    }\n    subscribe(callback) {\n        this._subscriptions.add(callback);\n        return ()=>this._subscriptions.delete(callback);\n    }\n    constructor(_thread){\n        this._subscriptions = /* @__PURE__ */ new Set();\n        this.subscriptionHandler = ()=>{\n            for (const callback of this._subscriptions)callback();\n        };\n        this._thread = _thread;\n        this._thread = _thread;\n    }\n};\n// src/internal.ts\nvar internal_exports = {};\n(0,_chunk_BJPOCE4O_mjs__WEBPACK_IMPORTED_MODULE_3__.__export)(internal_exports, {\n    AssistantRuntimeImpl: ()=>AssistantRuntimeImpl,\n    BaseAssistantRuntimeCore: ()=>BaseAssistantRuntimeCore,\n    DefaultThreadComposerRuntimeCore: ()=>DefaultThreadComposerRuntimeCore,\n    MessageRepository: ()=>MessageRepository,\n    ProxyConfigProvider: ()=>ProxyConfigProvider,\n    ThreadRuntimeImpl: ()=>ThreadRuntimeImpl,\n    TooltipIconButton: ()=>TooltipIconButton,\n    generateId: ()=>generateId,\n    useSmooth: ()=>useSmooth,\n    useSmoothStatus: ()=>useSmoothStatus,\n    withSmoothContextProvider: ()=>withSmoothContextProvider\n});\n// src/runtimes/composer/BaseComposerRuntimeCore.tsx\nvar isAttachmentComplete = (a)=>a.status.type === \"complete\";\nvar BaseComposerRuntimeCore = class {\n    getAttachmentAccept() {\n        var _this_getAttachmentAdapter;\n        var _this_getAttachmentAdapter_accept;\n        return (_this_getAttachmentAdapter_accept = (_this_getAttachmentAdapter = this.getAttachmentAdapter()) === null || _this_getAttachmentAdapter === void 0 ? void 0 : _this_getAttachmentAdapter.accept) !== null && _this_getAttachmentAdapter_accept !== void 0 ? _this_getAttachmentAdapter_accept : \"*\";\n    }\n    set attachments(value) {\n        this._attachments = value;\n        this.notifySubscribers();\n    }\n    get attachments() {\n        return this._attachments;\n    }\n    get isEmpty() {\n        return !this.text.trim() && !this.attachments.length;\n    }\n    get text() {\n        return this._text;\n    }\n    setText(value) {\n        this._text = value;\n        this.notifySubscribers();\n    }\n    reset() {\n        this._text = \"\";\n        this._attachments = [];\n        this.notifySubscribers();\n    }\n    async send() {\n        const adapter = this.getAttachmentAdapter();\n        const attachments = adapter && this.attachments.length > 0 ? await Promise.all(this.attachments.map(async (a)=>{\n            var _result_status;\n            if (isAttachmentComplete(a)) return a;\n            const result = await adapter.send(a);\n            if (((_result_status = result.status) === null || _result_status === void 0 ? void 0 : _result_status.type) !== \"complete\") {\n                result.status = {\n                    type: \"complete\"\n                };\n            }\n            return result;\n        })) : [];\n        const message = {\n            role: \"user\",\n            content: this.text ? [\n                {\n                    type: \"text\",\n                    text: this.text\n                }\n            ] : [],\n            attachments\n        };\n        this.reset();\n        this.handleSend(message);\n    }\n    async addAttachment(file) {\n        const adapter = this.getAttachmentAdapter();\n        if (!adapter) throw new Error(\"Attachments are not supported\");\n        const attachment = await adapter.add({\n            file\n        });\n        if (attachment.status === void 0) {\n            attachment.status = {\n                type: \"requires-action\",\n                reason: \"composer-send\"\n            };\n        }\n        this._attachments = [\n            ...this._attachments,\n            attachment\n        ];\n        this.notifySubscribers();\n    }\n    async removeAttachment(attachmentId) {\n        const adapter = this.getAttachmentAdapter();\n        if (!adapter) throw new Error(\"Attachments are not supported\");\n        const index = this._attachments.findIndex((a)=>a.id === attachmentId);\n        if (index === -1) throw new Error(\"Attachment not found\");\n        const attachment = this._attachments[index];\n        await adapter.remove(attachment);\n        this._attachments = this._attachments.toSpliced(index, 1);\n        this.notifySubscribers();\n    }\n    notifySubscribers() {\n        for (const callback of this._subscriptions)callback();\n    }\n    subscribe(callback) {\n        this._subscriptions.add(callback);\n        return ()=>this._subscriptions.delete(callback);\n    }\n    constructor(){\n        this.isEditing = true;\n        this._attachments = [];\n        this._text = \"\";\n        this._subscriptions = /* @__PURE__ */ new Set();\n    }\n};\n// src/runtimes/composer/DefaultThreadComposerRuntimeCore.tsx\nvar DefaultThreadComposerRuntimeCore = class extends BaseComposerRuntimeCore {\n    get canCancel() {\n        return this._canCancel;\n    }\n    get attachments() {\n        return super.attachments;\n    }\n    getAttachmentAdapter() {\n        var _this_runtime_adapters;\n        return (_this_runtime_adapters = this.runtime.adapters) === null || _this_runtime_adapters === void 0 ? void 0 : _this_runtime_adapters.attachments;\n    }\n    connect() {\n        return this.runtime.subscribe(()=>{\n            if (this.canCancel !== this.runtime.capabilities.cancel) {\n                this._canCancel = this.runtime.capabilities.cancel;\n                this.notifySubscribers();\n            }\n        });\n    }\n    async handleSend(message) {\n        var _this_runtime_messages_at;\n        var _this_runtime_messages_at_id;\n        this.runtime.append({\n            ...message,\n            parentId: (_this_runtime_messages_at_id = (_this_runtime_messages_at = this.runtime.messages.at(-1)) === null || _this_runtime_messages_at === void 0 ? void 0 : _this_runtime_messages_at.id) !== null && _this_runtime_messages_at_id !== void 0 ? _this_runtime_messages_at_id : null\n        });\n    }\n    async cancel() {\n        this.runtime.cancelRun();\n    }\n    constructor(runtime){\n        super();\n        this._canCancel = false;\n        this.runtime = runtime;\n        this.connect();\n    }\n};\n// src/utils/ProxyConfigProvider.ts\nvar ProxyConfigProvider = class {\n    getModelConfig() {\n        return (0,_chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.mergeModelConfigs)(this._providers);\n    }\n    registerModelConfigProvider(provider) {\n        var _provider_subscribe;\n        this._providers.add(provider);\n        const unsubscribe = (_provider_subscribe = provider.subscribe) === null || _provider_subscribe === void 0 ? void 0 : _provider_subscribe.call(provider, ()=>{\n            this.notifySubscribers();\n        });\n        this.notifySubscribers();\n        return ()=>{\n            this._providers.delete(provider);\n            unsubscribe === null || unsubscribe === void 0 ? void 0 : unsubscribe();\n            this.notifySubscribers();\n        };\n    }\n    notifySubscribers() {\n        for (const callback of this._subscribers)callback();\n    }\n    subscribe(callback) {\n        this._subscribers.add(callback);\n        return ()=>this._subscribers.delete(callback);\n    }\n    constructor(){\n        this._providers = /* @__PURE__ */ new Set();\n        this._subscribers = /* @__PURE__ */ new Set();\n    }\n};\n// src/utils/idUtils.tsx\n\nvar generateId = (0,nanoid_non_secure__WEBPACK_IMPORTED_MODULE_13__.customAlphabet)(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\", 7);\nvar optimisticPrefix = \"__optimistic__\";\nvar generateOptimisticId = ()=>\"\".concat(optimisticPrefix).concat(generateId());\n// src/runtimes/edge/converters/fromCoreMessage.ts\nvar fromCoreMessages = (message)=>{\n    return message.map((message2)=>fromCoreMessage(message2));\n};\nvar fromCoreMessage = function(message) {\n    let { id = generateId(), status = {\n        type: \"complete\",\n        reason: \"unknown\"\n    }, attachments = [] } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const commonProps = {\n        id,\n        createdAt: /* @__PURE__ */ new Date()\n    };\n    const role = message.role;\n    switch(role){\n        case \"assistant\":\n            return {\n                ...commonProps,\n                role,\n                content: message.content.map((part)=>{\n                    if (part.type === \"tool-call\") {\n                        return {\n                            ...part,\n                            argsText: JSON.stringify(part.args)\n                        };\n                    }\n                    return part;\n                }),\n                status\n            };\n        case \"user\":\n            return {\n                ...commonProps,\n                role,\n                content: message.content,\n                attachments\n            };\n        case \"system\":\n            return {\n                ...commonProps,\n                role,\n                content: message.content\n            };\n        default:\n            {\n                const unsupportedRole = role;\n                throw new Error(\"Unknown message role: \".concat(unsupportedRole));\n            }\n    }\n};\n// src/runtimes/utils/MessageRepository.tsx\nvar findHead = (message)=>{\n    if (message.next) return findHead(message.next);\n    if (\"current\" in message) return message;\n    return null;\n};\nvar MessageRepository = class {\n    performOp(newParent, child, operation) {\n        var _child_prev;\n        const parentOrRoot = (_child_prev = child.prev) !== null && _child_prev !== void 0 ? _child_prev : this.root;\n        const newParentOrRoot = newParent !== null && newParent !== void 0 ? newParent : this.root;\n        if (operation === \"relink\" && parentOrRoot === newParentOrRoot) return;\n        if (operation !== \"link\") {\n            parentOrRoot.children = parentOrRoot.children.filter((m)=>m !== child.current.id);\n            if (parentOrRoot.next === child) {\n                const fallbackId = parentOrRoot.children.at(-1);\n                const fallback = fallbackId ? this.messages.get(fallbackId) : null;\n                if (fallback === void 0) {\n                    throw new Error(\"MessageRepository(performOp/cut): Fallback sibling message not found. This is likely an internal bug in assistant-ui.\");\n                }\n                parentOrRoot.next = fallback;\n            }\n        }\n        if (operation !== \"cut\") {\n            for(let current = newParent; current; current = current.prev){\n                if (current.current.id === child.current.id) {\n                    throw new Error(\"MessageRepository(performOp/link): A message with the same id already exists in the parent tree. This error occurs if the same message id is found multiple times. This is likely an internal bug in assistant-ui.\");\n                }\n            }\n            newParentOrRoot.children = [\n                ...newParentOrRoot.children,\n                child.current.id\n            ];\n            if (findHead(child) === this.head || newParentOrRoot.next === null) {\n                newParentOrRoot.next = child;\n            }\n            child.prev = newParent;\n        }\n    }\n    getMessages() {\n        var _this_head;\n        var _this_head_level;\n        const messages2 = new Array((_this_head_level = (_this_head = this.head) === null || _this_head === void 0 ? void 0 : _this_head.level) !== null && _this_head_level !== void 0 ? _this_head_level : 0);\n        for(let current = this.head; current; current = current.prev){\n            messages2[current.level] = current.current;\n        }\n        return messages2;\n    }\n    addOrUpdateMessage(parentId, message) {\n        const existingItem = this.messages.get(message.id);\n        const prev = parentId ? this.messages.get(parentId) : null;\n        if (prev === void 0) throw new Error(\"MessageRepository(addOrUpdateMessage): Parent message not found. This is likely an internal bug in assistant-ui.\");\n        if (existingItem) {\n            existingItem.current = message;\n            this.performOp(prev, existingItem, \"relink\");\n            return;\n        }\n        const newItem = {\n            prev,\n            current: message,\n            next: null,\n            children: [],\n            level: prev ? prev.level + 1 : 0\n        };\n        this.messages.set(message.id, newItem);\n        this.performOp(prev, newItem, \"link\");\n        if (this.head === prev) {\n            this.head = newItem;\n        }\n    }\n    getMessage(messageId) {\n        var _message_prev;\n        const message = this.messages.get(messageId);\n        if (!message) throw new Error(\"MessageRepository(updateMessage): Message not found. This is likely an internal bug in assistant-ui.\");\n        var _message_prev_current_id;\n        return {\n            parentId: (_message_prev_current_id = (_message_prev = message.prev) === null || _message_prev === void 0 ? void 0 : _message_prev.current.id) !== null && _message_prev_current_id !== void 0 ? _message_prev_current_id : null,\n            message: message.current\n        };\n    }\n    appendOptimisticMessage(parentId, message) {\n        let optimisticId;\n        do {\n            optimisticId = generateOptimisticId();\n        }while (this.messages.has(optimisticId));\n        this.addOrUpdateMessage(parentId, fromCoreMessage(message, {\n            id: optimisticId,\n            status: {\n                type: \"running\"\n            }\n        }));\n        return optimisticId;\n    }\n    deleteMessage(messageId, replacementId) {\n        const message = this.messages.get(messageId);\n        if (!message) throw new Error(\"MessageRepository(deleteMessage): Optimistic message not found. This is likely an internal bug in assistant-ui.\");\n        const replacement = replacementId === void 0 ? message.prev : replacementId === null ? null : this.messages.get(replacementId);\n        if (replacement === void 0) throw new Error(\"MessageRepository(deleteMessage): Replacement not found. This is likely an internal bug in assistant-ui.\");\n        for (const child of message.children){\n            const childMessage = this.messages.get(child);\n            if (!childMessage) throw new Error(\"MessageRepository(deleteMessage): Child message not found. This is likely an internal bug in assistant-ui.\");\n            this.performOp(replacement, childMessage, \"relink\");\n        }\n        this.performOp(null, message, \"cut\");\n        this.messages.delete(messageId);\n        if (this.head === message) {\n            this.head = findHead(replacement !== null && replacement !== void 0 ? replacement : this.root);\n        }\n    }\n    getBranches(messageId) {\n        const message = this.messages.get(messageId);\n        if (!message) throw new Error(\"MessageRepository(getBranches): Message not found. This is likely an internal bug in assistant-ui.\");\n        var _message_prev;\n        const { children } = (_message_prev = message.prev) !== null && _message_prev !== void 0 ? _message_prev : this.root;\n        return children;\n    }\n    switchToBranch(messageId) {\n        const message = this.messages.get(messageId);\n        if (!message) throw new Error(\"MessageRepository(switchToBranch): Branch not found. This is likely an internal bug in assistant-ui.\");\n        var _message_prev;\n        const prevOrRoot = (_message_prev = message.prev) !== null && _message_prev !== void 0 ? _message_prev : this.root;\n        prevOrRoot.next = message;\n        this.head = findHead(message);\n    }\n    resetHead(messageId) {\n        if (messageId === null) {\n            this.head = null;\n            return;\n        }\n        const message = this.messages.get(messageId);\n        if (!message) throw new Error(\"MessageRepository(resetHead): Branch not found. This is likely an internal bug in assistant-ui.\");\n        this.head = message;\n        for(let current = message; current; current = current.prev){\n            if (current.prev) {\n                current.prev.next = current;\n            }\n        }\n    }\n    export() {\n        var _this_head;\n        const exportItems = [];\n        for (const [, message] of this.messages){\n            var _message_prev;\n            var _message_prev_current_id;\n            exportItems.push({\n                message: message.current,\n                parentId: (_message_prev_current_id = (_message_prev = message.prev) === null || _message_prev === void 0 ? void 0 : _message_prev.current.id) !== null && _message_prev_current_id !== void 0 ? _message_prev_current_id : null\n            });\n        }\n        var _this_head_current_id;\n        return {\n            headId: (_this_head_current_id = (_this_head = this.head) === null || _this_head === void 0 ? void 0 : _this_head.current.id) !== null && _this_head_current_id !== void 0 ? _this_head_current_id : null,\n            messages: exportItems\n        };\n    }\n    import(param) {\n        let { headId, messages: messages2 } = param;\n        var _messages2_at;\n        for (const { message, parentId } of messages2){\n            this.addOrUpdateMessage(parentId, message);\n        }\n        var _ref;\n        this.resetHead((_ref = headId !== null && headId !== void 0 ? headId : (_messages2_at = messages2.at(-1)) === null || _messages2_at === void 0 ? void 0 : _messages2_at.message.id) !== null && _ref !== void 0 ? _ref : null);\n    }\n    constructor(){\n        this.messages = /* @__PURE__ */ new Map();\n        // message_id -> item\n        this.head = null;\n        this.root = {\n            children: [],\n            next: null\n        };\n    }\n};\n// src/ui/base/tooltip-icon-button.tsx\n\n// src/ui/base/tooltip.tsx\n\n// src/ui/utils/withDefaults.tsx\n\n\n\nvar withDefaultProps = (param)=>{\n    let { className, ...defaultProps } = param;\n    return (param)=>{\n        let { className: classNameProp, ...props } = param;\n        return {\n            className: classnames__WEBPACK_IMPORTED_MODULE_14__(className, classNameProp),\n            ...defaultProps,\n            ...props\n        };\n    };\n};\nvar withDefaults = (Component, defaultProps)=>{\n    const getProps = withDefaultProps(defaultProps);\n    const WithDefaults = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>{\n        const ComponentAsAny = Component;\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComponentAsAny, {\n            ...getProps(props),\n            ref\n        });\n    });\n    WithDefaults.displayName = \"withDefaults(\" + (typeof Component === \"string\" ? Component : Component.displayName) + \")\";\n    return WithDefaults;\n};\n// src/ui/base/tooltip.tsx\n\nvar Tooltip = (props)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_tooltip__WEBPACK_IMPORTED_MODULE_15__.Provider, {\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_tooltip__WEBPACK_IMPORTED_MODULE_15__.Root, {\n            ...props\n        })\n    });\n};\n_c75 = Tooltip;\nTooltip.displayName = \"Tooltip\";\nvar TooltipTrigger = _radix_ui_react_tooltip__WEBPACK_IMPORTED_MODULE_15__.Trigger;\nvar TooltipContent = withDefaults(_radix_ui_react_tooltip__WEBPACK_IMPORTED_MODULE_15__.Content, {\n    sideOffset: 4,\n    className: \"aui-tooltip-content\"\n});\nTooltipContent.displayName = \"TooltipContent\";\n// src/ui/base/button.tsx\n\n\n\n\nvar buttonVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_16__.cva)(\"aui-button\", {\n    variants: {\n        variant: {\n            default: \"aui-button-primary\",\n            outline: \"aui-button-outline\",\n            ghost: \"aui-button-ghost\"\n        },\n        size: {\n            default: \"aui-button-medium\",\n            icon: \"aui-button-icon\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\",\n        size: \"default\"\n    }\n});\nvar Button = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c76 = (param, ref)=>{\n    let { className, variant, size, ...props } = param;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.button, {\n        className: buttonVariants({\n            variant,\n            size,\n            className\n        }),\n        ...props,\n        ref\n    });\n});\n_c77 = Button;\nButton.displayName = \"Button\";\n// src/ui/base/tooltip-icon-button.tsx\n\nvar TooltipIconButton = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c78 = (param, ref)=>{\n    let { children, tooltip, side = \"bottom\", ...rest } = param;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(Tooltip, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipTrigger, {\n                asChild: true,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(Button, {\n                    variant: \"ghost\",\n                    size: \"icon\",\n                    ...rest,\n                    ref,\n                    children: [\n                        children,\n                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", {\n                            className: \"aui-sr-only\",\n                            children: tooltip\n                        })\n                    ]\n                })\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipContent, {\n                side,\n                children: tooltip\n            })\n        ]\n    });\n});\n_c79 = TooltipIconButton;\nTooltipIconButton.displayName = \"TooltipIconButton\";\n// src/api/ThreadRuntime.ts\nvar toAppendMessage = (messages2, message)=>{\n    var _messages2_at;\n    if (typeof message === \"string\") {\n        var _messages2_at1;\n        var _messages2_at_id;\n        return {\n            parentId: (_messages2_at_id = (_messages2_at1 = messages2.at(-1)) === null || _messages2_at1 === void 0 ? void 0 : _messages2_at1.id) !== null && _messages2_at_id !== void 0 ? _messages2_at_id : null,\n            role: \"user\",\n            content: [\n                {\n                    type: \"text\",\n                    text: message\n                }\n            ],\n            attachments: []\n        };\n    }\n    if (message.role && message.parentId && message.attachments) {\n        return message;\n    }\n    var _message_parentId, _ref, _message_role, _message_attachments;\n    return {\n        parentId: (_ref = (_message_parentId = message.parentId) !== null && _message_parentId !== void 0 ? _message_parentId : (_messages2_at = messages2.at(-1)) === null || _messages2_at === void 0 ? void 0 : _messages2_at.id) !== null && _ref !== void 0 ? _ref : null,\n        role: (_message_role = message.role) !== null && _message_role !== void 0 ? _message_role : \"user\",\n        content: message.content,\n        attachments: (_message_attachments = message.attachments) !== null && _message_attachments !== void 0 ? _message_attachments : []\n    };\n};\nvar getThreadState = (runtime)=>{\n    const lastMessage = runtime.messages.at(-1);\n    return Object.freeze({\n        threadId: runtime.threadId,\n        capabilities: runtime.capabilities,\n        isDisabled: runtime.isDisabled,\n        isRunning: (lastMessage === null || lastMessage === void 0 ? void 0 : lastMessage.role) !== \"assistant\" ? false : lastMessage.status.type === \"running\",\n        messages: runtime.messages,\n        suggestions: runtime.suggestions,\n        extras: runtime.extras,\n        speech: runtime.speech\n    });\n};\nvar ThreadRuntimeImpl = class {\n    get path() {\n        return this._threadBinding.path;\n    }\n    /**\n   * @deprecated Use `getState().threadId` instead. This will be removed in 0.6.0.\n   */ get threadId() {\n        return this.getState().threadId;\n    }\n    /**\n   * @deprecated Use `getState().isDisabled` instead. This will be removed in 0.6.0.\n   */ get isDisabled() {\n        return this.getState().isDisabled;\n    }\n    /**\n   * @deprecated Use `getState().isRunning` instead. This will be removed in 0.6.0.\n   */ get isRunning() {\n        return this.getState().isRunning;\n    }\n    /**\n   * @deprecated Use `getState().capabilities` instead. This will be removed in 0.6.0.\n   */ get capabilities() {\n        return this.getState().capabilities;\n    }\n    /**\n   * @deprecated Use `getState().extras` instead. This will be removed in 0.6.0.\n   */ get extras() {\n        return this._threadBinding.getState().extras;\n    }\n    /**\n   * @deprecated Use `getState().followupSuggestions` instead. This will be removed in 0.6.0.\n   */ get suggestions() {\n        return this._threadBinding.getState().suggestions;\n    }\n    /**\n   * @deprecated Use `getState().messages` instead. This will be removed in 0.6.0.\n   */ get messages() {\n        return this._threadBinding.getState().messages;\n    }\n    /**\n   * @deprecated Use `getState().speechState` instead. This will be removed in 0.6.0.\n   */ get speech() {\n        return this._threadBinding.getState().speech;\n    }\n    unstable_getCore() {\n        return this._threadBinding.getState();\n    }\n    getState() {\n        return this._threadBinding.getStateState();\n    }\n    append(message) {\n        this._threadBinding.getState().append(toAppendMessage(this._threadBinding.getState().messages, message));\n    }\n    subscribe(callback) {\n        return this._threadBinding.subscribe(callback);\n    }\n    /**\n   * @derprecated Use `getMesssageById(id).getState().branchNumber` / `getMesssageById(id).getState().branchCount` instead. This will be removed in 0.6.0.\n   */ getBranches(messageId) {\n        return this._threadBinding.getState().getBranches(messageId);\n    }\n    getModelConfig() {\n        return this._threadBinding.getState().getModelConfig();\n    }\n    // TODO sometimes you want to continue when there is no child message\n    startRun(parentId) {\n        return this._threadBinding.getState().startRun(parentId);\n    }\n    cancelRun() {\n        this._threadBinding.getState().cancelRun();\n    }\n    /**\n   * @deprecated Use `getMesssageById(id).getContentPartByToolCallId(toolCallId).addToolResult({ result })` instead. This will be removed in 0.6.0.\n   */ addToolResult(options) {\n        this._threadBinding.getState().addToolResult(options);\n    }\n    /**\n   * @deprecated Use `getMesssageById(id).switchToBranch({ options })` instead. This will be removed in 0.6.0.\n   */ switchToBranch(branchId) {\n        return this._threadBinding.getState().switchToBranch(branchId);\n    }\n    /**\n   * @deprecated Use `getMesssageById(id).speak()` instead. This will be removed in 0.6.0.\n   */ speak(messageId) {\n        return this._threadBinding.getState().speak(messageId);\n    }\n    stopSpeaking() {\n        return this._threadBinding.getState().stopSpeaking();\n    }\n    getSubmittedFeedback(messageId) {\n        return this._threadBinding.getState().getSubmittedFeedback(messageId);\n    }\n    /**\n   * @deprecated Use `getMesssageById(id).submitFeedback({ type })` instead. This will be removed in 0.6.0.\n   */ submitFeedback(options) {\n        return this._threadBinding.getState().submitFeedback(options);\n    }\n    /**\n   * @deprecated Use `getMesssageById(id).getMessageByIndex(idx).composer` instead. This will be removed in 0.6.0.\n   */ getEditComposer(messageId) {\n        return this._threadBinding.getState().getEditComposer(messageId);\n    }\n    /**\n   * @deprecated Use `getMesssageById(id).getMessageByIndex(idx).composer.beginEdit()` instead. This will be removed in 0.6.0.\n   */ beginEdit(messageId) {\n        return this._threadBinding.getState().beginEdit(messageId);\n    }\n    export() {\n        return this._threadBinding.getState().export();\n    }\n    import(data) {\n        this._threadBinding.getState().import(data);\n    }\n    getMesssageByIndex(idx) {\n        if (idx < 0) throw new Error(\"Message index must be >= 0\");\n        return this._getMessageRuntime({\n            ...this.path,\n            ref: this.path.ref + \"\".concat(this.path.ref, \".messages[\").concat(idx, \"]\"),\n            messageSelector: {\n                type: \"index\",\n                index: idx\n            }\n        }, ()=>{\n            var _messages2_;\n            const messages2 = this._threadBinding.getState().messages;\n            const message = messages2[idx];\n            if (!message) return void 0;\n            var _messages2__id;\n            return {\n                message,\n                parentId: (_messages2__id = (_messages2_ = messages2[idx - 1]) === null || _messages2_ === void 0 ? void 0 : _messages2_.id) !== null && _messages2__id !== void 0 ? _messages2__id : null\n            };\n        });\n    }\n    getMesssageById(messageId) {\n        return this._getMessageRuntime({\n            ...this.path,\n            ref: this.path.ref + \"\".concat(this.path.ref, \".messages[messageId=\").concat(JSON.stringify(messageId), \"]\"),\n            messageSelector: {\n                type: \"messageId\",\n                messageId\n            }\n        }, ()=>this._threadBinding.getState().getMessageById(messageId));\n    }\n    _getMessageRuntime(path, callback) {\n        return new MessageRuntimeImpl(new ShallowMemoizeSubject({\n            path,\n            getState: ()=>{\n                var _messages2_at;\n                var _callback;\n                const { message, parentId } = (_callback = callback()) !== null && _callback !== void 0 ? _callback : {};\n                const { messages: messages2, speech: speechState } = this._threadBinding.getState();\n                if (!message || parentId === void 0) return SKIP_UPDATE;\n                const thread = this._threadBinding.getState();\n                const branches = thread.getBranches(message.id);\n                const submittedFeedback = thread.getSubmittedFeedback(message.id);\n                return {\n                    ...message,\n                    message,\n                    isLast: ((_messages2_at = messages2.at(-1)) === null || _messages2_at === void 0 ? void 0 : _messages2_at.id) === message.id,\n                    parentId,\n                    branches,\n                    branchNumber: branches.indexOf(message.id) + 1,\n                    branchCount: branches.length,\n                    speech: (speechState === null || speechState === void 0 ? void 0 : speechState.messageId) === message.id ? speechState : void 0,\n                    submittedFeedback\n                };\n            },\n            subscribe: (callback2)=>this._threadBinding.subscribe(callback2)\n        }), this._threadBinding);\n    }\n    unstable_on(event, callback) {\n        let subject = this._eventListenerNestedSubscriptions.get(event);\n        if (!subject) {\n            subject = new NestedSubscriptionSubject({\n                path: this.path,\n                getState: ()=>({\n                        subscribe: (callback2)=>this._threadBinding.getState().unstable_on(event, callback2)\n                    }),\n                subscribe: (callback2)=>this._threadBinding.outerSubscribe(callback2)\n            });\n            this._eventListenerNestedSubscriptions.set(event, subject);\n        }\n        return subject.subscribe(callback);\n    }\n    constructor(threadBinding){\n        this._eventListenerNestedSubscriptions = /* @__PURE__ */ new Map();\n        const stateBinding = new LazyMemoizeSubject({\n            path: threadBinding.path,\n            getState: ()=>getThreadState(threadBinding.getState()),\n            subscribe: (callback)=>threadBinding.subscribe(callback)\n        });\n        this._threadBinding = {\n            path: threadBinding.path,\n            getState: ()=>threadBinding.getState(),\n            getStateState: ()=>stateBinding.getState(),\n            outerSubscribe: (callback)=>threadBinding.outerSubscribe(callback),\n            subscribe: (callback)=>threadBinding.subscribe(callback)\n        };\n        this.composer = new ThreadComposerRuntimeImpl(new NestedSubscriptionSubject({\n            path: {\n                ...this.path,\n                ref: this.path.ref + \"\".concat(this.path.ref, \".composer\"),\n                composerSource: \"thread\"\n            },\n            getState: ()=>this._threadBinding.getState().composer,\n            subscribe: (callback)=>this._threadBinding.subscribe(callback)\n        }));\n    }\n};\n// src/api/AssistantRuntime.ts\nvar AssistantRuntimeImpl = class _AssistantRuntimeImpl {\n    get thread() {\n        return this._thread;\n    }\n    switchToNewThread() {\n        return this._core.switchToNewThread();\n    }\n    switchToThread(threadId) {\n        return this._core.switchToThread(threadId);\n    }\n    registerModelConfigProvider(provider) {\n        return this._core.registerModelConfigProvider(provider);\n    }\n    /**\n   * @deprecated Thread is now static and never gets updated. This will be removed in 0.6.0.\n   */ subscribe(callback) {\n        return this._core.subscribe(callback);\n    }\n    static createMainThreadRuntime(_core) {\n        let CustomThreadRuntime = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : ThreadRuntimeImpl;\n        return new CustomThreadRuntime(new NestedSubscriptionSubject({\n            path: {\n                ref: \"threads.main\",\n                threadSelector: {\n                    type: \"main\"\n                }\n            },\n            getState: ()=>_core.thread,\n            subscribe: (callback)=>_core.subscribe(callback)\n        }));\n    }\n    static create(_core) {\n        let CustomThreadRuntime = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : ThreadRuntimeImpl;\n        return new _AssistantRuntimeImpl(_core, _AssistantRuntimeImpl.createMainThreadRuntime(_core, CustomThreadRuntime));\n    }\n    constructor(_core, _thread){\n        this._core = _core;\n        this._thread = _thread;\n    }\n};\n// src/runtimes/edge/converters/fromLanguageModelMessages.ts\nvar fromLanguageModelMessages = (lm, param)=>{\n    let { mergeSteps } = param;\n    const messages2 = [];\n    for (const lmMessage of lm){\n        const role = lmMessage.role;\n        switch(role){\n            case \"system\":\n                {\n                    messages2.push({\n                        role: \"system\",\n                        content: [\n                            {\n                                type: \"text\",\n                                text: lmMessage.content\n                            }\n                        ]\n                    });\n                    break;\n                }\n            case \"user\":\n                {\n                    messages2.push({\n                        role: \"user\",\n                        content: lmMessage.content.map((part)=>{\n                            const type = part.type;\n                            switch(type){\n                                case \"text\":\n                                    {\n                                        return {\n                                            type: \"text\",\n                                            text: part.text\n                                        };\n                                    }\n                                case \"image\":\n                                    {\n                                        if (part.image instanceof URL) {\n                                            return {\n                                                type: \"image\",\n                                                image: part.image.href\n                                            };\n                                        }\n                                        throw new Error(\"Only images with URL data are supported\");\n                                    }\n                                case \"file\":\n                                    {\n                                        throw new Error(\"File content parts are not supported\");\n                                    }\n                                default:\n                                    {\n                                        const unhandledType = type;\n                                        throw new Error(\"Unknown content part type: \".concat(unhandledType));\n                                    }\n                            }\n                        })\n                    });\n                    break;\n                }\n            case \"assistant\":\n                {\n                    const newContent = lmMessage.content.map((part)=>{\n                        if (part.type === \"tool-call\") {\n                            return {\n                                type: \"tool-call\",\n                                toolCallId: part.toolCallId,\n                                toolName: part.toolName,\n                                argsText: JSON.stringify(part.args),\n                                args: part.args\n                            };\n                        }\n                        return part;\n                    });\n                    if (mergeSteps) {\n                        const previousMessage = messages2[messages2.length - 1];\n                        if ((previousMessage === null || previousMessage === void 0 ? void 0 : previousMessage.role) === \"assistant\") {\n                            previousMessage.content.push(...newContent);\n                            break;\n                        }\n                    }\n                    messages2.push({\n                        role: \"assistant\",\n                        content: newContent\n                    });\n                    break;\n                }\n            case \"tool\":\n                {\n                    const previousMessage = messages2[messages2.length - 1];\n                    if ((previousMessage === null || previousMessage === void 0 ? void 0 : previousMessage.role) !== \"assistant\") throw new Error(\"A tool message must be preceded by an assistant message.\");\n                    for (const tool of lmMessage.content){\n                        const toolCall = previousMessage.content.find((c)=>c.type === \"tool-call\" && c.toolCallId === tool.toolCallId);\n                        if (!toolCall) throw new Error(\"Received tool result for an unknown tool call.\");\n                        if (toolCall.toolName !== tool.toolName) throw new Error(\"Tool call name mismatch.\");\n                        toolCall.result = tool.result;\n                        if (tool.isError) {\n                            toolCall.isError = true;\n                        }\n                    }\n                    break;\n                }\n            default:\n                {\n                    const unhandledRole = role;\n                    throw new Error(\"Unknown message role: \".concat(unhandledRole));\n                }\n        }\n    }\n    return messages2;\n};\n// src/runtimes/edge/converters/fromLanguageModelTools.ts\nvar fromLanguageModelTools = (tools)=>{\n    return Object.fromEntries(tools.map((tool)=>[\n            tool.name,\n            {\n                description: tool.description,\n                parameters: tool.parameters\n            }\n        ]));\n};\n// src/runtimes/edge/streams/utils/chunkByLineStream.ts\nfunction chunkByLineStream() {\n    let buffer = \"\";\n    return new TransformStream({\n        transform (chunk, controller) {\n            buffer += chunk;\n            const lines = buffer.split(\"\\n\");\n            for(let i = 0; i < lines.length - 1; i++){\n                controller.enqueue(lines[i]);\n            }\n            buffer = lines[lines.length - 1];\n        },\n        flush (controller) {\n            if (buffer) {\n                controller.enqueue(buffer);\n            }\n        }\n    });\n}\n// src/runtimes/edge/streams/utils/streamPartDecoderStream.ts\nvar decodeStreamPart = (part)=>{\n    const index = part.indexOf(\":\");\n    if (index === -1) throw new Error(\"Invalid stream part\");\n    return {\n        type: part.slice(0, index),\n        value: JSON.parse(part.slice(index + 1))\n    };\n};\nfunction streamPartDecoderStream() {\n    const decodeStream = new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(decodeStreamPart(chunk));\n        }\n    });\n    return new _chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.PipeableTransformStream((readable)=>{\n        return readable.pipeThrough(new TextDecoderStream()).pipeThrough(chunkByLineStream()).pipeThrough(decodeStream);\n    });\n}\n// src/runtimes/edge/streams/utils/index.ts\nvar streamUtils = {\n    streamPartEncoderStream: _chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.streamPartEncoderStream,\n    streamPartDecoderStream\n};\n// src/runtimes/edge/useEdgeRuntime.ts\n\n// src/runtimes/edge/streams/assistantDecoderStream.ts\nfunction assistantDecoderStream() {\n    const toolCallNames = /* @__PURE__ */ new Map();\n    let currentToolCall;\n    return new TransformStream({\n        transform (param, controller) {\n            let { type, value } = param;\n            if (currentToolCall && type !== \"c\" /* ToolCallDelta */  && type !== \"3\" /* Error */ ) {\n                controller.enqueue({\n                    type: \"tool-call\",\n                    toolCallType: \"function\",\n                    toolCallId: currentToolCall.id,\n                    toolName: currentToolCall.name,\n                    args: currentToolCall.argsText\n                });\n                currentToolCall = void 0;\n            }\n            switch(type){\n                case \"0\" /* TextDelta */ :\n                    {\n                        controller.enqueue({\n                            type: \"text-delta\",\n                            textDelta: value\n                        });\n                        break;\n                    }\n                case \"b\" /* ToolCallBegin */ :\n                    {\n                        const { toolCallId: id, toolName: name } = value;\n                        toolCallNames.set(id, name);\n                        currentToolCall = {\n                            id,\n                            name,\n                            argsText: \"\"\n                        };\n                        controller.enqueue({\n                            type: \"tool-call-delta\",\n                            toolCallType: \"function\",\n                            toolCallId: id,\n                            toolName: name,\n                            argsTextDelta: \"\"\n                        });\n                        break;\n                    }\n                case \"c\" /* ToolCallDelta */ :\n                    {\n                        const { toolCallId, argsTextDelta } = value;\n                        const toolName = toolCallNames.get(toolCallId);\n                        if ((currentToolCall === null || currentToolCall === void 0 ? void 0 : currentToolCall.id) === toolCallId) {\n                            currentToolCall.argsText += argsTextDelta;\n                        }\n                        controller.enqueue({\n                            type: \"tool-call-delta\",\n                            toolCallType: \"function\",\n                            toolCallId,\n                            toolName,\n                            argsTextDelta\n                        });\n                        break;\n                    }\n                case \"a\" /* ToolCallResult */ :\n                    {\n                        controller.enqueue({\n                            type: \"tool-result\",\n                            toolCallType: \"function\",\n                            toolCallId: value.toolCallId,\n                            toolName: toolCallNames.get(value.toolCallId),\n                            result: value.result\n                        });\n                        break;\n                    }\n                case \"d\" /* Finish */ :\n                    {\n                        controller.enqueue({\n                            type: \"finish\",\n                            ...value\n                        });\n                        break;\n                    }\n                case \"3\" /* Error */ :\n                    {\n                        controller.enqueue({\n                            type: \"error\",\n                            error: value\n                        });\n                        break;\n                    }\n                case \"9\" /* ToolCall */ :\n                    {\n                        const { toolCallId, toolName, args } = value;\n                        const argsText = JSON.stringify(args);\n                        controller.enqueue({\n                            type: \"tool-call-delta\",\n                            toolCallType: \"function\",\n                            toolCallId,\n                            toolName,\n                            argsTextDelta: argsText\n                        });\n                        controller.enqueue({\n                            type: \"tool-call\",\n                            toolCallType: \"function\",\n                            toolCallId,\n                            toolName,\n                            args: argsText\n                        });\n                        break;\n                    }\n                case \"e\" /* StepFinish */ :\n                    {\n                        controller.enqueue({\n                            type: \"step-finish\",\n                            ...value\n                        });\n                        break;\n                    }\n                // TODO\n                case \"2\" /* Data */ :\n                    break;\n                default:\n                    {\n                        const unhandledType = type;\n                        throw new Error(\"Unhandled chunk type: \".concat(unhandledType));\n                    }\n            }\n        }\n    });\n}\n// src/runtimes/edge/EdgeChatAdapter.ts\nfunction asAsyncIterable(source) {\n    return {\n        [Symbol.asyncIterator]: ()=>{\n            const reader = source.getReader();\n            return {\n                async next () {\n                    const { done, value } = await reader.read();\n                    return done ? {\n                        done: true,\n                        value: void 0\n                    } : {\n                        done: false,\n                        value\n                    };\n                }\n            };\n        }\n    };\n}\nvar EdgeChatAdapter = class {\n    async *run(param) {\n        let { messages: messages2, abortSignal, config } = param;\n        const headers = new Headers(this.options.headers);\n        headers.set(\"Content-Type\", \"application/json\");\n        var _this_options_credentials;\n        const result = await fetch(this.options.api, {\n            method: \"POST\",\n            headers,\n            credentials: (_this_options_credentials = this.options.credentials) !== null && _this_options_credentials !== void 0 ? _this_options_credentials : \"same-origin\",\n            body: JSON.stringify({\n                system: config.system,\n                messages: (0,_chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.toCoreMessages)(messages2),\n                tools: config.tools ? (0,_chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.toLanguageModelTools)(config.tools) : [],\n                ...config.callSettings,\n                ...config.config,\n                ...this.options.body\n            }),\n            signal: abortSignal\n        });\n        if (!result.ok) {\n            throw new Error(\"Status \".concat(result.status, \": \").concat(await result.text()));\n        }\n        const stream = result.body.pipeThrough(streamPartDecoderStream()).pipeThrough(assistantDecoderStream()).pipeThrough((0,_chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.toolResultStream)(config.tools, abortSignal)).pipeThrough((0,_chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.runResultStream)());\n        let update;\n        for await (update of asAsyncIterable(stream)){\n            yield update;\n        }\n        if (update === void 0) throw new Error(\"No data received from Edge Runtime\");\n    }\n    constructor(options){\n        this.options = options;\n    }\n};\n// src/runtimes/local/LocalRuntimeOptions.tsx\nvar splitLocalRuntimeOptions = (options)=>{\n    const { initialMessages, maxToolRoundtrips, maxSteps, adapters, ...rest } = options;\n    return {\n        localRuntimeOptions: {\n            initialMessages,\n            maxToolRoundtrips,\n            maxSteps,\n            adapters\n        },\n        otherOptions: rest\n    };\n};\n// src/runtimes/edge/useEdgeRuntime.ts\nvar useEdgeRuntime = (options)=>{\n    _s110();\n    const { localRuntimeOptions, otherOptions } = splitLocalRuntimeOptions(options);\n    const [adapter] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>new EdgeChatAdapter(otherOptions));\n    return useLocalRuntime(adapter, localRuntimeOptions);\n};\n_s110(useEdgeRuntime, \"ZlBFm4jQ6Qr7NMvscIBOXOmScYo=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        useLocalRuntime\n    ];\n});\n// src/runtimes/local/shouldContinue.tsx\nvar shouldContinue = (result)=>{\n    var _result_status;\n    return ((_result_status = result.status) === null || _result_status === void 0 ? void 0 : _result_status.type) === \"requires-action\" && result.status.reason === \"tool-calls\" && result.content.every((c)=>c.type !== \"tool-call\" || !!c.result);\n};\n// src/runtimes/composer/DefaultEditComposerRuntimeCore.tsx\nvar DefaultEditComposerRuntimeCore = class extends BaseComposerRuntimeCore {\n    get canCancel() {\n        return true;\n    }\n    getAttachmentAdapter() {\n        var _this_runtime_adapters;\n        return (_this_runtime_adapters = this.runtime.adapters) === null || _this_runtime_adapters === void 0 ? void 0 : _this_runtime_adapters.attachments;\n    }\n    async handleSend(message) {\n        const text = getThreadMessageText(message);\n        if (text !== this._previousText) {\n            this.runtime.append({\n                ...message,\n                content: [\n                    ...message.content,\n                    ...this._nonTextParts\n                ],\n                parentId: this._parentId\n            });\n        }\n        this.endEditCallback();\n        this.notifySubscribers();\n    }\n    async cancel() {\n        this.endEditCallback();\n        this.notifySubscribers();\n    }\n    constructor(runtime, endEditCallback, { parentId, message }){\n        super();\n        this.runtime = runtime;\n        this.endEditCallback = endEditCallback;\n        this._parentId = parentId;\n        this._previousText = getThreadMessageText(message);\n        this.setText(this._previousText);\n        this._nonTextParts = message.content.filter((part)=>part.type !== \"text\" && part.type !== \"ui\");\n        var _message_attachments;\n        this.attachments = (_message_attachments = message.attachments) !== null && _message_attachments !== void 0 ? _message_attachments : [];\n    }\n};\n// src/runtimes/core/BaseThreadRuntimeCore.tsx\nvar BaseThreadRuntimeCore = class {\n    get messages() {\n        return this.repository.getMessages();\n    }\n    getModelConfig() {\n        return this.configProvider.getModelConfig();\n    }\n    getEditComposer(messageId) {\n        return this._editComposers.get(messageId);\n    }\n    beginEdit(messageId) {\n        if (this._editComposers.has(messageId)) throw new Error(\"Edit already in progress\");\n        this._editComposers.set(messageId, new DefaultEditComposerRuntimeCore(this, ()=>this._editComposers.delete(messageId), this.repository.getMessage(messageId)));\n        this._notifySubscribers();\n    }\n    getMessageById(messageId) {\n        return this.repository.getMessage(messageId);\n    }\n    getBranches(messageId) {\n        return this.repository.getBranches(messageId);\n    }\n    switchToBranch(branchId) {\n        this.repository.switchToBranch(branchId);\n        this._notifySubscribers();\n    }\n    _notifySubscribers() {\n        for (const callback of this._subscriptions)callback();\n    }\n    _notifyEventSubscribers(event) {\n        const subscribers = this._eventSubscribers.get(event);\n        if (!subscribers) return;\n        for (const callback of subscribers)callback();\n    }\n    subscribe(callback) {\n        this._subscriptions.add(callback);\n        return ()=>this._subscriptions.delete(callback);\n    }\n    getSubmittedFeedback(messageId) {\n        return this._submittedFeedback[messageId];\n    }\n    submitFeedback(param) {\n        let { messageId, type } = param;\n        var _this_adapters;\n        const adapter = (_this_adapters = this.adapters) === null || _this_adapters === void 0 ? void 0 : _this_adapters.feedback;\n        if (!adapter) throw new Error(\"Feedback adapter not configured\");\n        const { message } = this.repository.getMessage(messageId);\n        adapter.submit({\n            message,\n            type\n        });\n        this._submittedFeedback[messageId] = {\n            type\n        };\n        this._notifySubscribers();\n    }\n    speak(messageId) {\n        var _this_adapters, _this__stopSpeaking, _this;\n        const adapter = (_this_adapters = this.adapters) === null || _this_adapters === void 0 ? void 0 : _this_adapters.speech;\n        if (!adapter) throw new Error(\"Speech adapter not configured\");\n        const { message } = this.repository.getMessage(messageId);\n        (_this__stopSpeaking = (_this = this)._stopSpeaking) === null || _this__stopSpeaking === void 0 ? void 0 : _this__stopSpeaking.call(_this);\n        const utterance = adapter.speak(getThreadMessageText(message));\n        const unsub = utterance.subscribe(()=>{\n            if (utterance.status.type === \"ended\") {\n                this._stopSpeaking = void 0;\n                this.speech = void 0;\n            } else {\n                this.speech = {\n                    messageId,\n                    status: utterance.status\n                };\n            }\n            this._notifySubscribers();\n        });\n        this.speech = {\n            messageId,\n            status: utterance.status\n        };\n        this._notifySubscribers();\n        this._stopSpeaking = ()=>{\n            utterance.cancel();\n            unsub();\n            this.speech = void 0;\n            this._stopSpeaking = void 0;\n        };\n    }\n    stopSpeaking() {\n        if (!this._stopSpeaking) throw new Error(\"No message is being spoken\");\n        this._stopSpeaking();\n        this._notifySubscribers();\n    }\n    export() {\n        return this.repository.export();\n    }\n    import(data) {\n        this.repository.import(data);\n        this._notifySubscribers();\n    }\n    unstable_on(event, callback) {\n        const subscribers = this._eventSubscribers.get(event);\n        if (!subscribers) {\n            this._eventSubscribers.set(event, /* @__PURE__ */ new Set([\n                callback\n            ]));\n        } else {\n            subscribers.add(callback);\n        }\n        return ()=>{\n            const subscribers2 = this._eventSubscribers.get(event);\n            subscribers2.delete(callback);\n        };\n    }\n    constructor(configProvider){\n        var _this_configProvider_subscribe, _this_configProvider;\n        this._subscriptions = /* @__PURE__ */ new Set();\n        this.repository = new MessageRepository();\n        this.composer = new DefaultThreadComposerRuntimeCore(this);\n        this._editComposers = /* @__PURE__ */ new Map();\n        this._submittedFeedback = {};\n        this._eventSubscribers = /* @__PURE__ */ new Map();\n        this.configProvider = configProvider;\n        (_this_configProvider_subscribe = (_this_configProvider = this.configProvider).subscribe) === null || _this_configProvider_subscribe === void 0 ? void 0 : _this_configProvider_subscribe.call(_this_configProvider, ()=>{\n            this._notifyEventSubscribers(\"model-config-update\");\n        });\n    }\n};\n// src/runtimes/local/LocalThreadRuntimeCore.tsx\nvar LocalThreadRuntimeCore = class extends BaseThreadRuntimeCore {\n    get adapters() {\n        return this.options.adapters;\n    }\n    get options() {\n        return this._options;\n    }\n    get extras() {\n        return void 0;\n    }\n    set options(param) {\n        let { initialMessages, ...options } = param;\n        var _options_adapters, _options_adapters1, _options_adapters2;\n        this._options = options;\n        let hasUpdates = false;\n        const canSpeak = ((_options_adapters = options.adapters) === null || _options_adapters === void 0 ? void 0 : _options_adapters.speech) !== void 0;\n        if (this.capabilities.speech !== canSpeak) {\n            this.capabilities.speech = canSpeak;\n            hasUpdates = true;\n        }\n        const canAttach = ((_options_adapters1 = options.adapters) === null || _options_adapters1 === void 0 ? void 0 : _options_adapters1.attachments) !== void 0;\n        if (this.capabilities.attachments !== canAttach) {\n            this.capabilities.attachments = canAttach;\n            hasUpdates = true;\n        }\n        const canFeedback = ((_options_adapters2 = options.adapters) === null || _options_adapters2 === void 0 ? void 0 : _options_adapters2.feedback) !== void 0;\n        if (this.capabilities.feedback !== canFeedback) {\n            this.capabilities.feedback = canFeedback;\n            hasUpdates = true;\n        }\n        if (hasUpdates) this._notifySubscribers();\n    }\n    async append(message) {\n        const newMessage = fromCoreMessage(message, {\n            attachments: message.attachments\n        });\n        this.repository.addOrUpdateMessage(message.parentId, newMessage);\n        if (message.role === \"user\") {\n            await this.startRun(newMessage.id);\n        } else {\n            this.repository.resetHead(newMessage.id);\n            this._notifySubscribers();\n        }\n    }\n    async startRun(parentId) {\n        this.repository.resetHead(parentId);\n        const id = generateId();\n        let message = {\n            id,\n            role: \"assistant\",\n            status: {\n                type: \"running\"\n            },\n            content: [],\n            createdAt: /* @__PURE__ */ new Date()\n        };\n        this._notifyEventSubscribers(\"run-start\");\n        do {\n            message = await this.performRoundtrip(parentId, message);\n        }while (shouldContinue(message));\n    }\n    async performRoundtrip(parentId, message) {\n        var _this_abortController, _message_metadata, _message_metadata1, _message_metadata_steps, _message_metadata2;\n        const messages2 = this.repository.getMessages();\n        (_this_abortController = this.abortController) === null || _this_abortController === void 0 ? void 0 : _this_abortController.abort();\n        this.abortController = new AbortController();\n        const initialContent = message.content;\n        const initialSteps = (_message_metadata = message.metadata) === null || _message_metadata === void 0 ? void 0 : _message_metadata.steps;\n        const initalCustom = (_message_metadata1 = message.metadata) === null || _message_metadata1 === void 0 ? void 0 : _message_metadata1.custom;\n        const updateMessage = (m)=>{\n            var _m_metadata, _m_metadata1, _m_metadata2;\n            const newSteps = ((_m_metadata = m.metadata) === null || _m_metadata === void 0 ? void 0 : _m_metadata.steps) || ((_m_metadata1 = m.metadata) === null || _m_metadata1 === void 0 ? void 0 : _m_metadata1.roundtrips);\n            const steps2 = newSteps ? [\n                ...initialSteps !== null && initialSteps !== void 0 ? initialSteps : [],\n                ...newSteps\n            ] : void 0;\n            var _m_content, _m_status;\n            message = {\n                ...message,\n                ...m.content ? {\n                    content: [\n                        ...initialContent,\n                        ...(_m_content = m.content) !== null && _m_content !== void 0 ? _m_content : []\n                    ]\n                } : void 0,\n                status: (_m_status = m.status) !== null && _m_status !== void 0 ? _m_status : message.status,\n                // TODO deprecated, remove in v0.6\n                ...steps2 ? {\n                    roundtrips: steps2\n                } : void 0,\n                ...m.metadata ? {\n                    metadata: {\n                        ...message.metadata,\n                        ...steps2 ? {\n                            roundtrips: steps2,\n                            steps: steps2\n                        } : void 0,\n                        ...((_m_metadata2 = m.metadata) === null || _m_metadata2 === void 0 ? void 0 : _m_metadata2.custom) ? {\n                            custom: {\n                                ...initalCustom !== null && initalCustom !== void 0 ? initalCustom : {},\n                                ...m.metadata.custom\n                            }\n                        } : void 0\n                    }\n                } : void 0\n            };\n            this.repository.addOrUpdateMessage(parentId, message);\n            this._notifySubscribers();\n        };\n        var _this_options_maxToolRoundtrips;\n        const maxSteps = this.options.maxSteps ? this.options.maxSteps : ((_this_options_maxToolRoundtrips = this.options.maxToolRoundtrips) !== null && _this_options_maxToolRoundtrips !== void 0 ? _this_options_maxToolRoundtrips : 1) + 1;\n        var _message_metadata_steps_length;\n        const steps = (_message_metadata_steps_length = (_message_metadata2 = message.metadata) === null || _message_metadata2 === void 0 ? void 0 : (_message_metadata_steps = _message_metadata2.steps) === null || _message_metadata_steps === void 0 ? void 0 : _message_metadata_steps.length) !== null && _message_metadata_steps_length !== void 0 ? _message_metadata_steps_length : 0;\n        if (steps >= maxSteps) {\n            updateMessage({\n                status: {\n                    type: \"incomplete\",\n                    reason: \"tool-calls\"\n                }\n            });\n            return message;\n        } else {\n            updateMessage({\n                status: {\n                    type: \"running\"\n                }\n            });\n        }\n        try {\n            const promiseOrGenerator = this.adapter.run({\n                messages: messages2,\n                abortSignal: this.abortController.signal,\n                config: this.getModelConfig(),\n                onUpdate: updateMessage\n            });\n            if (Symbol.asyncIterator in promiseOrGenerator) {\n                for await (const r of promiseOrGenerator){\n                    updateMessage(r);\n                }\n            } else {\n                updateMessage(await promiseOrGenerator);\n            }\n            this.abortController = null;\n            if (message.status.type === \"running\") {\n                updateMessage({\n                    status: {\n                        type: \"complete\",\n                        reason: \"unknown\"\n                    }\n                });\n            }\n        } catch (e) {\n            this.abortController = null;\n            if (e instanceof Error && e.name === \"AbortError\") {\n                updateMessage({\n                    status: {\n                        type: \"incomplete\",\n                        reason: \"cancelled\"\n                    }\n                });\n            } else {\n                updateMessage({\n                    status: {\n                        type: \"incomplete\",\n                        reason: \"error\",\n                        error: e\n                    }\n                });\n                throw e;\n            }\n        }\n        return message;\n    }\n    cancelRun() {\n        var _this_abortController;\n        (_this_abortController = this.abortController) === null || _this_abortController === void 0 ? void 0 : _this_abortController.abort();\n        this.abortController = null;\n    }\n    addToolResult(param) {\n        let { messageId, toolCallId, result } = param;\n        const messageData = this.repository.getMessage(messageId);\n        const { parentId } = messageData;\n        let { message } = messageData;\n        if (message.role !== \"assistant\") throw new Error(\"Tried to add tool result to non-assistant message\");\n        let added = false;\n        let found = false;\n        const newContent = message.content.map((c)=>{\n            if (c.type !== \"tool-call\") return c;\n            if (c.toolCallId !== toolCallId) return c;\n            found = true;\n            if (!c.result) added = true;\n            return {\n                ...c,\n                result\n            };\n        });\n        if (!found) throw new Error(\"Tried to add tool result to non-existing tool call\");\n        message = {\n            ...message,\n            content: newContent\n        };\n        this.repository.addOrUpdateMessage(parentId, message);\n        if (added && shouldContinue(message)) {\n            this.performRoundtrip(parentId, message);\n        }\n    }\n    constructor(configProvider, adapter, { initialMessages, ...options }){\n        super(configProvider);\n        this.capabilities = {\n            switchToBranch: true,\n            edit: true,\n            reload: true,\n            cancel: true,\n            unstable_copy: true,\n            speech: false,\n            attachments: false,\n            feedback: false\n        };\n        this.abortController = null;\n        this.isDisabled = false;\n        this.suggestions = [];\n        this.adapter = adapter;\n        this.threadId = generateId();\n        this.options = options;\n        if (initialMessages) {\n            let parentId = null;\n            const messages2 = fromCoreMessages(initialMessages);\n            for (const message of messages2){\n                this.repository.addOrUpdateMessage(parentId, message);\n                parentId = message.id;\n            }\n        }\n    }\n};\n// src/runtimes/local/LocalRuntimeCore.tsx\nvar LocalRuntimeCore = class extends BaseAssistantRuntimeCore {\n    registerModelConfigProvider(provider) {\n        return this._proxyConfigProvider.registerModelConfigProvider(provider);\n    }\n    switchToNewThread() {\n        const { initialMessages, ...options } = this.thread.options;\n        this.thread = new LocalThreadRuntimeCore(this._proxyConfigProvider, this.thread.adapter, options);\n        this.thread._notifyEventSubscribers(\"switched-to\");\n    }\n    switchToThread(threadId) {\n        if (threadId !== null) {\n            throw new Error(\"LocalRuntime does not yet support switching threads\");\n        }\n        this.switchToNewThread();\n    }\n    reset() {\n        let { initialMessages } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        this.switchToThread(null);\n        if (!initialMessages) return;\n        const messages2 = fromCoreMessages(initialMessages);\n        this.thread.import({\n            messages: messages2.map((m, idx)=>{\n                var _messages2_;\n                var _messages2__id;\n                return {\n                    parentId: (_messages2__id = (_messages2_ = messages2[idx - 1]) === null || _messages2_ === void 0 ? void 0 : _messages2_.id) !== null && _messages2__id !== void 0 ? _messages2__id : null,\n                    message: m\n                };\n            })\n        });\n    }\n    constructor(adapter, options){\n        const proxyConfigProvider = new ProxyConfigProvider();\n        super(new LocalThreadRuntimeCore(proxyConfigProvider, adapter, options));\n        this._proxyConfigProvider = proxyConfigProvider;\n    }\n};\n// src/runtimes/local/useLocalRuntime.tsx\nvar LocalRuntimeImpl = class _LocalRuntimeImpl extends AssistantRuntimeImpl {\n    reset(options) {\n        this.core.reset(options);\n    }\n    static create(_core) {\n        return new _LocalRuntimeImpl(_core, AssistantRuntimeImpl.createMainThreadRuntime(_core, ThreadRuntimeImpl));\n    }\n    constructor(core, thread){\n        super(core, thread);\n        this.core = core;\n    }\n};\nvar useLocalRuntime = function(adapter) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    _s111();\n    const [runtime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>new LocalRuntimeCore(adapter, options));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useInsertionEffect)(()=>{\n        runtime.thread.adapter = adapter;\n        runtime.thread.options = options;\n    });\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>LocalRuntimeImpl.create(runtime), [\n        runtime\n    ]);\n};\n_s111(useLocalRuntime, \"ZHTnwq2loH7lTiLjHuvLJyvgmOw=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useInsertionEffect,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\n// src/runtimes/external-store/useExternalStoreRuntime.tsx\n\n// src/runtimes/external-store/getExternalStoreMessage.tsx\nvar symbolInnerMessage = Symbol(\"innerMessage\");\nvar getExternalStoreMessage = (message)=>{\n    return message[symbolInnerMessage];\n};\n// src/runtimes/external-store/ThreadMessageConverter.ts\nvar ThreadMessageConverter = class {\n    convertMessages(messages2, converter) {\n        return messages2.map((m, idx)=>{\n            const cached = this.cache.get(m);\n            const newMessage = converter(cached, m, idx);\n            this.cache.set(m, newMessage);\n            return newMessage;\n        });\n    }\n    constructor(){\n        this.cache = /* @__PURE__ */ new WeakMap();\n    }\n};\n// src/runtimes/external-store/auto-status.tsx\nvar AUTO_STATUS_RUNNING = Object.freeze({\n    type: \"running\"\n});\nvar AUTO_STATUS_COMPLETE = Object.freeze({\n    type: \"complete\",\n    reason: \"unknown\"\n});\nvar isAutoStatus = (status)=>status === AUTO_STATUS_RUNNING || status === AUTO_STATUS_COMPLETE;\nvar getAutoStatus = (isLast, isRunning)=>isLast && isRunning ? AUTO_STATUS_RUNNING : AUTO_STATUS_COMPLETE;\n// src/runtimes/external-store/ThreadMessageLike.tsx\nvar fromThreadMessageLike = (like, fallbackId, fallbackStatus)=>{\n    const { role, id, createdAt, attachments, status } = like;\n    const common = {\n        id: id !== null && id !== void 0 ? id : fallbackId,\n        createdAt: createdAt !== null && createdAt !== void 0 ? createdAt : /* @__PURE__ */ new Date()\n    };\n    const content = typeof like.content === \"string\" ? [\n        {\n            type: \"text\",\n            text: like.content\n        }\n    ] : like.content;\n    if (role !== \"user\" && attachments) throw new Error(\"Attachments are only supported for user messages\");\n    switch(role){\n        case \"assistant\":\n            return {\n                ...common,\n                role,\n                content: content.map((part)=>{\n                    const type = part.type;\n                    switch(type){\n                        case \"text\":\n                            if (part.text.trim().length === 0) return null;\n                            return part;\n                        case \"ui\":\n                            return part;\n                        case \"tool-call\":\n                            {\n                                if (\"argsText\" in part) return part;\n                                return {\n                                    ...part,\n                                    argsText: JSON.stringify(part.args)\n                                };\n                            }\n                        default:\n                            {\n                                const unhandledType = type;\n                                throw new Error(\"Unknown content part type: \".concat(unhandledType));\n                            }\n                    }\n                }).filter((c)=>!!c),\n                status: status !== null && status !== void 0 ? status : fallbackStatus\n            };\n        case \"user\":\n            return {\n                ...common,\n                role,\n                content: content.map((part)=>{\n                    const type = part.type;\n                    switch(type){\n                        case \"text\":\n                        case \"ui\":\n                        case \"image\":\n                            return part;\n                        default:\n                            {\n                                const unhandledType = type;\n                                throw new Error(\"Unknown content part type: \".concat(unhandledType));\n                            }\n                    }\n                }),\n                attachments: attachments !== null && attachments !== void 0 ? attachments : []\n            };\n        case \"system\":\n            if (content.length !== 1 || content[0].type !== \"text\") throw new Error(\"System messages must have exactly one text content part.\");\n            return {\n                ...common,\n                role,\n                content\n            };\n        default:\n            {\n                const unsupportedRole = role;\n                throw new Error(\"Unknown message role: \".concat(unsupportedRole));\n            }\n    }\n};\n// src/runtimes/external-store/ExternalStoreThreadRuntimeCore.tsx\nvar EMPTY_ARRAY2 = Object.freeze([]);\nvar hasUpcomingMessage = (isRunning, messages2)=>{\n    var _messages2_;\n    return isRunning && ((_messages2_ = messages2[messages2.length - 1]) === null || _messages2_ === void 0 ? void 0 : _messages2_.role) !== \"assistant\";\n};\nvar ExternalStoreThreadRuntimeCore = class extends BaseThreadRuntimeCore {\n    get capabilities() {\n        return this._capabilities;\n    }\n    get messages() {\n        return this._messages;\n    }\n    get adapters() {\n        return this._store.adapters;\n    }\n    beginEdit(messageId) {\n        if (!this.store.onEdit) throw new Error(\"Runtime does not support editing.\");\n        super.beginEdit(messageId);\n    }\n    get store() {\n        return this._store;\n    }\n    set store(store) {\n        var _this__store_adapters, _this__store_unstable_capabilities, _this_store_adapters, _this_store_adapters1, _messages2_at;\n        if (this._store === store) return;\n        var _store_threadId, _ref;\n        this.threadId = (_ref = (_store_threadId = store.threadId) !== null && _store_threadId !== void 0 ? _store_threadId : this.threadId) !== null && _ref !== void 0 ? _ref : generateId();\n        var _store_isRunning;\n        const isRunning = (_store_isRunning = store.isRunning) !== null && _store_isRunning !== void 0 ? _store_isRunning : false;\n        var _store_isDisabled;\n        this.isDisabled = (_store_isDisabled = store.isDisabled) !== null && _store_isDisabled !== void 0 ? _store_isDisabled : false;\n        const oldStore = this._store;\n        this._store = store;\n        this.extras = store.extras;\n        var _store_suggestions;\n        this.suggestions = (_store_suggestions = store.suggestions) !== null && _store_suggestions !== void 0 ? _store_suggestions : EMPTY_ARRAY2;\n        this._capabilities = {\n            switchToBranch: this._store.setMessages !== void 0,\n            edit: this._store.onEdit !== void 0,\n            reload: this._store.onReload !== void 0,\n            cancel: this._store.onCancel !== void 0,\n            speech: ((_this__store_adapters = this._store.adapters) === null || _this__store_adapters === void 0 ? void 0 : _this__store_adapters.speech) !== void 0,\n            unstable_copy: ((_this__store_unstable_capabilities = this._store.unstable_capabilities) === null || _this__store_unstable_capabilities === void 0 ? void 0 : _this__store_unstable_capabilities.copy) !== false,\n            // default true\n            attachments: !!((_this_store_adapters = this.store.adapters) === null || _this_store_adapters === void 0 ? void 0 : _this_store_adapters.attachments),\n            feedback: !!((_this_store_adapters1 = this.store.adapters) === null || _this_store_adapters1 === void 0 ? void 0 : _this_store_adapters1.feedback)\n        };\n        if (oldStore) {\n            if (oldStore.convertMessage !== store.convertMessage) {\n                this._converter = new ThreadMessageConverter();\n            } else if (oldStore.isRunning === store.isRunning && oldStore.messages === store.messages) {\n                this._notifySubscribers();\n                return;\n            }\n        }\n        const messages2 = !store.convertMessage ? store.messages : this._converter.convertMessages(store.messages, (cache, m, idx)=>{\n            if (!store.convertMessage) return m;\n            const isLast = idx === store.messages.length - 1;\n            const autoStatus = getAutoStatus(isLast, isRunning);\n            if (cache && (cache.role !== \"assistant\" || !isAutoStatus(cache.status) || cache.status === autoStatus)) return cache;\n            const newMessage = fromThreadMessageLike(store.convertMessage(m, idx), idx.toString(), autoStatus);\n            newMessage[symbolInnerMessage] = m;\n            return newMessage;\n        });\n        for(let i = 0; i < messages2.length; i++){\n            const message = messages2[i];\n            const parent = messages2[i - 1];\n            var _parent_id;\n            this.repository.addOrUpdateMessage((_parent_id = parent === null || parent === void 0 ? void 0 : parent.id) !== null && _parent_id !== void 0 ? _parent_id : null, message);\n        }\n        if (this.assistantOptimisticId) {\n            this.repository.deleteMessage(this.assistantOptimisticId);\n            this.assistantOptimisticId = null;\n        }\n        if (hasUpcomingMessage(isRunning, messages2)) {\n            var _messages2_at1;\n            var _messages2_at_id;\n            this.assistantOptimisticId = this.repository.appendOptimisticMessage((_messages2_at_id = (_messages2_at1 = messages2.at(-1)) === null || _messages2_at1 === void 0 ? void 0 : _messages2_at1.id) !== null && _messages2_at_id !== void 0 ? _messages2_at_id : null, {\n                role: \"assistant\",\n                content: []\n            });\n        }\n        var _this_assistantOptimisticId, _ref1;\n        this.repository.resetHead((_ref1 = (_this_assistantOptimisticId = this.assistantOptimisticId) !== null && _this_assistantOptimisticId !== void 0 ? _this_assistantOptimisticId : (_messages2_at = messages2.at(-1)) === null || _messages2_at === void 0 ? void 0 : _messages2_at.id) !== null && _ref1 !== void 0 ? _ref1 : null);\n        this._messages = this.repository.getMessages();\n        this._notifySubscribers();\n    }\n    switchToBranch(branchId) {\n        if (!this._store.setMessages) throw new Error(\"Runtime does not support switching branches.\");\n        this.repository.switchToBranch(branchId);\n        this.updateMessages(this.repository.getMessages());\n    }\n    async append(message) {\n        var _this_messages_at;\n        var _this_messages_at_id;\n        if (message.parentId !== ((_this_messages_at_id = (_this_messages_at = this.messages.at(-1)) === null || _this_messages_at === void 0 ? void 0 : _this_messages_at.id) !== null && _this_messages_at_id !== void 0 ? _this_messages_at_id : null)) {\n            if (!this._store.onEdit) throw new Error(\"Runtime does not support editing messages.\");\n            await this._store.onEdit(message);\n        } else {\n            await this._store.onNew(message);\n        }\n    }\n    async startRun(parentId) {\n        if (!this._store.onReload) throw new Error(\"Runtime does not support reloading messages.\");\n        await this._store.onReload(parentId);\n    }\n    cancelRun() {\n        var _messages2_at;\n        if (!this._store.onCancel) throw new Error(\"Runtime does not support cancelling runs.\");\n        this._store.onCancel();\n        if (this.assistantOptimisticId) {\n            this.repository.deleteMessage(this.assistantOptimisticId);\n            this.assistantOptimisticId = null;\n        }\n        let messages2 = this.repository.getMessages();\n        const previousMessage = messages2[messages2.length - 1];\n        if ((previousMessage === null || previousMessage === void 0 ? void 0 : previousMessage.role) === \"user\" && previousMessage.id === ((_messages2_at = messages2.at(-1)) === null || _messages2_at === void 0 ? void 0 : _messages2_at.id)) {\n            this.repository.deleteMessage(previousMessage.id);\n            if (!this.composer.text.trim()) {\n                this.composer.setText(getThreadMessageText(previousMessage));\n            }\n            messages2 = this.repository.getMessages();\n        } else {\n            this._notifySubscribers();\n        }\n        setTimeout(()=>{\n            this.updateMessages(messages2);\n        }, 0);\n    }\n    addToolResult(options) {\n        if (!this._store.onAddToolResult) throw new Error(\"Runtime does not support tool results.\");\n        this._store.onAddToolResult(options);\n    }\n    constructor(configProvider, store){\n        super(configProvider);\n        this.assistantOptimisticId = null;\n        this._capabilities = {\n            switchToBranch: false,\n            edit: false,\n            reload: false,\n            cancel: false,\n            unstable_copy: false,\n            speech: false,\n            attachments: false,\n            feedback: false\n        };\n        this.suggestions = [];\n        this.extras = void 0;\n        this._converter = new ThreadMessageConverter();\n        this.updateMessages = (messages2)=>{\n            var _this__store_setMessages, _this__store;\n            (_this__store_setMessages = (_this__store = this._store).setMessages) === null || _this__store_setMessages === void 0 ? void 0 : _this__store_setMessages.call(_this__store, messages2.flatMap(getExternalStoreMessage).filter((m)=>m != null));\n        };\n        this.store = store;\n    }\n};\n// src/runtimes/external-store/ExternalStoreRuntimeCore.tsx\nvar ExternalStoreRuntimeCore = class extends BaseAssistantRuntimeCore {\n    getModelConfig() {\n        return this._proxyConfigProvider.getModelConfig();\n    }\n    registerModelConfigProvider(provider) {\n        return this._proxyConfigProvider.registerModelConfigProvider(provider);\n    }\n    async switchToNewThread() {\n        if (!this.thread.store.onSwitchToNewThread) throw new Error(\"Runtime does not support switching to new threads.\");\n        this.thread = new ExternalStoreThreadRuntimeCore(this._proxyConfigProvider, {\n            ...this.thread.store,\n            messages: []\n        });\n        await this.thread.store.onSwitchToNewThread();\n        this.thread._notifyEventSubscribers(\"switched-to\");\n    }\n    async switchToThread(threadId) {\n        if (threadId !== null) {\n            if (!this.thread.store.onSwitchToThread) throw new Error(\"Runtime does not support switching threads.\");\n            this.thread = new ExternalStoreThreadRuntimeCore(this._proxyConfigProvider, {\n                ...this.thread.store,\n                messages: []\n            });\n            await this.thread.store.onSwitchToThread(threadId);\n            this.thread._notifyEventSubscribers(\"switched-to\");\n        } else {\n            this.switchToNewThread();\n        }\n    }\n    constructor(store){\n        const provider = new ProxyConfigProvider();\n        super(new ExternalStoreThreadRuntimeCore(provider, store));\n        this._proxyConfigProvider = provider;\n    }\n};\n// src/runtimes/external-store/useExternalStoreRuntime.tsx\nvar useExternalStoreRuntime = (store)=>{\n    _s112();\n    const [runtime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>new ExternalStoreRuntimeCore(store));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        runtime.thread.store = store;\n    });\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>AssistantRuntimeImpl.create(runtime, ThreadRuntimeImpl), [\n        runtime\n    ]);\n};\n_s112(useExternalStoreRuntime, \"E0d8rrXZYxgtHWu5qKYtNf5h2dA=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\n// src/runtimes/external-store/external-message-converter.tsx\n\nvar joinExternalMessages = (messages2)=>{\n    const assistantMessage = {\n        role: \"assistant\",\n        content: []\n    };\n    for (const output of messages2){\n        if (output.role === \"tool\") {\n            const toolCallIdx = assistantMessage.content.findIndex((c)=>c.type === \"tool-call\" && c.toolCallId === output.toolCallId);\n            if (toolCallIdx !== -1) {\n                const toolCall = assistantMessage.content[toolCallIdx];\n                if (output.toolName) {\n                    if (toolCall.toolName !== output.toolName) throw new Error(\"Tool call name \".concat(output.toolCallId, \" \").concat(output.toolName, \" does not match existing tool call \").concat(toolCall.toolName));\n                }\n                assistantMessage.content[toolCallIdx] = {\n                    ...toolCall,\n                    result: output.result\n                };\n            } else {\n                throw new Error(\"Tool call \".concat(output.toolCallId, \" \").concat(output.toolName, \" not found in assistant message\"));\n            }\n        } else {\n            const role = output.role;\n            switch(role){\n                case \"system\":\n                case \"user\":\n                    return output;\n                case \"assistant\":\n                    if (assistantMessage.content.length === 0) {\n                        var _assistantMessage, _assistantMessage1;\n                        assistantMessage.id = output.id;\n                        var _createdAt;\n                        (_createdAt = (_assistantMessage = assistantMessage).createdAt) !== null && _createdAt !== void 0 ? _createdAt : _assistantMessage.createdAt = output.createdAt;\n                        var _status;\n                        (_status = (_assistantMessage1 = assistantMessage).status) !== null && _status !== void 0 ? _status : _assistantMessage1.status = output.status;\n                    }\n                    assistantMessage.content.push(...output.content);\n                    break;\n                default:\n                    {\n                        const unsupportedRole = role;\n                        throw new Error(\"Unknown message role: \".concat(unsupportedRole));\n                    }\n            }\n        }\n    }\n    return assistantMessage;\n};\nvar chunkExternalMessages = (callbackResults)=>{\n    const results = [];\n    let isAssistant = false;\n    let inputs = [];\n    let outputs = [];\n    const flush = ()=>{\n        if (outputs.length) {\n            results.push({\n                inputs,\n                outputs\n            });\n        }\n        inputs = [];\n        outputs = [];\n    };\n    for (const callbackResult of callbackResults){\n        for (const output of callbackResult.outputs){\n            if (!isAssistant || output.role === \"user\" || output.role === \"system\") {\n                flush();\n            }\n            isAssistant = output.role === \"assistant\" || output.role === \"tool\";\n            if (inputs.at(-1) !== callbackResult.input) {\n                inputs.push(callbackResult.input);\n            }\n            outputs.push(output);\n        }\n    }\n    flush();\n    return results;\n};\nvar useExternalMessageConverter = (param)=>{\n    let { callback, messages: messages2, isRunning } = param;\n    _s113();\n    const state = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({\n            callback,\n            callbackCache: /* @__PURE__ */ new WeakMap(),\n            chunkCache: /* @__PURE__ */ new WeakMap(),\n            converterCache: new ThreadMessageConverter()\n        }), [\n        callback\n    ]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const callbackResults = [];\n        for (const message of messages2){\n            let result = state.callbackCache.get(message);\n            if (!result) {\n                const output = state.callback(message);\n                const outputs = Array.isArray(output) ? output : [\n                    output\n                ];\n                result = {\n                    input: message,\n                    outputs\n                };\n                state.callbackCache.set(message, result);\n            }\n            callbackResults.push(result);\n        }\n        const chunks = chunkExternalMessages(callbackResults).map((m)=>{\n            const key = m.outputs[0];\n            if (!key) return m;\n            const cached = state.chunkCache.get(key);\n            if (cached && shallowArrayEqual(cached.outputs, m.outputs)) return cached;\n            state.chunkCache.set(key, m);\n            return m;\n        });\n        return state.converterCache.convertMessages(chunks, (cache, message, idx)=>{\n            const isLast = idx === chunks.length - 1;\n            const autoStatus = getAutoStatus(isLast, isRunning);\n            if (cache && (cache.role !== \"assistant\" || !isAutoStatus(cache.status) || cache.status === autoStatus)) {\n                const inputs = getExternalStoreMessage(cache);\n                if (shallowArrayEqual(inputs, message.inputs)) {\n                    return cache;\n                }\n            }\n            const newMessage = fromThreadMessageLike(joinExternalMessages(message.outputs), idx.toString(), autoStatus);\n            newMessage[symbolInnerMessage] = message.inputs;\n            return newMessage;\n        });\n    }, [\n        state,\n        messages2,\n        isRunning\n    ]);\n};\n_s113(useExternalMessageConverter, \"5I3GfJgmWpeFQwefIfSsZ20rtE8=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\nvar shallowArrayEqual = (a, b)=>{\n    if (a.length !== b.length) return false;\n    for(let i = 0; i < a.length; i++){\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n};\n// src/runtimes/dangerous-in-browser/useDangerousInBrowserRuntime.ts\n\n// src/runtimes/dangerous-in-browser/DangerousInBrowserAdapter.ts\nvar DangerousInBrowserAdapter = class {\n    async *run(param) {\n        let { messages: messages2, abortSignal, config } = param;\n        const res = await (0,_chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.getEdgeRuntimeStream)({\n            options: this.options,\n            abortSignal,\n            requestData: {\n                system: config.system,\n                messages: (0,_chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.toCoreMessages)(messages2),\n                tools: config.tools ? (0,_chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.toLanguageModelTools)(config.tools) : [],\n                ...config.callSettings,\n                ...config.config\n            }\n        });\n        const stream = res.pipeThrough((0,_chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.toolResultStream)(config.tools, abortSignal)).pipeThrough((0,_chunk_TWIMAOZR_mjs__WEBPACK_IMPORTED_MODULE_12__.runResultStream)());\n        for await (const update of asAsyncIterable(stream)){\n            yield update;\n        }\n    }\n    constructor(options){\n        this.options = options;\n    }\n};\n// src/runtimes/dangerous-in-browser/useDangerousInBrowserRuntime.ts\nvar useDangerousInBrowserRuntime = (options)=>{\n    _s114();\n    const { localRuntimeOptions, otherOptions } = splitLocalRuntimeOptions(options);\n    const [adapter] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>new DangerousInBrowserAdapter(otherOptions));\n    return useLocalRuntime(adapter, localRuntimeOptions);\n};\n_s114(useDangerousInBrowserRuntime, \"S0sjtrZM9/aCwvyE4orzSrDhZoo=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        useLocalRuntime\n    ];\n});\n// src/runtimes/speech/WebSpeechSynthesisAdapter.ts\nvar WebSpeechSynthesisAdapter = class {\n    speak(text) {\n        const utterance = new SpeechSynthesisUtterance(text);\n        const subscribers = /* @__PURE__ */ new Set();\n        const handleEnd = (reason, error)=>{\n            if (res.status.type === \"ended\") return;\n            res.status = {\n                type: \"ended\",\n                reason,\n                error\n            };\n            subscribers.forEach((handler)=>handler());\n        };\n        utterance.addEventListener(\"end\", ()=>handleEnd(\"finished\"));\n        utterance.addEventListener(\"error\", (e)=>handleEnd(\"error\", e.error));\n        window.speechSynthesis.speak(utterance);\n        const res = {\n            status: {\n                type: \"running\"\n            },\n            cancel: ()=>{\n                window.speechSynthesis.cancel();\n                handleEnd(\"cancelled\");\n            },\n            subscribe: (callback)=>{\n                if (res.status.type === \"ended\") {\n                    let cancelled = false;\n                    queueMicrotask(()=>{\n                        if (!cancelled) callback();\n                    });\n                    return ()=>{\n                        cancelled = true;\n                    };\n                } else {\n                    subscribers.add(callback);\n                    return ()=>{\n                        subscribers.delete(callback);\n                    };\n                }\n            }\n        };\n        return res;\n    }\n};\n// src/runtimes/attachment/SimpleImageAttachmentAdapter.ts\nvar SimpleImageAttachmentAdapter = class {\n    async add(state) {\n        return {\n            id: state.file.name,\n            type: \"image\",\n            name: state.file.name,\n            contentType: state.file.type,\n            file: state.file,\n            status: {\n                type: \"requires-action\",\n                reason: \"composer-send\"\n            }\n        };\n    }\n    async send(attachment) {\n        return {\n            ...attachment,\n            status: {\n                type: \"complete\"\n            },\n            content: [\n                {\n                    type: \"image\",\n                    image: await getFileDataURL(attachment.file)\n                }\n            ]\n        };\n    }\n    async remove() {}\n    constructor(){\n        this.accept = \"image/*\";\n    }\n};\nvar getFileDataURL = (file)=>new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = ()=>resolve(reader.result);\n        reader.onerror = (error)=>reject(error);\n        reader.readAsDataURL(file);\n    });\n// src/runtimes/attachment/SimpleTextAttachmentAdapter.ts\nvar SimpleTextAttachmentAdapter = class {\n    async add(state) {\n        return {\n            id: state.file.name,\n            type: \"document\",\n            name: state.file.name,\n            contentType: state.file.type,\n            file: state.file,\n            status: {\n                type: \"requires-action\",\n                reason: \"composer-send\"\n            }\n        };\n    }\n    async send(attachment) {\n        return {\n            ...attachment,\n            status: {\n                type: \"complete\"\n            },\n            content: [\n                {\n                    type: \"text\",\n                    text: \"<attachment name=\".concat(attachment.name, \">\\n\").concat(await getFileText(attachment.file), \"\\n</attachment>\")\n                }\n            ]\n        };\n    }\n    async remove() {}\n    constructor(){\n        this.accept = \"text/plain,text/html,text/markdown,text/csv,text/xml,text/json,text/css\";\n    }\n};\nvar getFileText = (file)=>new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = ()=>resolve(reader.result);\n        reader.onerror = (error)=>reject(error);\n        reader.readAsText(file);\n    });\n// src/runtimes/attachment/CompositeAttachmentAdapter.ts\nfunction fileMatchesAccept(file, acceptString) {\n    if (acceptString === \"*\") {\n        return true;\n    }\n    const allowedTypes = acceptString.split(\",\").map((type)=>type.trim().toLowerCase());\n    const fileExtension = \".\" + file.name.split(\".\").pop().toLowerCase();\n    const fileMimeType = file.type.toLowerCase();\n    for (const type of allowedTypes){\n        if (type.startsWith(\".\") && type === fileExtension) {\n            return true;\n        }\n        if (type.includes(\"/\") && type === fileMimeType) {\n            return true;\n        }\n        if (type === \"image/*\" || type === \"video/*\" || type === \"audio/*\") {\n            if (type.endsWith(\"/*\")) {\n                const generalType = type.split(\"/\")[0];\n                if (fileMimeType.startsWith(generalType + \"/\")) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nvar CompositeAttachmentAdapter = class {\n    async add(state) {\n        for (const adapter of this._adapters){\n            if (fileMatchesAccept(state.file, adapter.accept)) {\n                return adapter.add(state);\n            }\n        }\n        throw new Error(\"No matching adapter found for file\");\n    }\n    async send(attachment) {\n        const adapters = this._adapters.slice();\n        for (const adapter of adapters){\n            if (fileMatchesAccept(attachment.file, adapter.accept)) {\n                return adapter.send(attachment);\n            }\n        }\n        throw new Error(\"No matching adapter found for attachment\");\n    }\n    async remove(attachment) {\n        const adapters = this._adapters.slice();\n        for (const adapter of adapters){\n            var _attachment_contentType;\n            if (fileMatchesAccept({\n                name: attachment.name,\n                type: (_attachment_contentType = attachment.contentType) !== null && _attachment_contentType !== void 0 ? _attachment_contentType : \"unknown/unknown\"\n            }, adapter.accept)) {\n                return adapter.remove(attachment);\n            }\n        }\n        throw new Error(\"No matching adapter found for attachment\");\n    }\n    constructor(adapters){\n        this._adapters = adapters;\n        const wildcardIdx = adapters.findIndex((a)=>a.accept === \"*\");\n        if (wildcardIdx !== -1) {\n            if (wildcardIdx !== adapters.length - 1) throw new Error(\"A wildcard adapter (handling all files) can only be specified as the last adapter.\");\n            this.accept = \"*\";\n        } else {\n            this.accept = adapters.map((a)=>a.accept).join(\",\");\n        }\n    }\n};\n// src/ui/thread-config.tsx\n\n\nvar ThreadConfigContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nvar useThreadConfig = ()=>{\n    _s115();\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ThreadConfigContext);\n};\n_s115(useThreadConfig, \"DJNMY67kiaUDYcvht3RiPUxxWJI=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useContext\n    ];\n});\nvar ThreadConfigProvider = (param)=>{\n    let { children, config } = param;\n    _s116();\n    const hasAssistant = !!useAssistantRuntime({\n        optional: true\n    });\n    const configProvider = config && Object.keys(config !== null && config !== void 0 ? config : {}).length > 0 ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadConfigContext.Provider, {\n        value: config,\n        children\n    }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n        children\n    });\n    if (!(config === null || config === void 0 ? void 0 : config.runtime)) return configProvider;\n    if (hasAssistant) {\n        throw new Error(\"You provided a runtime to <Thread> while simulataneously using <AssistantRuntimeProvider>. This is not allowed.\");\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantRuntimeProvider, {\n        runtime: config.runtime,\n        children: configProvider\n    });\n};\n_s116(ThreadConfigProvider, \"v0QxSzZOklMuRX5ItrjAON6OUn0=\", false, function() {\n    return [\n        useAssistantRuntime\n    ];\n});\n_c80 = ThreadConfigProvider;\nThreadConfigProvider.displayName = \"ThreadConfigProvider\";\n// src/ui/assistant-action-bar.tsx\n\n\n\nvar useAllowCopy = function() {\n    let ensureCapability = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    _s117();\n    const { assistantMessage: { allowCopy = true } = {} } = useThreadConfig();\n    const copySupported = useThread((t)=>t.capabilities.unstable_copy);\n    return allowCopy && (!ensureCapability || copySupported);\n};\n_s117(useAllowCopy, \"qnjZGHc0xa4LY+6G330Qlv43TX0=\", false, function() {\n    return [\n        useThreadConfig,\n        useThread\n    ];\n});\nvar useAllowSpeak = function() {\n    let ensureCapability = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    _s118();\n    const { assistantMessage: { allowSpeak = true } = {} } = useThreadConfig();\n    const speechSupported = useThread((t)=>t.capabilities.speech);\n    return allowSpeak && (!ensureCapability || speechSupported);\n};\n_s118(useAllowSpeak, \"79yU7WnHydkBGpxw+zmmQND3l+c=\", false, function() {\n    return [\n        useThreadConfig,\n        useThread\n    ];\n});\nvar useAllowReload = function() {\n    let ensureCapability = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    _s119();\n    const { assistantMessage: { allowReload = true } = {} } = useThreadConfig();\n    const reloadSupported = useThread((t)=>t.capabilities.reload);\n    return allowReload && (!ensureCapability || reloadSupported);\n};\n_s119(useAllowReload, \"N69zv/khjae6exKd6hBUscJKZ6U=\", false, function() {\n    return [\n        useThreadConfig,\n        useThread\n    ];\n});\nvar useAllowFeedbackPositive = function() {\n    let ensureCapability = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    _s120();\n    const { assistantMessage: { allowFeedbackPositive = true } = {} } = useThreadConfig();\n    const feedbackSupported = useThread((t)=>t.capabilities.feedback);\n    return allowFeedbackPositive && (!ensureCapability || feedbackSupported);\n};\n_s120(useAllowFeedbackPositive, \"jR4g/NgyDMLyy8+xTuib/SGUAcg=\", false, function() {\n    return [\n        useThreadConfig,\n        useThread\n    ];\n});\nvar useAllowFeedbackNegative = function() {\n    let ensureCapability = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    _s121();\n    const { assistantMessage: { allowFeedbackNegative = true } = {} } = useThreadConfig();\n    const feedbackSupported = useThread((t)=>t.capabilities.feedback);\n    return allowFeedbackNegative && (!ensureCapability || feedbackSupported);\n};\n_s121(useAllowFeedbackNegative, \"QCS2zi5yafgIgo/KE/JimdzQhL8=\", false, function() {\n    return [\n        useThreadConfig,\n        useThread\n    ];\n});\nvar AssistantActionBar = ()=>{\n    _s122();\n    const allowCopy = useAllowCopy(true);\n    const allowReload = useAllowReload(true);\n    const allowSpeak = useAllowSpeak(true);\n    const allowFeedbackPositive = useAllowFeedbackPositive(true);\n    const allowFeedbackNegative = useAllowFeedbackNegative(true);\n    if (!allowCopy && !allowReload && !allowSpeak && !allowFeedbackPositive && !allowFeedbackNegative) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(AssistantActionBarRoot, {\n        hideWhenRunning: true,\n        autohide: \"not-last\",\n        autohideFloat: \"single-branch\",\n        children: [\n            allowSpeak && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantActionBarSpeechControl, {}),\n            allowCopy && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantActionBarCopy, {}),\n            allowReload && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantActionBarReload, {}),\n            allowFeedbackPositive && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantActionBarFeedbackPositive, {}),\n            allowFeedbackNegative && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantActionBarFeedbackNegative, {})\n        ]\n    });\n};\n_s122(AssistantActionBar, \"akj9XvUyTl0yOUO5YZyiiV1utqA=\", false, function() {\n    return [\n        useAllowCopy,\n        useAllowReload,\n        useAllowSpeak,\n        useAllowFeedbackPositive,\n        useAllowFeedbackNegative\n    ];\n});\n_c81 = AssistantActionBar;\nAssistantActionBar.displayName = \"AssistantActionBar\";\nvar AssistantActionBarRoot = withDefaults(actionBar_exports.Root, {\n    className: \"aui-assistant-action-bar-root\"\n});\nAssistantActionBarRoot.displayName = \"AssistantActionBarRoot\";\nvar AssistantActionBarCopy = /*#__PURE__*/ _s123((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c82 = _s123((param, ref)=>{\n    let { copiedDuration, ...props } = param;\n    _s123();\n    const { strings: { assistantMessage: { copy: { tooltip = \"Copy\" } = {} } = {} } = {} } = useThreadConfig();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(actionBar_exports.Copy, {\n        copiedDuration,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipIconButton, {\n            tooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n                children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(message_exports.If, {\n                        copied: true,\n                        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {})\n                    }),\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(message_exports.If, {\n                        copied: false,\n                        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {})\n                    })\n                ]\n            })\n        })\n    });\n}, \"IaFZ0JvFNBQD/+npaLfB0e0Q3g8=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n})), \"IaFZ0JvFNBQD/+npaLfB0e0Q3g8=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c83 = AssistantActionBarCopy;\nAssistantActionBarCopy.displayName = \"AssistantActionBarCopy\";\nvar AssistantActionBarSpeechControl = ()=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(message_exports.If, {\n                speaking: false,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantActionBarSpeak, {})\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(message_exports.If, {\n                speaking: true,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantActionBarStopSpeaking, {})\n            })\n        ]\n    });\n};\n_c84 = AssistantActionBarSpeechControl;\nvar AssistantActionBarSpeak = /*#__PURE__*/ _s124((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c85 = _s124((props, ref)=>{\n    _s124();\n    const { strings: { assistantMessage: { speak: { tooltip = \"Read aloud\" } = {} } = {} } = {} } = useThreadConfig();\n    const allowSpeak = useAllowSpeak();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(actionBar_exports.Speak, {\n        disabled: !allowSpeak,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipIconButton, {\n            tooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {})\n        })\n    });\n}, \"EfR1p76Hi1B/UZ6k7E1/2yWqZNg=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowSpeak\n    ];\n})), \"EfR1p76Hi1B/UZ6k7E1/2yWqZNg=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowSpeak\n    ];\n});\n_c86 = AssistantActionBarSpeak;\nAssistantActionBarSpeak.displayName = \"AssistantActionBarSpeak\";\nvar AssistantActionBarStopSpeaking = /*#__PURE__*/ _s125((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c87 = _s125((props, ref)=>{\n    _s125();\n    const { strings: { assistantMessage: { speak: { stop: { tooltip: stopTooltip = \"Stop\" } = {} } = {} } = {} } = {} } = useThreadConfig();\n    const allowSpeak = useAllowSpeak();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(actionBar_exports.StopSpeaking, {\n        disabled: !allowSpeak,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipIconButton, {\n            tooltip: stopTooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {})\n        })\n    });\n}, \"VF9TfMiPLMTo8J4Bx473aC8aGYU=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowSpeak\n    ];\n})), \"VF9TfMiPLMTo8J4Bx473aC8aGYU=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowSpeak\n    ];\n});\n_c88 = AssistantActionBarStopSpeaking;\nAssistantActionBarStopSpeaking.displayName = \"AssistantActionBarStopSpeaking\";\nvar AssistantActionBarReload = /*#__PURE__*/ _s126((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c89 = _s126((props, ref)=>{\n    _s126();\n    const { strings: { assistantMessage: { reload: { tooltip = \"Refresh\" } = {} } = {} } = {} } = useThreadConfig();\n    const allowReload = useAllowReload();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(actionBar_exports.Reload, {\n        disabled: !allowReload,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipIconButton, {\n            tooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {})\n        })\n    });\n}, \"bW6+enedTismukm0kmExYrEWz/E=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowReload\n    ];\n})), \"bW6+enedTismukm0kmExYrEWz/E=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowReload\n    ];\n});\n_c90 = AssistantActionBarReload;\nAssistantActionBarReload.displayName = \"AssistantActionBarReload\";\nvar AssistantActionBarFeedbackPositive = /*#__PURE__*/ _s127((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c91 = _s127((props, ref)=>{\n    _s127();\n    const { strings: { assistantMessage: { feedback: { positive: { tooltip = \"Good response\" } = {} } = {} } = {} } = {} } = useThreadConfig();\n    const allowFeedbackPositive = useAllowFeedbackPositive();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(actionBar_exports.FeedbackPositive, {\n        disabled: !allowFeedbackPositive,\n        className: \"aui-assistant-action-bar-feedback-positive\",\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipIconButton, {\n            tooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {})\n        })\n    });\n}, \"8ok7tbQXqCGanU5bMrh69y2D0OI=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowFeedbackPositive\n    ];\n})), \"8ok7tbQXqCGanU5bMrh69y2D0OI=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowFeedbackPositive\n    ];\n});\n_c92 = AssistantActionBarFeedbackPositive;\nAssistantActionBarFeedbackPositive.displayName = \"AssistantActionBarFeedbackPositive\";\nvar AssistantActionBarFeedbackNegative = /*#__PURE__*/ _s128((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c93 = _s128((props, ref)=>{\n    _s128();\n    const { strings: { assistantMessage: { feedback: { negative: { tooltip = \"Bad response\" } = {} } = {} } = {} } = {} } = useThreadConfig();\n    const allowFeedbackNegative = useAllowFeedbackNegative();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(actionBar_exports.FeedbackNegative, {\n        disabled: !allowFeedbackNegative,\n        className: \"aui-assistant-action-bar-feedback-negative\",\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipIconButton, {\n            tooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_AudioLinesIcon_CheckIcon_CopyIcon_RefreshCwIcon_StopCircleIcon_ThumbsDownIcon_ThumbsUpIcon_lucide_react__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {})\n        })\n    });\n}, \"8llQgymjUHodrxgRaLrMzATkPHA=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowFeedbackNegative\n    ];\n})), \"8llQgymjUHodrxgRaLrMzATkPHA=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowFeedbackNegative\n    ];\n});\n_c94 = AssistantActionBarFeedbackNegative;\nAssistantActionBarFeedbackNegative.displayName = \"AssistantActionBarFeedbackNegative\";\nvar exports = {\n    Root: AssistantActionBarRoot,\n    Reload: AssistantActionBarReload,\n    Copy: AssistantActionBarCopy,\n    Speak: AssistantActionBarSpeak,\n    StopSpeaking: AssistantActionBarStopSpeaking,\n    SpeechControl: AssistantActionBarSpeechControl,\n    FeedbackPositive: AssistantActionBarFeedbackPositive,\n    FeedbackNegative: AssistantActionBarFeedbackNegative\n};\nvar assistant_action_bar_default = Object.assign(AssistantActionBar, exports);\n// src/ui/assistant-message.tsx\n\n// src/ui/branch-picker.tsx\n\n\n\nvar useAllowBranchPicker = function() {\n    let ensureCapability = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    _s129();\n    const { branchPicker: { allowBranchPicker = true } = {} } = useThreadConfig();\n    const branchPickerSupported = useThread((t)=>t.capabilities.edit);\n    return allowBranchPicker && (!ensureCapability || branchPickerSupported);\n};\n_s129(useAllowBranchPicker, \"igqcI2G5NqnpE2wd9BRVct9AroI=\", false, function() {\n    return [\n        useThreadConfig,\n        useThread\n    ];\n});\nvar BranchPicker = ()=>{\n    _s130();\n    const allowBranchPicker = useAllowBranchPicker(true);\n    if (!allowBranchPicker) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(BranchPickerRoot, {\n        hideWhenSingleBranch: true,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(BranchPickerPrevious, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(BranchPickerState, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(BranchPickerNext, {})\n        ]\n    });\n};\n_s130(BranchPicker, \"iC86etsslkjzI8ceXDad/u5kRJU=\", false, function() {\n    return [\n        useAllowBranchPicker\n    ];\n});\n_c95 = BranchPicker;\nBranchPicker.displayName = \"BranchPicker\";\nvar BranchPickerRoot = withDefaults(branchPicker_exports.Root, {\n    className: \"aui-branch-picker-root\"\n});\nBranchPickerRoot.displayName = \"BranchPickerRoot\";\nvar BranchPickerPrevious = /*#__PURE__*/ _s131((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c96 = _s131((props, ref)=>{\n    _s131();\n    const { strings: { branchPicker: { previous: { tooltip = \"Previous\" } = {} } = {} } = {} } = useThreadConfig();\n    const allowBranchPicker = useAllowBranchPicker();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(branchPicker_exports.Previous, {\n        disabled: !allowBranchPicker,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipIconButton, {\n            tooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_ChevronLeftIcon_ChevronRightIcon_lucide_react__WEBPACK_IMPORTED_MODULE_24__[\"default\"], {})\n        })\n    });\n}, \"wvTw+qLiAkyFXaTC0Wq2Fkb41UI=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowBranchPicker\n    ];\n})), \"wvTw+qLiAkyFXaTC0Wq2Fkb41UI=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowBranchPicker\n    ];\n});\n_c97 = BranchPickerPrevious;\nBranchPickerPrevious.displayName = \"BranchPickerPrevious\";\nvar BranchPickerStateWrapper = withDefaults(\"span\", {\n    className: \"aui-branch-picker-state\"\n});\nvar BranchPickerState = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c98 = (props, ref)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(BranchPickerStateWrapper, {\n        ...props,\n        ref,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(branchPicker_exports.Number, {}),\n            \" / \",\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(branchPicker_exports.Count, {})\n        ]\n    });\n});\n_c99 = BranchPickerState;\nBranchPickerState.displayName = \"BranchPickerState\";\nvar BranchPickerNext = /*#__PURE__*/ _s132((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c100 = _s132((props, ref)=>{\n    _s132();\n    const { strings: { branchPicker: { next: { tooltip = \"Next\" } = {} } = {} } = {} } = useThreadConfig();\n    const allowBranchPicker = useAllowBranchPicker();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(branchPicker_exports.Next, {\n        disabled: !allowBranchPicker,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipIconButton, {\n            tooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_ChevronLeftIcon_ChevronRightIcon_lucide_react__WEBPACK_IMPORTED_MODULE_25__[\"default\"], {})\n        })\n    });\n}, \"Ppih0fm4osDWIBQ8eXsbNxxInUM=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowBranchPicker\n    ];\n})), \"Ppih0fm4osDWIBQ8eXsbNxxInUM=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowBranchPicker\n    ];\n});\n_c101 = BranchPickerNext;\nBranchPickerNext.displayName = \"BranchPickerNext\";\nvar exports2 = {\n    Root: BranchPickerRoot,\n    Previous: BranchPickerPrevious,\n    Next: BranchPickerNext\n};\nvar branch_picker_default = Object.assign(BranchPicker, exports2);\n// src/ui/base/avatar.tsx\n\n\nvar Avatar = (param)=>{\n    let { src, alt, fallback } = param;\n    if (src == null && fallback == null) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(AvatarRoot, {\n        children: [\n            src != null && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AvatarImage, {\n                src,\n                alt\n            }),\n            fallback != null && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AvatarFallback, {\n                children: fallback\n            })\n        ]\n    });\n};\n_c102 = Avatar;\nAvatar.displayName = \"Avatar\";\nvar AvatarRoot = withDefaults(_radix_ui_react_avatar__WEBPACK_IMPORTED_MODULE_26__.Root, {\n    className: \"aui-avatar-root\"\n});\nAvatarRoot.displayName = \"AvatarRoot\";\nvar AvatarImage = withDefaults(_radix_ui_react_avatar__WEBPACK_IMPORTED_MODULE_26__.Image, {\n    className: \"aui-avatar-image\"\n});\nAvatarImage.displayName = \"AvatarImage\";\nvar AvatarFallback = withDefaults(_radix_ui_react_avatar__WEBPACK_IMPORTED_MODULE_26__.Fallback, {\n    className: \"aui-avatar-fallback\"\n});\nAvatarFallback.displayName = \"AvatarFallback\";\n// src/ui/content-part.tsx\n\n\nvar Text = ()=>{\n    _s133();\n    const status = useSmoothStatus();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(contentPart_exports.Text, {\n        className: classnames__WEBPACK_IMPORTED_MODULE_14__(\"aui-text\", status.type === \"running\" && \"aui-text-running\"),\n        component: \"p\"\n    });\n};\n_s133(Text, \"A5il+EKeMQz1fJqecygUnI0Ry9c=\", false, function() {\n    return [\n        useSmoothStatus\n    ];\n});\n_c103 = Text;\nvar exports3 = {\n    Text: withSmoothContextProvider(Text)\n};\nvar content_part_default = exports3;\n// src/ui/assistant-message.tsx\n\nvar AssistantMessage = ()=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(AssistantMessageRoot, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantMessageAvatar, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantMessageContent, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(branch_picker_default, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(assistant_action_bar_default, {})\n        ]\n    });\n};\n_c104 = AssistantMessage;\nAssistantMessage.displayName = \"AssistantMessage\";\nvar AssistantMessageAvatar = ()=>{\n    _s134();\n    const { assistantAvatar: avatar = {\n        fallback: \"A\"\n    } } = useThreadConfig();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Avatar, {\n        ...avatar\n    });\n};\n_s134(AssistantMessageAvatar, \"8zy3DWbig3neNmD8aaDyiMtrXxo=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c105 = AssistantMessageAvatar;\nvar AssistantMessageRoot = withDefaults(message_exports.Root, {\n    className: \"aui-assistant-message-root\"\n});\nAssistantMessageRoot.displayName = \"AssistantMessageRoot\";\nvar AssistantMessageContentWrapper = withDefaults(\"div\", {\n    className: \"aui-assistant-message-content\"\n});\nvar AssistantMessageContent = /*#__PURE__*/ _s135((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c106 = _s135((param, ref)=>{\n    let { components: componentsProp, ...rest } = param;\n    _s135();\n    const { tools, assistantMessage: { components = {} } = {} } = useThreadConfig();\n    const toolsComponents = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({\n            by_name: !tools ? void 0 : Object.fromEntries(tools.map((t)=>[\n                    t.unstable_tool.toolName,\n                    t.unstable_tool.render\n                ])),\n            Fallback: components.ToolFallback\n        }), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        ...tools !== null && tools !== void 0 ? tools : [],\n        components.ToolFallback\n    ]);\n    var _componentsProp_Text, _ref;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantMessageContentWrapper, {\n        ...rest,\n        ref,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(message_exports.Content, {\n            components: {\n                ...componentsProp,\n                Text: (_ref = (_componentsProp_Text = componentsProp === null || componentsProp === void 0 ? void 0 : componentsProp.Text) !== null && _componentsProp_Text !== void 0 ? _componentsProp_Text : components.Text) !== null && _ref !== void 0 ? _ref : content_part_default.Text,\n                tools: toolsComponents\n            }\n        })\n    });\n}, \"mOMKFOEU/fHGAPntYFh7my+VLV8=\", false, function() {\n    return [\n        useThreadConfig,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n})), \"mOMKFOEU/fHGAPntYFh7my+VLV8=\", false, function() {\n    return [\n        useThreadConfig,\n        react__WEBPACK_IMPORTED_MODULE_0__.useMemo\n    ];\n});\n_c107 = AssistantMessageContent;\nAssistantMessageContent.displayName = \"AssistantMessageContent\";\nvar exports4 = {\n    Root: AssistantMessageRoot,\n    Avatar: AssistantMessageAvatar,\n    Content: AssistantMessageContent\n};\nvar assistant_message_default = Object.assign(AssistantMessage, exports4);\n// src/ui/assistant-modal.tsx\n\n\n// src/ui/thread.tsx\n\n\n// src/ui/composer.tsx\n\n\n// src/ui/base/CircleStopIcon.tsx\n\nvar CircleStopIcon = ()=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 16 16\",\n        fill: \"currentColor\",\n        width: \"16\",\n        height: \"16\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"rect\", {\n            width: \"10\",\n            height: \"10\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\"\n        })\n    });\n};\n_c108 = CircleStopIcon;\nCircleStopIcon.displayName = \"CircleStopIcon\";\n// src/ui/attachment.tsx\n\n\n// src/ui/base/dialog.tsx\n\n\n\n\nvar Dialog = _radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_27__.Root;\nvar DialogTrigger = _radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_27__.Trigger;\nvar DialogPortal = _radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_27__.Portal;\nvar DialogOverlay = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c109 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_27__.Overlay, {\n        ref,\n        className: classnames__WEBPACK_IMPORTED_MODULE_14__(\"aui-dialog-overlay\", className),\n        ...props\n    });\n});\n_c110 = DialogOverlay;\nDialogOverlay.displayName = _radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_27__.Overlay.displayName;\nvar DialogContent = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c111 = (param, ref)=>{\n    let { className, children, ...props } = param;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(DialogPortal, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(DialogOverlay, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_27__.Content, {\n                ref,\n                className: classnames__WEBPACK_IMPORTED_MODULE_14__(\"aui-dialog-content\", className),\n                ...props,\n                children\n            })\n        ]\n    });\n});\n_c112 = DialogContent;\nDialogContent.displayName = _radix_ui_react_dialog__WEBPACK_IMPORTED_MODULE_27__.Content.displayName;\n// src/ui/attachment.tsx\n\n\nvar AttachmentRoot = withDefaults(attachment_exports.Root, {\n    className: \"aui-attachment-root\"\n});\nAttachmentRoot.displayName = \"AttachmentRoot\";\nvar useFileSrc = (file)=>{\n    _s136();\n    const [src, setSrc] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!file) {\n            setSrc(void 0);\n            return;\n        }\n        const objectUrl = URL.createObjectURL(file);\n        setSrc(objectUrl);\n        return ()=>{\n            URL.revokeObjectURL(objectUrl);\n        };\n    }, [\n        file\n    ]);\n    return src;\n};\n_s136(useFileSrc, \"QF9R1ipOws9jxusuwWHJxIqI0fo=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState,\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect\n    ];\n});\nvar useAttachmentSrc = ()=>{\n    _s137();\n    const { file, src } = useAttachment((a)=>{\n        var _a_content_filter_, _a_content;\n        if (a.type !== \"image\") return {};\n        if (a.file) return {\n            file: a.file\n        };\n        const src2 = (_a_content = a.content) === null || _a_content === void 0 ? void 0 : (_a_content_filter_ = _a_content.filter((c)=>c.type === \"image\")[0]) === null || _a_content_filter_ === void 0 ? void 0 : _a_content_filter_.image;\n        if (!src2) return {};\n        return {\n            src: src2\n        };\n    });\n    var _useFileSrc;\n    return (_useFileSrc = useFileSrc(file)) !== null && _useFileSrc !== void 0 ? _useFileSrc : src;\n};\n_s137(useAttachmentSrc, \"s4smPj4kwVX6tDGOF0F8aVAz7Nc=\", false, function() {\n    return [\n        useAttachment,\n        useFileSrc\n    ];\n});\nvar AttachmentPreview = (param)=>{\n    let { src } = param;\n    _s138();\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    return(// eslint-disable-next-line @next/next/no-img-element\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"img\", {\n        src,\n        style: {\n            width: \"auto\",\n            height: \"auto\",\n            maxWidth: \"75dvh\",\n            maxHeight: \"75dvh\",\n            display: isLoaded ? \"block\" : \"none\",\n            overflow: \"clip\"\n        },\n        onLoad: ()=>setIsLoaded(true),\n        alt: \"Image Preview\"\n    }));\n};\n_s138(AttachmentPreview, \"FXJ9kZAhgyzWJM6bZKKhuyMJs/4=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_0__.useState\n    ];\n});\n_c113 = AttachmentPreview;\nvar AttachmentPreviewDialog = (param)=>{\n    let { children } = param;\n    _s139();\n    const src = useAttachmentSrc();\n    if (!src) return children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(Dialog, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(DialogTrigger, {\n                className: \"aui-attachment-preview-trigger\",\n                asChild: true,\n                children\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(DialogContent, {\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AttachmentPreview, {\n                    src\n                })\n            })\n        ]\n    });\n};\n_s139(AttachmentPreviewDialog, \"h3DJTaGkPYbKgK4XIg+5XH3ov88=\", false, function() {\n    return [\n        useAttachmentSrc\n    ];\n});\n_c114 = AttachmentPreviewDialog;\nvar AttachmentThumb = ()=>{\n    _s140();\n    const isImage = useAttachment((a)=>a.type === \"image\");\n    const src = useAttachmentSrc();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(AvatarRoot, {\n        className: \"aui-attachment-thumb\",\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_avatar__WEBPACK_IMPORTED_MODULE_26__.AvatarFallback, {\n                delayMs: isImage ? 200 : 0,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_CircleXIcon_FileIcon_lucide_react__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {})\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AvatarImage, {\n                src\n            })\n        ]\n    });\n};\n_s140(AttachmentThumb, \"ZYBVeveHbK81WNF0qiXU8qkp5BI=\", false, function() {\n    return [\n        useAttachment,\n        useAttachmentSrc\n    ];\n});\n_c115 = AttachmentThumb;\nvar Attachment = ()=>{\n    _s141();\n    const canRemove = useAttachment((a)=>a.source !== \"message\");\n    const typeLabel = useAttachment((a)=>{\n        const type = a.type;\n        switch(type){\n            case \"image\":\n                return \"Image\";\n            case \"document\":\n                return \"Document\";\n            case \"file\":\n                return \"File\";\n            default:\n                const _exhaustiveCheck = type;\n                throw new Error(\"Unknown attachment type: \".concat(_exhaustiveCheck));\n        }\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(Tooltip, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AttachmentPreviewDialog, {\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipTrigger, {\n                    asChild: true,\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(AttachmentRoot, {\n                        children: [\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AttachmentThumb, {}),\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", {\n                                className: \"aui-attachment-text\",\n                                children: [\n                                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"p\", {\n                                        className: \"aui-attachment-name\",\n                                        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(attachment_exports.Name, {})\n                                    }),\n                                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"p\", {\n                                        className: \"aui-attachment-type\",\n                                        children: typeLabel\n                                    })\n                                ]\n                            }),\n                            canRemove && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AttachmentRemove, {})\n                        ]\n                    })\n                })\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipContent, {\n                side: \"top\",\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(attachment_exports.Name, {})\n            })\n        ]\n    });\n};\n_s141(Attachment, \"RJwnkPUsbH5/3VdPlXLgjuhtXKM=\", false, function() {\n    return [\n        useAttachment,\n        useAttachment\n    ];\n});\n_c116 = Attachment;\nAttachment.displayName = \"Attachment\";\nvar AttachmentRemove = /*#__PURE__*/ _s142((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c117 = _s142((props, ref)=>{\n    _s142();\n    const { strings: { composer: { removeAttachment: { tooltip = \"Remove file\" } = {} } = {} } = {} } = useThreadConfig();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(attachment_exports.Remove, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipIconButton, {\n            tooltip,\n            className: \"aui-attachment-remove\",\n            side: \"top\",\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_CircleXIcon_FileIcon_lucide_react__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {})\n        })\n    });\n}, \"u2PoRu+OVGNt32W5FcIRdUUdpzI=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n})), \"u2PoRu+OVGNt32W5FcIRdUUdpzI=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c118 = AttachmentRemove;\nAttachmentRemove.displayName = \"AttachmentRemove\";\nvar exports5 = {\n    Root: AttachmentRoot,\n    Remove: AttachmentRemove\n};\nvar attachment_default = Object.assign(Attachment, exports5);\n// src/ui/composer.tsx\n\nvar useAllowAttachments = function() {\n    let ensureCapability = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    _s143();\n    const { composer: { allowAttachments = true } = {} } = useThreadConfig();\n    const attachmentsSupported = useThread((t)=>t.capabilities.attachments);\n    return allowAttachments && (!ensureCapability || attachmentsSupported);\n};\n_s143(useAllowAttachments, \"lZjqVXXiBtXJKqIN4Jd2tHtVOz4=\", false, function() {\n    return [\n        useThreadConfig,\n        useThread\n    ];\n});\nvar Composer = ()=>{\n    _s144();\n    const allowAttachments = useAllowAttachments(true);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(ComposerRoot, {\n        children: [\n            allowAttachments && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerAttachments, {}),\n            allowAttachments && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerAddAttachment, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerInput, {\n                autoFocus: true\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerAction, {})\n        ]\n    });\n};\n_s144(Composer, \"Dn52Irw6bgP6FxIEl3EYQJe3nog=\", false, function() {\n    return [\n        useAllowAttachments\n    ];\n});\n_c119 = Composer;\nComposer.displayName = \"Composer\";\nvar ComposerRoot = withDefaults(composer_exports.Root, {\n    className: \"aui-composer-root\"\n});\nComposerRoot.displayName = \"ComposerRoot\";\nvar ComposerInputStyled = withDefaults(composer_exports.Input, {\n    rows: 1,\n    autoFocus: true,\n    className: \"aui-composer-input\"\n});\nvar ComposerInput = /*#__PURE__*/ _s145((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c120 = _s145((props, ref)=>{\n    _s145();\n    const { strings: { composer: { input: { placeholder = \"Write a message...\" } = {} } = {} } = {} } = useThreadConfig();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerInputStyled, {\n        placeholder,\n        ...props,\n        ref\n    });\n}, \"oT9/BFAke8hH7jTv4xVIUWmI6RE=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n})), \"oT9/BFAke8hH7jTv4xVIUWmI6RE=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c121 = ComposerInput;\nComposerInput.displayName = \"ComposerInput\";\nvar ComposerAttachmentsContainer = withDefaults(\"div\", {\n    className: \"aui-composer-attachments\"\n});\nvar ComposerAttachments = (param)=>{\n    let { components } = param;\n    var _components_Attachment;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerAttachmentsContainer, {\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(composer_exports.Attachments, {\n            components: {\n                ...components,\n                Attachment: (_components_Attachment = components === null || components === void 0 ? void 0 : components.Attachment) !== null && _components_Attachment !== void 0 ? _components_Attachment : attachment_default\n            }\n        })\n    });\n};\n_c122 = ComposerAttachments;\nvar ComposerAttachButton = withDefaults(TooltipIconButton, {\n    variant: \"default\",\n    className: \"aui-composer-attach\"\n});\n_c123 = ComposerAttachButton;\nvar ComposerAddAttachment = /*#__PURE__*/ _s146((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c124 = _s146((props, ref)=>{\n    _s146();\n    const { strings: { composer: { addAttachment: { tooltip = \"Attach file\" } = {} } = {} } = {} } = useThreadConfig();\n    const allowAttachments = useAllowAttachments();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(composer_exports.AddAttachment, {\n        disabled: !allowAttachments,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerAttachButton, {\n            tooltip,\n            variant: \"ghost\",\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_PaperclipIcon_SendHorizontalIcon_lucide_react__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {})\n        })\n    });\n}, \"Lr/y3743TMhklVXlBD8dr/3QfOY=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowAttachments\n    ];\n})), \"Lr/y3743TMhklVXlBD8dr/3QfOY=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowAttachments\n    ];\n});\n_c125 = ComposerAddAttachment;\nComposerAddAttachment.displayName = \"ComposerAddAttachment\";\nvar useAllowCancel = ()=>{\n    _s147();\n    const cancelSupported = useThread((t)=>t.capabilities.cancel);\n    return cancelSupported;\n};\n_s147(useAllowCancel, \"PITZdQ6Vc8aSjUCPiBhQm2l+sEY=\", false, function() {\n    return [\n        useThread\n    ];\n});\nvar ComposerAction = ()=>{\n    _s148();\n    const allowCancel = useAllowCancel();\n    if (!allowCancel) return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerSend, {});\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(thread_exports.If, {\n                running: false,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerSend, {})\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(thread_exports.If, {\n                running: true,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerCancel, {})\n            })\n        ]\n    });\n};\n_s148(ComposerAction, \"YchVvIDgIX9NYjQwxaTZUcC+VRM=\", false, function() {\n    return [\n        useAllowCancel\n    ];\n});\n_c126 = ComposerAction;\nComposerAction.displayName = \"ComposerAction\";\nvar ComposerSendButton = withDefaults(TooltipIconButton, {\n    variant: \"default\",\n    className: \"aui-composer-send\"\n});\n_c127 = ComposerSendButton;\nvar ComposerSend = /*#__PURE__*/ _s149((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c128 = _s149((props, ref)=>{\n    _s149();\n    const { strings: { composer: { send: { tooltip = \"Send\" } = {} } = {} } = {} } = useThreadConfig();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(composer_exports.Send, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerSendButton, {\n            tooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_PaperclipIcon_SendHorizontalIcon_lucide_react__WEBPACK_IMPORTED_MODULE_31__[\"default\"], {})\n        })\n    });\n}, \"639z/TGvpvG+2qmKVBvjAv+mvxo=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n})), \"639z/TGvpvG+2qmKVBvjAv+mvxo=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c129 = ComposerSend;\nComposerSend.displayName = \"ComposerSend\";\nvar ComposerCancelButton = withDefaults(TooltipIconButton, {\n    variant: \"default\",\n    className: \"aui-composer-cancel\"\n});\n_c130 = ComposerCancelButton;\nvar ComposerCancel = /*#__PURE__*/ _s150((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c131 = _s150((props, ref)=>{\n    _s150();\n    const { strings: { composer: { cancel: { tooltip = \"Cancel\" } = {} } = {} } = {} } = useThreadConfig();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(composer_exports.Cancel, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerCancelButton, {\n            tooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CircleStopIcon, {})\n        })\n    });\n}, \"FVJU6lmkGWWPQ2P+YSi9ESQCx7A=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n})), \"FVJU6lmkGWWPQ2P+YSi9ESQCx7A=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c132 = ComposerCancel;\nComposerCancel.displayName = \"ComposerCancel\";\nvar exports6 = {\n    Root: ComposerRoot,\n    Input: ComposerInput,\n    Action: ComposerAction,\n    Send: ComposerSend,\n    Cancel: ComposerCancel,\n    AddAttachment: ComposerAddAttachment,\n    Attachments: ComposerAttachments\n};\nvar composer_default = Object.assign(Composer, exports6);\n// src/ui/thread-welcome.tsx\n\n\nvar ThreadWelcome = ()=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(ThreadWelcomeRoot, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(ThreadWelcomeCenter, {\n                children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadWelcomeAvatar, {}),\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadWelcomeMessage, {})\n                ]\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadWelcomeSuggestions, {})\n        ]\n    });\n};\n_c133 = ThreadWelcome;\nThreadWelcome.displayName = \"ThreadWelcome\";\nvar ThreadWelcomeRootStyled = withDefaults(\"div\", {\n    className: \"aui-thread-welcome-root\"\n});\nvar ThreadWelcomeCenter = withDefaults(\"div\", {\n    className: \"aui-thread-welcome-center\"\n});\nvar ThreadWelcomeRoot = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c134 = (props, ref)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(thread_exports.Empty, {\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadWelcomeRootStyled, {\n            ...props,\n            ref\n        })\n    });\n});\n_c135 = ThreadWelcomeRoot;\nThreadWelcomeRoot.displayName = \"ThreadWelcomeRoot\";\nvar ThreadWelcomeAvatar = ()=>{\n    _s151();\n    const { assistantAvatar: avatar = {\n        fallback: \"A\"\n    } } = useThreadConfig();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Avatar, {\n        ...avatar\n    });\n};\n_s151(ThreadWelcomeAvatar, \"8zy3DWbig3neNmD8aaDyiMtrXxo=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c136 = ThreadWelcomeAvatar;\nvar ThreadWelcomeMessageStyled = withDefaults(\"p\", {\n    className: \"aui-thread-welcome-message\"\n});\nvar ThreadWelcomeMessage = /*#__PURE__*/ _s152((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c137 = _s152((param, ref)=>{\n    let { message: messageProp, ...rest } = param;\n    _s152();\n    const { welcome: { message = \"How can I help you today?\" } = {} } = useThreadConfig();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadWelcomeMessageStyled, {\n        ...rest,\n        ref,\n        children: messageProp !== null && messageProp !== void 0 ? messageProp : message\n    });\n}, \"4oe/pLaTUCgtmqKHFZFqpmhqGQ0=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n})), \"4oe/pLaTUCgtmqKHFZFqpmhqGQ0=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c138 = ThreadWelcomeMessage;\nThreadWelcomeMessage.displayName = \"ThreadWelcomeMessage\";\nvar ThreadWelcomeSuggestionContainer = withDefaults(\"div\", {\n    className: \"aui-thread-welcome-suggestion-container\"\n});\nvar ThreadWelcomeSuggestionStyled = withDefaults(thread_exports.Suggestion, {\n    className: \"aui-thread-welcome-suggestion\"\n});\nvar ThreadWelcomeSuggestion = (param)=>{\n    let { suggestion: { text, prompt } } = param;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadWelcomeSuggestionStyled, {\n        prompt,\n        method: \"replace\",\n        autoSend: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", {\n            className: \"aui-thread-welcome-suggestion-text\",\n            children: text !== null && text !== void 0 ? text : prompt\n        })\n    });\n};\n_c139 = ThreadWelcomeSuggestion;\nvar ThreadWelcomeSuggestions = ()=>{\n    _s153();\n    const suggestions2 = useThread((t)=>t.suggestions);\n    const { welcome: { suggestions } = {} } = useThreadConfig();\n    const finalSuggestions = suggestions2.length ? suggestions2 : suggestions;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadWelcomeSuggestionContainer, {\n        children: finalSuggestions === null || finalSuggestions === void 0 ? void 0 : finalSuggestions.map((suggestion, idx)=>{\n            const key = \"\".concat(suggestion.prompt, \"-\").concat(idx);\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadWelcomeSuggestion, {\n                suggestion\n            }, key);\n        })\n    });\n};\n_s153(ThreadWelcomeSuggestions, \"PP65jBEHx7CD4HbYVwX3lJ1Q6WI=\", false, function() {\n    return [\n        useThread,\n        useThreadConfig\n    ];\n});\n_c140 = ThreadWelcomeSuggestions;\nThreadWelcomeSuggestions.displayName = \"ThreadWelcomeSuggestions\";\nvar exports7 = {\n    Root: ThreadWelcomeRoot,\n    Center: ThreadWelcomeCenter,\n    Avatar: ThreadWelcomeAvatar,\n    Message: ThreadWelcomeMessage,\n    Suggestions: ThreadWelcomeSuggestions,\n    Suggestion: ThreadWelcomeSuggestion\n};\nvar thread_welcome_default = Object.assign(ThreadWelcome, exports7);\n// src/ui/user-message.tsx\n\n// src/ui/user-action-bar.tsx\n\n\n\nvar useAllowEdit = function() {\n    let ensureCapability = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    _s154();\n    const { userMessage: { allowEdit = true } = {} } = useThreadConfig();\n    const editSupported = useThread((t)=>t.capabilities.edit);\n    return allowEdit && (!ensureCapability || editSupported);\n};\n_s154(useAllowEdit, \"hQyCPTMO2cIOYWNxlPqijJ1bJts=\", false, function() {\n    return [\n        useThreadConfig,\n        useThread\n    ];\n});\nvar UserActionBar = ()=>{\n    _s155();\n    const allowEdit = useAllowEdit(true);\n    if (!allowEdit) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(UserActionBarRoot, {\n        hideWhenRunning: true,\n        autohide: \"not-last\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(UserActionBarEdit, {})\n    });\n};\n_s155(UserActionBar, \"V42FGxnqL4wLCN/FwMTFHWTBBj4=\", false, function() {\n    return [\n        useAllowEdit\n    ];\n});\n_c141 = UserActionBar;\nUserActionBar.displayName = \"UserActionBar\";\nvar UserActionBarRoot = withDefaults(actionBar_exports.Root, {\n    className: \"aui-user-action-bar-root\"\n});\nUserActionBarRoot.displayName = \"UserActionBarRoot\";\nvar UserActionBarEdit = /*#__PURE__*/ _s156((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c142 = _s156((props, ref)=>{\n    _s156();\n    const { strings: { userMessage: { edit: { tooltip = \"Edit\" } = {} } = {} } = {} } = useThreadConfig();\n    const allowEdit = useAllowEdit();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(actionBar_exports.Edit, {\n        disabled: !allowEdit,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TooltipIconButton, {\n            tooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_PencilIcon_lucide_react__WEBPACK_IMPORTED_MODULE_32__[\"default\"], {})\n        })\n    });\n}, \"s+ecX7PbkSnnXykbBpaYzBpbLd0=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowEdit\n    ];\n})), \"s+ecX7PbkSnnXykbBpaYzBpbLd0=\", false, function() {\n    return [\n        useThreadConfig,\n        useAllowEdit\n    ];\n});\n_c143 = UserActionBarEdit;\nUserActionBarEdit.displayName = \"UserActionBarEdit\";\nvar exports8 = {\n    Root: UserActionBarRoot,\n    Edit: UserActionBarEdit\n};\nvar user_action_bar_default = Object.assign(UserActionBar, exports8);\n// src/ui/user-message.tsx\n\nvar UserMessage = ()=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(UserMessageRoot, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(UserMessageAttachments, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(message_exports.If, {\n                hasContent: true,\n                children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(user_action_bar_default, {}),\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(UserMessageContent, {})\n                ]\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(branch_picker_default, {})\n        ]\n    });\n};\n_c144 = UserMessage;\nUserMessage.displayName = \"UserMessage\";\nvar UserMessageRoot = withDefaults(message_exports.Root, {\n    className: \"aui-user-message-root\"\n});\nUserMessageRoot.displayName = \"UserMessageRoot\";\nvar UserMessageContentWrapper = withDefaults(\"div\", {\n    className: \"aui-user-message-content\"\n});\nvar UserMessageContent = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c145 = (param, ref)=>{\n    let { components, ...props } = param;\n    var _components_Text;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(UserMessageContentWrapper, {\n        ...props,\n        ref,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(message_exports.Content, {\n            components: {\n                ...components,\n                Text: (_components_Text = components === null || components === void 0 ? void 0 : components.Text) !== null && _components_Text !== void 0 ? _components_Text : content_part_default.Text\n            }\n        })\n    });\n});\n_c146 = UserMessageContent;\nUserMessageContent.displayName = \"UserMessageContent\";\nvar UserMessageAttachmentsContainer = withDefaults(\"div\", {\n    className: \"aui-user-message-attachments\"\n});\nvar UserMessageAttachments = (param)=>{\n    let { components } = param;\n    var _components_Attachment;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(message_exports.If, {\n        hasAttachments: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(UserMessageAttachmentsContainer, {\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(message_exports.Attachments, {\n                components: {\n                    ...components,\n                    Attachment: (_components_Attachment = components === null || components === void 0 ? void 0 : components.Attachment) !== null && _components_Attachment !== void 0 ? _components_Attachment : attachment_default\n                }\n            })\n        })\n    });\n};\n_c147 = UserMessageAttachments;\nvar exports9 = {\n    Root: UserMessageRoot,\n    Content: UserMessageContent,\n    Attachments: UserMessageAttachments\n};\nvar user_message_default = Object.assign(UserMessage, exports9);\n// src/ui/edit-composer.tsx\n\n\nvar EditComposer = ()=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(EditComposerRoot, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(EditComposerInput, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(EditComposerFooter, {\n                children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(EditComposerCancel, {}),\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(EditComposerSend, {})\n                ]\n            })\n        ]\n    });\n};\n_c148 = EditComposer;\nEditComposer.displayName = \"EditComposer\";\nvar EditComposerRoot = withDefaults(composer_exports.Root, {\n    className: \"aui-edit-composer-root\"\n});\nEditComposerRoot.displayName = \"EditComposerRoot\";\nvar EditComposerInput = withDefaults(composer_exports.Input, {\n    className: \"aui-edit-composer-input\"\n});\nEditComposerInput.displayName = \"EditComposerInput\";\nvar EditComposerFooter = withDefaults(\"div\", {\n    className: \"aui-edit-composer-footer\"\n});\nEditComposerFooter.displayName = \"EditComposerFooter\";\nvar EditComposerCancel = /*#__PURE__*/ _s157((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c149 = _s157((props, ref)=>{\n    _s157();\n    const { strings: { editComposer: { cancel: { label = \"Cancel\" } = {} } = {} } = {} } = useThreadConfig();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(composer_exports.Cancel, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Button, {\n            variant: \"ghost\",\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : label\n        })\n    });\n}, \"O3c4qjePYv6v5WVu3NcFDefa0mg=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n})), \"O3c4qjePYv6v5WVu3NcFDefa0mg=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c150 = EditComposerCancel;\nEditComposerCancel.displayName = \"EditComposerCancel\";\nvar EditComposerSend = /*#__PURE__*/ _s158((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c151 = _s158((props, ref)=>{\n    _s158();\n    const { strings: { editComposer: { send: { label = \"Send\" } = {} } = {} } = {} } = useThreadConfig();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(composer_exports.Send, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Button, {\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : label\n        })\n    });\n}, \"3AkGfZjaFVvc2B6ctDWsyNwy238=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n})), \"3AkGfZjaFVvc2B6ctDWsyNwy238=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c152 = EditComposerSend;\nEditComposerSend.displayName = \"EditComposerSend\";\nvar exports10 = {\n    Root: EditComposerRoot,\n    Input: EditComposerInput,\n    Footer: EditComposerFooter,\n    Cancel: EditComposerCancel,\n    Send: EditComposerSend\n};\nvar edit_composer_default = Object.assign(EditComposer, exports10);\n// src/ui/thread.tsx\n\nvar Thread = (config)=>{\n    const { components: { Composer: ComposerComponent = composer_default, ThreadWelcome: ThreadWelcomeComponent = thread_welcome_default } = {} } = config;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadRoot, {\n        config,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(ThreadViewport, {\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadWelcomeComponent, {}),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadMessages, {}),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadFollowupSuggestions, {}),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(ThreadViewportFooter, {\n                    children: [\n                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadScrollToBottom, {}),\n                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ComposerComponent, {})\n                    ]\n                })\n            ]\n        })\n    });\n};\n_c153 = Thread;\nvar ThreadRootStyled = withDefaults(thread_exports.Root, {\n    className: \"aui-root aui-thread-root\"\n});\nvar ThreadRoot = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c154 = (param, ref)=>{\n    let { config, ...props } = param;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadConfigProvider, {\n        config,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadRootStyled, {\n            ...props,\n            ref\n        })\n    });\n});\n_c155 = ThreadRoot;\nThreadRoot.displayName = \"ThreadRoot\";\nvar ThreadViewport = withDefaults(thread_exports.Viewport, {\n    className: \"aui-thread-viewport\"\n});\nThreadViewport.displayName = \"ThreadViewport\";\nvar ThreadViewportFooter = withDefaults(\"div\", {\n    className: \"aui-thread-viewport-footer\"\n});\nThreadViewportFooter.displayName = \"ThreadViewportFooter\";\nvar SystemMessage = ()=>null;\n_c156 = SystemMessage;\nvar ThreadMessages = (param)=>{\n    let { components, unstable_flexGrowDiv: flexGrowDiv = true, ...rest } = param;\n    var _components_UserMessage, _components_EditComposer, _components_AssistantMessage, _components_SystemMessage;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(thread_exports.Messages, {\n                components: {\n                    UserMessage: (_components_UserMessage = components === null || components === void 0 ? void 0 : components.UserMessage) !== null && _components_UserMessage !== void 0 ? _components_UserMessage : user_message_default,\n                    EditComposer: (_components_EditComposer = components === null || components === void 0 ? void 0 : components.EditComposer) !== null && _components_EditComposer !== void 0 ? _components_EditComposer : edit_composer_default,\n                    AssistantMessage: (_components_AssistantMessage = components === null || components === void 0 ? void 0 : components.AssistantMessage) !== null && _components_AssistantMessage !== void 0 ? _components_AssistantMessage : assistant_message_default,\n                    SystemMessage: (_components_SystemMessage = components === null || components === void 0 ? void 0 : components.SystemMessage) !== null && _components_SystemMessage !== void 0 ? _components_SystemMessage : SystemMessage\n                },\n                ...rest\n            }),\n            flexGrowDiv && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(thread_exports.If, {\n                empty: false,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n                    style: {\n                        flexGrow: 1\n                    }\n                })\n            })\n        ]\n    });\n};\n_c157 = ThreadMessages;\nThreadMessages.displayName = \"ThreadMessages\";\nvar ThreadFollowupSuggestions = ()=>{\n    _s159();\n    const suggestions = useThread((t)=>t.suggestions);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(thread_exports.If, {\n        empty: false,\n        running: false,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", {\n            className: \"aui-thread-followup-suggestions\",\n            children: suggestions === null || suggestions === void 0 ? void 0 : suggestions.map((suggestion, idx)=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(thread_exports.Suggestion, {\n                    className: \"aui-thread-followup-suggestion\",\n                    prompt: suggestion.prompt,\n                    method: \"replace\",\n                    autoSend: true,\n                    children: suggestion.prompt\n                }, idx))\n        })\n    });\n};\n_s159(ThreadFollowupSuggestions, \"3p80/HIjHNvcKlg+4ozYCDgAR6s=\", false, function() {\n    return [\n        useThread\n    ];\n});\n_c158 = ThreadFollowupSuggestions;\nvar ThreadScrollToBottomIconButton = withDefaults(TooltipIconButton, {\n    variant: \"outline\",\n    className: \"aui-thread-scroll-to-bottom\"\n});\n_c159 = ThreadScrollToBottomIconButton;\nvar ThreadScrollToBottom = /*#__PURE__*/ _s160((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c160 = _s160((props, ref)=>{\n    _s160();\n    const { strings: { thread: { scrollToBottom: { tooltip = \"Scroll to bottom\" } = {} } = {} } = {} } = useThreadConfig();\n    var _props_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(thread_exports.ScrollToBottom, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadScrollToBottomIconButton, {\n            tooltip,\n            ...props,\n            ref,\n            children: (_props_children = props.children) !== null && _props_children !== void 0 ? _props_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_ArrowDownIcon_lucide_react__WEBPACK_IMPORTED_MODULE_33__[\"default\"], {})\n        })\n    });\n}, \"9hJGV7YVSoC7XShZp1vYv7D9Dw4=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n})), \"9hJGV7YVSoC7XShZp1vYv7D9Dw4=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c161 = ThreadScrollToBottom;\nThreadScrollToBottom.displayName = \"ThreadScrollToBottom\";\nvar exports11 = {\n    Root: ThreadRoot,\n    Viewport: ThreadViewport,\n    Messages: ThreadMessages,\n    FollowupSuggestions: ThreadFollowupSuggestions,\n    ScrollToBottom: ThreadScrollToBottom,\n    ViewportFooter: ThreadViewportFooter\n};\nvar thread_default = Object.assign(Thread, exports11);\n// src/ui/assistant-modal.tsx\n\nvar AssistantModal = (config)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(AssistantModalRoot, {\n        config,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantModalTrigger, {}),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantModalContent, {\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(thread_default, {})\n            })\n        ]\n    });\n};\n_c162 = AssistantModal;\nAssistantModal.displayName = \"AssistantModal\";\nvar AssistantModalRoot = (param)=>{\n    let { config, ...props } = param;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThreadConfigProvider, {\n        config,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(assistantModal_exports.Root, {\n            ...props\n        })\n    });\n};\n_c163 = AssistantModalRoot;\nAssistantModalRoot.displayName = \"AssistantModalRoot\";\nvar AssistantModalTrigger = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c164 = (props, ref)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantModalAnchor, {\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(assistantModal_exports.Trigger, {\n            asChild: true,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssistantModalButton, {\n                ...props,\n                ref\n            })\n        })\n    });\n});\n_c165 = AssistantModalTrigger;\nAssistantModalTrigger.displayName = \"AssistantModalTrigger\";\nvar AssistantModalAnchor = withDefaults(assistantModal_exports.Anchor, {\n    className: \"aui-root aui-modal-anchor\"\n});\nAssistantModalAnchor.displayName = \"AssistantModalAnchor\";\nvar ModalButtonStyled = withDefaults(TooltipIconButton, {\n    variant: \"default\",\n    className: \"aui-modal-button\"\n});\n_c166 = ModalButtonStyled;\nvar AssistantModalButton = /*#__PURE__*/ _s161((0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c167 = _s161((param, ref)=>{\n    let { \"data-state\": state, ...rest } = param;\n    _s161();\n    const { strings: { assistantModal: { open: { button: { tooltip: openTooltip = \"Close Assistant\" } = {} } = {}, closed: { button: { tooltip: closedTooltip = \"Open Assistant\" } = {} } = {} } = {} } = {} } = useThreadConfig();\n    const tooltip = state === \"open\" ? openTooltip : closedTooltip;\n    var _rest_children;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ModalButtonStyled, {\n        side: \"left\",\n        tooltip,\n        \"data-state\": state,\n        ...rest,\n        ref,\n        children: (_rest_children = rest.children) !== null && _rest_children !== void 0 ? _rest_children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_BotIcon_ChevronDownIcon_lucide_react__WEBPACK_IMPORTED_MODULE_34__[\"default\"], {\n                    \"data-state\": state,\n                    className: \"aui-modal-button-closed-icon\"\n                }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_barrel_optimize_names_BotIcon_ChevronDownIcon_lucide_react__WEBPACK_IMPORTED_MODULE_35__[\"default\"], {\n                    \"data-state\": state,\n                    className: \"aui-modal-button-open-icon\"\n                })\n            ]\n        })\n    });\n}, \"lUeZIkOigrtiP5rgaw5B1gMPRGA=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n})), \"lUeZIkOigrtiP5rgaw5B1gMPRGA=\", false, function() {\n    return [\n        useThreadConfig\n    ];\n});\n_c168 = AssistantModalButton;\nAssistantModalButton.displayName = \"AssistantModalButton\";\nvar AssistantModalContent = withDefaults(assistantModal_exports.Content, {\n    className: \"aui-root aui-modal-content\",\n    sideOffset: 16\n});\nAssistantModalContent.displayName = \"AssistantModalContent\";\nvar exports12 = {\n    Root: AssistantModalRoot,\n    Trigger: AssistantModalTrigger,\n    Content: AssistantModalContent,\n    Button: AssistantModalButton,\n    Anchor: AssistantModalAnchor\n};\nvar assistant_modal_default = Object.assign(AssistantModal, exports12);\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40, _c41, _c42, _c43, _c44, _c45, _c46, _c47, _c48, _c49, _c50, _c51, _c52, _c53, _c54, _c55, _c56, _c57, _c58, _c59, _c60, _c61, _c62, _c63, _c64, _c65, _c66, _c67, _c68, _c69, _c70, _c71, _c72, _c73, _c74, _c75, _c76, _c77, _c78, _c79, _c80, _c81, _c82, _c83, _c84, _c85, _c86, _c87, _c88, _c89, _c90, _c91, _c92, _c93, _c94, _c95, _c96, _c97, _c98, _c99, _c100, _c101, _c102, _c103, _c104, _c105, _c106, _c107, _c108, _c109, _c110, _c111, _c112, _c113, _c114, _c115, _c116, _c117, _c118, _c119, _c120, _c121, _c122, _c123, _c124, _c125, _c126, _c127, _c128, _c129, _c130, _c131, _c132, _c133, _c134, _c135, _c136, _c137, _c138, _c139, _c140, _c141, _c142, _c143, _c144, _c145, _c146, _c147, _c148, _c149, _c150, _c151, _c152, _c153, _c154, _c155, _c156, _c157, _c158, _c159, _c160, _c161, _c162, _c163, _c164, _c165, _c166, _c167, _c168;\n$RefreshReg$(_c, \"ThreadRuntimeProvider\");\n$RefreshReg$(_c1, \"AssistantRuntimeProviderImpl\");\n$RefreshReg$(_c2, \"AssistantRuntimeProvider\");\n$RefreshReg$(_c3, \"TextContentPartProvider\");\n$RefreshReg$(_c4, \"ActionBarPrimitiveRoot$forwardRef\");\n$RefreshReg$(_c5, \"ActionBarPrimitiveRoot\");\n$RefreshReg$(_c6, \"ActionBarPrimitiveCopy$forwardRef2\");\n$RefreshReg$(_c7, \"ActionBarPrimitiveCopy\");\n$RefreshReg$(_c8, \"ActionBarPrimitiveStopSpeaking$forwardRef4\");\n$RefreshReg$(_c9, \"ActionBarPrimitiveStopSpeaking\");\n$RefreshReg$(_c10, \"ActionBarPrimitiveFeedbackPositive$forwardRef5\");\n$RefreshReg$(_c11, \"ActionBarPrimitiveFeedbackPositive\");\n$RefreshReg$(_c12, \"ActionBarPrimitiveFeedbackNegative$forwardRef6\");\n$RefreshReg$(_c13, \"ActionBarPrimitiveFeedbackNegative\");\n$RefreshReg$(_c14, \"AssistantModalPrimitiveRoot\");\n$RefreshReg$(_c15, \"AssistantModalPrimitiveTrigger$forwardRef7\");\n$RefreshReg$(_c16, \"AssistantModalPrimitiveTrigger\");\n$RefreshReg$(_c17, \"AssistantModalPrimitiveContent$forwardRef8\");\n$RefreshReg$(_c18, \"AssistantModalPrimitiveContent\");\n$RefreshReg$(_c19, \"AssistantModalPrimitiveAnchor$forwardRef9\");\n$RefreshReg$(_c20, \"AssistantModalPrimitiveAnchor\");\n$RefreshReg$(_c21, \"AttachmentPrimitiveRoot$forwardRef10\");\n$RefreshReg$(_c22, \"AttachmentPrimitiveRoot\");\n$RefreshReg$(_c23, \"AttachmentPrimitiveThumb$forwardRef11\");\n$RefreshReg$(_c24, \"AttachmentPrimitiveThumb\");\n$RefreshReg$(_c25, \"AttachmentPrimitiveName\");\n$RefreshReg$(_c26, \"BranchPickerPrimitiveCount\");\n$RefreshReg$(_c27, \"BranchPickerPrimitiveNumber\");\n$RefreshReg$(_c28, \"MessagePrimitiveRoot$forwardRef12\");\n$RefreshReg$(_c29, \"MessagePrimitiveRoot\");\n$RefreshReg$(_c30, \"MessagePrimitiveIf\");\n$RefreshReg$(_c31, \"ContentPartRuntimeProvider\");\n$RefreshReg$(_c32, \"SmoothContextProvider\");\n$RefreshReg$(_c33, \"ContentPartPrimitiveText$forwardRef14\");\n$RefreshReg$(_c34, \"ContentPartPrimitiveText\");\n$RefreshReg$(_c35, \"ContentPartPrimitiveImage$forwardRef15\");\n$RefreshReg$(_c36, \"ContentPartPrimitiveImage\");\n$RefreshReg$(_c37, \"ContentPartPrimitiveDisplay\");\n$RefreshReg$(_c38, \"ContentPartPrimitiveInProgress\");\n$RefreshReg$(_c39, \"METHOD_NOT_SUPPORTED\");\n$RefreshReg$(_c40, \"ToolUIDisplay\");\n$RefreshReg$(_c41, \"MessageContentPartComponent\");\n$RefreshReg$(_c42, \"MessageContentPartImpl\");\n$RefreshReg$(_c43, \"MessageContentPart\");\n$RefreshReg$(_c44, \"MessagePrimitiveContent\");\n$RefreshReg$(_c45, \"MessagePrimitiveInProgress\");\n$RefreshReg$(_c46, \"AttachmentRuntimeProvider\");\n$RefreshReg$(_c47, \"AttachmentComponent\");\n$RefreshReg$(_c48, \"MessageAttachmentImpl\");\n$RefreshReg$(_c49, \"MessageAttachment\");\n$RefreshReg$(_c50, \"MessagePrimitiveAttachments\");\n$RefreshReg$(_c51, \"BranchPickerPrimitiveRoot$forwardRef16\");\n$RefreshReg$(_c52, \"BranchPickerPrimitiveRoot\");\n$RefreshReg$(_c53, \"ComposerPrimitiveRoot$forwardRef17\");\n$RefreshReg$(_c54, \"ComposerPrimitiveRoot\");\n$RefreshReg$(_c55, \"ComposerPrimitiveInput$forwardRef18\");\n$RefreshReg$(_c56, \"ComposerPrimitiveInput\");\n$RefreshReg$(_c57, \"AttachmentComponent2\");\n$RefreshReg$(_c58, \"ComposerAttachmentImpl\");\n$RefreshReg$(_c59, \"ComposerAttachment\");\n$RefreshReg$(_c60, \"ComposerPrimitiveAttachments\");\n$RefreshReg$(_c61, \"ComposerPrimitiveIf\");\n$RefreshReg$(_c62, \"ThreadPrimitiveRoot$forwardRef19\");\n$RefreshReg$(_c63, \"ThreadPrimitiveRoot\");\n$RefreshReg$(_c64, \"ThreadPrimitiveEmpty\");\n$RefreshReg$(_c65, \"ThreadPrimitiveIf\");\n$RefreshReg$(_c66, \"ThreadPrimitiveViewport$forwardRef20\");\n$RefreshReg$(_c67, \"ThreadPrimitiveViewport\");\n$RefreshReg$(_c68, \"MessageRuntimeProvider\");\n$RefreshReg$(_c69, \"DEFAULT_SYSTEM_MESSAGE\");\n$RefreshReg$(_c70, \"ThreadMessageComponent\");\n$RefreshReg$(_c71, \"ThreadMessageImpl\");\n$RefreshReg$(_c72, \"ThreadMessage\");\n$RefreshReg$(_c73, \"ThreadPrimitiveMessagesImpl\");\n$RefreshReg$(_c74, \"ThreadPrimitiveMessages\");\n$RefreshReg$(_c75, \"Tooltip\");\n$RefreshReg$(_c76, \"Button$forwardRef22\");\n$RefreshReg$(_c77, \"Button\");\n$RefreshReg$(_c78, \"TooltipIconButton$forwardRef23\");\n$RefreshReg$(_c79, \"TooltipIconButton\");\n$RefreshReg$(_c80, \"ThreadConfigProvider\");\n$RefreshReg$(_c81, \"AssistantActionBar\");\n$RefreshReg$(_c82, \"AssistantActionBarCopy$forwardRef24\");\n$RefreshReg$(_c83, \"AssistantActionBarCopy\");\n$RefreshReg$(_c84, \"AssistantActionBarSpeechControl\");\n$RefreshReg$(_c85, \"AssistantActionBarSpeak$forwardRef24\");\n$RefreshReg$(_c86, \"AssistantActionBarSpeak\");\n$RefreshReg$(_c87, \"AssistantActionBarStopSpeaking$forwardRef24\");\n$RefreshReg$(_c88, \"AssistantActionBarStopSpeaking\");\n$RefreshReg$(_c89, \"AssistantActionBarReload$forwardRef24\");\n$RefreshReg$(_c90, \"AssistantActionBarReload\");\n$RefreshReg$(_c91, \"AssistantActionBarFeedbackPositive$forwardRef24\");\n$RefreshReg$(_c92, \"AssistantActionBarFeedbackPositive\");\n$RefreshReg$(_c93, \"AssistantActionBarFeedbackNegative$forwardRef24\");\n$RefreshReg$(_c94, \"AssistantActionBarFeedbackNegative\");\n$RefreshReg$(_c95, \"BranchPicker\");\n$RefreshReg$(_c96, \"BranchPickerPrevious$forwardRef25\");\n$RefreshReg$(_c97, \"BranchPickerPrevious\");\n$RefreshReg$(_c98, \"BranchPickerState$forwardRef25\");\n$RefreshReg$(_c99, \"BranchPickerState\");\n$RefreshReg$(_c100, \"BranchPickerNext$forwardRef25\");\n$RefreshReg$(_c101, \"BranchPickerNext\");\n$RefreshReg$(_c102, \"Avatar\");\n$RefreshReg$(_c103, \"Text\");\n$RefreshReg$(_c104, \"AssistantMessage\");\n$RefreshReg$(_c105, \"AssistantMessageAvatar\");\n$RefreshReg$(_c106, \"AssistantMessageContent$forwardRef26\");\n$RefreshReg$(_c107, \"AssistantMessageContent\");\n$RefreshReg$(_c108, \"CircleStopIcon\");\n$RefreshReg$(_c109, \"DialogOverlay$React.forwardRef\");\n$RefreshReg$(_c110, \"DialogOverlay\");\n$RefreshReg$(_c111, \"DialogContent$React.forwardRef\");\n$RefreshReg$(_c112, \"DialogContent\");\n$RefreshReg$(_c113, \"AttachmentPreview\");\n$RefreshReg$(_c114, \"AttachmentPreviewDialog\");\n$RefreshReg$(_c115, \"AttachmentThumb\");\n$RefreshReg$(_c116, \"Attachment\");\n$RefreshReg$(_c117, \"AttachmentRemove$forwardRef28\");\n$RefreshReg$(_c118, \"AttachmentRemove\");\n$RefreshReg$(_c119, \"Composer\");\n$RefreshReg$(_c120, \"ComposerInput$forwardRef29\");\n$RefreshReg$(_c121, \"ComposerInput\");\n$RefreshReg$(_c122, \"ComposerAttachments\");\n$RefreshReg$(_c123, \"ComposerAttachButton\");\n$RefreshReg$(_c124, \"ComposerAddAttachment$forwardRef29\");\n$RefreshReg$(_c125, \"ComposerAddAttachment\");\n$RefreshReg$(_c126, \"ComposerAction\");\n$RefreshReg$(_c127, \"ComposerSendButton\");\n$RefreshReg$(_c128, \"ComposerSend$forwardRef29\");\n$RefreshReg$(_c129, \"ComposerSend\");\n$RefreshReg$(_c130, \"ComposerCancelButton\");\n$RefreshReg$(_c131, \"ComposerCancel$forwardRef29\");\n$RefreshReg$(_c132, \"ComposerCancel\");\n$RefreshReg$(_c133, \"ThreadWelcome\");\n$RefreshReg$(_c134, \"ThreadWelcomeRoot$forwardRef30\");\n$RefreshReg$(_c135, \"ThreadWelcomeRoot\");\n$RefreshReg$(_c136, \"ThreadWelcomeAvatar\");\n$RefreshReg$(_c137, \"ThreadWelcomeMessage$forwardRef30\");\n$RefreshReg$(_c138, \"ThreadWelcomeMessage\");\n$RefreshReg$(_c139, \"ThreadWelcomeSuggestion\");\n$RefreshReg$(_c140, \"ThreadWelcomeSuggestions\");\n$RefreshReg$(_c141, \"UserActionBar\");\n$RefreshReg$(_c142, \"UserActionBarEdit$forwardRef31\");\n$RefreshReg$(_c143, \"UserActionBarEdit\");\n$RefreshReg$(_c144, \"UserMessage\");\n$RefreshReg$(_c145, \"UserMessageContent$forwardRef32\");\n$RefreshReg$(_c146, \"UserMessageContent\");\n$RefreshReg$(_c147, \"UserMessageAttachments\");\n$RefreshReg$(_c148, \"EditComposer\");\n$RefreshReg$(_c149, \"EditComposerCancel$forwardRef33\");\n$RefreshReg$(_c150, \"EditComposerCancel\");\n$RefreshReg$(_c151, \"EditComposerSend$forwardRef33\");\n$RefreshReg$(_c152, \"EditComposerSend\");\n$RefreshReg$(_c153, \"Thread\");\n$RefreshReg$(_c154, \"ThreadRoot$forwardRef34\");\n$RefreshReg$(_c155, \"ThreadRoot\");\n$RefreshReg$(_c156, \"SystemMessage\");\n$RefreshReg$(_c157, \"ThreadMessages\");\n$RefreshReg$(_c158, \"ThreadFollowupSuggestions\");\n$RefreshReg$(_c159, \"ThreadScrollToBottomIconButton\");\n$RefreshReg$(_c160, \"ThreadScrollToBottom$forwardRef34\");\n$RefreshReg$(_c161, \"ThreadScrollToBottom\");\n$RefreshReg$(_c162, \"AssistantModal\");\n$RefreshReg$(_c163, \"AssistantModalRoot\");\n$RefreshReg$(_c164, \"AssistantModalTrigger$forwardRef35\");\n$RefreshReg$(_c165, \"AssistantModalTrigger\");\n$RefreshReg$(_c166, \"ModalButtonStyled\");\n$RefreshReg$(_c167, \"AssistantModalButton$forwardRef35\");\n$RefreshReg$(_c168, \"AssistantModalButton\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXNzaXN0YW50LXVpL3JlYWN0L2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR21EOztBQ0RyQjs7QUNGTTtBQVE3QixTQUFTTSxrQkFDZEMsT0FBQSxFQUNBQyxZQUFBOztJQU1BLFNBQVNDLGVBQWVDLE9BQUE7O1FBQ3RCLE1BQU1DLGVBQWVOLGlEQUFVQSxDQUFDRTtRQUNoQyxJQUFJLEVBQUNHLG9CQUFBQSw4QkFBQUEsUUFBU0UsUUFBQSxLQUFZLENBQUNELGNBQWM7WUFDdkMsTUFBTSxJQUFJRSxNQUFNLHNDQUFrRCxPQUFaTCxjQUFZO1FBQ3BFO1FBQ0EsT0FBT0c7SUFDVDtPQU5TRjtJQVFULE9BQU9BO0FBQ1Q7O0FDaEJPLFNBQVNLLHVCQUNkQyxXQUFBLEVBQ0FDLFVBQUE7O0lBVUEsU0FBU0Msa0JBQWtCUCxPQUFBO1FBR3pCLE1BQU1ILFVBQVVRLFlBQVlMO1FBQzVCLElBQUksQ0FBQ0gsU0FBUyxPQUFPO1FBQ3JCLE9BQU9BLE9BQUEsQ0FBUVMsV0FBVTtJQUMzQjtJQVlBLFNBQVNFLGFBQ1BDLEtBQUE7O1FBT0EsSUFBSVAsV0FBVztRQUNmLElBQUlRO1FBRUosSUFBSSxPQUFPRCxVQUFVLFlBQVk7WUFDL0JDLFdBQVdEO1FBQ2IsV0FBV0EsU0FBUyxPQUFPQSxVQUFVLFVBQVU7WUFDN0NQLFdBQVcsQ0FBQyxDQUFDTyxNQUFNUCxRQUFBO1lBQ25CUSxXQUFXRCxNQUFNQyxRQUFBO1FBQ25CO1FBRUEsTUFBTUMsUUFBUUosa0JBQWtCO1lBQzlCTDtRQUNGO1FBQ0EsSUFBSSxDQUFDUyxPQUFP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ejZCLFFBQVF3NkI7QUFDVjtBQUVBLElBQU9PLDBCQUFRaHRDLE9BQU9vaUMsTUFBQSxDQUFPaUssZ0JBQWdCcEsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9jb250ZXh0L3Byb3ZpZGVycy9Bc3Npc3RhbnRSdW50aW1lUHJvdmlkZXIudHN4PzA2NGEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9yZWFjdC9Bc3Npc3RhbnRDb250ZXh0LnRzPzI1YTgiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9yZWFjdC91dGlscy9jcmVhdGVDb250ZXh0SG9vay50cz8yNDhhIiwid2VicGFjazovL19OX0UvLi4vc3JjL2NvbnRleHQvcmVhY3QvdXRpbHMvY3JlYXRlQ29udGV4dFN0b3JlSG9vay50cz9iYzkzIiwid2VicGFjazovL19OX0UvLi4vc3JjL2NvbnRleHQvc3RvcmVzL0Fzc2lzdGFudFRvb2xVSXMudHM/YzdjZiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9jb250ZXh0L3Byb3ZpZGVycy9UaHJlYWRSdW50aW1lUHJvdmlkZXIudHN4PzI4NDQiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9yZWFjdC9UaHJlYWRDb250ZXh0LnRzPzY1NzYiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9zdG9yZXMvVGhyZWFkVmlld3BvcnQudHN4P2FiMGUiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9SZWFkb25seVN0b3JlLnRzPzE4YjkiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9wcm92aWRlcnMvVGV4dENvbnRlbnRQYXJ0UHJvdmlkZXIudHN4PzU5YjIiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9yZWFjdC9Db250ZW50UGFydENvbnRleHQudHM/NjdiMyIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9hcGkvQ29udGVudFBhcnRSdW50aW1lLnRzPzRkNDMiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9yZWFjdC9NZXNzYWdlQ29udGV4dC50cz83M2JiIiwid2VicGFjazovL19OX0UvLi4vc3JjL2NvbnRleHQvcmVhY3QvQ29tcG9zZXJDb250ZXh0LnRzPzVkYzgiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvaG9va3MvdXNlQXBwZW5kTWVzc2FnZS50c3g/ZmY0OCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ob29rcy91c2VTd2l0Y2hUb05ld1RocmVhZC50c3g/MGE1OSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9tb2RlbC1jb25maWcvdXNlQXNzaXN0YW50VG9vbC50c3g/NTI3NCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9tb2RlbC1jb25maWcvbWFrZUFzc2lzdGFudFRvb2wudHN4PzUzMmEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvbW9kZWwtY29uZmlnL3VzZUFzc2lzdGFudFRvb2xVSS50c3g/OWZmMCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9tb2RlbC1jb25maWcvbWFrZUFzc2lzdGFudFRvb2xVSS50c3g/MzcxNyIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9tb2RlbC1jb25maWcvdXNlQXNzaXN0YW50SW5zdHJ1Y3Rpb25zLnRzeD82MDkyIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZS1ob29rcy9hY3Rpb25CYXIvdXNlQWN0aW9uQmFyQ29weS50c3g/ODI3ZCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmUtaG9va3MvYWN0aW9uQmFyL3VzZUFjdGlvbkJhckVkaXQudHN4PzFiNDgiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlLWhvb2tzL2FjdGlvbkJhci91c2VBY3Rpb25CYXJSZWxvYWQudHN4PzM1ZWMiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvdXRpbHMvY29tYmluZWQvdXNlQ29tYmluZWRTdG9yZS50cz9kNzU2Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3V0aWxzL2NvbWJpbmVkL2NyZWF0ZUNvbWJpbmVkU3RvcmUudHM/YzBiZiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmUtaG9va3MvYWN0aW9uQmFyL3VzZUFjdGlvbkJhclNwZWFrLnRzeD9lZjBiIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZS1ob29rcy9hY3Rpb25CYXIvdXNlQWN0aW9uQmFyU3RvcFNwZWFraW5nLnRzeD9mZDYyIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZS1ob29rcy9hY3Rpb25CYXIvdXNlQWN0aW9uQmFyRmVlZGJhY2tQb3NpdGl2ZS50c3g/NGMzYyIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmUtaG9va3MvYWN0aW9uQmFyL3VzZUFjdGlvbkJhckZlZWRiYWNrTmVnYXRpdmUudHN4PzAyOTEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlLWhvb2tzL2JyYW5jaFBpY2tlci91c2VCcmFuY2hQaWNrZXJDb3VudC50c3g/ZjNjNyIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmUtaG9va3MvYnJhbmNoUGlja2VyL3VzZUJyYW5jaFBpY2tlck5leHQudHN4P2QwY2IiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlLWhvb2tzL2JyYW5jaFBpY2tlci91c2VCcmFuY2hQaWNrZXJOdW1iZXIudHN4P2I0NTEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlLWhvb2tzL2JyYW5jaFBpY2tlci91c2VCcmFuY2hQaWNrZXJQcmV2aW91cy50c3g/ZGIzZiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmUtaG9va3MvY29tcG9zZXIvdXNlQ29tcG9zZXJDYW5jZWwudHN4P2NjNDMiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlLWhvb2tzL2NvbXBvc2VyL3VzZUNvbXBvc2VySWYudHN4P2RhOTMiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlLWhvb2tzL2NvbXBvc2VyL3VzZUNvbXBvc2VyU2VuZC50c3g/NzE5ZSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmUtaG9va3MvY29tcG9zZXIvdXNlQ29tcG9zZXJBZGRBdHRhY2htZW50LnRzeD9kZTRhIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZS1ob29rcy9jb250ZW50UGFydC91c2VDb250ZW50UGFydERpc3BsYXkudHN4P2RiNmUiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlLWhvb2tzL2NvbnRlbnRQYXJ0L3VzZUNvbnRlbnRQYXJ0SW1hZ2UudHN4P2VhNTYiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlLWhvb2tzL2NvbnRlbnRQYXJ0L3VzZUNvbnRlbnRQYXJ0VGV4dC50c3g/YjI2NSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmUtaG9va3MvbWVzc2FnZS91c2VNZXNzYWdlSWYudHN4P2ViNjgiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlLWhvb2tzL3RocmVhZC91c2VUaHJlYWRJZi50c3g/NGZkOCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmUtaG9va3MvdGhyZWFkL3VzZVRocmVhZEVtcHR5LnRzeD9jY2E0Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZS1ob29rcy90aHJlYWQvdXNlVGhyZWFkU2Nyb2xsVG9Cb3R0b20udHN4PzVkNTEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlLWhvb2tzL3RocmVhZC91c2VUaHJlYWRTdWdnZXN0aW9uLnRzeD8wZDIyIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvYWN0aW9uQmFyL2luZGV4LnRzPzRkMDUiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9hY3Rpb25CYXIvQWN0aW9uQmFyUm9vdC50c3g/ZDVhNCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2FjdGlvbkJhci91c2VBY3Rpb25CYXJGbG9hdFN0YXR1cy50c3g/NmVlNiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2FjdGlvbkJhci9BY3Rpb25CYXJDb3B5LnRzeD9lNjlhIiwid2VicGFjazovL19OX0UvLi4vc3JjL3V0aWxzL2NyZWF0ZUFjdGlvbkJ1dHRvbi50c3g/NmMyOCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2FjdGlvbkJhci9BY3Rpb25CYXJSZWxvYWQudHN4Pzk3YTAiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9hY3Rpb25CYXIvQWN0aW9uQmFyRWRpdC50c3g/ZGIzOSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2FjdGlvbkJhci9BY3Rpb25CYXJTcGVhay50c3g/MDYwMCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2FjdGlvbkJhci9BY3Rpb25CYXJTdG9wU3BlYWtpbmcudHN4PzI5NzciLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9hY3Rpb25CYXIvQWN0aW9uQmFyRmVlZGJhY2tQb3NpdGl2ZS50c3g/ZDJkNiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2FjdGlvbkJhci9BY3Rpb25CYXJGZWVkYmFja05lZ2F0aXZlLnRzeD84N2VjIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvYXNzaXN0YW50TW9kYWwvaW5kZXgudHM/MDQwNiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2Fzc2lzdGFudE1vZGFsL0Fzc2lzdGFudE1vZGFsUm9vdC50c3g/ZjdmNyIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2Fzc2lzdGFudE1vZGFsL3Njb3BlLnRzeD9jZTZjIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvYXNzaXN0YW50TW9kYWwvQXNzaXN0YW50TW9kYWxUcmlnZ2VyLnRzeD9hYWE0Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvYXNzaXN0YW50TW9kYWwvQXNzaXN0YW50TW9kYWxDb250ZW50LnRzeD83YmY1Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvYXNzaXN0YW50TW9kYWwvQXNzaXN0YW50TW9kYWxBbmNob3IudHN4Pzg5NjQiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9hdHRhY2htZW50L2luZGV4LnRzP2UyZGMiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9hdHRhY2htZW50L0F0dGFjaG1lbnRSb290LnRzeD83ZGNhIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvYXR0YWNobWVudC9BdHRhY2htZW50VGh1bWIudHN4P2YyNzEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9yZWFjdC9BdHRhY2htZW50Q29udGV4dC50cz8wNjIxIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvYXR0YWNobWVudC9BdHRhY2htZW50TmFtZS50c3g/ZjU1MiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmUtaG9va3MvYXR0YWNobWVudC91c2VBdHRhY2htZW50UmVtb3ZlLnRzPzAyYTkiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9hdHRhY2htZW50L0F0dGFjaG1lbnRSZW1vdmUudHN4P2RhMTEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9icmFuY2hQaWNrZXIvaW5kZXgudHM/MzVlYyIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2JyYW5jaFBpY2tlci9CcmFuY2hQaWNrZXJOZXh0LnRzeD9iNGJlIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvYnJhbmNoUGlja2VyL0JyYW5jaFBpY2tlclByZXZpb3VzLnRzeD9iZjliIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvYnJhbmNoUGlja2VyL0JyYW5jaFBpY2tlckNvdW50LnRzeD9iYjVlIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvYnJhbmNoUGlja2VyL0JyYW5jaFBpY2tlck51bWJlci50c3g/Y2JhMCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2JyYW5jaFBpY2tlci9CcmFuY2hQaWNrZXJSb290LnRzeD9hZTE4Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvbWVzc2FnZS9pbmRleC50cz83ZDdlIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvbWVzc2FnZS9NZXNzYWdlUm9vdC50c3g/OGVkNCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy91dGlscy9ob29rcy91c2VNYW5hZ2VkUmVmLnRzPzQyNTUiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9tZXNzYWdlL01lc3NhZ2VJZi50c3g/ZGIyNSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL21lc3NhZ2UvTWVzc2FnZUNvbnRlbnQudHN4P2IzMTUiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9wcm92aWRlcnMvQ29udGVudFBhcnRSdW50aW1lUHJvdmlkZXIudHN4P2I5NTEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9jb250ZW50UGFydC9Db250ZW50UGFydFRleHQudHN4P2RhNTQiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvdXRpbHMvc21vb3RoL3VzZVNtb290aC50c3g/NDkyZCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy91dGlscy9zbW9vdGgvU21vb3RoQ29udGV4dC50c3g/ZTcxOCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2NvbnRlbnRQYXJ0L0NvbnRlbnRQYXJ0SW1hZ2UudHN4P2ZiMTAiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9jb250ZW50UGFydC9Db250ZW50UGFydERpc3BsYXkudHN4P2M1YjUiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9jb250ZW50UGFydC9Db250ZW50UGFydEluUHJvZ3Jlc3MudHN4PzNmODIiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvdXRpbHMvZ2V0VGhyZWFkTWVzc2FnZVRleHQudHN4PzU0YWEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvYXBpL0F0dGFjaG1lbnRSdW50aW1lLnRzP2FjYjIiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvYXBpL3N1YnNjcmliYWJsZS9CYXNlU3ViamVjdC50cz9iOGFiIiwid2VicGFjazovL19OX0UvLi4vc3JjL2FwaS9zdWJzY3JpYmFibGUvU0tJUF9VUERBVEUudHM/Y2EwOCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9hcGkvc3Vic2NyaWJhYmxlL0xhenlNZW1vaXplU3ViamVjdC50cz9hZGUwIiwid2VicGFjazovL19OX0UvLi4vc3JjL2FwaS9zdWJzY3JpYmFibGUvc2hhbGxvd0VxdWFsLnRzPzc1MGEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvYXBpL3N1YnNjcmliYWJsZS9TaGFsbG93TWVtb2l6ZVN1YmplY3QudHM/ZjY4NSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9hcGkvQ29tcG9zZXJSdW50aW1lLnRzP2E1ZDYiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvYXBpL3N1YnNjcmliYWJsZS9OZXN0ZWRTdWJzY3JpcHRpb25TdWJqZWN0LnRzP2VmZDciLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvYXBpL01lc3NhZ2VSdW50aW1lLnRzPzFhMzEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9tZXNzYWdlL01lc3NhZ2VJblByb2dyZXNzLnRzeD80ZmM3Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvbWVzc2FnZS9NZXNzYWdlQXR0YWNobWVudHMudHN4P2JhNWYiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9wcm92aWRlcnMvQXR0YWNobWVudFJ1bnRpbWVQcm92aWRlci50c3g/ZjFmOCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2NvbXBvc2VyL2luZGV4LnRzPzYxN2MiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9jb21wb3Nlci9Db21wb3NlclJvb3QudHN4PzY5NzUiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9jb21wb3Nlci9Db21wb3NlcklucHV0LnRzeD82NzQ2Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3V0aWxzL2hvb2tzL3VzZU9uU2Nyb2xsVG9Cb3R0b20udHN4PzUyOWIiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9jb21wb3Nlci9Db21wb3NlclNlbmQudHN4Pzc5YjciLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9jb21wb3Nlci9Db21wb3NlckNhbmNlbC50c3g/YzEyYSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2NvbXBvc2VyL0NvbXBvc2VyQWRkQXR0YWNobWVudC50c3g/YTRlZiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL2NvbXBvc2VyL0NvbXBvc2VyQXR0YWNobWVudHMudHN4PzFkM2YiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy9jb21wb3Nlci9Db21wb3NlcklmLnRzeD82NmZkIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvY29udGVudFBhcnQvaW5kZXgudHM/OTA1YiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9wcmltaXRpdmVzL3RocmVhZC9pbmRleC50cz80OTliIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvdGhyZWFkL1RocmVhZFJvb3QudHN4PzQ2ZjgiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy90aHJlYWQvVGhyZWFkRW1wdHkudHN4PzBkMDQiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy90aHJlYWQvVGhyZWFkSWYudHN4Pzk4NjUiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy90aHJlYWQvVGhyZWFkVmlld3BvcnQudHN4PzkyZmIiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlLWhvb2tzL3RocmVhZC91c2VUaHJlYWRWaWV3cG9ydEF1dG9TY3JvbGwudHN4PzA5NzkiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvdXRpbHMvaG9va3MvdXNlT25SZXNpemVDb250ZW50LnRzeD81YmIwIiwid2VicGFjazovL19OX0UvLi4vc3JjL3ByaW1pdGl2ZXMvdGhyZWFkL1RocmVhZE1lc3NhZ2VzLnRzeD8yYTNjIiwid2VicGFjazovL19OX0UvLi4vc3JjL2NvbnRleHQvcHJvdmlkZXJzL01lc3NhZ2VSdW50aW1lUHJvdmlkZXIudHN4PzkyYmMiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvY29udGV4dC9zdG9yZXMvTWVzc2FnZVV0aWxzLnRzPzlhNzMiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy90aHJlYWQvVGhyZWFkU2Nyb2xsVG9Cb3R0b20udHN4Pzk1YzkiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcHJpbWl0aXZlcy90aHJlYWQvVGhyZWFkU3VnZ2VzdGlvbi50c3g/MTllYyIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9jb3JlL3N1YnNjcmliZVRvTWFpblRocmVhZC50cz80YjU3Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2xvY2FsL3VzZUxvY2FsUnVudGltZS50c3g/ODZmZCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9jb3JlL0Jhc2VBc3Npc3RhbnRSdW50aW1lQ29yZS50c3g/YTg2OCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9pbnRlcm5hbC50cz9hYjhkIiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2NvbXBvc2VyL0Jhc2VDb21wb3NlclJ1bnRpbWVDb3JlLnRzeD82NGZjIiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2NvbXBvc2VyL0RlZmF1bHRUaHJlYWRDb21wb3NlclJ1bnRpbWVDb3JlLnRzeD9hOTc1Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3V0aWxzL1Byb3h5Q29uZmlnUHJvdmlkZXIudHM/OWQxMSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy91dGlscy9pZFV0aWxzLnRzeD9iZDFhIiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2VkZ2UvY29udmVydGVycy9mcm9tQ29yZU1lc3NhZ2UudHM/NTYyMyIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy91dGlscy9NZXNzYWdlUmVwb3NpdG9yeS50c3g/MGNkZiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy91aS9iYXNlL3Rvb2x0aXAtaWNvbi1idXR0b24udHN4PzQxNGEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvdWkvYmFzZS90b29sdGlwLnRzeD9lMjY4Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3VpL3V0aWxzL3dpdGhEZWZhdWx0cy50c3g/ZTQzOSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy91aS9iYXNlL2J1dHRvbi50c3g/NzM1YSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9hcGkvVGhyZWFkUnVudGltZS50cz9hMTcyIiwid2VicGFjazovL19OX0UvLi4vc3JjL2FwaS9Bc3Npc3RhbnRSdW50aW1lLnRzP2UzZWUiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcnVudGltZXMvZWRnZS9jb252ZXJ0ZXJzL2Zyb21MYW5ndWFnZU1vZGVsTWVzc2FnZXMudHM/ZDhmZCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9lZGdlL2NvbnZlcnRlcnMvZnJvbUxhbmd1YWdlTW9kZWxUb29scy50cz81ZjEwIiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2VkZ2Uvc3RyZWFtcy91dGlscy9jaHVua0J5TGluZVN0cmVhbS50cz8yOWE0Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2VkZ2Uvc3RyZWFtcy91dGlscy9zdHJlYW1QYXJ0RGVjb2RlclN0cmVhbS50cz81OGNjIiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2VkZ2Uvc3RyZWFtcy91dGlscy9pbmRleC50cz9hMDU4Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2VkZ2UvdXNlRWRnZVJ1bnRpbWUudHM/YTBjMCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9lZGdlL3N0cmVhbXMvYXNzaXN0YW50RGVjb2RlclN0cmVhbS50cz85NTZlIiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2VkZ2UvRWRnZUNoYXRBZGFwdGVyLnRzPzMwZGYiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcnVudGltZXMvbG9jYWwvTG9jYWxSdW50aW1lT3B0aW9ucy50c3g/NGQ0OCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9sb2NhbC9zaG91bGRDb250aW51ZS50c3g/MDhiMyIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9jb21wb3Nlci9EZWZhdWx0RWRpdENvbXBvc2VyUnVudGltZUNvcmUudHN4P2Y2ZmQiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcnVudGltZXMvY29yZS9CYXNlVGhyZWFkUnVudGltZUNvcmUudHN4PzA1NjAiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcnVudGltZXMvbG9jYWwvTG9jYWxUaHJlYWRSdW50aW1lQ29yZS50c3g/YWJmYSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9sb2NhbC9Mb2NhbFJ1bnRpbWVDb3JlLnRzeD8yMzY4Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2V4dGVybmFsLXN0b3JlL3VzZUV4dGVybmFsU3RvcmVSdW50aW1lLnRzeD8zN2NmIiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2V4dGVybmFsLXN0b3JlL2dldEV4dGVybmFsU3RvcmVNZXNzYWdlLnRzeD85NmI0Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2V4dGVybmFsLXN0b3JlL1RocmVhZE1lc3NhZ2VDb252ZXJ0ZXIudHM/NjI2NSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9leHRlcm5hbC1zdG9yZS9hdXRvLXN0YXR1cy50c3g/YWFiYiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9leHRlcm5hbC1zdG9yZS9UaHJlYWRNZXNzYWdlTGlrZS50c3g/YmQ4YSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9leHRlcm5hbC1zdG9yZS9FeHRlcm5hbFN0b3JlVGhyZWFkUnVudGltZUNvcmUudHN4P2M3YzMiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcnVudGltZXMvZXh0ZXJuYWwtc3RvcmUvRXh0ZXJuYWxTdG9yZVJ1bnRpbWVDb3JlLnRzeD9jZjU2Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2V4dGVybmFsLXN0b3JlL2V4dGVybmFsLW1lc3NhZ2UtY29udmVydGVyLnRzeD80NGJkIiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2Rhbmdlcm91cy1pbi1icm93c2VyL3VzZURhbmdlcm91c0luQnJvd3NlclJ1bnRpbWUudHM/OTA3MSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9kYW5nZXJvdXMtaW4tYnJvd3Nlci9EYW5nZXJvdXNJbkJyb3dzZXJBZGFwdGVyLnRzP2VjMjgiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvcnVudGltZXMvc3BlZWNoL1dlYlNwZWVjaFN5bnRoZXNpc0FkYXB0ZXIudHM/MTcxYyIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9hdHRhY2htZW50L1NpbXBsZUltYWdlQXR0YWNobWVudEFkYXB0ZXIudHM/MWMyZSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9ydW50aW1lcy9hdHRhY2htZW50L1NpbXBsZVRleHRBdHRhY2htZW50QWRhcHRlci50cz8wN2ZkIiwid2VicGFjazovL19OX0UvLi4vc3JjL3J1bnRpbWVzL2F0dGFjaG1lbnQvQ29tcG9zaXRlQXR0YWNobWVudEFkYXB0ZXIudHM/ZjAxNyIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy91aS90aHJlYWQtY29uZmlnLnRzeD84YjQ0Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3VpL2Fzc2lzdGFudC1hY3Rpb24tYmFyLnRzeD84MDRiIiwid2VicGFjazovL19OX0UvLi4vc3JjL3VpL2Fzc2lzdGFudC1tZXNzYWdlLnRzeD85MTA0Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3VpL2JyYW5jaC1waWNrZXIudHN4P2UzN2IiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvdWkvYmFzZS9hdmF0YXIudHN4PzE4OTEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvdWkvY29udGVudC1wYXJ0LnRzeD9iNTZmIiwid2VicGFjazovL19OX0UvLi4vc3JjL3VpL2Fzc2lzdGFudC1tb2RhbC50c3g/YTcwZiIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy91aS90aHJlYWQudHN4PzRjMTYiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvdWkvY29tcG9zZXIudHN4PzI2ZGMiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvdWkvYmFzZS9DaXJjbGVTdG9wSWNvbi50c3g/NWFhOSIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy91aS9hdHRhY2htZW50LnRzeD9jZmYwIiwid2VicGFjazovL19OX0UvLi4vc3JjL3VpL2Jhc2UvZGlhbG9nLnRzeD8wNTBiIiwid2VicGFjazovL19OX0UvLi4vc3JjL3VpL3RocmVhZC13ZWxjb21lLnRzeD84M2Y1Iiwid2VicGFjazovL19OX0UvLi4vc3JjL3VpL3VzZXItbWVzc2FnZS50c3g/YjBhMCIsIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy91aS91c2VyLWFjdGlvbi1iYXIudHN4P2FiMGEiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvdWkvZWRpdC1jb21wb3Nlci50c3g/NDI1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHR5cGUgeyBGQywgUHJvcHNXaXRoQ2hpbGRyZW4gfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IG1lbW8sIHVzZUVmZmVjdCwgdXNlTWVtbywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IEFzc2lzdGFudENvbnRleHQgfSBmcm9tIFwiLi4vcmVhY3QvQXNzaXN0YW50Q29udGV4dFwiO1xuaW1wb3J0IHsgbWFrZUFzc2lzdGFudFRvb2xVSXNTdG9yZSB9IGZyb20gXCIuLi9zdG9yZXMvQXNzaXN0YW50VG9vbFVJc1wiO1xuaW1wb3J0IHsgVGhyZWFkUnVudGltZVByb3ZpZGVyIH0gZnJvbSBcIi4vVGhyZWFkUnVudGltZVByb3ZpZGVyXCI7XG5pbXBvcnQgeyBBc3Npc3RhbnRSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2FwaS9Bc3Npc3RhbnRSdW50aW1lXCI7XG5pbXBvcnQgeyBjcmVhdGUgfSBmcm9tIFwienVzdGFuZFwiO1xuaW1wb3J0IHsgd3JpdGFibGVTdG9yZSB9IGZyb20gXCIuLi9SZWFkb25seVN0b3JlXCI7XG5cbnR5cGUgQXNzaXN0YW50UnVudGltZVByb3ZpZGVyUHJvcHMgPSB7XG4gIHJ1bnRpbWU6IEFzc2lzdGFudFJ1bnRpbWU7XG59O1xuXG5jb25zdCB1c2VBc3Npc3RhbnRSdW50aW1lU3RvcmUgPSAocnVudGltZTogQXNzaXN0YW50UnVudGltZSkgPT4ge1xuICBjb25zdCBbc3RvcmVdID0gdXNlU3RhdGUoKCkgPT4gY3JlYXRlKCgpID0+IHJ1bnRpbWUpKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHdyaXRhYmxlU3RvcmUoc3RvcmUpLnNldFN0YXRlKHJ1bnRpbWUsIHRydWUpO1xuICB9LCBbcnVudGltZSwgc3RvcmVdKTtcblxuICByZXR1cm4gc3RvcmU7XG59O1xuXG5jb25zdCB1c2VBc3Npc3RhbnRUb29sVUlzU3RvcmUgPSAoKSA9PiB7XG4gIHJldHVybiB1c2VNZW1vKCgpID0+IG1ha2VBc3Npc3RhbnRUb29sVUlzU3RvcmUoKSwgW10pO1xufTtcblxuZXhwb3J0IGNvbnN0IEFzc2lzdGFudFJ1bnRpbWVQcm92aWRlckltcGw6IEZDPFxuICBQcm9wc1dpdGhDaGlsZHJlbjxBc3Npc3RhbnRSdW50aW1lUHJvdmlkZXJQcm9wcz5cbj4gPSAoeyBjaGlsZHJlbiwgcnVudGltZSB9KSA9PiB7XG4gIGNvbnN0IHVzZUFzc2lzdGFudFJ1bnRpbWUgPSB1c2VBc3Npc3RhbnRSdW50aW1lU3RvcmUocnVudGltZSk7XG4gIGNvbnN0IHVzZVRvb2xVSXMgPSB1c2VBc3Npc3RhbnRUb29sVUlzU3RvcmUoKTtcbiAgY29uc3QgY29udGV4dCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICB1c2VUb29sVUlzLFxuICAgICAgdXNlQXNzaXN0YW50UnVudGltZSxcbiAgICAgIHVzZUFzc2lzdGFudEFjdGlvbnM6IHVzZUFzc2lzdGFudFJ1bnRpbWUsXG4gICAgfTtcbiAgfSwgW3VzZUFzc2lzdGFudFJ1bnRpbWUsIHVzZVRvb2xVSXNdKTtcblxuICByZXR1cm4gKFxuICAgIDxBc3Npc3RhbnRDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXtjb250ZXh0fT5cbiAgICAgIDxUaHJlYWRSdW50aW1lUHJvdmlkZXIgcnVudGltZT17cnVudGltZS50aHJlYWR9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L1RocmVhZFJ1bnRpbWVQcm92aWRlcj5cbiAgICA8L0Fzc2lzdGFudENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgQXNzaXN0YW50UnVudGltZVByb3ZpZGVyID0gbWVtbyhBc3Npc3RhbnRSdW50aW1lUHJvdmlkZXJJbXBsKTtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHlwZSB7IEFzc2lzdGFudFRvb2xVSXNTdGF0ZSB9IGZyb20gXCIuLi9zdG9yZXMvQXNzaXN0YW50VG9vbFVJc1wiO1xuaW1wb3J0IHsgUmVhZG9ubHlTdG9yZSB9IGZyb20gXCIuLi9SZWFkb25seVN0b3JlXCI7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0SG9vayB9IGZyb20gXCIuL3V0aWxzL2NyZWF0ZUNvbnRleHRIb29rXCI7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0U3RvcmVIb29rIH0gZnJvbSBcIi4vdXRpbHMvY3JlYXRlQ29udGV4dFN0b3JlSG9va1wiO1xuaW1wb3J0IHsgVXNlQm91bmRTdG9yZSB9IGZyb20gXCJ6dXN0YW5kXCI7XG5pbXBvcnQgeyBBc3Npc3RhbnRSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2FwaS9Bc3Npc3RhbnRSdW50aW1lXCI7XG5cbmV4cG9ydCB0eXBlIEFzc2lzdGFudENvbnRleHRWYWx1ZSA9IHtcbiAgdXNlVG9vbFVJczogVXNlQm91bmRTdG9yZTxSZWFkb25seVN0b3JlPEFzc2lzdGFudFRvb2xVSXNTdGF0ZT4+O1xuICB1c2VBc3Npc3RhbnRSdW50aW1lOiBVc2VCb3VuZFN0b3JlPFJlYWRvbmx5U3RvcmU8QXNzaXN0YW50UnVudGltZT4+O1xuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYHVzZUFzc2lzdGFudFJ1bnRpbWVgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgdXNlQXNzaXN0YW50QWN0aW9uczogVXNlQm91bmRTdG9yZTxSZWFkb25seVN0b3JlPEFzc2lzdGFudFJ1bnRpbWU+Pjtcbn07XG5cbmV4cG9ydCBjb25zdCBBc3Npc3RhbnRDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxBc3Npc3RhbnRDb250ZXh0VmFsdWUgfCBudWxsPihcbiAgbnVsbCxcbik7XG5cbmV4cG9ydCBjb25zdCB1c2VBc3Npc3RhbnRDb250ZXh0ID0gY3JlYXRlQ29udGV4dEhvb2soXG4gIEFzc2lzdGFudENvbnRleHQsXG4gIFwiQXNzaXN0YW50UnVudGltZVByb3ZpZGVyXCIsXG4pO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlQXNzaXN0YW50UnVudGltZShvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGZhbHNlIHwgdW5kZWZpbmVkO1xufSk6IEFzc2lzdGFudFJ1bnRpbWU7XG5leHBvcnQgZnVuY3Rpb24gdXNlQXNzaXN0YW50UnVudGltZShvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KTogQXNzaXN0YW50UnVudGltZSB8IG51bGw7XG5leHBvcnQgZnVuY3Rpb24gdXNlQXNzaXN0YW50UnVudGltZShvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VBc3Npc3RhbnRDb250ZXh0KG9wdGlvbnMpO1xuICBpZiAoIWNvbnRleHQpIHJldHVybiBudWxsO1xuICByZXR1cm4gY29udGV4dC51c2VBc3Npc3RhbnRSdW50aW1lKCk7XG59XG5cbmV4cG9ydCBjb25zdCBhY3Rpb25zID0gY3JlYXRlQ29udGV4dFN0b3JlSG9vayhcbiAgdXNlQXNzaXN0YW50Q29udGV4dCxcbiAgXCJ1c2VBc3Npc3RhbnRBY3Rpb25zXCIsXG4pO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgdXNlQXNzaXN0YW50UnVudGltZWAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gKi9cbmV4cG9ydCBjb25zdCB1c2VBc3Npc3RhbnRBY3Rpb25zU3RvcmUgPSBhY3Rpb25zLnVzZUFzc2lzdGFudEFjdGlvbnNTdG9yZTtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYHVzZUFzc2lzdGFudFJ1bnRpbWVgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICovXG5leHBvcnQgY29uc3QgdXNlQXNzaXN0YW50QWN0aW9ucyA9IGFjdGlvbnMudXNlQXNzaXN0YW50QWN0aW9ucztcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYHVzZUFzc2lzdGFudFJ1bnRpbWVgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICovXG5leHBvcnQgY29uc3QgdXNlQXNzaXN0YW50UnVudGltZVN0b3JlID0gdXNlQXNzaXN0YW50QWN0aW9uc1N0b3JlO1xuXG5leHBvcnQgY29uc3QgeyB1c2VUb29sVUlzLCB1c2VUb29sVUlzU3RvcmUgfSA9IGNyZWF0ZUNvbnRleHRTdG9yZUhvb2soXG4gIHVzZUFzc2lzdGFudENvbnRleHQsXG4gIFwidXNlVG9vbFVJc1wiLFxuKTtcbiIsImltcG9ydCB7IHVzZUNvbnRleHQsIENvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcblxuLyoqXG4gKiBDcmVhdGVzIGEgY29udGV4dCBob29rIHdpdGggb3B0aW9uYWwgc3VwcG9ydC5cbiAqIEBwYXJhbSBjb250ZXh0IC0gVGhlIFJlYWN0IGNvbnRleHQgdG8gY29uc3VtZS5cbiAqIEBwYXJhbSBwcm92aWRlck5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgcHJvdmlkZXIgZm9yIGVycm9yIG1lc3NhZ2VzLlxuICogQHJldHVybnMgQSBob29rIGZ1bmN0aW9uIHRoYXQgcHJvdmlkZXMgdGhlIGNvbnRleHQgdmFsdWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0SG9vazxUPihcbiAgY29udGV4dDogQ29udGV4dDxUIHwgbnVsbD4sXG4gIHByb3ZpZGVyTmFtZTogc3RyaW5nLFxuKSB7XG4gIGZ1bmN0aW9uIHVzZUNvbnRleHRIb29rKG9wdGlvbnM/OiB7IG9wdGlvbmFsPzogZmFsc2UgfCB1bmRlZmluZWQgfSk6IFQ7XG4gIGZ1bmN0aW9uIHVzZUNvbnRleHRIb29rKG9wdGlvbnM/OiB7XG4gICAgb3B0aW9uYWw/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICB9KTogVCB8IG51bGw7XG4gIGZ1bmN0aW9uIHVzZUNvbnRleHRIb29rKG9wdGlvbnM/OiB7IG9wdGlvbmFsPzogYm9vbGVhbiB8IHVuZGVmaW5lZCB9KSB7XG4gICAgY29uc3QgY29udGV4dFZhbHVlID0gdXNlQ29udGV4dChjb250ZXh0KTtcbiAgICBpZiAoIW9wdGlvbnM/Lm9wdGlvbmFsICYmICFjb250ZXh0VmFsdWUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVGhpcyBjb21wb25lbnQgbXVzdCBiZSB1c2VkIHdpdGhpbiAke3Byb3ZpZGVyTmFtZX0uYCk7XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0VmFsdWU7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dEhvb2s7XG59XG4iLCJpbXBvcnQgeyBVc2VCb3VuZFN0b3JlIH0gZnJvbSBcInp1c3RhbmRcIjtcbmltcG9ydCB7IFJlYWRvbmx5U3RvcmUgfSBmcm9tIFwiLi4vLi4vUmVhZG9ubHlTdG9yZVwiO1xuXG4vKipcbiAqIENyZWF0ZXMgaG9va3MgZm9yIGFjY2Vzc2luZyBhIHN0b3JlIHdpdGhpbiBhIGNvbnRleHQuXG4gKiBAcGFyYW0gY29udGV4dEhvb2sgLSBUaGUgaG9vayB0byBhY2Nlc3MgdGhlIGNvbnRleHQuXG4gKiBAcGFyYW0gY29udGV4dEtleSAtIFRoZSBrZXkgb2YgdGhlIHN0b3JlIGluIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGhvb2tzOiBgdXNlLi4uYCBhbmQgYHVzZS4uLlN0b3JlYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbnRleHRTdG9yZUhvb2s8VCwgSyBleHRlbmRzIGtleW9mIFQgJiBzdHJpbmc+KFxuICBjb250ZXh0SG9vazogKG9wdGlvbnM/OiB7IG9wdGlvbmFsPzogYm9vbGVhbiB9KSA9PiBUIHwgbnVsbCxcbiAgY29udGV4dEtleTogSyxcbikge1xuICB0eXBlIFN0b3JlVHlwZSA9IFRbS107XG4gIHR5cGUgU3RhdGVUeXBlID0gU3RvcmVUeXBlIGV4dGVuZHMgUmVhZG9ubHlTdG9yZTxpbmZlciBTPiA/IFMgOiBuZXZlcjtcblxuICAvLyBEZWZpbmUgdXNlU3RvcmVTdG9yZUhvb2sgd2l0aCBvdmVybG9hZHNcbiAgZnVuY3Rpb24gdXNlU3RvcmVTdG9yZUhvb2soKTogUmVhZG9ubHlTdG9yZTxTdGF0ZVR5cGU+O1xuICBmdW5jdGlvbiB1c2VTdG9yZVN0b3JlSG9vayhvcHRpb25zOiB7XG4gICAgb3B0aW9uYWw6IHRydWU7XG4gIH0pOiBSZWFkb25seVN0b3JlPFN0YXRlVHlwZT4gfCBudWxsO1xuICBmdW5jdGlvbiB1c2VTdG9yZVN0b3JlSG9vayhvcHRpb25zPzoge1xuICAgIG9wdGlvbmFsPzogYm9vbGVhbjtcbiAgfSk6IFJlYWRvbmx5U3RvcmU8U3RhdGVUeXBlPiB8IG51bGwge1xuICAgIGNvbnN0IGNvbnRleHQgPSBjb250ZXh0SG9vayhvcHRpb25zKTtcbiAgICBpZiAoIWNvbnRleHQpIHJldHVybiBudWxsO1xuICAgIHJldHVybiBjb250ZXh0W2NvbnRleHRLZXldIGFzIFJlYWRvbmx5U3RvcmU8U3RhdGVUeXBlPjtcbiAgfVxuXG4gIC8vIERlZmluZSB1c2VTdG9yZUhvb2sgd2l0aCBvdmVybG9hZHNcbiAgZnVuY3Rpb24gdXNlU3RvcmVIb29rKCk6IFN0YXRlVHlwZTtcbiAgZnVuY3Rpb24gdXNlU3RvcmVIb29rPFRTZWxlY3RlZD4oXG4gICAgc2VsZWN0b3I6IChzdGF0ZTogU3RhdGVUeXBlKSA9PiBUU2VsZWN0ZWQsXG4gICk6IFRTZWxlY3RlZDtcbiAgZnVuY3Rpb24gdXNlU3RvcmVIb29rKG9wdGlvbnM6IHsgb3B0aW9uYWw6IHRydWUgfSk6IFN0YXRlVHlwZSB8IG51bGw7XG4gIGZ1bmN0aW9uIHVzZVN0b3JlSG9vazxUU2VsZWN0ZWQ+KG9wdGlvbnM6IHtcbiAgICBvcHRpb25hbDogdHJ1ZTtcbiAgICBzZWxlY3Rvcj86IChzdGF0ZTogU3RhdGVUeXBlKSA9PiBUU2VsZWN0ZWQ7XG4gIH0pOiBUU2VsZWN0ZWQgfCBudWxsO1xuICBmdW5jdGlvbiB1c2VTdG9yZUhvb2s8VFNlbGVjdGVkPihcbiAgICBwYXJhbT86XG4gICAgICB8ICgoc3RhdGU6IFN0YXRlVHlwZSkgPT4gVFNlbGVjdGVkKVxuICAgICAgfCB7XG4gICAgICAgICAgb3B0aW9uYWw/OiBib29sZWFuO1xuICAgICAgICAgIHNlbGVjdG9yPzogKHN0YXRlOiBTdGF0ZVR5cGUpID0+IFRTZWxlY3RlZDtcbiAgICAgICAgfSxcbiAgKTogVFNlbGVjdGVkIHwgU3RhdGVUeXBlIHwgbnVsbCB7XG4gICAgbGV0IG9wdGlvbmFsID0gZmFsc2U7XG4gICAgbGV0IHNlbGVjdG9yOiAoKHN0YXRlOiBTdGF0ZVR5cGUpID0+IFRTZWxlY3RlZCkgfCB1bmRlZmluZWQ7XG5cbiAgICBpZiAodHlwZW9mIHBhcmFtID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIHNlbGVjdG9yID0gcGFyYW07XG4gICAgfSBlbHNlIGlmIChwYXJhbSAmJiB0eXBlb2YgcGFyYW0gPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIG9wdGlvbmFsID0gISFwYXJhbS5vcHRpb25hbDtcbiAgICAgIHNlbGVjdG9yID0gcGFyYW0uc2VsZWN0b3I7XG4gICAgfVxuXG4gICAgY29uc3Qgc3RvcmUgPSB1c2VTdG9yZVN0b3JlSG9vayh7XG4gICAgICBvcHRpb25hbCxcbiAgICB9IGFzIGFueSkgYXMgVXNlQm91bmRTdG9yZTxSZWFkb25seVN0b3JlPFN0YXRlVHlwZT4+O1xuICAgIGlmICghc3RvcmUpIHJldHVybiBudWxsO1xuICAgIHJldHVybiBzZWxlY3RvciA/IHN0b3JlKHNlbGVjdG9yKSA6IHN0b3JlKCk7XG4gIH1cblxuICAvLyBSZXR1cm4gYW4gb2JqZWN0IHdpdGgga2V5cyBiYXNlZCBvbiBjb250ZXh0S2V5XG4gIHJldHVybiB7XG4gICAgW2NvbnRleHRLZXldOiB1c2VTdG9yZUhvb2ssXG4gICAgW2Ake2NvbnRleHRLZXl9U3RvcmVgXTogdXNlU3RvcmVTdG9yZUhvb2ssXG4gIH0gYXMge1xuICAgIFtQIGluIEtdOiB0eXBlb2YgdXNlU3RvcmVIb29rO1xuICB9ICYge1xuICAgIFtQIGluIGAke0t9U3RvcmVgXTogdHlwZW9mIHVzZVN0b3JlU3RvcmVIb29rO1xuICB9O1xufVxuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gXCJ6dXN0YW5kXCI7XG5pbXBvcnQgdHlwZSB7IFRvb2xDYWxsQ29udGVudFBhcnRDb21wb25lbnQgfSBmcm9tIFwiLi4vLi4vdHlwZXMvQ29udGVudFBhcnRDb21wb25lbnRUeXBlc1wiO1xuXG5leHBvcnQgdHlwZSBBc3Npc3RhbnRUb29sVUlzU3RhdGUgPSBSZWFkb25seTx7XG4gIGdldFRvb2xVSTogKHRvb2xOYW1lOiBzdHJpbmcpID0+IFRvb2xDYWxsQ29udGVudFBhcnRDb21wb25lbnQgfCBudWxsO1xuICBzZXRUb29sVUk6IChcbiAgICB0b29sTmFtZTogc3RyaW5nLFxuICAgIHJlbmRlcjogVG9vbENhbGxDb250ZW50UGFydENvbXBvbmVudCxcbiAgKSA9PiAoKSA9PiB2b2lkO1xufT47XG5cbmV4cG9ydCBjb25zdCBtYWtlQXNzaXN0YW50VG9vbFVJc1N0b3JlID0gKCkgPT5cbiAgY3JlYXRlPEFzc2lzdGFudFRvb2xVSXNTdGF0ZT4oKHNldCkgPT4ge1xuICAgIGNvbnN0IHJlbmRlcmVycyA9IG5ldyBNYXA8c3RyaW5nLCBUb29sQ2FsbENvbnRlbnRQYXJ0Q29tcG9uZW50W10+KCk7XG5cbiAgICByZXR1cm4gT2JqZWN0LmZyZWV6ZSh7XG4gICAgICBnZXRUb29sVUk6IChuYW1lKSA9PiB7XG4gICAgICAgIGNvbnN0IGFyciA9IHJlbmRlcmVycy5nZXQobmFtZSk7XG4gICAgICAgIGNvbnN0IGxhc3QgPSBhcnI/LmF0KC0xKTtcbiAgICAgICAgaWYgKGxhc3QpIHJldHVybiBsYXN0O1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH0sXG4gICAgICBzZXRUb29sVUk6IChuYW1lLCByZW5kZXIpID0+IHtcbiAgICAgICAgbGV0IGFyciA9IHJlbmRlcmVycy5nZXQobmFtZSk7XG4gICAgICAgIGlmICghYXJyKSB7XG4gICAgICAgICAgYXJyID0gW107XG4gICAgICAgICAgcmVuZGVyZXJzLnNldChuYW1lLCBhcnIpO1xuICAgICAgICB9XG4gICAgICAgIGFyci5wdXNoKHJlbmRlcik7XG4gICAgICAgIHNldCh7fSk7IC8vIG5vdGlmeSB0aGUgc3RvcmUgbGlzdGVuZXJzXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICBjb25zdCBpbmRleCA9IGFyci5pbmRleE9mKHJlbmRlcik7XG4gICAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgYXJyLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChpbmRleCA9PT0gYXJyLmxlbmd0aCkge1xuICAgICAgICAgICAgc2V0KHt9KTsgLy8gbm90aWZ5IHRoZSBzdG9yZSBsaXN0ZW5lcnNcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9LFxuICAgIH0pIHNhdGlzZmllcyBBc3Npc3RhbnRUb29sVUlzU3RhdGU7XG4gIH0pO1xuIiwiaW1wb3J0IHR5cGUgeyBGQywgUHJvcHNXaXRoQ2hpbGRyZW4gfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlTWVtbywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0eXBlIHsgVGhyZWFkQ29udGV4dFZhbHVlIH0gZnJvbSBcIi4uL3JlYWN0L1RocmVhZENvbnRleHRcIjtcbmltcG9ydCB7IFRocmVhZENvbnRleHQgfSBmcm9tIFwiLi4vcmVhY3QvVGhyZWFkQ29udGV4dFwiO1xuaW1wb3J0IHsgbWFrZVRocmVhZFZpZXdwb3J0U3RvcmUgfSBmcm9tIFwiLi4vc3RvcmVzL1RocmVhZFZpZXdwb3J0XCI7XG5pbXBvcnQgeyB3cml0YWJsZVN0b3JlIH0gZnJvbSBcIi4uL1JlYWRvbmx5U3RvcmVcIjtcbmltcG9ydCB7IFRocmVhZFJ1bnRpbWUgfSBmcm9tIFwiLi4vLi4vYXBpL1RocmVhZFJ1bnRpbWVcIjtcbmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gXCJ6dXN0YW5kXCI7XG5pbXBvcnQgeyBUaHJlYWRDb21wb3NlclJ1bnRpbWUgfSBmcm9tIFwiLi4vLi4vYXBpXCI7XG5cbnR5cGUgVGhyZWFkUHJvdmlkZXJQcm9wcyA9IHtcbiAgcnVudGltZTogVGhyZWFkUnVudGltZTtcbn07XG5cbmNvbnN0IHVzZVRocmVhZFJ1bnRpbWVTdG9yZSA9IChydW50aW1lOiBUaHJlYWRSdW50aW1lKSA9PiB7XG4gIGNvbnN0IFtzdG9yZV0gPSB1c2VTdGF0ZSgoKSA9PiBjcmVhdGUoKCkgPT4gcnVudGltZSkpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgd3JpdGFibGVTdG9yZShzdG9yZSkuc2V0U3RhdGUocnVudGltZSwgdHJ1ZSk7XG4gIH0sIFtydW50aW1lLCBzdG9yZV0pO1xuXG4gIHJldHVybiBzdG9yZTtcbn07XG5cbmNvbnN0IHVzZVRocmVhZFN0b3JlID0gKHJ1bnRpbWU6IFRocmVhZFJ1bnRpbWUpID0+IHtcbiAgY29uc3QgW3N0b3JlXSA9IHVzZVN0YXRlKCgpID0+IGNyZWF0ZSgoKSA9PiBydW50aW1lLmdldFN0YXRlKCkpKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCB1cGRhdGVTdGF0ZSA9ICgpID0+XG4gICAgICB3cml0YWJsZVN0b3JlKHN0b3JlKS5zZXRTdGF0ZShydW50aW1lLmdldFN0YXRlKCksIHRydWUpO1xuICAgIHVwZGF0ZVN0YXRlKCk7XG4gICAgcmV0dXJuIHJ1bnRpbWUuc3Vic2NyaWJlKHVwZGF0ZVN0YXRlKTtcbiAgfSwgW3J1bnRpbWUsIHN0b3JlXSk7XG5cbiAgcmV0dXJuIHN0b3JlO1xufTtcblxuY29uc3QgdXNlVGhyZWFkTWVzc2FnZXNTdG9yZSA9IChydW50aW1lOiBUaHJlYWRSdW50aW1lKSA9PiB7XG4gIGNvbnN0IFtzdG9yZV0gPSB1c2VTdGF0ZSgoKSA9PiBjcmVhdGUoKCkgPT4gcnVudGltZS5tZXNzYWdlcykpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgdXBkYXRlU3RhdGUgPSAoKSA9PlxuICAgICAgd3JpdGFibGVTdG9yZShzdG9yZSkuc2V0U3RhdGUocnVudGltZS5tZXNzYWdlcywgdHJ1ZSk7XG4gICAgdXBkYXRlU3RhdGUoKTtcbiAgICByZXR1cm4gcnVudGltZS5zdWJzY3JpYmUodXBkYXRlU3RhdGUpO1xuICB9LCBbcnVudGltZSwgc3RvcmVdKTtcblxuICByZXR1cm4gc3RvcmU7XG59O1xuXG5jb25zdCB1c2VUaHJlYWRDb21wb3NlclN0b3JlID0gKHJ1bnRpbWU6IFRocmVhZENvbXBvc2VyUnVudGltZSkgPT4ge1xuICBjb25zdCBbc3RvcmVdID0gdXNlU3RhdGUoKCkgPT4gY3JlYXRlKCgpID0+IHJ1bnRpbWUuZ2V0U3RhdGUoKSkpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgdXBkYXRlU3RhdGUgPSAoKSA9PlxuICAgICAgd3JpdGFibGVTdG9yZShzdG9yZSkuc2V0U3RhdGUocnVudGltZS5nZXRTdGF0ZSgpLCB0cnVlKTtcbiAgICB1cGRhdGVTdGF0ZSgpO1xuICAgIHJldHVybiBydW50aW1lLnN1YnNjcmliZSh1cGRhdGVTdGF0ZSk7XG4gIH0sIFtydW50aW1lLCBzdG9yZV0pO1xuXG4gIHJldHVybiBzdG9yZTtcbn07XG5cbmV4cG9ydCBjb25zdCBUaHJlYWRSdW50aW1lUHJvdmlkZXI6IEZDPFxuICBQcm9wc1dpdGhDaGlsZHJlbjxUaHJlYWRQcm92aWRlclByb3BzPlxuPiA9ICh7IGNoaWxkcmVuLCBydW50aW1lIH0pID0+IHtcbiAgY29uc3QgdXNlVGhyZWFkUnVudGltZSA9IHVzZVRocmVhZFJ1bnRpbWVTdG9yZShydW50aW1lKTtcbiAgY29uc3QgdXNlVGhyZWFkID0gdXNlVGhyZWFkU3RvcmUocnVudGltZSk7XG4gIGNvbnN0IHVzZVRocmVhZE1lc3NhZ2VzID0gdXNlVGhyZWFkTWVzc2FnZXNTdG9yZShydW50aW1lKTtcbiAgY29uc3QgdXNlVGhyZWFkQ29tcG9zZXIgPSB1c2VUaHJlYWRDb21wb3NlclN0b3JlKHJ1bnRpbWUuY29tcG9zZXIpO1xuXG4gIGNvbnN0IGNvbnRleHQgPSB1c2VNZW1vPFRocmVhZENvbnRleHRWYWx1ZT4oKCkgPT4ge1xuICAgIGNvbnN0IHVzZVZpZXdwb3J0ID0gbWFrZVRocmVhZFZpZXdwb3J0U3RvcmUoKTtcblxuICAgIHJldHVybiB7XG4gICAgICB1c2VUaHJlYWQsXG4gICAgICB1c2VUaHJlYWRSdW50aW1lLFxuICAgICAgdXNlVGhyZWFkTWVzc2FnZXMsXG4gICAgICB1c2VUaHJlYWRBY3Rpb25zOiB1c2VUaHJlYWRSdW50aW1lLFxuICAgICAgdXNlQ29tcG9zZXI6IHVzZVRocmVhZENvbXBvc2VyLFxuICAgICAgdXNlVmlld3BvcnQsXG4gICAgfTtcbiAgfSwgW3VzZVRocmVhZCwgdXNlVGhyZWFkUnVudGltZSwgdXNlVGhyZWFkTWVzc2FnZXMsIHVzZVRocmVhZENvbXBvc2VyXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8VGhyZWFkQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17Y29udGV4dH0+e2NoaWxkcmVufTwvVGhyZWFkQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn07XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHR5cGUgeyBUaHJlYWRWaWV3cG9ydFN0YXRlIH0gZnJvbSBcIi4uL3N0b3Jlcy9UaHJlYWRWaWV3cG9ydFwiO1xuaW1wb3J0IHsgUmVhZG9ubHlTdG9yZSB9IGZyb20gXCIuLi9SZWFkb25seVN0b3JlXCI7XG5pbXBvcnQgeyBVc2VCb3VuZFN0b3JlIH0gZnJvbSBcInp1c3RhbmRcIjtcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHRIb29rIH0gZnJvbSBcIi4vdXRpbHMvY3JlYXRlQ29udGV4dEhvb2tcIjtcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHRTdG9yZUhvb2sgfSBmcm9tIFwiLi91dGlscy9jcmVhdGVDb250ZXh0U3RvcmVIb29rXCI7XG5pbXBvcnQgeyBUaHJlYWRSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2FwaVwiO1xuaW1wb3J0IHsgVGhyZWFkU3RhdGUgfSBmcm9tIFwiLi4vLi4vYXBpL1RocmVhZFJ1bnRpbWVcIjtcbmltcG9ydCB7IE1vZGVsQ29uZmlnLCBUaHJlYWRNZXNzYWdlIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5pbXBvcnQgeyBUaHJlYWRDb21wb3NlclN0YXRlIH0gZnJvbSBcIi4uLy4uL2FwaS9Db21wb3NlclJ1bnRpbWVcIjtcblxuZXhwb3J0IHR5cGUgVGhyZWFkQ29udGV4dFZhbHVlID0ge1xuICB1c2VUaHJlYWQ6IFVzZUJvdW5kU3RvcmU8UmVhZG9ubHlTdG9yZTxUaHJlYWRTdGF0ZT4+O1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGB1c2VUaHJlYWRSdW50aW1lYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHVzZVRocmVhZEFjdGlvbnM6IFVzZUJvdW5kU3RvcmU8UmVhZG9ubHlTdG9yZTxUaHJlYWRSdW50aW1lPj47XG4gIHVzZVRocmVhZFJ1bnRpbWU6IFVzZUJvdW5kU3RvcmU8UmVhZG9ubHlTdG9yZTxUaHJlYWRSdW50aW1lPj47XG4gIHVzZVRocmVhZE1lc3NhZ2VzOiBVc2VCb3VuZFN0b3JlPFJlYWRvbmx5U3RvcmU8cmVhZG9ubHkgVGhyZWFkTWVzc2FnZVtdPj47XG4gIHVzZUNvbXBvc2VyOiBVc2VCb3VuZFN0b3JlPFJlYWRvbmx5U3RvcmU8VGhyZWFkQ29tcG9zZXJTdGF0ZT4+O1xuICB1c2VWaWV3cG9ydDogVXNlQm91bmRTdG9yZTxSZWFkb25seVN0b3JlPFRocmVhZFZpZXdwb3J0U3RhdGU+Pjtcbn07XG5cbmV4cG9ydCBjb25zdCBUaHJlYWRDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxUaHJlYWRDb250ZXh0VmFsdWUgfCBudWxsPihudWxsKTtcblxuZXhwb3J0IGNvbnN0IHVzZVRocmVhZENvbnRleHQgPSBjcmVhdGVDb250ZXh0SG9vayhcbiAgVGhyZWFkQ29udGV4dCxcbiAgXCJBc3Npc3RhbnRSdW50aW1lUHJvdmlkZXJcIixcbik7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VUaHJlYWRSdW50aW1lKG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogZmFsc2UgfCB1bmRlZmluZWQ7XG59KTogVGhyZWFkUnVudGltZTtcbmV4cG9ydCBmdW5jdGlvbiB1c2VUaHJlYWRSdW50aW1lKG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn0pOiBUaHJlYWRSdW50aW1lIHwgbnVsbDtcbmV4cG9ydCBmdW5jdGlvbiB1c2VUaHJlYWRSdW50aW1lKG9wdGlvbnM/OiB7IG9wdGlvbmFsPzogYm9vbGVhbiB8IHVuZGVmaW5lZCB9KSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VUaHJlYWRDb250ZXh0KG9wdGlvbnMpO1xuICBpZiAoIWNvbnRleHQpIHJldHVybiBudWxsO1xuICByZXR1cm4gY29udGV4dC51c2VUaHJlYWRSdW50aW1lKCk7XG59XG5cbmV4cG9ydCBjb25zdCBhY3Rpb25zID0gY3JlYXRlQ29udGV4dFN0b3JlSG9vayhcbiAgdXNlVGhyZWFkQ29udGV4dCxcbiAgXCJ1c2VUaHJlYWRBY3Rpb25zXCIsXG4pO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgdXNlVGhyZWFkUnVudGltZWAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gKi9cbmV4cG9ydCBjb25zdCB1c2VUaHJlYWRBY3Rpb25zU3RvcmUgPSBhY3Rpb25zLnVzZVRocmVhZEFjdGlvbnNTdG9yZTtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYHVzZVRocmVhZFJ1bnRpbWVgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICovXG5leHBvcnQgY29uc3QgdXNlVGhyZWFkQWN0aW9ucyA9IGFjdGlvbnMudXNlVGhyZWFkQWN0aW9ucztcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYHVzZVRocmVhZFJ1bnRpbWVgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICovXG5leHBvcnQgY29uc3QgdXNlVGhyZWFkUnVudGltZVN0b3JlID0gdXNlVGhyZWFkQWN0aW9uc1N0b3JlO1xuXG5leHBvcnQgY29uc3QgeyB1c2VUaHJlYWQsIHVzZVRocmVhZFN0b3JlIH0gPSBjcmVhdGVDb250ZXh0U3RvcmVIb29rKFxuICB1c2VUaHJlYWRDb250ZXh0LFxuICBcInVzZVRocmVhZFwiLFxuKTtcblxuY29uc3QgbWVzc2FnZXMgPSBjcmVhdGVDb250ZXh0U3RvcmVIb29rKHVzZVRocmVhZENvbnRleHQsIFwidXNlVGhyZWFkTWVzc2FnZXNcIik7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGB1c2VUaHJlYWQoKS5tZXNzYWdlc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gKi9cbmV4cG9ydCBjb25zdCB1c2VUaHJlYWRNZXNzYWdlcyA9IG1lc3NhZ2VzLnVzZVRocmVhZE1lc3NhZ2VzO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgdXNlVGhyZWFkUnVudGltZSgpLmdldFN0YXRlKCkubWVzc2FnZXNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICovXG5leHBvcnQgY29uc3QgdXNlVGhyZWFkTWVzc2FnZXNTdG9yZSA9IG1lc3NhZ2VzLnVzZVRocmVhZE1lc3NhZ2VzU3RvcmU7XG5cbmV4cG9ydCBjb25zdCB7XG4gIHVzZUNvbXBvc2VyOiB1c2VUaHJlYWRDb21wb3NlcixcbiAgdXNlQ29tcG9zZXJTdG9yZTogdXNlVGhyZWFkQ29tcG9zZXJTdG9yZSxcbn0gPSBjcmVhdGVDb250ZXh0U3RvcmVIb29rKHVzZVRocmVhZENvbnRleHQsIFwidXNlQ29tcG9zZXJcIik7XG5cbmV4cG9ydCBjb25zdCB7XG4gIHVzZVZpZXdwb3J0OiB1c2VUaHJlYWRWaWV3cG9ydCxcbiAgdXNlVmlld3BvcnRTdG9yZTogdXNlVGhyZWFkVmlld3BvcnRTdG9yZSxcbn0gPSBjcmVhdGVDb250ZXh0U3RvcmVIb29rKHVzZVRocmVhZENvbnRleHQsIFwidXNlVmlld3BvcnRcIik7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VUaHJlYWRNb2RlbENvbmZpZyhvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGZhbHNlIHwgdW5kZWZpbmVkO1xufSk6IE1vZGVsQ29uZmlnO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVRocmVhZE1vZGVsQ29uZmlnKG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn0pOiBNb2RlbENvbmZpZyB8IG51bGw7XG5leHBvcnQgZnVuY3Rpb24gdXNlVGhyZWFkTW9kZWxDb25maWcob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xufSk6IE1vZGVsQ29uZmlnIHwgbnVsbCB7XG4gIGNvbnN0IFssIHJlcmVuZGVyXSA9IHVzZVN0YXRlKHt9KTtcblxuICBjb25zdCBydW50aW1lID0gdXNlVGhyZWFkUnVudGltZShvcHRpb25zKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICByZXR1cm4gcnVudGltZT8udW5zdGFibGVfb24oXCJtb2RlbC1jb25maWctdXBkYXRlXCIsICgpID0+IHJlcmVuZGVyKHt9KSk7XG4gIH0sIFtydW50aW1lXSk7XG5cbiAgaWYgKCFydW50aW1lKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIHJ1bnRpbWU/LmdldE1vZGVsQ29uZmlnKCk7XG59XG4iLCJcInVzZSBjbGllbnRcIjtcbmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gXCJ6dXN0YW5kXCI7XG5pbXBvcnQgdHlwZSB7IFVuc3Vic2NyaWJlIH0gZnJvbSBcIi4uLy4uL3R5cGVzL1Vuc3Vic2NyaWJlXCI7XG5cbmV4cG9ydCB0eXBlIFRocmVhZFZpZXdwb3J0U3RhdGUgPSBSZWFkb25seTx7XG4gIGlzQXRCb3R0b206IGJvb2xlYW47XG4gIHNjcm9sbFRvQm90dG9tOiAoKSA9PiB2b2lkO1xuICBvblNjcm9sbFRvQm90dG9tOiAoY2FsbGJhY2s6ICgpID0+IHZvaWQpID0+IFVuc3Vic2NyaWJlO1xufT47XG5cbmV4cG9ydCBjb25zdCBtYWtlVGhyZWFkVmlld3BvcnRTdG9yZSA9ICgpID0+IHtcbiAgY29uc3Qgc2Nyb2xsVG9Cb3R0b21MaXN0ZW5lcnMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KCk7XG5cbiAgcmV0dXJuIGNyZWF0ZTxUaHJlYWRWaWV3cG9ydFN0YXRlPigoKSA9PiAoe1xuICAgIGlzQXRCb3R0b206IHRydWUsXG4gICAgc2Nyb2xsVG9Cb3R0b206ICgpID0+IHtcbiAgICAgIGZvciAoY29uc3QgbGlzdGVuZXIgb2Ygc2Nyb2xsVG9Cb3R0b21MaXN0ZW5lcnMpIHtcbiAgICAgICAgbGlzdGVuZXIoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uU2Nyb2xsVG9Cb3R0b206IChjYWxsYmFjaykgPT4ge1xuICAgICAgc2Nyb2xsVG9Cb3R0b21MaXN0ZW5lcnMuYWRkKGNhbGxiYWNrKTtcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIHNjcm9sbFRvQm90dG9tTGlzdGVuZXJzLmRlbGV0ZShjYWxsYmFjayk7XG4gICAgICB9O1xuICAgIH0sXG4gIH0pKTtcbn07XG4iLCJpbXBvcnQgdHlwZSB7IFN0b3JlQXBpIH0gZnJvbSBcInp1c3RhbmRcIjtcblxuZXhwb3J0IHR5cGUgUmVhZG9ubHlTdG9yZTxUPiA9IE9taXQ8U3RvcmVBcGk8VD4sIFwic2V0U3RhdGVcIiB8IFwiZGVzdHJveVwiPjtcblxuZXhwb3J0IGNvbnN0IHdyaXRhYmxlU3RvcmUgPSA8VD4oc3RvcmU6IFJlYWRvbmx5U3RvcmU8VD4gfCB1bmRlZmluZWQpID0+IHtcbiAgcmV0dXJuIHN0b3JlIGFzIHVua25vd24gYXMgU3RvcmVBcGk8VD47XG59O1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB0eXBlIHsgRkMsIFByb3BzV2l0aENoaWxkcmVuIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjcmVhdGUgfSBmcm9tIFwienVzdGFuZFwiO1xuaW1wb3J0IHtcbiAgQ29udGVudFBhcnRDb250ZXh0LFxuICBDb250ZW50UGFydENvbnRleHRWYWx1ZSxcbn0gZnJvbSBcIi4uL3JlYWN0L0NvbnRlbnRQYXJ0Q29udGV4dFwiO1xuaW1wb3J0IHsgQ29udGVudFBhcnRTdGF0dXMsIFRleHRDb250ZW50UGFydCB9IGZyb20gXCIuLi8uLi90eXBlcy9Bc3Npc3RhbnRUeXBlc1wiO1xuaW1wb3J0IHsgd3JpdGFibGVTdG9yZSB9IGZyb20gXCIuLi9SZWFkb25seVN0b3JlXCI7XG5pbXBvcnQge1xuICBDb250ZW50UGFydFJ1bnRpbWVJbXBsLFxuICBDb250ZW50UGFydFN0YXRlLFxufSBmcm9tIFwiLi4vLi4vYXBpL0NvbnRlbnRQYXJ0UnVudGltZVwiO1xuXG50eXBlIFRleHRDb250ZW50UGFydFByb3ZpZGVyUHJvcHMgPSB7XG4gIHRleHQ6IHN0cmluZztcbiAgaXNSdW5uaW5nPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn07XG5cbmNvbnN0IENPTVBMRVRFX1NUQVRVUzogQ29udGVudFBhcnRTdGF0dXMgPSB7XG4gIHR5cGU6IFwiY29tcGxldGVcIixcbn07XG5cbmNvbnN0IFJVTk5JTkdfU1RBVFVTOiBDb250ZW50UGFydFN0YXR1cyA9IHtcbiAgdHlwZTogXCJydW5uaW5nXCIsXG59O1xuXG5leHBvcnQgY29uc3QgVGV4dENvbnRlbnRQYXJ0UHJvdmlkZXI6IEZDPFxuICBQcm9wc1dpdGhDaGlsZHJlbjxUZXh0Q29udGVudFBhcnRQcm92aWRlclByb3BzPlxuPiA9ICh7IGNoaWxkcmVuLCB0ZXh0LCBpc1J1bm5pbmcgfSkgPT4ge1xuICBjb25zdCBbY29udGV4dF0gPSB1c2VTdGF0ZTxDb250ZW50UGFydENvbnRleHRWYWx1ZT4oKCkgPT4ge1xuICAgIGNvbnN0IHVzZUNvbnRlbnRQYXJ0UnVudGltZSA9IGNyZWF0ZShcbiAgICAgIC8vIFRPRE9cbiAgICAgICgpID0+IG5ldyBDb250ZW50UGFydFJ1bnRpbWVJbXBsKG51bGwgYXMgYW55LCBudWxsIGFzIGFueSwgbnVsbCBhcyBhbnkpLFxuICAgICk7XG4gICAgY29uc3QgdXNlQ29udGVudFBhcnQgPSBjcmVhdGU8Q29udGVudFBhcnRTdGF0ZT4oKCkgPT4gKHtcbiAgICAgIHN0YXR1czogaXNSdW5uaW5nID8gUlVOTklOR19TVEFUVVMgOiBDT01QTEVURV9TVEFUVVMsXG4gICAgICBwYXJ0OiB7IHR5cGU6IFwidGV4dFwiLCB0ZXh0IH0sXG4gICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgIHRleHQsXG4gICAgfSkpO1xuXG4gICAgcmV0dXJuIHsgdXNlQ29udGVudFBhcnRSdW50aW1lLCB1c2VDb250ZW50UGFydCB9O1xuICB9KTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHN0YXRlID0gY29udGV4dC51c2VDb250ZW50UGFydC5nZXRTdGF0ZSgpIGFzIENvbnRlbnRQYXJ0U3RhdGUgJiB7XG4gICAgICB0eXBlOiBcInRleHRcIjtcbiAgICB9O1xuXG4gICAgY29uc3QgdGV4dFVwZGF0ZWQgPSAoc3RhdGUgYXMgVGV4dENvbnRlbnRQYXJ0KS50ZXh0ICE9PSB0ZXh0O1xuICAgIGNvbnN0IHRhcmdldFN0YXR1cyA9IGlzUnVubmluZyA/IFJVTk5JTkdfU1RBVFVTIDogQ09NUExFVEVfU1RBVFVTO1xuICAgIGNvbnN0IHN0YXR1c1VwZGF0ZWQgPSBzdGF0ZS5zdGF0dXMgIT09IHRhcmdldFN0YXR1cztcblxuICAgIGlmICghdGV4dFVwZGF0ZWQgJiYgIXN0YXR1c1VwZGF0ZWQpIHJldHVybjtcblxuICAgIHdyaXRhYmxlU3RvcmUoY29udGV4dC51c2VDb250ZW50UGFydCkuc2V0U3RhdGUoXG4gICAgICB7XG4gICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICB0ZXh0LFxuICAgICAgICBwYXJ0OiB7IHR5cGU6IFwidGV4dFwiLCB0ZXh0IH0sXG4gICAgICAgIHN0YXR1czogdGFyZ2V0U3RhdHVzLFxuICAgICAgfSBzYXRpc2ZpZXMgQ29udGVudFBhcnRTdGF0ZSxcbiAgICAgIHRydWUsXG4gICAgKTtcbiAgfSwgW2NvbnRleHQsIGlzUnVubmluZywgdGV4dF0pO1xuXG4gIHJldHVybiAoXG4gICAgPENvbnRlbnRQYXJ0Q29udGV4dC5Qcm92aWRlciB2YWx1ZT17Y29udGV4dH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Db250ZW50UGFydENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFJlYWRvbmx5U3RvcmUgfSBmcm9tIFwiLi4vUmVhZG9ubHlTdG9yZVwiO1xuaW1wb3J0IHsgY3JlYXRlQ29udGV4dFN0b3JlSG9vayB9IGZyb20gXCIuL3V0aWxzL2NyZWF0ZUNvbnRleHRTdG9yZUhvb2tcIjtcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHRIb29rIH0gZnJvbSBcIi4vdXRpbHMvY3JlYXRlQ29udGV4dEhvb2tcIjtcbmltcG9ydCB7IFVzZUJvdW5kU3RvcmUgfSBmcm9tIFwienVzdGFuZFwiO1xuaW1wb3J0IHsgQ29udGVudFBhcnRSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2FwaVwiO1xuaW1wb3J0IHsgQ29udGVudFBhcnRTdGF0ZSB9IGZyb20gXCIuLi8uLi9hcGkvQ29udGVudFBhcnRSdW50aW1lXCI7XG5cbmV4cG9ydCB0eXBlIENvbnRlbnRQYXJ0Q29udGV4dFZhbHVlID0ge1xuICB1c2VDb250ZW50UGFydFJ1bnRpbWU6IFVzZUJvdW5kU3RvcmU8UmVhZG9ubHlTdG9yZTxDb250ZW50UGFydFJ1bnRpbWU+PjtcbiAgdXNlQ29udGVudFBhcnQ6IFVzZUJvdW5kU3RvcmU8UmVhZG9ubHlTdG9yZTxDb250ZW50UGFydFN0YXRlPj47XG59O1xuXG5leHBvcnQgY29uc3QgQ29udGVudFBhcnRDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxDb250ZW50UGFydENvbnRleHRWYWx1ZSB8IG51bGw+KFxuICBudWxsLFxuKTtcblxuZXhwb3J0IGNvbnN0IHVzZUNvbnRlbnRQYXJ0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHRIb29rKFxuICBDb250ZW50UGFydENvbnRleHQsXG4gIFwiYSBjb21wb25lbnQgcGFzc2VkIHRvIDxNZXNzYWdlUHJpbWl0aXZlLkNvbnRlbnQgY29tcG9uZW50cz17Li4ufT5cIixcbik7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VDb250ZW50UGFydFJ1bnRpbWUob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBmYWxzZSB8IHVuZGVmaW5lZDtcbn0pOiBDb250ZW50UGFydFJ1bnRpbWU7XG5leHBvcnQgZnVuY3Rpb24gdXNlQ29udGVudFBhcnRSdW50aW1lKG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn0pOiBDb250ZW50UGFydFJ1bnRpbWUgfCBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUNvbnRlbnRQYXJ0UnVudGltZShvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZW50UGFydENvbnRleHQob3B0aW9ucyk7XG4gIGlmICghY29udGV4dCkgcmV0dXJuIG51bGw7XG4gIHJldHVybiBjb250ZXh0LnVzZUNvbnRlbnRQYXJ0UnVudGltZSgpO1xufVxuXG5leHBvcnQgY29uc3QgeyB1c2VDb250ZW50UGFydCwgdXNlQ29udGVudFBhcnRTdG9yZSB9ID0gY3JlYXRlQ29udGV4dFN0b3JlSG9vayhcbiAgdXNlQ29udGVudFBhcnRDb250ZXh0LFxuICBcInVzZUNvbnRlbnRQYXJ0XCIsXG4pO1xuIiwiaW1wb3J0IHtcbiAgVGhyZWFkQXNzaXN0YW50Q29udGVudFBhcnQsXG4gIFRocmVhZFVzZXJDb250ZW50UGFydCxcbiAgQ29udGVudFBhcnRTdGF0dXMsXG4gIFRvb2xDYWxsQ29udGVudFBhcnRTdGF0dXMsXG59IGZyb20gXCIuLi90eXBlcy9Bc3Npc3RhbnRUeXBlc1wiO1xuaW1wb3J0IHsgVGhyZWFkUnVudGltZUNvcmVCaW5kaW5nIH0gZnJvbSBcIi4vVGhyZWFkUnVudGltZVwiO1xuaW1wb3J0IHsgTWVzc2FnZVN0YXRlQmluZGluZyB9IGZyb20gXCIuL01lc3NhZ2VSdW50aW1lXCI7XG5pbXBvcnQgeyBTdWJzY3JpYmFibGVXaXRoU3RhdGUgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUvU3Vic2NyaWJhYmxlXCI7XG5pbXBvcnQgeyBVbnN1YnNjcmliZSB9IGZyb20gXCIuLi90eXBlc1wiO1xuaW1wb3J0IHsgQ29udGVudFBhcnRSdW50aW1lUGF0aCB9IGZyb20gXCIuL1BhdGhUeXBlc1wiO1xuXG5leHBvcnQgdHlwZSBDb250ZW50UGFydFN0YXRlID0gKFxuICB8IFRocmVhZFVzZXJDb250ZW50UGFydFxuICB8IFRocmVhZEFzc2lzdGFudENvbnRlbnRQYXJ0XG4pICYge1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgWW91IGNhbiBkaXJlY3RseSBhY2Nlc3MgY29udGVudCBwYXJ0IGZpZWxkcyBpbiB0aGUgc3RhdGUuIFJlcGxhY2UgYC5wYXJ0LnR5cGVgIHdpdGggYC50eXBlYCBldGMuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgcGFydDogVGhyZWFkVXNlckNvbnRlbnRQYXJ0IHwgVGhyZWFkQXNzaXN0YW50Q29udGVudFBhcnQ7XG4gIHN0YXR1czogQ29udGVudFBhcnRTdGF0dXMgfCBUb29sQ2FsbENvbnRlbnRQYXJ0U3RhdHVzO1xufTtcblxudHlwZSBDb250ZW50UGFydFNuYXBzaG90QmluZGluZyA9IFN1YnNjcmliYWJsZVdpdGhTdGF0ZTxcbiAgQ29udGVudFBhcnRTdGF0ZSxcbiAgQ29udGVudFBhcnRSdW50aW1lUGF0aFxuPjtcblxuZXhwb3J0IHR5cGUgQ29udGVudFBhcnRSdW50aW1lID0ge1xuICBwYXRoOiBDb250ZW50UGFydFJ1bnRpbWVQYXRoO1xuXG4gIGdldFN0YXRlKCk6IENvbnRlbnRQYXJ0U3RhdGU7XG4gIGFkZFRvb2xSZXN1bHQocmVzdWx0OiBhbnkpOiB2b2lkO1xuICBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiBVbnN1YnNjcmliZTtcbn07XG5cbmV4cG9ydCBjbGFzcyBDb250ZW50UGFydFJ1bnRpbWVJbXBsIGltcGxlbWVudHMgQ29udGVudFBhcnRSdW50aW1lIHtcbiAgcHVibGljIGdldCBwYXRoKCkge1xuICAgIHJldHVybiB0aGlzLmNvbnRlbnRCaW5kaW5nLnBhdGg7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGNvbnRlbnRCaW5kaW5nOiBDb250ZW50UGFydFNuYXBzaG90QmluZGluZyxcbiAgICBwcml2YXRlIG1lc3NhZ2VBcGk6IE1lc3NhZ2VTdGF0ZUJpbmRpbmcsXG4gICAgcHJpdmF0ZSB0aHJlYWRBcGk6IFRocmVhZFJ1bnRpbWVDb3JlQmluZGluZyxcbiAgKSB7fVxuXG4gIHB1YmxpYyBnZXRTdGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5jb250ZW50QmluZGluZy5nZXRTdGF0ZSgpO1xuICB9XG5cbiAgcHVibGljIGFkZFRvb2xSZXN1bHQocmVzdWx0OiBhbnkpIHtcbiAgICBjb25zdCBtZXNzYWdlID0gdGhpcy5tZXNzYWdlQXBpLmdldFN0YXRlKCk7XG4gICAgaWYgKCFtZXNzYWdlKSB0aHJvdyBuZXcgRXJyb3IoXCJNZXNzYWdlIGlzIG5vdCBhdmFpbGFibGVcIik7XG5cbiAgICBjb25zdCBzdGF0ZSA9IHRoaXMuY29udGVudEJpbmRpbmcuZ2V0U3RhdGUoKTtcbiAgICBpZiAoIXN0YXRlKSB0aHJvdyBuZXcgRXJyb3IoXCJDb250ZW50IHBhcnQgaXMgbm90IGF2YWlsYWJsZVwiKTtcblxuICAgIGlmIChzdGF0ZS50eXBlICE9PSBcInRvb2wtY2FsbFwiKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHJpZWQgdG8gYWRkIHRvb2wgcmVzdWx0IHRvIG5vbi10b29sIGNvbnRlbnQgcGFydFwiKTtcblxuICAgIGNvbnN0IHRvb2xOYW1lID0gc3RhdGUudG9vbE5hbWU7XG4gICAgY29uc3QgdG9vbENhbGxJZCA9IHN0YXRlLnRvb2xDYWxsSWQ7XG5cbiAgICB0aGlzLnRocmVhZEFwaS5nZXRTdGF0ZSgpLmFkZFRvb2xSZXN1bHQoe1xuICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlLmlkLFxuICAgICAgdG9vbE5hbWUsXG4gICAgICB0b29sQ2FsbElkLFxuICAgICAgcmVzdWx0LFxuICAgIH0pO1xuICB9XG5cbiAgcHVibGljIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiB0aGlzLmNvbnRlbnRCaW5kaW5nLnN1YnNjcmliZShjYWxsYmFjayk7XG4gIH1cbn1cbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBSZWFkb25seVN0b3JlIH0gZnJvbSBcIi4uL1JlYWRvbmx5U3RvcmVcIjtcbmltcG9ydCB7IE1lc3NhZ2VVdGlsc1N0YXRlIH0gZnJvbSBcIi4uL3N0b3Jlcy9NZXNzYWdlVXRpbHNcIjtcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHRIb29rIH0gZnJvbSBcIi4vdXRpbHMvY3JlYXRlQ29udGV4dEhvb2tcIjtcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHRTdG9yZUhvb2sgfSBmcm9tIFwiLi91dGlscy9jcmVhdGVDb250ZXh0U3RvcmVIb29rXCI7XG5pbXBvcnQgeyBVc2VCb3VuZFN0b3JlIH0gZnJvbSBcInp1c3RhbmRcIjtcbmltcG9ydCB7IE1lc3NhZ2VSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2FwaVwiO1xuaW1wb3J0IHsgTWVzc2FnZVN0YXRlIH0gZnJvbSBcIi4uLy4uL2FwaS9NZXNzYWdlUnVudGltZVwiO1xuaW1wb3J0IHsgRWRpdENvbXBvc2VyU3RhdGUgfSBmcm9tIFwiLi4vLi4vYXBpL0NvbXBvc2VyUnVudGltZVwiO1xuXG5leHBvcnQgdHlwZSBNZXNzYWdlQ29udGV4dFZhbHVlID0ge1xuICB1c2VNZXNzYWdlUnVudGltZTogVXNlQm91bmRTdG9yZTxSZWFkb25seVN0b3JlPE1lc3NhZ2VSdW50aW1lPj47XG4gIHVzZU1lc3NhZ2U6IFVzZUJvdW5kU3RvcmU8UmVhZG9ubHlTdG9yZTxNZXNzYWdlU3RhdGU+PjtcbiAgdXNlTWVzc2FnZVV0aWxzOiBVc2VCb3VuZFN0b3JlPFJlYWRvbmx5U3RvcmU8TWVzc2FnZVV0aWxzU3RhdGU+PjtcbiAgdXNlRWRpdENvbXBvc2VyOiBVc2VCb3VuZFN0b3JlPFJlYWRvbmx5U3RvcmU8RWRpdENvbXBvc2VyU3RhdGU+Pjtcbn07XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8TWVzc2FnZUNvbnRleHRWYWx1ZSB8IG51bGw+KG51bGwpO1xuXG5leHBvcnQgY29uc3QgdXNlTWVzc2FnZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0SG9vayhcbiAgTWVzc2FnZUNvbnRleHQsXG4gIFwiYSBjb21wb25lbnQgcGFzc2VkIHRvIDxUaHJlYWRQcmltaXRpdmUuTWVzc2FnZXMgY29tcG9uZW50cz17Li4ufSAvPlwiLFxuKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZU1lc3NhZ2VSdW50aW1lKG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogZmFsc2UgfCB1bmRlZmluZWQ7XG59KTogTWVzc2FnZVJ1bnRpbWU7XG5leHBvcnQgZnVuY3Rpb24gdXNlTWVzc2FnZVJ1bnRpbWUob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xufSk6IE1lc3NhZ2VSdW50aW1lIHwgbnVsbDtcbmV4cG9ydCBmdW5jdGlvbiB1c2VNZXNzYWdlUnVudGltZShvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VNZXNzYWdlQ29udGV4dChvcHRpb25zKTtcbiAgaWYgKCFjb250ZXh0KSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIGNvbnRleHQudXNlTWVzc2FnZVJ1bnRpbWUoKTtcbn1cblxuZXhwb3J0IGNvbnN0IHsgdXNlTWVzc2FnZSwgdXNlTWVzc2FnZVN0b3JlIH0gPSBjcmVhdGVDb250ZXh0U3RvcmVIb29rKFxuICB1c2VNZXNzYWdlQ29udGV4dCxcbiAgXCJ1c2VNZXNzYWdlXCIsXG4pO1xuXG5leHBvcnQgY29uc3QgeyB1c2VNZXNzYWdlVXRpbHMsIHVzZU1lc3NhZ2VVdGlsc1N0b3JlIH0gPSBjcmVhdGVDb250ZXh0U3RvcmVIb29rKFxuICB1c2VNZXNzYWdlQ29udGV4dCxcbiAgXCJ1c2VNZXNzYWdlVXRpbHNcIixcbik7XG5cbmV4cG9ydCBjb25zdCB7IHVzZUVkaXRDb21wb3NlciwgdXNlRWRpdENvbXBvc2VyU3RvcmUgfSA9IGNyZWF0ZUNvbnRleHRTdG9yZUhvb2soXG4gIHVzZU1lc3NhZ2VDb250ZXh0LFxuICBcInVzZUVkaXRDb21wb3NlclwiLFxuKTtcbiIsImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZU1lc3NhZ2VDb250ZXh0LCB1c2VNZXNzYWdlUnVudGltZSB9IGZyb20gXCIuL01lc3NhZ2VDb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRDb250ZXh0LCB1c2VUaHJlYWRSdW50aW1lIH0gZnJvbSBcIi4vVGhyZWFkQ29udGV4dFwiO1xuaW1wb3J0IHsgUmVhZG9ubHlTdG9yZSB9IGZyb20gXCIuLi9SZWFkb25seVN0b3JlXCI7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0U3RvcmVIb29rIH0gZnJvbSBcIi4vdXRpbHMvY3JlYXRlQ29udGV4dFN0b3JlSG9va1wiO1xuaW1wb3J0IHsgQ29tcG9zZXJSdW50aW1lLCBDb21wb3NlclN0YXRlIH0gZnJvbSBcIi4uLy4uL2FwaS9Db21wb3NlclJ1bnRpbWVcIjtcbmltcG9ydCB7IFVzZUJvdW5kU3RvcmUgfSBmcm9tIFwienVzdGFuZFwiO1xuXG5leHBvcnQgdHlwZSBDb21wb3NlckNvbnRleHRWYWx1ZSA9IHtcbiAgdXNlQ29tcG9zZXI6IFVzZUJvdW5kU3RvcmU8UmVhZG9ubHlTdG9yZTxDb21wb3NlclN0YXRlPj47XG4gIHR5cGU6IFwiZWRpdFwiIHwgXCJuZXdcIjtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VDb21wb3NlckNvbnRleHQgPSAoKTogQ29tcG9zZXJDb250ZXh0VmFsdWUgPT4ge1xuICBjb25zdCB7IHVzZUNvbXBvc2VyOiB1c2VUaHJlYWRDb21wb3NlciB9ID0gdXNlVGhyZWFkQ29udGV4dCgpO1xuICBjb25zdCB7IHVzZUVkaXRDb21wb3NlciB9ID0gdXNlTWVzc2FnZUNvbnRleHQoeyBvcHRpb25hbDogdHJ1ZSB9KSA/PyB7fTtcbiAgcmV0dXJuIHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIHVzZUNvbXBvc2VyOiB1c2VFZGl0Q29tcG9zZXIgPz8gdXNlVGhyZWFkQ29tcG9zZXIsXG4gICAgICB0eXBlOiB1c2VFZGl0Q29tcG9zZXIgPyAoXCJlZGl0XCIgYXMgY29uc3QpIDogKFwibmV3XCIgYXMgY29uc3QpLFxuICAgIH0pLFxuICAgIFt1c2VFZGl0Q29tcG9zZXIsIHVzZVRocmVhZENvbXBvc2VyXSxcbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCB7IHVzZUNvbXBvc2VyLCB1c2VDb21wb3NlclN0b3JlIH0gPSBjcmVhdGVDb250ZXh0U3RvcmVIb29rKFxuICB1c2VDb21wb3NlckNvbnRleHQsXG4gIFwidXNlQ29tcG9zZXJcIixcbik7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VDb21wb3NlclJ1bnRpbWUob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBmYWxzZSB8IHVuZGVmaW5lZDtcbn0pOiBDb21wb3NlclJ1bnRpbWU7XG5leHBvcnQgZnVuY3Rpb24gdXNlQ29tcG9zZXJSdW50aW1lKG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn0pOiBDb21wb3NlclJ1bnRpbWUgfCBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUNvbXBvc2VyUnVudGltZShvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KTogQ29tcG9zZXJSdW50aW1lIHwgbnVsbCB7XG4gIGNvbnN0IG1lc3NhZ2VSdW50aW1lID0gdXNlTWVzc2FnZVJ1bnRpbWUoeyBvcHRpb25hbDogdHJ1ZSB9KTtcbiAgY29uc3QgdGhyZWFkUnVudGltZSA9IHVzZVRocmVhZFJ1bnRpbWUob3B0aW9ucyk7XG4gIHJldHVybiBtZXNzYWdlUnVudGltZVxuICAgID8gbWVzc2FnZVJ1bnRpbWUuY29tcG9zZXJcbiAgICA6ICh0aHJlYWRSdW50aW1lPy5jb21wb3NlciA/PyBudWxsKTtcbn1cbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRSdW50aW1lIH0gZnJvbSBcIi4uL2NvbnRleHQvcmVhY3QvVGhyZWFkQ29udGV4dFwiO1xuaW1wb3J0IHsgQ3JlYXRlQXBwZW5kTWVzc2FnZSB9IGZyb20gXCIuLi9hcGkvVGhyZWFkUnVudGltZVwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgdXNlVGhyZWFkUnVudGltZSgpLmFwcGVuZCgpYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCBjb25zdCB1c2VBcHBlbmRNZXNzYWdlID0gKCkgPT4ge1xuICBjb25zdCB0aHJlYWRSdW50aW1lID0gdXNlVGhyZWFkUnVudGltZSgpO1xuXG4gIGNvbnN0IGFwcGVuZCA9IHVzZUNhbGxiYWNrKFxuICAgIChtZXNzYWdlOiBDcmVhdGVBcHBlbmRNZXNzYWdlKSA9PiB7XG4gICAgICB0aHJlYWRSdW50aW1lLmFwcGVuZChtZXNzYWdlKTtcbiAgICB9LFxuICAgIFt0aHJlYWRSdW50aW1lXSxcbiAgKTtcblxuICByZXR1cm4gYXBwZW5kO1xufTtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VBc3Npc3RhbnRSdW50aW1lIH0gZnJvbSBcIi4uL2NvbnRleHRcIjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYHVzZVJ1bnRpbWVBY3Rpb25zKCkuc3dpdGNoVG9OZXdUaHJlYWQoKWAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gKi9cbmV4cG9ydCBjb25zdCB1c2VTd2l0Y2hUb05ld1RocmVhZCA9ICgpID0+IHtcbiAgY29uc3QgYXNzaXN0YW50UnVudGltZSA9IHVzZUFzc2lzdGFudFJ1bnRpbWUoKTtcbiAgY29uc3Qgc3dpdGNoVG9OZXdUaHJlYWQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgYXNzaXN0YW50UnVudGltZS5zd2l0Y2hUb05ld1RocmVhZCgpO1xuICB9LCBbYXNzaXN0YW50UnVudGltZV0pO1xuXG4gIHJldHVybiBzd2l0Y2hUb05ld1RocmVhZDtcbn07XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICB1c2VBc3Npc3RhbnRSdW50aW1lLFxuICB1c2VUb29sVUlzU3RvcmUsXG59IGZyb20gXCIuLi9jb250ZXh0L3JlYWN0L0Fzc2lzdGFudENvbnRleHRcIjtcbmltcG9ydCB0eXBlIHsgVG9vbENhbGxDb250ZW50UGFydENvbXBvbmVudCB9IGZyb20gXCIuLi90eXBlcy9Db250ZW50UGFydENvbXBvbmVudFR5cGVzXCI7XG5pbXBvcnQgdHlwZSB7IFRvb2wgfSBmcm9tIFwiLi4vdHlwZXMvTW9kZWxDb25maWdUeXBlc1wiO1xuXG5leHBvcnQgdHlwZSBBc3Npc3RhbnRUb29sUHJvcHM8XG4gIFRBcmdzIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4sXG4gIFRSZXN1bHQsXG4+ID0gVG9vbDxUQXJncywgVFJlc3VsdD4gJiB7XG4gIHRvb2xOYW1lOiBzdHJpbmc7XG4gIHJlbmRlcj86IFRvb2xDYWxsQ29udGVudFBhcnRDb21wb25lbnQ8VEFyZ3MsIFRSZXN1bHQ+IHwgdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZUFzc2lzdGFudFRvb2wgPSA8XG4gIFRBcmdzIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4sXG4gIFRSZXN1bHQsXG4+KFxuICB0b29sOiBBc3Npc3RhbnRUb29sUHJvcHM8VEFyZ3MsIFRSZXN1bHQ+LFxuKSA9PiB7XG4gIGNvbnN0IGFzc2lzdGFudFJ1bnRpbWUgPSB1c2VBc3Npc3RhbnRSdW50aW1lKCk7XG4gIGNvbnN0IHRvb2xVSXNTdG9yZSA9IHVzZVRvb2xVSXNTdG9yZSgpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHsgdG9vbE5hbWUsIHJlbmRlciwgLi4ucmVzdCB9ID0gdG9vbDtcbiAgICBjb25zdCBjb25maWcgPSB7XG4gICAgICB0b29sczoge1xuICAgICAgICBbdG9vbC50b29sTmFtZV06IHJlc3QsXG4gICAgICB9LFxuICAgIH07XG4gICAgY29uc3QgdW5zdWIxID0gYXNzaXN0YW50UnVudGltZS5yZWdpc3Rlck1vZGVsQ29uZmlnUHJvdmlkZXIoe1xuICAgICAgZ2V0TW9kZWxDb25maWc6ICgpID0+IGNvbmZpZyxcbiAgICB9KTtcbiAgICBjb25zdCB1bnN1YjIgPSByZW5kZXJcbiAgICAgID8gdG9vbFVJc1N0b3JlLmdldFN0YXRlKCkuc2V0VG9vbFVJKHRvb2xOYW1lLCByZW5kZXIpXG4gICAgICA6IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdW5zdWIxKCk7XG4gICAgICB1bnN1YjI/LigpO1xuICAgIH07XG4gIH0sIFthc3Npc3RhbnRSdW50aW1lLCB0b29sVUlzU3RvcmUsIHRvb2xdKTtcbn07XG4iLCJcInVzZSBjbGllbnRcIjtcbmltcG9ydCB7IEZDIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB0eXBlIEFzc2lzdGFudFRvb2xQcm9wcywgdXNlQXNzaXN0YW50VG9vbCB9IGZyb20gXCIuL3VzZUFzc2lzdGFudFRvb2xcIjtcblxuZXhwb3J0IHR5cGUgQXNzaXN0YW50VG9vbCA9IEZDICYge1xuICB1bnN0YWJsZV90b29sOiBBc3Npc3RhbnRUb29sUHJvcHM8YW55LCBhbnk+O1xufTtcblxuZXhwb3J0IGNvbnN0IG1ha2VBc3Npc3RhbnRUb29sID0gPFxuICBUQXJncyBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHVua25vd24+LFxuICBUUmVzdWx0LFxuPihcbiAgdG9vbDogQXNzaXN0YW50VG9vbFByb3BzPFRBcmdzLCBUUmVzdWx0PixcbikgPT4ge1xuICBjb25zdCBUb29sOiBBc3Npc3RhbnRUb29sID0gKCkgPT4ge1xuICAgIHVzZUFzc2lzdGFudFRvb2wodG9vbCk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG4gIFRvb2wudW5zdGFibGVfdG9vbCA9IHRvb2w7XG4gIHJldHVybiBUb29sO1xufTtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZVRvb2xVSXNTdG9yZSB9IGZyb20gXCIuLi9jb250ZXh0L3JlYWN0L0Fzc2lzdGFudENvbnRleHRcIjtcbmltcG9ydCB0eXBlIHsgVG9vbENhbGxDb250ZW50UGFydENvbXBvbmVudCB9IGZyb20gXCIuLi90eXBlcy9Db250ZW50UGFydENvbXBvbmVudFR5cGVzXCI7XG5cbmV4cG9ydCB0eXBlIEFzc2lzdGFudFRvb2xVSVByb3BzPFxuICBUQXJncyBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHVua25vd24+LFxuICBUUmVzdWx0LFxuPiA9IHtcbiAgdG9vbE5hbWU6IHN0cmluZztcbiAgcmVuZGVyOiBUb29sQ2FsbENvbnRlbnRQYXJ0Q29tcG9uZW50PFRBcmdzLCBUUmVzdWx0Pjtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VBc3Npc3RhbnRUb29sVUkgPSAoXG4gIHRvb2w6IEFzc2lzdGFudFRvb2xVSVByb3BzPGFueSwgYW55PiB8IG51bGwsXG4pID0+IHtcbiAgY29uc3QgdG9vbFVJc1N0b3JlID0gdXNlVG9vbFVJc1N0b3JlKCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCF0b29sKSByZXR1cm47XG4gICAgY29uc3QgeyB0b29sTmFtZSwgcmVuZGVyIH0gPSB0b29sO1xuICAgIHJldHVybiB0b29sVUlzU3RvcmUuZ2V0U3RhdGUoKS5zZXRUb29sVUkodG9vbE5hbWUsIHJlbmRlcik7XG4gIH0sIFt0b29sVUlzU3RvcmUsIHRvb2xdKTtcbn07XG4iLCJcInVzZSBjbGllbnRcIjtcbmltcG9ydCB7IEZDIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICB0eXBlIEFzc2lzdGFudFRvb2xVSVByb3BzLFxuICB1c2VBc3Npc3RhbnRUb29sVUksXG59IGZyb20gXCIuL3VzZUFzc2lzdGFudFRvb2xVSVwiO1xuXG5leHBvcnQgdHlwZSBBc3Npc3RhbnRUb29sVUkgPSBGQyAmIHtcbiAgdW5zdGFibGVfdG9vbDogQXNzaXN0YW50VG9vbFVJUHJvcHM8YW55LCBhbnk+O1xufTtcblxuZXhwb3J0IGNvbnN0IG1ha2VBc3Npc3RhbnRUb29sVUkgPSA8XG4gIFRBcmdzIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4sXG4gIFRSZXN1bHQsXG4+KFxuICB0b29sOiBBc3Npc3RhbnRUb29sVUlQcm9wczxUQXJncywgVFJlc3VsdD4sXG4pID0+IHtcbiAgY29uc3QgVG9vbFVJOiBBc3Npc3RhbnRUb29sVUkgPSAoKSA9PiB7XG4gICAgdXNlQXNzaXN0YW50VG9vbFVJKHRvb2wpO1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuICBUb29sVUkudW5zdGFibGVfdG9vbCA9IHRvb2w7XG4gIHJldHVybiBUb29sVUk7XG59O1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQXNzaXN0YW50UnVudGltZSB9IGZyb20gXCIuLi9jb250ZXh0XCI7XG5cbmV4cG9ydCBjb25zdCB1c2VBc3Npc3RhbnRJbnN0cnVjdGlvbnMgPSAoaW5zdHJ1Y3Rpb246IHN0cmluZykgPT4ge1xuICBjb25zdCBhc3Npc3RhbnRSdW50aW1lID0gdXNlQXNzaXN0YW50UnVudGltZSgpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGNvbmZpZyA9IHtcbiAgICAgIHN5c3RlbTogaW5zdHJ1Y3Rpb24sXG4gICAgfTtcbiAgICByZXR1cm4gYXNzaXN0YW50UnVudGltZS5yZWdpc3Rlck1vZGVsQ29uZmlnUHJvdmlkZXIoe1xuICAgICAgZ2V0TW9kZWxDb25maWc6ICgpID0+IGNvbmZpZyxcbiAgICB9KTtcbiAgfSwgW2Fzc2lzdGFudFJ1bnRpbWUsIGluc3RydWN0aW9uXSk7XG59O1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7XG4gIHVzZU1lc3NhZ2UsXG4gIHVzZU1lc3NhZ2VSdW50aW1lLFxuICB1c2VNZXNzYWdlVXRpbHMsXG59IGZyb20gXCIuLi8uLi9jb250ZXh0L3JlYWN0L01lc3NhZ2VDb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VDb21wb3NlclJ1bnRpbWUgfSBmcm9tIFwiLi4vLi4vY29udGV4dFwiO1xuXG5leHBvcnQgdHlwZSBVc2VBY3Rpb25CYXJDb3B5UHJvcHMgPSB7XG4gIGNvcGllZER1cmF0aW9uPzogbnVtYmVyIHwgdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZUFjdGlvbkJhckNvcHkgPSAoe1xuICBjb3BpZWREdXJhdGlvbiA9IDMwMDAsXG59OiBVc2VBY3Rpb25CYXJDb3B5UHJvcHMgPSB7fSkgPT4ge1xuICBjb25zdCBtZXNzYWdlUnVudGltZSA9IHVzZU1lc3NhZ2VSdW50aW1lKCk7XG4gIGNvbnN0IGNvbXBvc2VyUnVudGltZSA9IHVzZUNvbXBvc2VyUnVudGltZSgpO1xuICBjb25zdCBzZXRJc0NvcGllZCA9IHVzZU1lc3NhZ2VVdGlscygocykgPT4gcy5zZXRJc0NvcGllZCk7XG4gIGNvbnN0IGhhc0NvcHlhYmxlQ29udGVudCA9IHVzZU1lc3NhZ2UoKG1lc3NhZ2UpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgKG1lc3NhZ2Uucm9sZSAhPT0gXCJhc3Npc3RhbnRcIiB8fCBtZXNzYWdlLnN0YXR1cy50eXBlICE9PSBcInJ1bm5pbmdcIikgJiZcbiAgICAgIG1lc3NhZ2UuY29udGVudC5zb21lKChjKSA9PiBjLnR5cGUgPT09IFwidGV4dFwiICYmIGMudGV4dC5sZW5ndGggPiAwKVxuICAgICk7XG4gIH0pO1xuXG4gIGNvbnN0IGNhbGxiYWNrID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnN0IHsgaXNFZGl0aW5nLCB0ZXh0OiBjb21wb3NlclZhbHVlIH0gPSBjb21wb3NlclJ1bnRpbWUuZ2V0U3RhdGUoKTtcblxuICAgIGNvbnN0IHZhbHVlVG9Db3B5ID0gaXNFZGl0aW5nXG4gICAgICA/IGNvbXBvc2VyVmFsdWVcbiAgICAgIDogbWVzc2FnZVJ1bnRpbWUudW5zdGFibGVfZ2V0Q29weVRleHQoKTtcblxuICAgIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KHZhbHVlVG9Db3B5KS50aGVuKCgpID0+IHtcbiAgICAgIHNldElzQ29waWVkKHRydWUpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiBzZXRJc0NvcGllZChmYWxzZSksIGNvcGllZER1cmF0aW9uKTtcbiAgICB9KTtcbiAgfSwgW21lc3NhZ2VSdW50aW1lLCBzZXRJc0NvcGllZCwgY29tcG9zZXJSdW50aW1lLCBjb3BpZWREdXJhdGlvbl0pO1xuXG4gIGlmICghaGFzQ29weWFibGVDb250ZW50KSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIGNhbGxiYWNrO1xufTtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VFZGl0Q29tcG9zZXIsIHVzZU1lc3NhZ2VSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2NvbnRleHRcIjtcblxuZXhwb3J0IGNvbnN0IHVzZUFjdGlvbkJhckVkaXQgPSAoKSA9PiB7XG4gIGNvbnN0IG1lc3NhZ2VSdW50aW1lID0gdXNlTWVzc2FnZVJ1bnRpbWUoKTtcbiAgY29uc3QgZGlzYWJsZWQgPSB1c2VFZGl0Q29tcG9zZXIoKGMpID0+IGMuaXNFZGl0aW5nKTtcblxuICBjb25zdCBjYWxsYmFjayA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBtZXNzYWdlUnVudGltZS5jb21wb3Nlci5iZWdpbkVkaXQoKTtcbiAgfSwgW21lc3NhZ2VSdW50aW1lXSk7XG5cbiAgaWYgKGRpc2FibGVkKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIGNhbGxiYWNrO1xufTtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VNZXNzYWdlUnVudGltZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0L3JlYWN0L01lc3NhZ2VDb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvVGhyZWFkQ29udGV4dFwiO1xuaW1wb3J0IHsgdXNlQ29tYmluZWRTdG9yZSB9IGZyb20gXCIuLi8uLi91dGlscy9jb21iaW5lZC91c2VDb21iaW5lZFN0b3JlXCI7XG5cbmV4cG9ydCBjb25zdCB1c2VBY3Rpb25CYXJSZWxvYWQgPSAoKSA9PiB7XG4gIGNvbnN0IG1lc3NhZ2VSdW50aW1lID0gdXNlTWVzc2FnZVJ1bnRpbWUoKTtcbiAgY29uc3QgdGhyZWFkUnVudGltZSA9IHVzZVRocmVhZFJ1bnRpbWUoKTtcblxuICBjb25zdCBkaXNhYmxlZCA9IHVzZUNvbWJpbmVkU3RvcmUoXG4gICAgW3RocmVhZFJ1bnRpbWUsIG1lc3NhZ2VSdW50aW1lXSxcbiAgICAodCwgbSkgPT4gdC5pc1J1bm5pbmcgfHwgdC5pc0Rpc2FibGVkIHx8IG0ucm9sZSAhPT0gXCJhc3Npc3RhbnRcIixcbiAgKTtcblxuICBjb25zdCBjYWxsYmFjayA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBtZXNzYWdlUnVudGltZS5yZWxvYWQoKTtcbiAgfSwgW21lc3NhZ2VSdW50aW1lXSk7XG5cbiAgaWYgKGRpc2FibGVkKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIGNhbGxiYWNrO1xufTtcbiIsImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7XG4gIHR5cGUgQ29tYmluZWRTZWxlY3RvcixcbiAgY3JlYXRlQ29tYmluZWRTdG9yZSxcbiAgU3RvcmVPclJ1bnRpbWUsXG59IGZyb20gXCIuL2NyZWF0ZUNvbWJpbmVkU3RvcmVcIjtcblxuZXhwb3J0IGNvbnN0IHVzZUNvbWJpbmVkU3RvcmUgPSA8VCBleHRlbmRzIEFycmF5PHVua25vd24+LCBSPihcbiAgc3RvcmVzOiB7IFtLIGluIGtleW9mIFRdOiBTdG9yZU9yUnVudGltZTxUW0tdPiB9LFxuICBzZWxlY3RvcjogQ29tYmluZWRTZWxlY3RvcjxULCBSPixcbik6IFIgPT4ge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzIC0tIHNoYWxsb3ctY29tcGFyZSB0aGUgc3RvcmUgYXJyYXlcbiAgY29uc3QgdXNlQ29tYmluZWQgPSB1c2VNZW1vKCgpID0+IGNyZWF0ZUNvbWJpbmVkU3RvcmU8VCwgUj4oc3RvcmVzKSwgc3RvcmVzKTtcbiAgcmV0dXJuIHVzZUNvbWJpbmVkKHNlbGVjdG9yKTtcbn07XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlU3luY0V4dGVybmFsU3RvcmUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0eXBlIHsgVW5zdWJzY3JpYmUgfSBmcm9tIFwiLi4vLi4vdHlwZXMvVW5zdWJzY3JpYmVcIjtcblxuZXhwb3J0IHR5cGUgU3RvcmVPclJ1bnRpbWU8VD4gPSB7XG4gIGdldFN0YXRlOiAoKSA9PiBUO1xuICBzdWJzY3JpYmU6IChjYWxsYmFjazogKCkgPT4gdm9pZCkgPT4gVW5zdWJzY3JpYmU7XG59O1xuXG5leHBvcnQgdHlwZSBDb21iaW5lZFNlbGVjdG9yPFQgZXh0ZW5kcyBBcnJheTx1bmtub3duPiwgUj4gPSAoLi4uYXJnczogVCkgPT4gUjtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUNvbWJpbmVkU3RvcmUgPSA8VCBleHRlbmRzIEFycmF5PHVua25vd24+LCBSPihzdG9yZXM6IHtcbiAgW0sgaW4ga2V5b2YgVF06IFN0b3JlT3JSdW50aW1lPFRbS10+O1xufSkgPT4ge1xuICBjb25zdCBzdWJzY3JpYmUgPSAoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiBVbnN1YnNjcmliZSA9PiB7XG4gICAgY29uc3QgdW5zdWJzY3JpYmVzID0gc3RvcmVzLm1hcCgoc3RvcmUpID0+IHN0b3JlLnN1YnNjcmliZShjYWxsYmFjaykpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBmb3IgKGNvbnN0IHVuc3ViIG9mIHVuc3Vic2NyaWJlcykge1xuICAgICAgICB1bnN1YigpO1xuICAgICAgfVxuICAgIH07XG4gIH07XG5cbiAgcmV0dXJuIChzZWxlY3RvcjogQ29tYmluZWRTZWxlY3RvcjxULCBSPik6IFIgPT4ge1xuICAgIGNvbnN0IGdldFNuYXBzaG90ID0gKCk6IFIgPT5cbiAgICAgIHNlbGVjdG9yKC4uLihzdG9yZXMubWFwKChzdG9yZSkgPT4gc3RvcmUuZ2V0U3RhdGUoKSkgYXMgVCkpO1xuXG4gICAgcmV0dXJuIHVzZVN5bmNFeHRlcm5hbFN0b3JlKHN1YnNjcmliZSwgZ2V0U25hcHNob3QsIGdldFNuYXBzaG90KTtcbiAgfTtcbn07XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgeyB1c2VNZXNzYWdlLCB1c2VNZXNzYWdlUnVudGltZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5cbmV4cG9ydCBjb25zdCB1c2VBY3Rpb25CYXJTcGVhayA9ICgpID0+IHtcbiAgY29uc3QgbWVzc2FnZVJ1bmltZSA9IHVzZU1lc3NhZ2VSdW50aW1lKCk7XG4gIGNvbnN0IGNhbGxiYWNrID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIG1lc3NhZ2VSdW5pbWUuc3BlYWsoKTtcbiAgfSwgW21lc3NhZ2VSdW5pbWVdKTtcblxuICBjb25zdCBoYXNTcGVha2FibGVDb250ZW50ID0gdXNlTWVzc2FnZSgobSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAobS5yb2xlICE9PSBcImFzc2lzdGFudFwiIHx8IG0uc3RhdHVzLnR5cGUgIT09IFwicnVubmluZ1wiKSAmJlxuICAgICAgbS5jb250ZW50LnNvbWUoKGMpID0+IGMudHlwZSA9PT0gXCJ0ZXh0XCIgJiYgYy50ZXh0Lmxlbmd0aCA+IDApXG4gICAgKTtcbiAgfSk7XG5cbiAgaWYgKCFoYXNTcGVha2FibGVDb250ZW50KSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIGNhbGxiYWNrO1xufTtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICB1c2VNZXNzYWdlLFxuICB1c2VNZXNzYWdlUnVudGltZSxcbn0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvTWVzc2FnZUNvbnRleHRcIjtcblxuZXhwb3J0IGNvbnN0IHVzZUFjdGlvbkJhclN0b3BTcGVha2luZyA9ICgpID0+IHtcbiAgY29uc3QgbWVzc2FnZVJ1bnRpbWUgPSB1c2VNZXNzYWdlUnVudGltZSgpO1xuICBjb25zdCBpc1NwZWFraW5nID0gdXNlTWVzc2FnZSgodSkgPT4gdS5zcGVlY2ggIT0gbnVsbCk7XG5cbiAgY29uc3QgY2FsbGJhY2sgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgbWVzc2FnZVJ1bnRpbWUuc3RvcFNwZWFraW5nKCk7XG4gIH0sIFttZXNzYWdlUnVudGltZV0pO1xuXG4gIGlmICghaXNTcGVha2luZykgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIGNhbGxiYWNrO1xufTtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VNZXNzYWdlUnVudGltZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5cbmV4cG9ydCBjb25zdCB1c2VBY3Rpb25CYXJGZWVkYmFja1Bvc2l0aXZlID0gKCkgPT4ge1xuICBjb25zdCBtZXNzYWdlUnVudGltZSA9IHVzZU1lc3NhZ2VSdW50aW1lKCk7XG5cbiAgY29uc3QgY2FsbGJhY2sgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgbWVzc2FnZVJ1bnRpbWUuc3VibWl0RmVlZGJhY2soeyB0eXBlOiBcInBvc2l0aXZlXCIgfSk7XG4gIH0sIFttZXNzYWdlUnVudGltZV0pO1xuXG4gIHJldHVybiBjYWxsYmFjaztcbn07XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlTWVzc2FnZVJ1bnRpbWUgfSBmcm9tIFwiLi4vLi4vY29udGV4dFwiO1xuXG5leHBvcnQgY29uc3QgdXNlQWN0aW9uQmFyRmVlZGJhY2tOZWdhdGl2ZSA9ICgpID0+IHtcbiAgY29uc3QgbWVzc2FnZVJ1bnRpbWUgPSB1c2VNZXNzYWdlUnVudGltZSgpO1xuXG4gIGNvbnN0IGNhbGxiYWNrID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIG1lc3NhZ2VSdW50aW1lLnN1Ym1pdEZlZWRiYWNrKHsgdHlwZTogXCJuZWdhdGl2ZVwiIH0pO1xuICB9LCBbbWVzc2FnZVJ1bnRpbWVdKTtcblxuICByZXR1cm4gY2FsbGJhY2s7XG59O1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5pbXBvcnQgeyB1c2VNZXNzYWdlIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvTWVzc2FnZUNvbnRleHRcIjtcblxuZXhwb3J0IGNvbnN0IHVzZUJyYW5jaFBpY2tlckNvdW50ID0gKCkgPT4ge1xuICBjb25zdCBicmFuY2hDb3VudCA9IHVzZU1lc3NhZ2UoKHMpID0+IHMuYnJhbmNoQ291bnQpO1xuICByZXR1cm4gYnJhbmNoQ291bnQ7XG59O1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7XG4gIHVzZU1lc3NhZ2UsXG4gIHVzZU1lc3NhZ2VSdW50aW1lLFxufSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9NZXNzYWdlQ29udGV4dFwiO1xuXG5leHBvcnQgY29uc3QgdXNlQnJhbmNoUGlja2VyTmV4dCA9ICgpID0+IHtcbiAgY29uc3QgbWVzc2FnZVJ1bnRpbWUgPSB1c2VNZXNzYWdlUnVudGltZSgpO1xuICBjb25zdCBkaXNhYmxlZCA9IHVzZU1lc3NhZ2UoKG0pID0+IG0uYnJhbmNoTnVtYmVyID49IG0uYnJhbmNoQ291bnQpO1xuXG4gIGNvbnN0IGNhbGxiYWNrID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIG1lc3NhZ2VSdW50aW1lLnN3aXRjaFRvQnJhbmNoKHsgcG9zaXRpb246IFwibmV4dFwiIH0pO1xuICB9LCBbbWVzc2FnZVJ1bnRpbWVdKTtcblxuICBpZiAoZGlzYWJsZWQpIHJldHVybiBudWxsO1xuICByZXR1cm4gY2FsbGJhY2s7XG59O1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZU1lc3NhZ2UgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9NZXNzYWdlQ29udGV4dFwiO1xuXG5leHBvcnQgY29uc3QgdXNlQnJhbmNoUGlja2VyTnVtYmVyID0gKCkgPT4ge1xuICBjb25zdCBicmFuY2hOdW1iZXIgPSB1c2VNZXNzYWdlKChzKSA9PiBzLmJyYW5jaE51bWJlcik7XG4gIHJldHVybiBicmFuY2hOdW1iZXI7XG59O1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7XG4gIHVzZU1lc3NhZ2UsXG4gIHVzZU1lc3NhZ2VSdW50aW1lLFxufSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9NZXNzYWdlQ29udGV4dFwiO1xuXG5leHBvcnQgY29uc3QgdXNlQnJhbmNoUGlja2VyUHJldmlvdXMgPSAoKSA9PiB7XG4gIGNvbnN0IG1lc3NhZ2VSdW50aW1lID0gdXNlTWVzc2FnZVJ1bnRpbWUoKTtcbiAgY29uc3QgZGlzYWJsZWQgPSB1c2VNZXNzYWdlKChtKSA9PiBtLmJyYW5jaE51bWJlciA8PSAxKTtcblxuICBjb25zdCBjYWxsYmFjayA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBtZXNzYWdlUnVudGltZS5zd2l0Y2hUb0JyYW5jaCh7IHBvc2l0aW9uOiBcInByZXZpb3VzXCIgfSk7XG4gIH0sIFttZXNzYWdlUnVudGltZV0pO1xuXG4gIGlmIChkaXNhYmxlZCkgcmV0dXJuIG51bGw7XG4gIHJldHVybiBjYWxsYmFjaztcbn07XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQ29tcG9zZXIsIHVzZUNvbXBvc2VyUnVudGltZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5cbmV4cG9ydCBjb25zdCB1c2VDb21wb3NlckNhbmNlbCA9ICgpID0+IHtcbiAgY29uc3QgY29tcG9zZXJSdW50aW1lID0gdXNlQ29tcG9zZXJSdW50aW1lKCk7XG4gIGNvbnN0IGRpc2FibGVkID0gdXNlQ29tcG9zZXIoKGMpID0+ICFjLmNhbkNhbmNlbCk7XG5cbiAgY29uc3QgY2FsbGJhY2sgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgY29tcG9zZXJSdW50aW1lLmNhbmNlbCgpO1xuICB9LCBbY29tcG9zZXJSdW50aW1lXSk7XG5cbiAgaWYgKGRpc2FibGVkKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIGNhbGxiYWNrO1xufTtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyB1c2VDb21wb3NlciB9IGZyb20gXCIuLi8uLi9jb250ZXh0L3JlYWN0L0NvbXBvc2VyQ29udGV4dFwiO1xuaW1wb3J0IHR5cGUgeyBSZXF1aXJlQXRMZWFzdE9uZSB9IGZyb20gXCIuLi8uLi91dGlscy9SZXF1aXJlQXRMZWFzdE9uZVwiO1xuXG50eXBlIENvbXBvc2VySWZGaWx0ZXJzID0ge1xuICBlZGl0aW5nOiBib29sZWFuIHwgdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IHR5cGUgVXNlQ29tcG9zZXJJZlByb3BzID0gUmVxdWlyZUF0TGVhc3RPbmU8Q29tcG9zZXJJZkZpbHRlcnM+O1xuXG5leHBvcnQgY29uc3QgdXNlQ29tcG9zZXJJZiA9IChwcm9wczogVXNlQ29tcG9zZXJJZlByb3BzKSA9PiB7XG4gIHJldHVybiB1c2VDb21wb3NlcigoY29tcG9zZXIpID0+IHtcbiAgICBpZiAocHJvcHMuZWRpdGluZyA9PT0gdHJ1ZSAmJiAhY29tcG9zZXIuaXNFZGl0aW5nKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHByb3BzLmVkaXRpbmcgPT09IGZhbHNlICYmIGNvbXBvc2VyLmlzRWRpdGluZykgcmV0dXJuIGZhbHNlO1xuXG4gICAgcmV0dXJuIHRydWU7XG4gIH0pO1xufTtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDb21iaW5lZFN0b3JlIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2NvbWJpbmVkL3VzZUNvbWJpbmVkU3RvcmVcIjtcbmltcG9ydCB7IHVzZVRocmVhZFJ1bnRpbWUgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9UaHJlYWRDb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VDb21wb3NlclJ1bnRpbWUgfSBmcm9tIFwiLi4vLi4vY29udGV4dFwiO1xuXG5leHBvcnQgY29uc3QgdXNlQ29tcG9zZXJTZW5kID0gKCkgPT4ge1xuICBjb25zdCBjb21wb3NlclJ1bnRpbWUgPSB1c2VDb21wb3NlclJ1bnRpbWUoKTtcbiAgY29uc3QgdGhyZWFkUnVudGltZSA9IHVzZVRocmVhZFJ1bnRpbWUoKTtcblxuICBjb25zdCBkaXNhYmxlZCA9IHVzZUNvbWJpbmVkU3RvcmUoXG4gICAgW3RocmVhZFJ1bnRpbWUsIGNvbXBvc2VyUnVudGltZV0sXG4gICAgKHQsIGMpID0+IHQuaXNSdW5uaW5nIHx8ICFjLmlzRWRpdGluZyB8fCBjLmlzRW1wdHksXG4gICk7XG5cbiAgY29uc3QgY2FsbGJhY2sgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKCFjb21wb3NlclJ1bnRpbWUuZ2V0U3RhdGUoKS5pc0VkaXRpbmcpIHJldHVybjtcblxuICAgIGNvbXBvc2VyUnVudGltZS5zZW5kKCk7XG4gIH0sIFt0aHJlYWRSdW50aW1lXSk7XG5cbiAgaWYgKGRpc2FibGVkKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIGNhbGxiYWNrO1xufTtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDb21wb3NlciwgdXNlQ29tcG9zZXJSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2NvbnRleHRcIjtcblxuZXhwb3J0IGNvbnN0IHVzZUNvbXBvc2VyQWRkQXR0YWNobWVudCA9ICgpID0+IHtcbiAgY29uc3QgZGlzYWJsZWQgPSB1c2VDb21wb3NlcigoYykgPT4gIWMuaXNFZGl0aW5nKTtcblxuICBjb25zdCBjb21wb3NlclJ1bnRpbWUgPSB1c2VDb21wb3NlclJ1bnRpbWUoKTtcbiAgY29uc3QgY2FsbGJhY2sgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgaW5wdXQudHlwZSA9IFwiZmlsZVwiO1xuXG4gICAgY29uc3QgYXR0YWNobWVudEFjY2VwdCA9IGNvbXBvc2VyUnVudGltZS5nZXRBdHRhY2htZW50QWNjZXB0KCk7XG4gICAgaWYgKGF0dGFjaG1lbnRBY2NlcHQgIT09IFwiKlwiKSB7XG4gICAgICBpbnB1dC5hY2NlcHQgPSBhdHRhY2htZW50QWNjZXB0O1xuICAgIH1cblxuICAgIGlucHV0Lm9uY2hhbmdlID0gKGUpID0+IHtcbiAgICAgIGNvbnN0IGZpbGUgPSAoZS50YXJnZXQgYXMgSFRNTElucHV0RWxlbWVudCkuZmlsZXM/LlswXTtcbiAgICAgIGlmICghZmlsZSkgcmV0dXJuO1xuICAgICAgY29tcG9zZXJSdW50aW1lLmFkZEF0dGFjaG1lbnQoZmlsZSk7XG4gICAgfTtcblxuICAgIGlucHV0LmNsaWNrKCk7XG4gIH0sIFtjb21wb3NlclJ1bnRpbWVdKTtcblxuICBpZiAoZGlzYWJsZWQpIHJldHVybiBudWxsO1xuICByZXR1cm4gY2FsbGJhY2s7XG59O1xuIiwiaW1wb3J0IHsgQ29udGVudFBhcnRTdGF0ZSB9IGZyb20gXCIuLi8uLi9hcGkvQ29udGVudFBhcnRSdW50aW1lXCI7XG5pbXBvcnQgeyB1c2VDb250ZW50UGFydCB9IGZyb20gXCIuLi8uLi9jb250ZXh0L3JlYWN0L0NvbnRlbnRQYXJ0Q29udGV4dFwiO1xuaW1wb3J0IHsgVUlDb250ZW50UGFydCB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgdXNlQ29udGVudFBhcnREaXNwbGF5ID0gKCkgPT4ge1xuICBjb25zdCBkaXNwbGF5ID0gdXNlQ29udGVudFBhcnQoKGMpID0+IHtcbiAgICBpZiAoYy50eXBlICE9PSBcInVpXCIpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiVGhpcyBjb21wb25lbnQgY2FuIG9ubHkgYmUgdXNlZCBpbnNpZGUgdWkgY29udGVudCBwYXJ0cy5cIixcbiAgICAgICk7XG5cbiAgICByZXR1cm4gYyBhcyBDb250ZW50UGFydFN0YXRlICYgVUlDb250ZW50UGFydCAmIHsgcGFydDogVUlDb250ZW50UGFydCB9O1xuICB9KTtcblxuICByZXR1cm4gZGlzcGxheTtcbn07XG4iLCJpbXBvcnQgeyBDb250ZW50UGFydFN0YXRlIH0gZnJvbSBcIi4uLy4uL2FwaS9Db250ZW50UGFydFJ1bnRpbWVcIjtcbmltcG9ydCB7IHVzZUNvbnRlbnRQYXJ0IH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvQ29udGVudFBhcnRDb250ZXh0XCI7XG5pbXBvcnQgeyBJbWFnZUNvbnRlbnRQYXJ0IH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCB1c2VDb250ZW50UGFydEltYWdlID0gKCkgPT4ge1xuICBjb25zdCBpbWFnZSA9IHVzZUNvbnRlbnRQYXJ0KChjKSA9PiB7XG4gICAgaWYgKGMudHlwZSAhPT0gXCJpbWFnZVwiKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIkNvbnRlbnRQYXJ0SW1hZ2UgY2FuIG9ubHkgYmUgdXNlZCBpbnNpZGUgaW1hZ2UgY29udGVudCBwYXJ0cy5cIixcbiAgICAgICk7XG5cbiAgICByZXR1cm4gYyBhcyBDb250ZW50UGFydFN0YXRlICZcbiAgICAgIEltYWdlQ29udGVudFBhcnQgJiB7IHBhcnQ6IEltYWdlQ29udGVudFBhcnQgfTtcbiAgfSk7XG5cbiAgcmV0dXJuIGltYWdlO1xufTtcbiIsImltcG9ydCB7IENvbnRlbnRQYXJ0U3RhdGUgfSBmcm9tIFwiLi4vLi4vYXBpL0NvbnRlbnRQYXJ0UnVudGltZVwiO1xuaW1wb3J0IHsgdXNlQ29udGVudFBhcnQgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9Db250ZW50UGFydENvbnRleHRcIjtcbmltcG9ydCB7IFRleHRDb250ZW50UGFydCB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgdXNlQ29udGVudFBhcnRUZXh0ID0gKCkgPT4ge1xuICBjb25zdCB0ZXh0ID0gdXNlQ29udGVudFBhcnQoKGMpID0+IHtcbiAgICBpZiAoYy50eXBlICE9PSBcInRleHRcIilcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJDb250ZW50UGFydFRleHQgY2FuIG9ubHkgYmUgdXNlZCBpbnNpZGUgdGV4dCBjb250ZW50IHBhcnRzLlwiLFxuICAgICAgKTtcblxuICAgIHJldHVybiBjIGFzIENvbnRlbnRQYXJ0U3RhdGUgJiBUZXh0Q29udGVudFBhcnQgJiB7IHBhcnQ6IFRleHRDb250ZW50UGFydCB9O1xuICB9KTtcblxuICByZXR1cm4gdGV4dDtcbn07XG4iLCJcInVzZSBjbGllbnRcIjtcbmltcG9ydCB7XG4gIHVzZU1lc3NhZ2VSdW50aW1lLFxuICB1c2VNZXNzYWdlVXRpbHNTdG9yZSxcbn0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvTWVzc2FnZUNvbnRleHRcIjtcbmltcG9ydCB0eXBlIHsgUmVxdWlyZUF0TGVhc3RPbmUgfSBmcm9tIFwiLi4vLi4vdXRpbHMvUmVxdWlyZUF0TGVhc3RPbmVcIjtcbmltcG9ydCB7IHVzZUNvbWJpbmVkU3RvcmUgfSBmcm9tIFwiLi4vLi4vdXRpbHMvY29tYmluZWQvdXNlQ29tYmluZWRTdG9yZVwiO1xuXG50eXBlIE1lc3NhZ2VJZkZpbHRlcnMgPSB7XG4gIHVzZXI6IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gIGFzc2lzdGFudDogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgc3lzdGVtOiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICBoYXNCcmFuY2hlczogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgY29waWVkOiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICBsYXN0T3JIb3ZlcjogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgc3BlYWtpbmc6IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gIGhhc0F0dGFjaG1lbnRzOiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICBoYXNDb250ZW50OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICBzdWJtaXR0ZWRGZWVkYmFjazogXCJwb3NpdGl2ZVwiIHwgXCJuZWdhdGl2ZVwiIHwgbnVsbCB8IHVuZGVmaW5lZDtcbn07XG5leHBvcnQgdHlwZSBVc2VNZXNzYWdlSWZQcm9wcyA9IFJlcXVpcmVBdExlYXN0T25lPE1lc3NhZ2VJZkZpbHRlcnM+O1xuXG5leHBvcnQgY29uc3QgdXNlTWVzc2FnZUlmID0gKHByb3BzOiBVc2VNZXNzYWdlSWZQcm9wcykgPT4ge1xuICBjb25zdCBtZXNzYWdlUnVudGltZSA9IHVzZU1lc3NhZ2VSdW50aW1lKCk7XG4gIGNvbnN0IG1lc3NhZ2VVdGlsc1N0b3JlID0gdXNlTWVzc2FnZVV0aWxzU3RvcmUoKTtcblxuICByZXR1cm4gdXNlQ29tYmluZWRTdG9yZShcbiAgICBbbWVzc2FnZVJ1bnRpbWUsIG1lc3NhZ2VVdGlsc1N0b3JlXSxcbiAgICAoXG4gICAgICB7XG4gICAgICAgIHJvbGUsXG4gICAgICAgIGF0dGFjaG1lbnRzLFxuICAgICAgICBjb250ZW50LFxuICAgICAgICBicmFuY2hDb3VudCxcbiAgICAgICAgaXNMYXN0LFxuICAgICAgICBzcGVlY2gsXG4gICAgICAgIHN1Ym1pdHRlZEZlZWRiYWNrLFxuICAgICAgfSxcbiAgICAgIHsgaXNDb3BpZWQsIGlzSG92ZXJpbmcgfSxcbiAgICApID0+IHtcbiAgICAgIGlmIChwcm9wcy5oYXNCcmFuY2hlcyA9PT0gdHJ1ZSAmJiBicmFuY2hDb3VudCA8IDIpIHJldHVybiBmYWxzZTtcblxuICAgICAgaWYgKHByb3BzLnVzZXIgJiYgcm9sZSAhPT0gXCJ1c2VyXCIpIHJldHVybiBmYWxzZTtcbiAgICAgIGlmIChwcm9wcy5hc3Npc3RhbnQgJiYgcm9sZSAhPT0gXCJhc3Npc3RhbnRcIikgcmV0dXJuIGZhbHNlO1xuICAgICAgaWYgKHByb3BzLnN5c3RlbSAmJiByb2xlICE9PSBcInN5c3RlbVwiKSByZXR1cm4gZmFsc2U7XG5cbiAgICAgIGlmIChwcm9wcy5sYXN0T3JIb3ZlciA9PT0gdHJ1ZSAmJiAhaXNIb3ZlcmluZyAmJiAhaXNMYXN0KSByZXR1cm4gZmFsc2U7XG5cbiAgICAgIGlmIChwcm9wcy5jb3BpZWQgPT09IHRydWUgJiYgIWlzQ29waWVkKSByZXR1cm4gZmFsc2U7XG4gICAgICBpZiAocHJvcHMuY29waWVkID09PSBmYWxzZSAmJiBpc0NvcGllZCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICBpZiAocHJvcHMuc3BlYWtpbmcgPT09IHRydWUgJiYgc3BlZWNoID09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgICAgIGlmIChwcm9wcy5zcGVha2luZyA9PT0gZmFsc2UgJiYgc3BlZWNoICE9IG51bGwpIHJldHVybiBmYWxzZTtcblxuICAgICAgaWYgKFxuICAgICAgICBwcm9wcy5oYXNBdHRhY2htZW50cyA9PT0gdHJ1ZSAmJlxuICAgICAgICAocm9sZSAhPT0gXCJ1c2VyXCIgfHwgIWF0dGFjaG1lbnRzLmxlbmd0aClcbiAgICAgIClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgaWYgKFxuICAgICAgICBwcm9wcy5oYXNBdHRhY2htZW50cyA9PT0gZmFsc2UgJiZcbiAgICAgICAgcm9sZSA9PT0gXCJ1c2VyXCIgJiZcbiAgICAgICAgISFhdHRhY2htZW50cy5sZW5ndGhcbiAgICAgIClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgICBpZiAocHJvcHMuaGFzQ29udGVudCA9PT0gdHJ1ZSAmJiBjb250ZW50Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIGZhbHNlO1xuICAgICAgaWYgKHByb3BzLmhhc0NvbnRlbnQgPT09IGZhbHNlICYmIGNvbnRlbnQubGVuZ3RoID4gMCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICBpZiAoXG4gICAgICAgIHByb3BzLnN1Ym1pdHRlZEZlZWRiYWNrICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgKHN1Ym1pdHRlZEZlZWRiYWNrPy50eXBlID8/IG51bGwpICE9PSBwcm9wcy5zdWJtaXR0ZWRGZWVkYmFja1xuICAgICAgKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICk7XG59O1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZVRocmVhZCB9IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5pbXBvcnQgdHlwZSB7IFJlcXVpcmVBdExlYXN0T25lIH0gZnJvbSBcIi4uLy4uL3V0aWxzL1JlcXVpcmVBdExlYXN0T25lXCI7XG5cbnR5cGUgVGhyZWFkSWZGaWx0ZXJzID0ge1xuICBlbXB0eTogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgcnVubmluZzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgZGlzYWJsZWQ6IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59O1xuXG5leHBvcnQgdHlwZSBVc2VUaHJlYWRJZlByb3BzID0gUmVxdWlyZUF0TGVhc3RPbmU8VGhyZWFkSWZGaWx0ZXJzPjtcblxuZXhwb3J0IGNvbnN0IHVzZVRocmVhZElmID0gKHByb3BzOiBVc2VUaHJlYWRJZlByb3BzKSA9PiB7XG4gIHJldHVybiB1c2VUaHJlYWQoKHRocmVhZCkgPT4ge1xuICAgIGlmIChwcm9wcy5lbXB0eSA9PT0gdHJ1ZSAmJiB0aHJlYWQubWVzc2FnZXMubGVuZ3RoICE9PSAwKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHByb3BzLmVtcHR5ID09PSBmYWxzZSAmJiB0aHJlYWQubWVzc2FnZXMubGVuZ3RoID09PSAwKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHByb3BzLnJ1bm5pbmcgPT09IHRydWUgJiYgIXRocmVhZC5pc1J1bm5pbmcpIHJldHVybiBmYWxzZTtcbiAgICBpZiAocHJvcHMucnVubmluZyA9PT0gZmFsc2UgJiYgdGhyZWFkLmlzUnVubmluZykgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChwcm9wcy5kaXNhYmxlZCA9PT0gdHJ1ZSAmJiB0aHJlYWQuaXNEaXNhYmxlZCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChwcm9wcy5kaXNhYmxlZCA9PT0gZmFsc2UgJiYgdGhyZWFkLmlzRGlzYWJsZWQpIHJldHVybiBmYWxzZTtcblxuICAgIHJldHVybiB0cnVlO1xuICB9KTtcbn07XG4iLCJpbXBvcnQgeyB1c2VUaHJlYWRJZiB9IGZyb20gXCIuL3VzZVRocmVhZElmXCI7XG5cbmV4cG9ydCBjb25zdCB1c2VUaHJlYWRFbXB0eSA9ICgpID0+IHtcbiAgcmV0dXJuIHVzZVRocmVhZElmKHsgZW1wdHk6IHRydWUgfSk7XG59O1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZVRocmVhZFZpZXdwb3J0IH0gZnJvbSBcIi4uLy4uL2NvbnRleHRcIjtcbmltcG9ydCB7IHVzZVRocmVhZFZpZXdwb3J0U3RvcmUgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9UaHJlYWRDb250ZXh0XCI7XG5cbmV4cG9ydCBjb25zdCB1c2VUaHJlYWRTY3JvbGxUb0JvdHRvbSA9ICgpID0+IHtcbiAgY29uc3QgaXNBdEJvdHRvbSA9IHVzZVRocmVhZFZpZXdwb3J0KChzKSA9PiBzLmlzQXRCb3R0b20pO1xuXG4gIGNvbnN0IHRocmVhZFZpZXdwb3J0U3RvcmUgPSB1c2VUaHJlYWRWaWV3cG9ydFN0b3JlKCk7XG5cbiAgY29uc3QgaGFuZGxlU2Nyb2xsVG9Cb3R0b20gPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgdGhyZWFkVmlld3BvcnRTdG9yZS5nZXRTdGF0ZSgpLnNjcm9sbFRvQm90dG9tKCk7XG4gIH0sIFt0aHJlYWRWaWV3cG9ydFN0b3JlXSk7XG5cbiAgaWYgKGlzQXRCb3R0b20pIHJldHVybiBudWxsO1xuICByZXR1cm4gaGFuZGxlU2Nyb2xsVG9Cb3R0b207XG59O1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZVRocmVhZCB9IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvVGhyZWFkQ29udGV4dFwiO1xuXG5leHBvcnQgdHlwZSBVc2VBcHBseVRocmVhZFN1Z2dlc3Rpb25Qcm9wcyA9IHtcbiAgcHJvbXB0OiBzdHJpbmc7XG4gIG1ldGhvZDogXCJyZXBsYWNlXCI7XG4gIGF1dG9TZW5kPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VUaHJlYWRTdWdnZXN0aW9uID0gKHtcbiAgcHJvbXB0LFxuICBhdXRvU2VuZCxcbn06IFVzZUFwcGx5VGhyZWFkU3VnZ2VzdGlvblByb3BzKSA9PiB7XG4gIGNvbnN0IHRocmVhZFJ1bnRpbWUgPSB1c2VUaHJlYWRSdW50aW1lKCk7XG5cbiAgY29uc3QgZGlzYWJsZWQgPSB1c2VUaHJlYWQoKHQpID0+IHQuaXNEaXNhYmxlZCk7XG4gIGNvbnN0IGNhbGxiYWNrID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChhdXRvU2VuZCAmJiAhdGhyZWFkUnVudGltZS5nZXRTdGF0ZSgpLmlzUnVubmluZykge1xuICAgICAgdGhyZWFkUnVudGltZS5hcHBlbmQocHJvbXB0KTtcbiAgICAgIHRocmVhZFJ1bnRpbWUuY29tcG9zZXIuc2V0VGV4dChcIlwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyZWFkUnVudGltZS5jb21wb3Nlci5zZXRUZXh0KHByb21wdCk7XG4gICAgfVxuICB9LCBbdGhyZWFkUnVudGltZSwgYXV0b1NlbmQsIHByb21wdF0pO1xuXG4gIGlmIChkaXNhYmxlZCkgcmV0dXJuIG51bGw7XG4gIHJldHVybiBjYWxsYmFjaztcbn07XG4iLCJleHBvcnQgeyBBY3Rpb25CYXJQcmltaXRpdmVSb290IGFzIFJvb3QgfSBmcm9tIFwiLi9BY3Rpb25CYXJSb290XCI7XG5leHBvcnQgeyBBY3Rpb25CYXJQcmltaXRpdmVDb3B5IGFzIENvcHkgfSBmcm9tIFwiLi9BY3Rpb25CYXJDb3B5XCI7XG5leHBvcnQgeyBBY3Rpb25CYXJQcmltaXRpdmVSZWxvYWQgYXMgUmVsb2FkIH0gZnJvbSBcIi4vQWN0aW9uQmFyUmVsb2FkXCI7XG5leHBvcnQgeyBBY3Rpb25CYXJQcmltaXRpdmVFZGl0IGFzIEVkaXQgfSBmcm9tIFwiLi9BY3Rpb25CYXJFZGl0XCI7XG5leHBvcnQgeyBBY3Rpb25CYXJQcmltaXRpdmVTcGVhayBhcyBTcGVhayB9IGZyb20gXCIuL0FjdGlvbkJhclNwZWFrXCI7XG5leHBvcnQgeyBBY3Rpb25CYXJQcmltaXRpdmVTdG9wU3BlYWtpbmcgYXMgU3RvcFNwZWFraW5nIH0gZnJvbSBcIi4vQWN0aW9uQmFyU3RvcFNwZWFraW5nXCI7XG5leHBvcnQgeyBBY3Rpb25CYXJQcmltaXRpdmVGZWVkYmFja1Bvc2l0aXZlIGFzIEZlZWRiYWNrUG9zaXRpdmUgfSBmcm9tIFwiLi9BY3Rpb25CYXJGZWVkYmFja1Bvc2l0aXZlXCI7XG5leHBvcnQgeyBBY3Rpb25CYXJQcmltaXRpdmVGZWVkYmFja05lZ2F0aXZlIGFzIEZlZWRiYWNrTmVnYXRpdmUgfSBmcm9tIFwiLi9BY3Rpb25CYXJGZWVkYmFja05lZ2F0aXZlXCI7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgUHJpbWl0aXZlIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1wcmltaXRpdmVcIjtcbmltcG9ydCB7IHR5cGUgRWxlbWVudFJlZiwgZm9yd2FyZFJlZiwgQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICB1c2VBY3Rpb25CYXJGbG9hdFN0YXR1cyxcbiAgSGlkZUFuZEZsb2F0U3RhdHVzLFxuICBVc2VBY3Rpb25CYXJGbG9hdFN0YXR1c1Byb3BzLFxufSBmcm9tIFwiLi91c2VBY3Rpb25CYXJGbG9hdFN0YXR1c1wiO1xuXG50eXBlIFByaW1pdGl2ZURpdlByb3BzID0gQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBQcmltaXRpdmUuZGl2PjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYEFjdGlvbkJhclByaW1pdGl2ZS5Sb290LlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIEFjdGlvbkJhclByaW1pdGl2ZVJvb3RQcm9wcyA9IEFjdGlvbkJhclByaW1pdGl2ZVJvb3QuUHJvcHM7XG5cbmV4cG9ydCBuYW1lc3BhY2UgQWN0aW9uQmFyUHJpbWl0aXZlUm9vdCB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBFbGVtZW50UmVmPHR5cGVvZiBQcmltaXRpdmUuZGl2PjtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBQcmltaXRpdmVEaXZQcm9wcyAmIFVzZUFjdGlvbkJhckZsb2F0U3RhdHVzUHJvcHM7XG59XG5cbmV4cG9ydCBjb25zdCBBY3Rpb25CYXJQcmltaXRpdmVSb290ID0gZm9yd2FyZFJlZjxcbiAgQWN0aW9uQmFyUHJpbWl0aXZlUm9vdC5FbGVtZW50LFxuICBBY3Rpb25CYXJQcmltaXRpdmVSb290LlByb3BzXG4+KCh7IGhpZGVXaGVuUnVubmluZywgYXV0b2hpZGUsIGF1dG9oaWRlRmxvYXQsIC4uLnJlc3QgfSwgcmVmKSA9PiB7XG4gIGNvbnN0IGhpZGVBbmRmbG9hdFN0YXR1cyA9IHVzZUFjdGlvbkJhckZsb2F0U3RhdHVzKHtcbiAgICBoaWRlV2hlblJ1bm5pbmcsXG4gICAgYXV0b2hpZGUsXG4gICAgYXV0b2hpZGVGbG9hdCxcbiAgfSk7XG5cbiAgaWYgKGhpZGVBbmRmbG9hdFN0YXR1cyA9PT0gSGlkZUFuZEZsb2F0U3RhdHVzLkhpZGRlbikgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8UHJpbWl0aXZlLmRpdlxuICAgICAgey4uLihoaWRlQW5kZmxvYXRTdGF0dXMgPT09IEhpZGVBbmRGbG9hdFN0YXR1cy5GbG9hdGluZ1xuICAgICAgICA/IHsgXCJkYXRhLWZsb2F0aW5nXCI6IFwidHJ1ZVwiIH1cbiAgICAgICAgOiBudWxsKX1cbiAgICAgIHsuLi5yZXN0fVxuICAgICAgcmVmPXtyZWZ9XG4gICAgLz5cbiAgKTtcbn0pO1xuXG5BY3Rpb25CYXJQcmltaXRpdmVSb290LmRpc3BsYXlOYW1lID0gXCJBY3Rpb25CYXJQcmltaXRpdmUuUm9vdFwiO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5pbXBvcnQge1xuICB1c2VNZXNzYWdlUnVudGltZSxcbiAgdXNlTWVzc2FnZVV0aWxzU3RvcmUsXG59IGZyb20gXCIuLi8uLi9jb250ZXh0L3JlYWN0L01lc3NhZ2VDb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvVGhyZWFkQ29udGV4dFwiO1xuaW1wb3J0IHsgdXNlQ29tYmluZWRTdG9yZSB9IGZyb20gXCIuLi8uLi91dGlscy9jb21iaW5lZC91c2VDb21iaW5lZFN0b3JlXCI7XG5cbmV4cG9ydCBlbnVtIEhpZGVBbmRGbG9hdFN0YXR1cyB7XG4gIEhpZGRlbiA9IFwiaGlkZGVuXCIsXG4gIEZsb2F0aW5nID0gXCJmbG9hdGluZ1wiLFxuICBOb3JtYWwgPSBcIm5vcm1hbFwiLFxufVxuXG5leHBvcnQgdHlwZSBVc2VBY3Rpb25CYXJGbG9hdFN0YXR1c1Byb3BzID0ge1xuICBoaWRlV2hlblJ1bm5pbmc/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICBhdXRvaGlkZT86IFwiYWx3YXlzXCIgfCBcIm5vdC1sYXN0XCIgfCBcIm5ldmVyXCIgfCB1bmRlZmluZWQ7XG4gIGF1dG9oaWRlRmxvYXQ/OiBcImFsd2F5c1wiIHwgXCJzaW5nbGUtYnJhbmNoXCIgfCBcIm5ldmVyXCIgfCB1bmRlZmluZWQ7XG59O1xuXG5leHBvcnQgY29uc3QgdXNlQWN0aW9uQmFyRmxvYXRTdGF0dXMgPSAoe1xuICBoaWRlV2hlblJ1bm5pbmcsXG4gIGF1dG9oaWRlLFxuICBhdXRvaGlkZUZsb2F0LFxufTogVXNlQWN0aW9uQmFyRmxvYXRTdGF0dXNQcm9wcykgPT4ge1xuICBjb25zdCB0aHJlYWRSdW50aW1lID0gdXNlVGhyZWFkUnVudGltZSgpO1xuICBjb25zdCBtZXNzYWdlUnVudGltZSA9IHVzZU1lc3NhZ2VSdW50aW1lKCk7XG4gIGNvbnN0IG1lc3NhZ2VVdGlsc1N0b3JlID0gdXNlTWVzc2FnZVV0aWxzU3RvcmUoKTtcblxuICByZXR1cm4gdXNlQ29tYmluZWRTdG9yZShcbiAgICBbdGhyZWFkUnVudGltZSwgbWVzc2FnZVJ1bnRpbWUsIG1lc3NhZ2VVdGlsc1N0b3JlXSxcbiAgICAodCwgbSwgbXUpID0+IHtcbiAgICAgIGlmIChoaWRlV2hlblJ1bm5pbmcgJiYgdC5pc1J1bm5pbmcpIHJldHVybiBIaWRlQW5kRmxvYXRTdGF0dXMuSGlkZGVuO1xuXG4gICAgICBjb25zdCBhdXRvaGlkZUVuYWJsZWQgPVxuICAgICAgICBhdXRvaGlkZSA9PT0gXCJhbHdheXNcIiB8fCAoYXV0b2hpZGUgPT09IFwibm90LWxhc3RcIiAmJiAhbS5pc0xhc3QpO1xuXG4gICAgICAvLyBub3JtYWwgc3RhdHVzXG4gICAgICBpZiAoIWF1dG9oaWRlRW5hYmxlZCkgcmV0dXJuIEhpZGVBbmRGbG9hdFN0YXR1cy5Ob3JtYWw7XG5cbiAgICAgIC8vIGhpZGRlbiBzdGF0dXNcbiAgICAgIGlmICghbXUuaXNIb3ZlcmluZykgcmV0dXJuIEhpZGVBbmRGbG9hdFN0YXR1cy5IaWRkZW47XG5cbiAgICAgIC8vIGZsb2F0aW5nIHN0YXR1c1xuICAgICAgaWYgKFxuICAgICAgICBhdXRvaGlkZUZsb2F0ID09PSBcImFsd2F5c1wiIHx8XG4gICAgICAgIChhdXRvaGlkZUZsb2F0ID09PSBcInNpbmdsZS1icmFuY2hcIiAmJiBtLmJyYW5jaENvdW50IDw9IDEpXG4gICAgICApXG4gICAgICAgIHJldHVybiBIaWRlQW5kRmxvYXRTdGF0dXMuRmxvYXRpbmc7XG5cbiAgICAgIHJldHVybiBIaWRlQW5kRmxvYXRTdGF0dXMuTm9ybWFsO1xuICAgIH0sXG4gICk7XG59O1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IGZvcndhcmRSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUFjdGlvbkJhckNvcHkgfSBmcm9tIFwiLi4vLi4vcHJpbWl0aXZlLWhvb2tzL2FjdGlvbkJhci91c2VBY3Rpb25CYXJDb3B5XCI7XG5pbXBvcnQgeyBBY3Rpb25CdXR0b25Qcm9wcyB9IGZyb20gXCIuLi8uLi91dGlscy9jcmVhdGVBY3Rpb25CdXR0b25cIjtcbmltcG9ydCB7IGNvbXBvc2VFdmVudEhhbmRsZXJzIH0gZnJvbSBcIkByYWRpeC11aS9wcmltaXRpdmVcIjtcbmltcG9ydCB7IFByaW1pdGl2ZSB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlXCI7XG5pbXBvcnQgeyB1c2VNZXNzYWdlVXRpbHMgfSBmcm9tIFwiLi4vLi4vY29udGV4dFwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgQWN0aW9uQmFyUHJpbWl0aXZlLkNvcHkuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQWN0aW9uQmFyUHJpbWl0aXZlQ29weVByb3BzID0gQWN0aW9uQmFyUHJpbWl0aXZlQ29weS5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBBY3Rpb25CYXJQcmltaXRpdmVDb3B5IHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEhUTUxCdXR0b25FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IEFjdGlvbkJ1dHRvblByb3BzPHR5cGVvZiB1c2VBY3Rpb25CYXJDb3B5Pjtcbn1cblxuZXhwb3J0IGNvbnN0IEFjdGlvbkJhclByaW1pdGl2ZUNvcHkgPSBmb3J3YXJkUmVmPFxuICBBY3Rpb25CYXJQcmltaXRpdmVDb3B5LkVsZW1lbnQsXG4gIEFjdGlvbkJhclByaW1pdGl2ZUNvcHkuUHJvcHNcbj4oKHsgY29waWVkRHVyYXRpb24sIG9uQ2xpY2ssIGRpc2FibGVkLCAuLi5wcm9wcyB9LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgY29uc3QgaXNDb3BpZWQgPSB1c2VNZXNzYWdlVXRpbHMoKHUpID0+IHUuaXNDb3BpZWQpO1xuICBjb25zdCBjYWxsYmFjayA9IHVzZUFjdGlvbkJhckNvcHkoeyBjb3BpZWREdXJhdGlvbiB9KTtcbiAgcmV0dXJuIChcbiAgICA8UHJpbWl0aXZlLmJ1dHRvblxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICB7Li4uKGlzQ29waWVkID8geyBcImRhdGEtY29waWVkXCI6IFwidHJ1ZVwiIH0gOiB7fSl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgICByZWY9e2ZvcndhcmRlZFJlZn1cbiAgICAgIGRpc2FibGVkPXtkaXNhYmxlZCB8fCAhY2FsbGJhY2t9XG4gICAgICBvbkNsaWNrPXtjb21wb3NlRXZlbnRIYW5kbGVycyhvbkNsaWNrLCAoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrPy4oKTtcbiAgICAgIH0pfVxuICAgIC8+XG4gICk7XG59KTtcblxuQWN0aW9uQmFyUHJpbWl0aXZlQ29weS5kaXNwbGF5TmFtZSA9IFwiQWN0aW9uQmFyUHJpbWl0aXZlLkNvcHlcIjtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBFbGVtZW50UmVmLCBmb3J3YXJkUmVmLCBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFByaW1pdGl2ZSB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlXCI7XG5pbXBvcnQgeyBjb21wb3NlRXZlbnRIYW5kbGVycyB9IGZyb20gXCJAcmFkaXgtdWkvcHJpbWl0aXZlXCI7XG5cbnR5cGUgQWN0aW9uQnV0dG9uQ2FsbGJhY2s8VFByb3BzPiA9IChwcm9wczogVFByb3BzKSA9PiBudWxsIHwgKCgpID0+IHZvaWQpO1xuXG50eXBlIFByaW1pdGl2ZUJ1dHRvblByb3BzID0gQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBQcmltaXRpdmUuYnV0dG9uPjtcblxuZXhwb3J0IHR5cGUgQWN0aW9uQnV0dG9uUHJvcHM8VEhvb2s+ID0gUHJpbWl0aXZlQnV0dG9uUHJvcHMgJlxuICAoVEhvb2sgZXh0ZW5kcyAocHJvcHM6IGluZmVyIFRQcm9wcykgPT4gdW5rbm93biA/IFRQcm9wcyA6IG5ldmVyKTtcblxuZXhwb3J0IHR5cGUgQWN0aW9uQnV0dG9uRWxlbWVudCA9IEVsZW1lbnRSZWY8dHlwZW9mIFByaW1pdGl2ZS5idXR0b24+O1xuXG5leHBvcnQgY29uc3QgY3JlYXRlQWN0aW9uQnV0dG9uID0gPFRQcm9wcyw+KFxuICBkaXNwbGF5TmFtZTogc3RyaW5nLFxuICB1c2VBY3Rpb25CdXR0b246IEFjdGlvbkJ1dHRvbkNhbGxiYWNrPFRQcm9wcz4sXG4gIGZvcndhcmRQcm9wczogKGtleW9mIE5vbk51bGxhYmxlPFRQcm9wcz4pW10gPSBbXSxcbikgPT4ge1xuICBjb25zdCBBY3Rpb25CdXR0b24gPSBmb3J3YXJkUmVmPFxuICAgIEFjdGlvbkJ1dHRvbkVsZW1lbnQsXG4gICAgUHJpbWl0aXZlQnV0dG9uUHJvcHMgJiBUUHJvcHNcbiAgPigocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xuICAgIGNvbnN0IGZvcndhcmRlZFByb3BzID0ge30gYXMgVFByb3BzO1xuICAgIGNvbnN0IHByaW1pdGl2ZVByb3BzID0ge30gYXMgUHJpbWl0aXZlQnV0dG9uUHJvcHM7XG5cbiAgICAoT2JqZWN0LmtleXMocHJvcHMpIGFzIEFycmF5PGtleW9mIHR5cGVvZiBwcm9wcz4pLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgaWYgKGZvcndhcmRQcm9wcy5pbmNsdWRlcyhrZXkgYXMga2V5b2YgVFByb3BzKSkge1xuICAgICAgICAoZm9yd2FyZGVkUHJvcHMgYXMgYW55KVtrZXldID0gcHJvcHNba2V5XTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIChwcmltaXRpdmVQcm9wcyBhcyBhbnkpW2tleV0gPSBwcm9wc1trZXldO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgY29uc3QgY2FsbGJhY2sgPSB1c2VBY3Rpb25CdXR0b24oZm9yd2FyZGVkUHJvcHMgYXMgVFByb3BzKTtcbiAgICByZXR1cm4gKFxuICAgICAgPFByaW1pdGl2ZS5idXR0b25cbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgIHsuLi5wcmltaXRpdmVQcm9wc31cbiAgICAgICAgcmVmPXtmb3J3YXJkZWRSZWZ9XG4gICAgICAgIGRpc2FibGVkPXtwcmltaXRpdmVQcm9wcy5kaXNhYmxlZCB8fCAhY2FsbGJhY2t9XG4gICAgICAgIG9uQ2xpY2s9e2NvbXBvc2VFdmVudEhhbmRsZXJzKHByaW1pdGl2ZVByb3BzLm9uQ2xpY2ssICgpID0+IHtcbiAgICAgICAgICBjYWxsYmFjaz8uKCk7XG4gICAgICAgIH0pfVxuICAgICAgLz5cbiAgICApO1xuICB9KTtcblxuICBBY3Rpb25CdXR0b24uZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcblxuICByZXR1cm4gQWN0aW9uQnV0dG9uO1xufTtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyB1c2VBY3Rpb25CYXJSZWxvYWQgfSBmcm9tIFwiLi4vLi4vcHJpbWl0aXZlLWhvb2tzL2FjdGlvbkJhci91c2VBY3Rpb25CYXJSZWxvYWRcIjtcbmltcG9ydCB7XG4gIEFjdGlvbkJ1dHRvbkVsZW1lbnQsXG4gIEFjdGlvbkJ1dHRvblByb3BzLFxuICBjcmVhdGVBY3Rpb25CdXR0b24sXG59IGZyb20gXCIuLi8uLi91dGlscy9jcmVhdGVBY3Rpb25CdXR0b25cIjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYEFjdGlvbkJhclByaW1pdGl2ZS5SZWxvYWQuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQWN0aW9uQmFyUHJpbWl0aXZlUmVsb2FkUHJvcHMgPSBBY3Rpb25CYXJQcmltaXRpdmVSZWxvYWQuUHJvcHM7XG5cbmV4cG9ydCBuYW1lc3BhY2UgQWN0aW9uQmFyUHJpbWl0aXZlUmVsb2FkIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEFjdGlvbkJ1dHRvbkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gQWN0aW9uQnV0dG9uUHJvcHM8dHlwZW9mIHVzZUFjdGlvbkJhclJlbG9hZD47XG59XG5cbmV4cG9ydCBjb25zdCBBY3Rpb25CYXJQcmltaXRpdmVSZWxvYWQgPSBjcmVhdGVBY3Rpb25CdXR0b24oXG4gIFwiQWN0aW9uQmFyUHJpbWl0aXZlLlJlbG9hZFwiLFxuICB1c2VBY3Rpb25CYXJSZWxvYWQsXG4pO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZUFjdGlvbkJhckVkaXQgfSBmcm9tIFwiLi4vLi4vcHJpbWl0aXZlLWhvb2tzL2FjdGlvbkJhci91c2VBY3Rpb25CYXJFZGl0XCI7XG5pbXBvcnQge1xuICBBY3Rpb25CdXR0b25FbGVtZW50LFxuICBBY3Rpb25CdXR0b25Qcm9wcyxcbiAgY3JlYXRlQWN0aW9uQnV0dG9uLFxufSBmcm9tIFwiLi4vLi4vdXRpbHMvY3JlYXRlQWN0aW9uQnV0dG9uXCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBBY3Rpb25CYXJQcmltaXRpdmUuRWRpdC5Qcm9wc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBBY3Rpb25CYXJQcmltaXRpdmVFZGl0UHJvcHMgPSBBY3Rpb25CYXJQcmltaXRpdmVFZGl0LlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIEFjdGlvbkJhclByaW1pdGl2ZUVkaXQge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gQWN0aW9uQnV0dG9uRWxlbWVudDtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBBY3Rpb25CdXR0b25Qcm9wczx0eXBlb2YgdXNlQWN0aW9uQmFyRWRpdD47XG59XG5cbmV4cG9ydCBjb25zdCBBY3Rpb25CYXJQcmltaXRpdmVFZGl0ID0gY3JlYXRlQWN0aW9uQnV0dG9uKFxuICBcIkFjdGlvbkJhclByaW1pdGl2ZS5FZGl0XCIsXG4gIHVzZUFjdGlvbkJhckVkaXQsXG4pO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZUFjdGlvbkJhclNwZWFrIH0gZnJvbSBcIi4uLy4uL3ByaW1pdGl2ZS1ob29rcy9hY3Rpb25CYXIvdXNlQWN0aW9uQmFyU3BlYWtcIjtcbmltcG9ydCB7XG4gIEFjdGlvbkJ1dHRvbkVsZW1lbnQsXG4gIEFjdGlvbkJ1dHRvblByb3BzLFxuICBjcmVhdGVBY3Rpb25CdXR0b24sXG59IGZyb20gXCIuLi8uLi91dGlscy9jcmVhdGVBY3Rpb25CdXR0b25cIjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYEFjdGlvbkJhclByaW1pdGl2ZS5TcGVhay5Qcm9wc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBBY3Rpb25CYXJQcmltaXRpdmVTcGVha1Byb3BzID0gQWN0aW9uQmFyUHJpbWl0aXZlU3BlYWsuUHJvcHM7XG5cbmV4cG9ydCBuYW1lc3BhY2UgQWN0aW9uQmFyUHJpbWl0aXZlU3BlYWsge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gQWN0aW9uQnV0dG9uRWxlbWVudDtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBBY3Rpb25CdXR0b25Qcm9wczx0eXBlb2YgdXNlQWN0aW9uQmFyU3BlYWs+O1xufVxuXG5leHBvcnQgY29uc3QgQWN0aW9uQmFyUHJpbWl0aXZlU3BlYWsgPSBjcmVhdGVBY3Rpb25CdXR0b24oXG4gIFwiQWN0aW9uQmFyUHJpbWl0aXZlLlNwZWFrXCIsXG4gIHVzZUFjdGlvbkJhclNwZWFrLFxuKTtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBmb3J3YXJkUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VBY3Rpb25CYXJTdG9wU3BlYWtpbmcgfSBmcm9tIFwiLi4vLi4vcHJpbWl0aXZlLWhvb2tzL2FjdGlvbkJhci91c2VBY3Rpb25CYXJTdG9wU3BlYWtpbmdcIjtcbmltcG9ydCB7IEFjdGlvbkJ1dHRvblByb3BzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2NyZWF0ZUFjdGlvbkJ1dHRvblwiO1xuaW1wb3J0IHsgdXNlRXNjYXBlS2V5ZG93biB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtdXNlLWVzY2FwZS1rZXlkb3duXCI7XG5pbXBvcnQgeyBQcmltaXRpdmUgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZVwiO1xuaW1wb3J0IHsgY29tcG9zZUV2ZW50SGFuZGxlcnMgfSBmcm9tIFwiQHJhZGl4LXVpL3ByaW1pdGl2ZVwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgQWN0aW9uQmFyUHJpbWl0aXZlLlN0b3BTcGVha2luZy5Qcm9wc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBBY3Rpb25CYXJQcmltaXRpdmVTdG9wU3BlYWtpbmdQcm9wcyA9XG4gIEFjdGlvbkJhclByaW1pdGl2ZVN0b3BTcGVha2luZy5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBBY3Rpb25CYXJQcmltaXRpdmVTdG9wU3BlYWtpbmcge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gSFRNTEJ1dHRvbkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gQWN0aW9uQnV0dG9uUHJvcHM8dHlwZW9mIHVzZUFjdGlvbkJhclN0b3BTcGVha2luZz47XG59XG5cbmV4cG9ydCBjb25zdCBBY3Rpb25CYXJQcmltaXRpdmVTdG9wU3BlYWtpbmcgPSBmb3J3YXJkUmVmPFxuICBBY3Rpb25CYXJQcmltaXRpdmVTdG9wU3BlYWtpbmcuRWxlbWVudCxcbiAgQWN0aW9uQmFyUHJpbWl0aXZlU3RvcFNwZWFraW5nLlByb3BzXG4+KChwcm9wcywgcmVmKSA9PiB7XG4gIGNvbnN0IGNhbGxiYWNrID0gdXNlQWN0aW9uQmFyU3RvcFNwZWFraW5nKCk7XG5cbiAgLy8gVE9ETyB0aGlzIHN0b3BzIHdvcmtpbmcgaWYgdGhlIHVzZXIgaXMgbm90IGhvdmVyaW5nIG92ZXIgYW4gb2xkZXIgbWVzc2FnZVxuICB1c2VFc2NhcGVLZXlkb3duKChlKSA9PiB7XG4gICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBjYWxsYmFjaygpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8UHJpbWl0aXZlLmJ1dHRvblxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICBkaXNhYmxlZD17IWNhbGxiYWNrfVxuICAgICAgey4uLnByb3BzfVxuICAgICAgcmVmPXtyZWZ9XG4gICAgICBvbkNsaWNrPXtjb21wb3NlRXZlbnRIYW5kbGVycyhwcm9wcy5vbkNsaWNrLCAoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrPy4oKTtcbiAgICAgIH0pfVxuICAgIC8+XG4gICk7XG59KTtcblxuQWN0aW9uQmFyUHJpbWl0aXZlU3RvcFNwZWFraW5nLmRpc3BsYXlOYW1lID0gXCJBY3Rpb25CYXJQcmltaXRpdmUuU3RvcFNwZWFraW5nXCI7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgZm9yd2FyZFJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQWN0aW9uQmFyRmVlZGJhY2tQb3NpdGl2ZSB9IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3MvYWN0aW9uQmFyL3VzZUFjdGlvbkJhckZlZWRiYWNrUG9zaXRpdmVcIjtcbmltcG9ydCB7IEFjdGlvbkJ1dHRvblByb3BzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2NyZWF0ZUFjdGlvbkJ1dHRvblwiO1xuaW1wb3J0IHsgY29tcG9zZUV2ZW50SGFuZGxlcnMgfSBmcm9tIFwiQHJhZGl4LXVpL3ByaW1pdGl2ZVwiO1xuaW1wb3J0IHsgdXNlTWVzc2FnZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5pbXBvcnQgeyBQcmltaXRpdmUgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZVwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgQWN0aW9uQmFyUHJpbWl0aXZlLkZlZWRiYWNrUG9zaXRpdmUuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQWN0aW9uQmFyUHJpbWl0aXZlRmVlZGJhY2tQb3NpdGl2ZVByb3BzID1cbiAgQWN0aW9uQmFyUHJpbWl0aXZlRmVlZGJhY2tQb3NpdGl2ZS5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBBY3Rpb25CYXJQcmltaXRpdmVGZWVkYmFja1Bvc2l0aXZlIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEhUTUxCdXR0b25FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IEFjdGlvbkJ1dHRvblByb3BzPHR5cGVvZiB1c2VBY3Rpb25CYXJGZWVkYmFja1Bvc2l0aXZlPjtcbn1cblxuZXhwb3J0IGNvbnN0IEFjdGlvbkJhclByaW1pdGl2ZUZlZWRiYWNrUG9zaXRpdmUgPSBmb3J3YXJkUmVmPFxuICBBY3Rpb25CYXJQcmltaXRpdmVGZWVkYmFja1Bvc2l0aXZlLkVsZW1lbnQsXG4gIEFjdGlvbkJhclByaW1pdGl2ZUZlZWRiYWNrUG9zaXRpdmUuUHJvcHNcbj4oKHsgb25DbGljaywgZGlzYWJsZWQsIC4uLnByb3BzIH0sIGZvcndhcmRlZFJlZikgPT4ge1xuICBjb25zdCBpc1N1Ym1pdHRlZCA9IHVzZU1lc3NhZ2UoXG4gICAgKHUpID0+IHUuc3VibWl0dGVkRmVlZGJhY2s/LnR5cGUgPT09IFwicG9zaXRpdmVcIixcbiAgKTtcbiAgY29uc3QgY2FsbGJhY2sgPSB1c2VBY3Rpb25CYXJGZWVkYmFja1Bvc2l0aXZlKCk7XG4gIHJldHVybiAoXG4gICAgPFByaW1pdGl2ZS5idXR0b25cbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgey4uLihpc1N1Ym1pdHRlZCA/IHsgXCJkYXRhLXN1Ym1pdHRlZFwiOiBcInRydWVcIiB9IDoge30pfVxuICAgICAgey4uLnByb3BzfVxuICAgICAgcmVmPXtmb3J3YXJkZWRSZWZ9XG4gICAgICBkaXNhYmxlZD17ZGlzYWJsZWQgfHwgIWNhbGxiYWNrfVxuICAgICAgb25DbGljaz17Y29tcG9zZUV2ZW50SGFuZGxlcnMob25DbGljaywgKCkgPT4ge1xuICAgICAgICBjYWxsYmFjaz8uKCk7XG4gICAgICB9KX1cbiAgICAvPlxuICApO1xufSk7XG5cbkFjdGlvbkJhclByaW1pdGl2ZUZlZWRiYWNrUG9zaXRpdmUuZGlzcGxheU5hbWUgPVxuICBcIkFjdGlvbkJhclByaW1pdGl2ZS5GZWVkYmFja1Bvc2l0aXZlXCI7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgZm9yd2FyZFJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQWN0aW9uQmFyRmVlZGJhY2tOZWdhdGl2ZSB9IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3MvYWN0aW9uQmFyL3VzZUFjdGlvbkJhckZlZWRiYWNrTmVnYXRpdmVcIjtcbmltcG9ydCB7IEFjdGlvbkJ1dHRvblByb3BzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2NyZWF0ZUFjdGlvbkJ1dHRvblwiO1xuaW1wb3J0IHsgY29tcG9zZUV2ZW50SGFuZGxlcnMgfSBmcm9tIFwiQHJhZGl4LXVpL3ByaW1pdGl2ZVwiO1xuaW1wb3J0IHsgdXNlTWVzc2FnZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5pbXBvcnQgeyBQcmltaXRpdmUgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZVwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgQWN0aW9uQmFyUHJpbWl0aXZlLkZlZWRiYWNrTmVnYXRpdmUuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQWN0aW9uQmFyUHJpbWl0aXZlRmVlZGJhY2tOZWdhdGl2ZVByb3BzID1cbiAgQWN0aW9uQmFyUHJpbWl0aXZlRmVlZGJhY2tOZWdhdGl2ZS5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBBY3Rpb25CYXJQcmltaXRpdmVGZWVkYmFja05lZ2F0aXZlIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEhUTUxCdXR0b25FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IEFjdGlvbkJ1dHRvblByb3BzPHR5cGVvZiB1c2VBY3Rpb25CYXJGZWVkYmFja05lZ2F0aXZlPjtcbn1cblxuZXhwb3J0IGNvbnN0IEFjdGlvbkJhclByaW1pdGl2ZUZlZWRiYWNrTmVnYXRpdmUgPSBmb3J3YXJkUmVmPFxuICBBY3Rpb25CYXJQcmltaXRpdmVGZWVkYmFja05lZ2F0aXZlLkVsZW1lbnQsXG4gIEFjdGlvbkJhclByaW1pdGl2ZUZlZWRiYWNrTmVnYXRpdmUuUHJvcHNcbj4oKHsgb25DbGljaywgZGlzYWJsZWQsIC4uLnByb3BzIH0sIGZvcndhcmRlZFJlZikgPT4ge1xuICBjb25zdCBpc1N1Ym1pdHRlZCA9IHVzZU1lc3NhZ2UoXG4gICAgKHUpID0+IHUuc3VibWl0dGVkRmVlZGJhY2s/LnR5cGUgPT09IFwibmVnYXRpdmVcIixcbiAgKTtcbiAgY29uc3QgY2FsbGJhY2sgPSB1c2VBY3Rpb25CYXJGZWVkYmFja05lZ2F0aXZlKCk7XG4gIHJldHVybiAoXG4gICAgPFByaW1pdGl2ZS5idXR0b25cbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgey4uLihpc1N1Ym1pdHRlZCA/IHsgXCJkYXRhLXN1Ym1pdHRlZFwiOiBcInRydWVcIiB9IDoge30pfVxuICAgICAgey4uLnByb3BzfVxuICAgICAgcmVmPXtmb3J3YXJkZWRSZWZ9XG4gICAgICBkaXNhYmxlZD17ZGlzYWJsZWQgfHwgIWNhbGxiYWNrfVxuICAgICAgb25DbGljaz17Y29tcG9zZUV2ZW50SGFuZGxlcnMob25DbGljaywgKCkgPT4ge1xuICAgICAgICBjYWxsYmFjaz8uKCk7XG4gICAgICB9KX1cbiAgICAvPlxuICApO1xufSk7XG5cbkFjdGlvbkJhclByaW1pdGl2ZUZlZWRiYWNrTmVnYXRpdmUuZGlzcGxheU5hbWUgPVxuICBcIkFjdGlvbkJhclByaW1pdGl2ZS5GZWVkYmFja05lZ2F0aXZlXCI7XG4iLCJleHBvcnQgeyBBc3Npc3RhbnRNb2RhbFByaW1pdGl2ZVJvb3QgYXMgUm9vdCB9IGZyb20gXCIuL0Fzc2lzdGFudE1vZGFsUm9vdFwiO1xuZXhwb3J0IHsgQXNzaXN0YW50TW9kYWxQcmltaXRpdmVUcmlnZ2VyIGFzIFRyaWdnZXIgfSBmcm9tIFwiLi9Bc3Npc3RhbnRNb2RhbFRyaWdnZXJcIjtcbmV4cG9ydCB7IEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlQ29udGVudCBhcyBDb250ZW50IH0gZnJvbSBcIi4vQXNzaXN0YW50TW9kYWxDb250ZW50XCI7XG5leHBvcnQgeyBBc3Npc3RhbnRNb2RhbFByaW1pdGl2ZUFuY2hvciBhcyBBbmNob3IgfSBmcm9tIFwiLi9Bc3Npc3RhbnRNb2RhbEFuY2hvclwiO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IEZDLCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBQb3BvdmVyUHJpbWl0aXZlIGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcG9wb3ZlclwiO1xuaW1wb3J0IHsgY29tcG9zZUV2ZW50SGFuZGxlcnMgfSBmcm9tIFwiQHJhZGl4LXVpL3ByaW1pdGl2ZVwiO1xuaW1wb3J0IHsgU2NvcGVkUHJvcHMsIHVzZVBvcG92ZXJTY29wZSB9IGZyb20gXCIuL3Njb3BlXCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2NvbnRleHRcIjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlLlJvb3QuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQXNzaXN0YW50TW9kYWxQcmltaXRpdmVSb290UHJvcHMgPVxuICBBc3Npc3RhbnRNb2RhbFByaW1pdGl2ZVJvb3QuUHJvcHM7XG5cbmV4cG9ydCBuYW1lc3BhY2UgQXNzaXN0YW50TW9kYWxQcmltaXRpdmVSb290IHtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBQb3BvdmVyUHJpbWl0aXZlLlBvcG92ZXJQcm9wcyAmIHtcbiAgICB1bnN0YWJsZV9vcGVuT25SdW5TdGFydD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gIH07XG59XG5cbmNvbnN0IHVzZUFzc2lzdGFudE1vZGFsT3BlblN0YXRlID0gKHtcbiAgZGVmYXVsdE9wZW4gPSBmYWxzZSxcbiAgdW5zdGFibGVfb3Blbk9uUnVuU3RhcnQgPSB0cnVlLFxufToge1xuICBkZWZhdWx0T3Blbj86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gIHVuc3RhYmxlX29wZW5PblJ1blN0YXJ0PzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn0pID0+IHtcbiAgY29uc3Qgc3RhdGUgPSB1c2VTdGF0ZShkZWZhdWx0T3Blbik7XG5cbiAgY29uc3QgWywgc2V0T3Blbl0gPSBzdGF0ZTtcbiAgY29uc3QgdGhyZWFkUnVudGltZSA9IHVzZVRocmVhZFJ1bnRpbWUoKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXVuc3RhYmxlX29wZW5PblJ1blN0YXJ0KSByZXR1cm4gdW5kZWZpbmVkO1xuXG4gICAgcmV0dXJuIHRocmVhZFJ1bnRpbWUudW5zdGFibGVfb24oXCJydW4tc3RhcnRcIiwgKCkgPT4ge1xuICAgICAgc2V0T3Blbih0cnVlKTtcbiAgICB9KTtcbiAgfSwgW3Vuc3RhYmxlX29wZW5PblJ1blN0YXJ0XSk7XG5cbiAgcmV0dXJuIHN0YXRlO1xufTtcblxuZXhwb3J0IGNvbnN0IEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlUm9vdDogRkM8XG4gIEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlUm9vdC5Qcm9wc1xuPiA9ICh7XG4gIF9fc2NvcGVBc3Npc3RhbnRNb2RhbCxcbiAgZGVmYXVsdE9wZW4sXG4gIHVuc3RhYmxlX29wZW5PblJ1blN0YXJ0LFxuICBvcGVuLFxuICBvbk9wZW5DaGFuZ2UsXG4gIC4uLnJlc3Rcbn06IFNjb3BlZFByb3BzPEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlUm9vdC5Qcm9wcz4pID0+IHtcbiAgY29uc3Qgc2NvcGUgPSB1c2VQb3BvdmVyU2NvcGUoX19zY29wZUFzc2lzdGFudE1vZGFsKTtcblxuICBjb25zdCBbbW9kYWxPcGVuLCBzZXRPcGVuXSA9IHVzZUFzc2lzdGFudE1vZGFsT3BlblN0YXRlKHtcbiAgICBkZWZhdWx0T3BlbixcbiAgICB1bnN0YWJsZV9vcGVuT25SdW5TdGFydCxcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8UG9wb3ZlclByaW1pdGl2ZS5Sb290XG4gICAgICB7Li4uc2NvcGV9XG4gICAgICBvcGVuPXtvcGVuID09PSB1bmRlZmluZWQgPyBtb2RhbE9wZW4gOiBvcGVufVxuICAgICAgb25PcGVuQ2hhbmdlPXtjb21wb3NlRXZlbnRIYW5kbGVycyhvbk9wZW5DaGFuZ2UsIHNldE9wZW4pfVxuICAgICAgey4uLnJlc3R9XG4gICAgLz5cbiAgKTtcbn07XG5cbkFzc2lzdGFudE1vZGFsUHJpbWl0aXZlUm9vdC5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50TW9kYWxQcmltaXRpdmUuUm9vdFwiO1xuIiwiaW1wb3J0ICogYXMgUG9wb3ZlclByaW1pdGl2ZSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXBvcG92ZXJcIjtcbmltcG9ydCB0eXBlIHsgU2NvcGUgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LWNvbnRleHRcIjtcblxuZXhwb3J0IHR5cGUgU2NvcGVkUHJvcHM8UD4gPSBQICYgeyBfX3Njb3BlQXNzaXN0YW50TW9kYWw/OiBTY29wZSB9O1xuZXhwb3J0IGNvbnN0IHVzZVBvcG92ZXJTY29wZSA9IFBvcG92ZXJQcmltaXRpdmUuY3JlYXRlUG9wb3ZlclNjb3BlKCk7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmLCBFbGVtZW50UmVmLCBmb3J3YXJkUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBQb3BvdmVyUHJpbWl0aXZlIGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcG9wb3ZlclwiO1xuaW1wb3J0IHsgU2NvcGVkUHJvcHMsIHVzZVBvcG92ZXJTY29wZSB9IGZyb20gXCIuL3Njb3BlXCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBBc3Npc3RhbnRNb2RhbFByaW1pdGl2ZS5UcmlnZ2VyLlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlVHJpZ2dlclByb3BzID1cbiAgQXNzaXN0YW50TW9kYWxQcmltaXRpdmVUcmlnZ2VyLlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlVHJpZ2dlciB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBFbGVtZW50UmVmPHR5cGVvZiBQb3BvdmVyUHJpbWl0aXZlLlRyaWdnZXI+O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IENvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUG9wb3ZlclByaW1pdGl2ZS5UcmlnZ2VyPjtcbn1cblxuZXhwb3J0IGNvbnN0IEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlVHJpZ2dlciA9IGZvcndhcmRSZWY8XG4gIEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlVHJpZ2dlci5FbGVtZW50LFxuICBBc3Npc3RhbnRNb2RhbFByaW1pdGl2ZVRyaWdnZXIuUHJvcHNcbj4oXG4gIChcbiAgICB7XG4gICAgICBfX3Njb3BlQXNzaXN0YW50TW9kYWwsXG4gICAgICAuLi5yZXN0XG4gICAgfTogU2NvcGVkUHJvcHM8QXNzaXN0YW50TW9kYWxQcmltaXRpdmVUcmlnZ2VyLlByb3BzPixcbiAgICByZWYsXG4gICkgPT4ge1xuICAgIGNvbnN0IHNjb3BlID0gdXNlUG9wb3ZlclNjb3BlKF9fc2NvcGVBc3Npc3RhbnRNb2RhbCk7XG5cbiAgICByZXR1cm4gPFBvcG92ZXJQcmltaXRpdmUuVHJpZ2dlciB7Li4uc2NvcGV9IHsuLi5yZXN0fSByZWY9e3JlZn0gLz47XG4gIH0sXG4pO1xuXG5Bc3Npc3RhbnRNb2RhbFByaW1pdGl2ZVRyaWdnZXIuZGlzcGxheU5hbWUgPSBcIkFzc2lzdGFudE1vZGFsUHJpbWl0aXZlLlRyaWdnZXJcIjtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYsIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIFBvcG92ZXJQcmltaXRpdmUgZnJvbSBcIkByYWRpeC11aS9yZWFjdC1wb3BvdmVyXCI7XG5pbXBvcnQgeyBTY29wZWRQcm9wcywgdXNlUG9wb3ZlclNjb3BlIH0gZnJvbSBcIi4vc2NvcGVcIjtcbmltcG9ydCB7IGNvbXBvc2VFdmVudEhhbmRsZXJzIH0gZnJvbSBcIkByYWRpeC11aS9wcmltaXRpdmVcIjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlLkNvbnRlbnQuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQXNzaXN0YW50TW9kYWxQcmltaXRpdmVDb250ZW50UHJvcHMgPVxuICBBc3Npc3RhbnRNb2RhbFByaW1pdGl2ZUNvbnRlbnQuUHJvcHM7XG5cbmV4cG9ydCBuYW1lc3BhY2UgQXNzaXN0YW50TW9kYWxQcmltaXRpdmVDb250ZW50IHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEVsZW1lbnRSZWY8dHlwZW9mIFBvcG92ZXJQcmltaXRpdmUuQ29udGVudD47XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPFxuICAgIHR5cGVvZiBQb3BvdmVyUHJpbWl0aXZlLkNvbnRlbnRcbiAgPiAmIHtcbiAgICBkaXNzbWlzc09uSW50ZXJhY3RPdXRzaWRlPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlQ29udGVudCA9IGZvcndhcmRSZWY8XG4gIEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlQ29udGVudC5FbGVtZW50LFxuICBBc3Npc3RhbnRNb2RhbFByaW1pdGl2ZUNvbnRlbnQuUHJvcHNcbj4oXG4gIChcbiAgICB7XG4gICAgICBfX3Njb3BlQXNzaXN0YW50TW9kYWwsXG4gICAgICBzaWRlLFxuICAgICAgYWxpZ24sXG4gICAgICBvbkludGVyYWN0T3V0c2lkZSxcbiAgICAgIGRpc3NtaXNzT25JbnRlcmFjdE91dHNpZGUgPSBmYWxzZSxcbiAgICAgIC4uLnByb3BzXG4gICAgfTogU2NvcGVkUHJvcHM8QXNzaXN0YW50TW9kYWxQcmltaXRpdmVDb250ZW50UHJvcHM+LFxuICAgIGZvcndhcmRlZFJlZixcbiAgKSA9PiB7XG4gICAgY29uc3Qgc2NvcGUgPSB1c2VQb3BvdmVyU2NvcGUoX19zY29wZUFzc2lzdGFudE1vZGFsKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8UG9wb3ZlclByaW1pdGl2ZS5Qb3J0YWwgey4uLnNjb3BlfT5cbiAgICAgICAgPFBvcG92ZXJQcmltaXRpdmUuQ29udGVudFxuICAgICAgICAgIHsuLi5zY29wZX1cbiAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgcmVmPXtmb3J3YXJkZWRSZWZ9XG4gICAgICAgICAgc2lkZT17c2lkZSA/PyBcInRvcFwifVxuICAgICAgICAgIGFsaWduPXthbGlnbiA/PyBcImVuZFwifVxuICAgICAgICAgIG9uSW50ZXJhY3RPdXRzaWRlPXtjb21wb3NlRXZlbnRIYW5kbGVycyhcbiAgICAgICAgICAgIG9uSW50ZXJhY3RPdXRzaWRlLFxuICAgICAgICAgICAgZGlzc21pc3NPbkludGVyYWN0T3V0c2lkZSA/IHVuZGVmaW5lZCA6IChlKSA9PiBlLnByZXZlbnREZWZhdWx0KCksXG4gICAgICAgICAgKX1cbiAgICAgICAgLz5cbiAgICAgIDwvUG9wb3ZlclByaW1pdGl2ZS5Qb3J0YWw+XG4gICAgKTtcbiAgfSxcbik7XG5cbkFzc2lzdGFudE1vZGFsUHJpbWl0aXZlQ29udGVudC5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50TW9kYWxQcmltaXRpdmUuQ29udGVudFwiO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5pbXBvcnQgeyBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYsIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIFBvcG92ZXJQcmltaXRpdmUgZnJvbSBcIkByYWRpeC11aS9yZWFjdC1wb3BvdmVyXCI7XG5pbXBvcnQgeyBTY29wZWRQcm9wcywgdXNlUG9wb3ZlclNjb3BlIH0gZnJvbSBcIi4vc2NvcGVcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBBc3Npc3RhbnRNb2RhbFByaW1pdGl2ZUFuY2hvciB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBFbGVtZW50UmVmPHR5cGVvZiBQb3BvdmVyUHJpbWl0aXZlLkFuY2hvcj47XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBQb3BvdmVyUHJpbWl0aXZlLkFuY2hvcj47XG59XG5cbmV4cG9ydCBjb25zdCBBc3Npc3RhbnRNb2RhbFByaW1pdGl2ZUFuY2hvciA9IGZvcndhcmRSZWY8XG4gIEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlQW5jaG9yLkVsZW1lbnQsXG4gIEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlQW5jaG9yLlByb3BzXG4+KFxuICAoXG4gICAge1xuICAgICAgX19zY29wZUFzc2lzdGFudE1vZGFsLFxuICAgICAgLi4ucmVzdFxuICAgIH06IFNjb3BlZFByb3BzPEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlQW5jaG9yLlByb3BzPixcbiAgICByZWYsXG4gICkgPT4ge1xuICAgIGNvbnN0IHNjb3BlID0gdXNlUG9wb3ZlclNjb3BlKF9fc2NvcGVBc3Npc3RhbnRNb2RhbCk7XG5cbiAgICByZXR1cm4gPFBvcG92ZXJQcmltaXRpdmUuQW5jaG9yIHsuLi5zY29wZX0gey4uLnJlc3R9IHJlZj17cmVmfSAvPjtcbiAgfSxcbik7XG5Bc3Npc3RhbnRNb2RhbFByaW1pdGl2ZUFuY2hvci5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50TW9kYWxQcmltaXRpdmUuQW5jaG9yXCI7XG4iLCJleHBvcnQgeyBBdHRhY2htZW50UHJpbWl0aXZlUm9vdCBhcyBSb290IH0gZnJvbSBcIi4vQXR0YWNobWVudFJvb3RcIjtcbmV4cG9ydCB7IEF0dGFjaG1lbnRQcmltaXRpdmVUaHVtYiBhcyB1bnN0YWJsZV9UaHVtYiB9IGZyb20gXCIuL0F0dGFjaG1lbnRUaHVtYlwiO1xuZXhwb3J0IHsgQXR0YWNobWVudFByaW1pdGl2ZU5hbWUgYXMgTmFtZSB9IGZyb20gXCIuL0F0dGFjaG1lbnROYW1lXCI7XG5leHBvcnQgeyBBdHRhY2htZW50UHJpbWl0aXZlUmVtb3ZlIGFzIFJlbW92ZSB9IGZyb20gXCIuL0F0dGFjaG1lbnRSZW1vdmVcIjtcbiIsImltcG9ydCB7IFByaW1pdGl2ZSB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlXCI7XG5pbXBvcnQgeyBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYsIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYgfSBmcm9tIFwicmVhY3RcIjtcblxudHlwZSBQcmltaXRpdmVEaXZQcm9wcyA9IENvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUHJpbWl0aXZlLmRpdj47XG5cbmV4cG9ydCBuYW1lc3BhY2UgQXR0YWNobWVudFByaW1pdGl2ZVJvb3Qge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gRWxlbWVudFJlZjx0eXBlb2YgUHJpbWl0aXZlLmRpdj47XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUHJpbWl0aXZlRGl2UHJvcHM7XG59XG5cbmV4cG9ydCBjb25zdCBBdHRhY2htZW50UHJpbWl0aXZlUm9vdCA9IGZvcndhcmRSZWY8XG4gIEF0dGFjaG1lbnRQcmltaXRpdmVSb290LkVsZW1lbnQsXG4gIEF0dGFjaG1lbnRQcmltaXRpdmVSb290LlByb3BzXG4+KChwcm9wcywgcmVmKSA9PiB7XG4gIHJldHVybiA8UHJpbWl0aXZlLmRpdiB7Li4ucHJvcHN9IHJlZj17cmVmfSAvPjtcbn0pO1xuXG5BdHRhY2htZW50UHJpbWl0aXZlUm9vdC5kaXNwbGF5TmFtZSA9IFwiQXR0YWNobWVudFByaW1pdGl2ZS5Sb290XCI7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmLCBmb3J3YXJkUmVmLCB0eXBlIEVsZW1lbnRSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUF0dGFjaG1lbnQgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9BdHRhY2htZW50Q29udGV4dFwiO1xuaW1wb3J0IHsgUHJpbWl0aXZlIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1wcmltaXRpdmVcIjtcblxudHlwZSBQcmltaXRpdmVEaXZQcm9wcyA9IENvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUHJpbWl0aXZlLmRpdj47XG5cbmV4cG9ydCBuYW1lc3BhY2UgQXR0YWNobWVudFByaW1pdGl2ZVRodW1iIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEVsZW1lbnRSZWY8dHlwZW9mIFByaW1pdGl2ZS5kaXY+O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFByaW1pdGl2ZURpdlByb3BzO1xufVxuXG5leHBvcnQgY29uc3QgQXR0YWNobWVudFByaW1pdGl2ZVRodW1iID0gZm9yd2FyZFJlZjxcbiAgQXR0YWNobWVudFByaW1pdGl2ZVRodW1iLkVsZW1lbnQsXG4gIEF0dGFjaG1lbnRQcmltaXRpdmVUaHVtYi5Qcm9wc1xuPigocHJvcHMsIHJlZikgPT4ge1xuICBjb25zdCBleHQgPSB1c2VBdHRhY2htZW50KChhKSA9PiBhLm5hbWUuc3BsaXQoXCIuXCIpLnBvcCgpKTtcbiAgcmV0dXJuIChcbiAgICA8UHJpbWl0aXZlLmRpdiB7Li4ucHJvcHN9IHJlZj17cmVmfT5cbiAgICAgIC57ZXh0fVxuICAgIDwvUHJpbWl0aXZlLmRpdj5cbiAgKTtcbn0pO1xuXG5BdHRhY2htZW50UHJpbWl0aXZlVGh1bWIuZGlzcGxheU5hbWUgPSBcIkF0dGFjaG1lbnRQcmltaXRpdmUuVGh1bWJcIjtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBSZWFkb25seVN0b3JlIH0gZnJvbSBcIi4uL1JlYWRvbmx5U3RvcmVcIjtcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHRTdG9yZUhvb2sgfSBmcm9tIFwiLi91dGlscy9jcmVhdGVDb250ZXh0U3RvcmVIb29rXCI7XG5pbXBvcnQge1xuICBBdHRhY2htZW50UnVudGltZSxcbiAgQXR0YWNobWVudFN0YXRlLFxufSBmcm9tIFwiLi4vLi4vYXBpL0F0dGFjaG1lbnRSdW50aW1lXCI7XG5pbXBvcnQgeyBVc2VCb3VuZFN0b3JlIH0gZnJvbSBcInp1c3RhbmRcIjtcblxuZXhwb3J0IHR5cGUgQXR0YWNobWVudENvbnRleHRWYWx1ZSA9IHtcbiAgc291cmNlOiBcInRocmVhZC1jb21wb3NlclwiIHwgXCJlZGl0LWNvbXBvc2VyXCIgfCBcIm1lc3NhZ2VcIjtcbiAgdXNlQXR0YWNobWVudDogVXNlQm91bmRTdG9yZTxSZWFkb25seVN0b3JlPEF0dGFjaG1lbnRTdGF0ZT4+O1xuICB1c2VBdHRhY2htZW50UnVudGltZTogVXNlQm91bmRTdG9yZTxSZWFkb25seVN0b3JlPEF0dGFjaG1lbnRSdW50aW1lPj47XG59O1xuXG50eXBlIFRocmVhZENvbXBvc2VyQXR0YWNobWVudENvbnRleHRWYWx1ZSA9IHtcbiAgc291cmNlOiBcInRocmVhZC1jb21wb3NlclwiO1xuICB1c2VBdHRhY2htZW50OiBVc2VCb3VuZFN0b3JlPFxuICAgIFJlYWRvbmx5U3RvcmU8QXR0YWNobWVudFN0YXRlICYgeyBzb3VyY2U6IFwidGhyZWFkLWNvbXBvc2VyXCIgfT5cbiAgPjtcbiAgdXNlQXR0YWNobWVudFJ1bnRpbWU6IFVzZUJvdW5kU3RvcmU8XG4gICAgUmVhZG9ubHlTdG9yZTxBdHRhY2htZW50UnVudGltZSAmIHsgdHlwZTogXCJ0aHJlYWQtY29tcG9zZXJcIiB9PlxuICA+O1xufTtcbnR5cGUgRWRpdENvbXBvc2VyQXR0YWNobWVudENvbnRleHRWYWx1ZSA9IHtcbiAgc291cmNlOiBcImVkaXQtY29tcG9zZXJcIjtcbiAgdXNlQXR0YWNobWVudDogVXNlQm91bmRTdG9yZTxcbiAgICBSZWFkb25seVN0b3JlPEF0dGFjaG1lbnRTdGF0ZSAmIHsgc291cmNlOiBcImVkaXQtY29tcG9zZXJcIiB9PlxuICA+O1xuICB1c2VBdHRhY2htZW50UnVudGltZTogVXNlQm91bmRTdG9yZTxcbiAgICBSZWFkb25seVN0b3JlPEF0dGFjaG1lbnRSdW50aW1lICYgeyB0eXBlOiBcImVkaXQtY29tcG9zZXJcIiB9PlxuICA+O1xufTtcblxudHlwZSBNZXNzYWdlQXR0YWNobWVudENvbnRleHRWYWx1ZSA9IHtcbiAgc291cmNlOiBcIm1lc3NhZ2VcIjtcbiAgdXNlQXR0YWNobWVudDogVXNlQm91bmRTdG9yZTxcbiAgICBSZWFkb25seVN0b3JlPEF0dGFjaG1lbnRTdGF0ZSAmIHsgc291cmNlOiBcIm1lc3NhZ2VcIiB9PlxuICA+O1xuICB1c2VBdHRhY2htZW50UnVudGltZTogVXNlQm91bmRTdG9yZTxcbiAgICBSZWFkb25seVN0b3JlPEF0dGFjaG1lbnRSdW50aW1lICYgeyB0eXBlOiBcIm1lc3NhZ2VcIiB9PlxuICA+O1xufTtcblxuZXhwb3J0IGNvbnN0IEF0dGFjaG1lbnRDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxBdHRhY2htZW50Q29udGV4dFZhbHVlIHwgbnVsbD4oXG4gIG51bGwsXG4pO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlQXR0YWNobWVudENvbnRleHQob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBmYWxzZSB8IHVuZGVmaW5lZDtcbn0pOiBBdHRhY2htZW50Q29udGV4dFZhbHVlO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUF0dGFjaG1lbnRDb250ZXh0KG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn0pOiBBdHRhY2htZW50Q29udGV4dFZhbHVlIHwgbnVsbDtcbmV4cG9ydCBmdW5jdGlvbiB1c2VBdHRhY2htZW50Q29udGV4dChvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KEF0dGFjaG1lbnRDb250ZXh0KTtcbiAgaWYgKCFvcHRpb25zPy5vcHRpb25hbCAmJiAhY29udGV4dClcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIlRoaXMgY29tcG9uZW50IG11c3QgYmUgdXNlZCB3aXRoaW4gYSBDb21wb3NlclByaW1pdGl2ZS5BdHRhY2htZW50cyBvciBNZXNzYWdlUHJpbWl0aXZlLkF0dGFjaG1lbnRzIGNvbXBvbmVudC5cIixcbiAgICApO1xuXG4gIHJldHVybiBjb250ZXh0O1xufVxuXG5mdW5jdGlvbiB1c2VUaHJlYWRDb21wb3NlckF0dGFjaG1lbnRDb250ZXh0KG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogZmFsc2UgfCB1bmRlZmluZWQ7XG59KTogVGhyZWFkQ29tcG9zZXJBdHRhY2htZW50Q29udGV4dFZhbHVlO1xuZnVuY3Rpb24gdXNlVGhyZWFkQ29tcG9zZXJBdHRhY2htZW50Q29udGV4dChvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KTogVGhyZWFkQ29tcG9zZXJBdHRhY2htZW50Q29udGV4dFZhbHVlIHwgbnVsbDtcbmZ1bmN0aW9uIHVzZVRocmVhZENvbXBvc2VyQXR0YWNobWVudENvbnRleHQob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xufSk6IFRocmVhZENvbXBvc2VyQXR0YWNobWVudENvbnRleHRWYWx1ZSB8IG51bGwge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQXR0YWNobWVudENvbnRleHQob3B0aW9ucyk7XG4gIGlmICghY29udGV4dCkgcmV0dXJuIG51bGw7XG4gIGlmIChjb250ZXh0LnNvdXJjZSAhPT0gXCJ0aHJlYWQtY29tcG9zZXJcIilcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIlRoaXMgY29tcG9uZW50IG11c3QgYmUgdXNlZCB3aXRoaW4gYSB0aHJlYWQncyBDb21wb3NlclByaW1pdGl2ZS5BdHRhY2htZW50cyBjb21wb25lbnQuXCIsXG4gICAgKTtcbiAgcmV0dXJuIGNvbnRleHQgYXMgVGhyZWFkQ29tcG9zZXJBdHRhY2htZW50Q29udGV4dFZhbHVlO1xufVxuXG5mdW5jdGlvbiB1c2VFZGl0Q29tcG9zZXJBdHRhY2htZW50Q29udGV4dChvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGZhbHNlIHwgdW5kZWZpbmVkO1xufSk6IEVkaXRDb21wb3NlckF0dGFjaG1lbnRDb250ZXh0VmFsdWU7XG5mdW5jdGlvbiB1c2VFZGl0Q29tcG9zZXJBdHRhY2htZW50Q29udGV4dChvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KTogRWRpdENvbXBvc2VyQXR0YWNobWVudENvbnRleHRWYWx1ZSB8IG51bGw7XG5mdW5jdGlvbiB1c2VFZGl0Q29tcG9zZXJBdHRhY2htZW50Q29udGV4dChvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KTogRWRpdENvbXBvc2VyQXR0YWNobWVudENvbnRleHRWYWx1ZSB8IG51bGwge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQXR0YWNobWVudENvbnRleHQob3B0aW9ucyk7XG4gIGlmICghY29udGV4dCkgcmV0dXJuIG51bGw7XG4gIGlmIChjb250ZXh0LnNvdXJjZSAhPT0gXCJlZGl0LWNvbXBvc2VyXCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJUaGlzIGNvbXBvbmVudCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgbWVzc2FnZXMncyBDb21wb3NlclByaW1pdGl2ZS5BdHRhY2htZW50cyBjb21wb25lbnQuXCIsXG4gICAgKTtcbiAgcmV0dXJuIGNvbnRleHQgYXMgRWRpdENvbXBvc2VyQXR0YWNobWVudENvbnRleHRWYWx1ZTtcbn1cblxuZnVuY3Rpb24gdXNlTWVzc2FnZUF0dGFjaG1lbnRDb250ZXh0KG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogZmFsc2UgfCB1bmRlZmluZWQ7XG59KTogTWVzc2FnZUF0dGFjaG1lbnRDb250ZXh0VmFsdWU7XG5mdW5jdGlvbiB1c2VNZXNzYWdlQXR0YWNobWVudENvbnRleHQob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xufSk6IE1lc3NhZ2VBdHRhY2htZW50Q29udGV4dFZhbHVlIHwgbnVsbDtcbmZ1bmN0aW9uIHVzZU1lc3NhZ2VBdHRhY2htZW50Q29udGV4dChvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KTogTWVzc2FnZUF0dGFjaG1lbnRDb250ZXh0VmFsdWUgfCBudWxsIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUF0dGFjaG1lbnRDb250ZXh0KG9wdGlvbnMpO1xuICBpZiAoIWNvbnRleHQpIHJldHVybiBudWxsO1xuICBpZiAoY29udGV4dC5zb3VyY2UgIT09IFwibWVzc2FnZVwiKVxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiVGhpcyBjb21wb25lbnQgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIE1lc3NhZ2VQcmltaXRpdmUuQXR0YWNobWVudHMgY29tcG9uZW50LlwiLFxuICAgICk7XG4gIHJldHVybiBjb250ZXh0IGFzIE1lc3NhZ2VBdHRhY2htZW50Q29udGV4dFZhbHVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlQXR0YWNobWVudFJ1bnRpbWUob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBmYWxzZSB8IHVuZGVmaW5lZDtcbn0pOiBBdHRhY2htZW50UnVudGltZTtcbmV4cG9ydCBmdW5jdGlvbiB1c2VBdHRhY2htZW50UnVudGltZShvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KTogQXR0YWNobWVudFJ1bnRpbWUgfCBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUF0dGFjaG1lbnRSdW50aW1lKG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn0pOiBBdHRhY2htZW50UnVudGltZSB8IG51bGwge1xuICBjb25zdCBhdHRhY2htZW50UnVudGltZSA9IHVzZUF0dGFjaG1lbnRDb250ZXh0KG9wdGlvbnMpO1xuICBpZiAoIWF0dGFjaG1lbnRSdW50aW1lKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIGF0dGFjaG1lbnRSdW50aW1lLnVzZUF0dGFjaG1lbnRSdW50aW1lKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VUaHJlYWRDb21wb3NlckF0dGFjaG1lbnRSdW50aW1lKG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogZmFsc2UgfCB1bmRlZmluZWQ7XG59KTogQXR0YWNobWVudFJ1bnRpbWU7XG5leHBvcnQgZnVuY3Rpb24gdXNlVGhyZWFkQ29tcG9zZXJBdHRhY2htZW50UnVudGltZShvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KTogQXR0YWNobWVudFJ1bnRpbWUgfCBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVRocmVhZENvbXBvc2VyQXR0YWNobWVudFJ1bnRpbWUob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xufSk6IEF0dGFjaG1lbnRSdW50aW1lIHwgbnVsbCB7XG4gIGNvbnN0IGF0dGFjaG1lbnRSdW50aW1lID0gdXNlVGhyZWFkQ29tcG9zZXJBdHRhY2htZW50Q29udGV4dChvcHRpb25zKTtcbiAgaWYgKCFhdHRhY2htZW50UnVudGltZSkgcmV0dXJuIG51bGw7XG4gIHJldHVybiBhdHRhY2htZW50UnVudGltZS51c2VBdHRhY2htZW50UnVudGltZSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlRWRpdENvbXBvc2VyQXR0YWNobWVudFJ1bnRpbWUob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBmYWxzZSB8IHVuZGVmaW5lZDtcbn0pOiBBdHRhY2htZW50UnVudGltZTtcbmV4cG9ydCBmdW5jdGlvbiB1c2VFZGl0Q29tcG9zZXJBdHRhY2htZW50UnVudGltZShvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KTogQXR0YWNobWVudFJ1bnRpbWUgfCBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUVkaXRDb21wb3NlckF0dGFjaG1lbnRSdW50aW1lKG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn0pOiBBdHRhY2htZW50UnVudGltZSB8IG51bGwge1xuICBjb25zdCBhdHRhY2htZW50UnVudGltZSA9IHVzZUVkaXRDb21wb3NlckF0dGFjaG1lbnRDb250ZXh0KG9wdGlvbnMpO1xuICBpZiAoIWF0dGFjaG1lbnRSdW50aW1lKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIGF0dGFjaG1lbnRSdW50aW1lLnVzZUF0dGFjaG1lbnRSdW50aW1lKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VNZXNzYWdlQXR0YWNobWVudFJ1bnRpbWUob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBmYWxzZSB8IHVuZGVmaW5lZDtcbn0pOiBBdHRhY2htZW50UnVudGltZTtcbmV4cG9ydCBmdW5jdGlvbiB1c2VNZXNzYWdlQXR0YWNobWVudFJ1bnRpbWUob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xufSk6IEF0dGFjaG1lbnRSdW50aW1lIHwgbnVsbDtcbmV4cG9ydCBmdW5jdGlvbiB1c2VNZXNzYWdlQXR0YWNobWVudFJ1bnRpbWUob3B0aW9ucz86IHtcbiAgb3B0aW9uYWw/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xufSk6IEF0dGFjaG1lbnRSdW50aW1lIHwgbnVsbCB7XG4gIGNvbnN0IGF0dGFjaG1lbnRSdW50aW1lID0gdXNlTWVzc2FnZUF0dGFjaG1lbnRDb250ZXh0KG9wdGlvbnMpO1xuICBpZiAoIWF0dGFjaG1lbnRSdW50aW1lKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIGF0dGFjaG1lbnRSdW50aW1lLnVzZUF0dGFjaG1lbnRSdW50aW1lKCk7XG59XG5cbmV4cG9ydCBjb25zdCB7IHVzZUF0dGFjaG1lbnQgfSA9IGNyZWF0ZUNvbnRleHRTdG9yZUhvb2soXG4gIHVzZUF0dGFjaG1lbnRDb250ZXh0LFxuICBcInVzZUF0dGFjaG1lbnRcIixcbik7XG5cbmV4cG9ydCBjb25zdCB7IHVzZUF0dGFjaG1lbnQ6IHVzZVRocmVhZENvbXBvc2VyQXR0YWNobWVudCB9ID1cbiAgY3JlYXRlQ29udGV4dFN0b3JlSG9vayh1c2VUaHJlYWRDb21wb3NlckF0dGFjaG1lbnRDb250ZXh0LCBcInVzZUF0dGFjaG1lbnRcIik7XG5cbmV4cG9ydCBjb25zdCB7IHVzZUF0dGFjaG1lbnQ6IHVzZUVkaXRDb21wb3NlckF0dGFjaG1lbnQgfSA9XG4gIGNyZWF0ZUNvbnRleHRTdG9yZUhvb2sodXNlRWRpdENvbXBvc2VyQXR0YWNobWVudENvbnRleHQsIFwidXNlQXR0YWNobWVudFwiKTtcblxuZXhwb3J0IGNvbnN0IHsgdXNlQXR0YWNobWVudDogdXNlTWVzc2FnZUF0dGFjaG1lbnQgfSA9IGNyZWF0ZUNvbnRleHRTdG9yZUhvb2soXG4gIHVzZU1lc3NhZ2VBdHRhY2htZW50Q29udGV4dCxcbiAgXCJ1c2VBdHRhY2htZW50XCIsXG4pO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB0eXBlIHsgRkMgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUF0dGFjaG1lbnQgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9BdHRhY2htZW50Q29udGV4dFwiO1xuXG5leHBvcnQgbmFtZXNwYWNlIEF0dGFjaG1lbnRQcmltaXRpdmVOYW1lIHtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBSZWNvcmQ8c3RyaW5nLCBuZXZlcj47XG59XG5cbmV4cG9ydCBjb25zdCBBdHRhY2htZW50UHJpbWl0aXZlTmFtZTogRkM8XG4gIEF0dGFjaG1lbnRQcmltaXRpdmVOYW1lLlByb3BzXG4+ID0gKCkgPT4ge1xuICBjb25zdCBuYW1lID0gdXNlQXR0YWNobWVudCgoYSkgPT4gYS5uYW1lKTtcbiAgcmV0dXJuIDw+e25hbWV9PC8+O1xufTtcblxuQXR0YWNobWVudFByaW1pdGl2ZU5hbWUuZGlzcGxheU5hbWUgPSBcIkF0dGFjaG1lbnRQcmltaXRpdmUuTmFtZVwiO1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUF0dGFjaG1lbnRSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvQXR0YWNobWVudENvbnRleHRcIjtcblxuZXhwb3J0IGNvbnN0IHVzZUF0dGFjaG1lbnRSZW1vdmUgPSAoKSA9PiB7XG4gIGNvbnN0IGF0dGFjaG1lbnRSdW50aW1lID0gdXNlQXR0YWNobWVudFJ1bnRpbWUoKTtcblxuICBjb25zdCBoYW5kbGVSZW1vdmVBdHRhY2htZW50ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGF0dGFjaG1lbnRSdW50aW1lLnJlbW92ZSgpO1xuICB9LCBbYXR0YWNobWVudFJ1bnRpbWVdKTtcblxuICByZXR1cm4gaGFuZGxlUmVtb3ZlQXR0YWNobWVudDtcbn07XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlQXR0YWNobWVudFJlbW92ZSB9IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3MvYXR0YWNobWVudC91c2VBdHRhY2htZW50UmVtb3ZlXCI7XG5pbXBvcnQge1xuICBBY3Rpb25CdXR0b25FbGVtZW50LFxuICBBY3Rpb25CdXR0b25Qcm9wcyxcbiAgY3JlYXRlQWN0aW9uQnV0dG9uLFxufSBmcm9tIFwiLi4vLi4vdXRpbHMvY3JlYXRlQWN0aW9uQnV0dG9uXCI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgQXR0YWNobWVudFByaW1pdGl2ZVJlbW92ZSB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBBY3Rpb25CdXR0b25FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IEFjdGlvbkJ1dHRvblByb3BzPHR5cGVvZiB1c2VBdHRhY2htZW50UmVtb3ZlPjtcbn1cblxuZXhwb3J0IGNvbnN0IEF0dGFjaG1lbnRQcmltaXRpdmVSZW1vdmUgPSBjcmVhdGVBY3Rpb25CdXR0b24oXG4gIFwiQXR0YWNobWVudFByaW1pdGl2ZS5SZW1vdmVcIixcbiAgdXNlQXR0YWNobWVudFJlbW92ZSxcbik7XG4iLCJleHBvcnQgeyBCcmFuY2hQaWNrZXJQcmltaXRpdmVOZXh0IGFzIE5leHQgfSBmcm9tIFwiLi9CcmFuY2hQaWNrZXJOZXh0XCI7XG5leHBvcnQgeyBCcmFuY2hQaWNrZXJQcmltaXRpdmVQcmV2aW91cyBhcyBQcmV2aW91cyB9IGZyb20gXCIuL0JyYW5jaFBpY2tlclByZXZpb3VzXCI7XG5leHBvcnQgeyBCcmFuY2hQaWNrZXJQcmltaXRpdmVDb3VudCBhcyBDb3VudCB9IGZyb20gXCIuL0JyYW5jaFBpY2tlckNvdW50XCI7XG5leHBvcnQgeyBCcmFuY2hQaWNrZXJQcmltaXRpdmVOdW1iZXIgYXMgTnVtYmVyIH0gZnJvbSBcIi4vQnJhbmNoUGlja2VyTnVtYmVyXCI7XG5leHBvcnQgeyBCcmFuY2hQaWNrZXJQcmltaXRpdmVSb290IGFzIFJvb3QgfSBmcm9tIFwiLi9CcmFuY2hQaWNrZXJSb290XCI7XG4iLCJcblwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyB1c2VCcmFuY2hQaWNrZXJOZXh0IH0gZnJvbSBcIi4uLy4uL3ByaW1pdGl2ZS1ob29rcy9icmFuY2hQaWNrZXIvdXNlQnJhbmNoUGlja2VyTmV4dFwiO1xuaW1wb3J0IHtcbiAgQWN0aW9uQnV0dG9uRWxlbWVudCxcbiAgQWN0aW9uQnV0dG9uUHJvcHMsXG4gIGNyZWF0ZUFjdGlvbkJ1dHRvbixcbn0gZnJvbSBcIi4uLy4uL3V0aWxzL2NyZWF0ZUFjdGlvbkJ1dHRvblwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgQnJhbmNoUGlja2VyUHJpbWl0aXZlLk5leHQuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQnJhbmNoUGlja2VyUHJpbWl0aXZlTmV4dFByb3BzID0gQnJhbmNoUGlja2VyUHJpbWl0aXZlTmV4dC5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBCcmFuY2hQaWNrZXJQcmltaXRpdmVOZXh0IHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEFjdGlvbkJ1dHRvbkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gQWN0aW9uQnV0dG9uUHJvcHM8dHlwZW9mIHVzZUJyYW5jaFBpY2tlck5leHQ+O1xufVxuXG5leHBvcnQgY29uc3QgQnJhbmNoUGlja2VyUHJpbWl0aXZlTmV4dCA9IGNyZWF0ZUFjdGlvbkJ1dHRvbihcbiAgXCJCcmFuY2hQaWNrZXJQcmltaXRpdmUuTmV4dFwiLFxuICB1c2VCcmFuY2hQaWNrZXJOZXh0LFxuKTtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyB1c2VCcmFuY2hQaWNrZXJQcmV2aW91cyB9IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3MvYnJhbmNoUGlja2VyL3VzZUJyYW5jaFBpY2tlclByZXZpb3VzXCI7XG5pbXBvcnQge1xuICBBY3Rpb25CdXR0b25FbGVtZW50LFxuICBBY3Rpb25CdXR0b25Qcm9wcyxcbiAgY3JlYXRlQWN0aW9uQnV0dG9uLFxufSBmcm9tIFwiLi4vLi4vdXRpbHMvY3JlYXRlQWN0aW9uQnV0dG9uXCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBCcmFuY2hQaWNrZXJQcmltaXRpdmUuUHJldmlvdXMuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQnJhbmNoUGlja2VyUHJpbWl0aXZlUHJldmlvdXNQcm9wcyA9IEJyYW5jaFBpY2tlclByaW1pdGl2ZVByZXZpb3VzLlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIEJyYW5jaFBpY2tlclByaW1pdGl2ZVByZXZpb3VzIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEFjdGlvbkJ1dHRvbkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gQWN0aW9uQnV0dG9uUHJvcHM8dHlwZW9mIHVzZUJyYW5jaFBpY2tlclByZXZpb3VzPjtcbn1cblxuZXhwb3J0IGNvbnN0IEJyYW5jaFBpY2tlclByaW1pdGl2ZVByZXZpb3VzID0gY3JlYXRlQWN0aW9uQnV0dG9uKFxuICBcIkJyYW5jaFBpY2tlclByaW1pdGl2ZS5QcmV2aW91c1wiLFxuICB1c2VCcmFuY2hQaWNrZXJQcmV2aW91c1xuKTtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgdHlwZSB7IEZDIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VCcmFuY2hQaWNrZXJDb3VudCB9IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3MvYnJhbmNoUGlja2VyL3VzZUJyYW5jaFBpY2tlckNvdW50XCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBCcmFuY2hQaWNrZXJQcmltaXRpdmUuQ291bnQuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQnJhbmNoUGlja2VyUHJpbWl0aXZlQ291bnRQcm9wcyA9IEJyYW5jaFBpY2tlclByaW1pdGl2ZUNvdW50LlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIEJyYW5jaFBpY2tlclByaW1pdGl2ZUNvdW50IHtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBSZWNvcmQ8c3RyaW5nLCBuZXZlcj47XG59XG5cbmV4cG9ydCBjb25zdCBCcmFuY2hQaWNrZXJQcmltaXRpdmVDb3VudDogRkM8XG4gIEJyYW5jaFBpY2tlclByaW1pdGl2ZUNvdW50LlByb3BzXG4+ID0gKCkgPT4ge1xuICBjb25zdCBicmFuY2hDb3VudCA9IHVzZUJyYW5jaFBpY2tlckNvdW50KCk7XG4gIHJldHVybiA8PnticmFuY2hDb3VudH08Lz47XG59O1xuXG5CcmFuY2hQaWNrZXJQcmltaXRpdmVDb3VudC5kaXNwbGF5TmFtZSA9IFwiQnJhbmNoUGlja2VyUHJpbWl0aXZlLkNvdW50XCI7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHR5cGUgeyBGQyB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQnJhbmNoUGlja2VyTnVtYmVyIH0gZnJvbSBcIi4uLy4uL3ByaW1pdGl2ZS1ob29rcy9icmFuY2hQaWNrZXIvdXNlQnJhbmNoUGlja2VyTnVtYmVyXCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBCcmFuY2hQaWNrZXJQcmltaXRpdmUuTnVtYmVyLlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIEJyYW5jaFBpY2tlclByaW1pdGl2ZU51bWJlclByb3BzID0gQnJhbmNoUGlja2VyUHJpbWl0aXZlTnVtYmVyLlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIEJyYW5jaFBpY2tlclByaW1pdGl2ZU51bWJlciB7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUmVjb3JkPHN0cmluZywgbmV2ZXI+O1xufVxuXG5leHBvcnQgY29uc3QgQnJhbmNoUGlja2VyUHJpbWl0aXZlTnVtYmVyOiBGQzxcbiAgQnJhbmNoUGlja2VyUHJpbWl0aXZlTnVtYmVyLlByb3BzXG4+ID0gKCkgPT4ge1xuICBjb25zdCBicmFuY2hOdW1iZXIgPSB1c2VCcmFuY2hQaWNrZXJOdW1iZXIoKTtcbiAgcmV0dXJuIDw+e2JyYW5jaE51bWJlcn08Lz47XG59O1xuXG5CcmFuY2hQaWNrZXJQcmltaXRpdmVOdW1iZXIuZGlzcGxheU5hbWUgPSBcIkJyYW5jaFBpY2tlclByaW1pdGl2ZS5OdW1iZXJcIjtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBQcmltaXRpdmUgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZVwiO1xuaW1wb3J0IHsgdHlwZSBFbGVtZW50UmVmLCBmb3J3YXJkUmVmLCBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IElmIH0gZnJvbSBcIi4uL21lc3NhZ2VcIjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYEJyYW5jaFBpY2tlclByaW1pdGl2ZS5Sb290LlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIEJyYW5jaFBpY2tlclByaW1pdGl2ZVJvb3RQcm9wcyA9IEJyYW5jaFBpY2tlclByaW1pdGl2ZVJvb3QuUHJvcHM7XG5cbmV4cG9ydCBuYW1lc3BhY2UgQnJhbmNoUGlja2VyUHJpbWl0aXZlUm9vdCB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBFbGVtZW50UmVmPHR5cGVvZiBQcmltaXRpdmUuZGl2PjtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFByaW1pdGl2ZS5kaXY+ICYge1xuICAgIGhpZGVXaGVuU2luZ2xlQnJhbmNoPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IEJyYW5jaFBpY2tlclByaW1pdGl2ZVJvb3QgPSBmb3J3YXJkUmVmPFxuICBCcmFuY2hQaWNrZXJQcmltaXRpdmVSb290LkVsZW1lbnQsXG4gIEJyYW5jaFBpY2tlclByaW1pdGl2ZVJvb3QuUHJvcHNcbj4oKHsgaGlkZVdoZW5TaW5nbGVCcmFuY2gsIC4uLnJlc3QgfSwgcmVmKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPElmIGhhc0JyYW5jaGVzPXtoaWRlV2hlblNpbmdsZUJyYW5jaCA/IHRydWUgOiB1bmRlZmluZWR9PlxuICAgICAgPFByaW1pdGl2ZS5kaXYgey4uLnJlc3R9IHJlZj17cmVmfSAvPlxuICAgIDwvSWY+XG4gICk7XG59KTtcblxuQnJhbmNoUGlja2VyUHJpbWl0aXZlUm9vdC5kaXNwbGF5TmFtZSA9IFwiQnJhbmNoUGlja2VyUHJpbWl0aXZlLlJvb3RcIjtcbiIsImV4cG9ydCB7IE1lc3NhZ2VQcmltaXRpdmVSb290IGFzIFJvb3QgfSBmcm9tIFwiLi9NZXNzYWdlUm9vdFwiO1xuZXhwb3J0IHsgTWVzc2FnZVByaW1pdGl2ZUlmIGFzIElmIH0gZnJvbSBcIi4vTWVzc2FnZUlmXCI7XG5leHBvcnQgeyBNZXNzYWdlUHJpbWl0aXZlQ29udGVudCBhcyBDb250ZW50IH0gZnJvbSBcIi4vTWVzc2FnZUNvbnRlbnRcIjtcbmV4cG9ydCB7IE1lc3NhZ2VQcmltaXRpdmVJblByb2dyZXNzIGFzIEluUHJvZ3Jlc3MgfSBmcm9tIFwiLi9NZXNzYWdlSW5Qcm9ncmVzc1wiO1xuZXhwb3J0IHsgTWVzc2FnZVByaW1pdGl2ZUF0dGFjaG1lbnRzIGFzIEF0dGFjaG1lbnRzIH0gZnJvbSBcIi4vTWVzc2FnZUF0dGFjaG1lbnRzXCI7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgUHJpbWl0aXZlIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1wcmltaXRpdmVcIjtcbmltcG9ydCB7XG4gIHR5cGUgRWxlbWVudFJlZixcbiAgZm9yd2FyZFJlZixcbiAgQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmLFxuICB1c2VDYWxsYmFjayxcbn0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VNZXNzYWdlVXRpbHNTdG9yZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0L3JlYWN0L01lc3NhZ2VDb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VNYW5hZ2VkUmVmIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2hvb2tzL3VzZU1hbmFnZWRSZWZcIjtcbmltcG9ydCB7IHVzZUNvbXBvc2VkUmVmcyB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzXCI7XG5cbmNvbnN0IHVzZUlzSG92ZXJpbmdSZWYgPSAoKSA9PiB7XG4gIGNvbnN0IG1lc3NhZ2VVdGlsc1N0b3JlID0gdXNlTWVzc2FnZVV0aWxzU3RvcmUoKTtcbiAgY29uc3QgY2FsbGJhY2tSZWYgPSB1c2VDYWxsYmFjayhcbiAgICAoZWw6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICBjb25zdCBzZXRJc0hvdmVyaW5nID0gbWVzc2FnZVV0aWxzU3RvcmUuZ2V0U3RhdGUoKS5zZXRJc0hvdmVyaW5nO1xuXG4gICAgICBjb25zdCBoYW5kbGVNb3VzZUVudGVyID0gKCkgPT4ge1xuICAgICAgICBzZXRJc0hvdmVyaW5nKHRydWUpO1xuICAgICAgfTtcbiAgICAgIGNvbnN0IGhhbmRsZU1vdXNlTGVhdmUgPSAoKSA9PiB7XG4gICAgICAgIHNldElzSG92ZXJpbmcoZmFsc2UpO1xuICAgICAgfTtcblxuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgaGFuZGxlTW91c2VFbnRlcik7XG4gICAgICBlbC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLCBoYW5kbGVNb3VzZUxlYXZlKTtcblxuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgaGFuZGxlTW91c2VFbnRlcik7XG4gICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsIGhhbmRsZU1vdXNlTGVhdmUpO1xuICAgICAgICBzZXRJc0hvdmVyaW5nKGZhbHNlKTtcbiAgICAgIH07XG4gICAgfSxcbiAgICBbbWVzc2FnZVV0aWxzU3RvcmVdLFxuICApO1xuXG4gIHJldHVybiB1c2VNYW5hZ2VkUmVmKGNhbGxiYWNrUmVmKTtcbn07XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBNZXNzYWdlUHJpbWl0aXZlLlJvb3QuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgTWVzc2FnZVByaW1pdGl2ZVJvb3RQcm9wcyA9IE1lc3NhZ2VQcmltaXRpdmVSb290LlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIE1lc3NhZ2VQcmltaXRpdmVSb290IHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEVsZW1lbnRSZWY8dHlwZW9mIFByaW1pdGl2ZS5kaXY+O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IENvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUHJpbWl0aXZlLmRpdj47XG59XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlUHJpbWl0aXZlUm9vdCA9IGZvcndhcmRSZWY8XG4gIE1lc3NhZ2VQcmltaXRpdmVSb290LkVsZW1lbnQsXG4gIE1lc3NhZ2VQcmltaXRpdmVSb290LlByb3BzXG4+KChwcm9wcywgZm9yd2FyZFJlZikgPT4ge1xuICBjb25zdCBpc0hvdmVyaW5nUmVmID0gdXNlSXNIb3ZlcmluZ1JlZigpO1xuICBjb25zdCByZWYgPSB1c2VDb21wb3NlZFJlZnM8SFRNTERpdkVsZW1lbnQ+KGZvcndhcmRSZWYsIGlzSG92ZXJpbmdSZWYpO1xuXG4gIHJldHVybiA8UHJpbWl0aXZlLmRpdiB7Li4ucHJvcHN9IHJlZj17cmVmfSAvPjtcbn0pO1xuXG5NZXNzYWdlUHJpbWl0aXZlUm9vdC5kaXNwbGF5TmFtZSA9IFwiTWVzc2FnZVByaW1pdGl2ZS5Sb290XCI7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5cbmV4cG9ydCBjb25zdCB1c2VNYW5hZ2VkUmVmID0gPFROb2RlPihcbiAgY2FsbGJhY2s6IChub2RlOiBUTm9kZSkgPT4gKCgpID0+IHZvaWQpIHwgdm9pZCxcbikgPT4ge1xuICBjb25zdCBjbGVhbnVwUmVmID0gdXNlUmVmPCgoKSA9PiB2b2lkKSB8IHZvaWQ+KCk7XG5cbiAgY29uc3QgcmVmID0gdXNlQ2FsbGJhY2soXG4gICAgKGVsOiBUTm9kZSB8IG51bGwpID0+IHtcbiAgICAgIC8vIENhbGwgdGhlIHByZXZpb3VzIGNsZWFudXAgZnVuY3Rpb25cbiAgICAgIGlmIChjbGVhbnVwUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgY2xlYW51cFJlZi5jdXJyZW50KCk7XG4gICAgICB9XG5cbiAgICAgIC8vIENhbGwgdGhlIG5ldyBjYWxsYmFjayBhbmQgc3RvcmUgaXRzIGNsZWFudXAgZnVuY3Rpb25cbiAgICAgIGlmIChlbCkge1xuICAgICAgICBjbGVhbnVwUmVmLmN1cnJlbnQgPSBjYWxsYmFjayhlbCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBbY2FsbGJhY2tdLFxuICApO1xuXG4gIHJldHVybiByZWY7XG59O1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB0eXBlIHsgRkMsIFByb3BzV2l0aENoaWxkcmVuIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICBVc2VNZXNzYWdlSWZQcm9wcyxcbiAgdXNlTWVzc2FnZUlmLFxufSBmcm9tIFwiLi4vLi4vcHJpbWl0aXZlLWhvb2tzL21lc3NhZ2UvdXNlTWVzc2FnZUlmXCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBNZXNzYWdlUHJpbWl0aXZlLklmLlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIE1lc3NhZ2VQcmltaXRpdmVJZlByb3BzID0gTWVzc2FnZVByaW1pdGl2ZUlmLlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIE1lc3NhZ2VQcmltaXRpdmVJZiB7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUHJvcHNXaXRoQ2hpbGRyZW48VXNlTWVzc2FnZUlmUHJvcHM+O1xufVxuXG5leHBvcnQgY29uc3QgTWVzc2FnZVByaW1pdGl2ZUlmOiBGQzxNZXNzYWdlUHJpbWl0aXZlSWYuUHJvcHM+ID0gKHtcbiAgY2hpbGRyZW4sXG4gIC4uLnF1ZXJ5XG59KSA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IHVzZU1lc3NhZ2VJZihxdWVyeSk7XG4gIHJldHVybiByZXN1bHQgPyBjaGlsZHJlbiA6IG51bGw7XG59O1xuXG5NZXNzYWdlUHJpbWl0aXZlSWYuZGlzcGxheU5hbWUgPSBcIk1lc3NhZ2VQcmltaXRpdmUuSWZcIjtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyB0eXBlIENvbXBvbmVudFR5cGUsIHR5cGUgRkMsIG1lbW8sIHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7XG4gIHVzZUNvbnRlbnRQYXJ0LFxuICB1c2VDb250ZW50UGFydFJ1bnRpbWUsXG4gIHVzZVRvb2xVSXMsXG59IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5pbXBvcnQge1xuICB1c2VNZXNzYWdlLFxuICB1c2VNZXNzYWdlUnVudGltZSxcbn0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvTWVzc2FnZUNvbnRleHRcIjtcbmltcG9ydCB7IENvbnRlbnRQYXJ0UnVudGltZVByb3ZpZGVyIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcHJvdmlkZXJzL0NvbnRlbnRQYXJ0UnVudGltZVByb3ZpZGVyXCI7XG5pbXBvcnQgeyBDb250ZW50UGFydFByaW1pdGl2ZVRleHQgfSBmcm9tIFwiLi4vY29udGVudFBhcnQvQ29udGVudFBhcnRUZXh0XCI7XG5pbXBvcnQgeyBDb250ZW50UGFydFByaW1pdGl2ZUltYWdlIH0gZnJvbSBcIi4uL2NvbnRlbnRQYXJ0L0NvbnRlbnRQYXJ0SW1hZ2VcIjtcbmltcG9ydCB7IENvbnRlbnRQYXJ0UHJpbWl0aXZlRGlzcGxheSB9IGZyb20gXCIuLi9jb250ZW50UGFydC9Db250ZW50UGFydERpc3BsYXlcIjtcbmltcG9ydCB0eXBlIHtcbiAgRW1wdHlDb250ZW50UGFydENvbXBvbmVudCxcbiAgSW1hZ2VDb250ZW50UGFydENvbXBvbmVudCxcbiAgVGV4dENvbnRlbnRQYXJ0Q29tcG9uZW50LFxuICBUb29sQ2FsbENvbnRlbnRQYXJ0Q29tcG9uZW50LFxuICBUb29sQ2FsbENvbnRlbnRQYXJ0UHJvcHMsXG4gIFVJQ29udGVudFBhcnRDb21wb25lbnQsXG59IGZyb20gXCIuLi8uLi90eXBlcy9Db250ZW50UGFydENvbXBvbmVudFR5cGVzXCI7XG5pbXBvcnQgeyBDb250ZW50UGFydFByaW1pdGl2ZUluUHJvZ3Jlc3MgfSBmcm9tIFwiLi4vY29udGVudFBhcnQvQ29udGVudFBhcnRJblByb2dyZXNzXCI7XG5pbXBvcnQgeyBFTVBUWV9DT05URU5UIH0gZnJvbSBcIi4uLy4uL2FwaS9NZXNzYWdlUnVudGltZVwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgTWVzc2FnZVByaW1pdGl2ZS5Db250ZW50LlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIE1lc3NhZ2VQcmltaXRpdmVDb250ZW50UHJvcHMgPSBNZXNzYWdlUHJpbWl0aXZlQ29udGVudC5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBNZXNzYWdlUHJpbWl0aXZlQ29udGVudCB7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0ge1xuICAgIGNvbXBvbmVudHM/OlxuICAgICAgfCB7XG4gICAgICAgICAgRW1wdHk/OiBFbXB0eUNvbnRlbnRQYXJ0Q29tcG9uZW50IHwgdW5kZWZpbmVkO1xuICAgICAgICAgIFRleHQ/OiBUZXh0Q29udGVudFBhcnRDb21wb25lbnQgfCB1bmRlZmluZWQ7XG4gICAgICAgICAgSW1hZ2U/OiBJbWFnZUNvbnRlbnRQYXJ0Q29tcG9uZW50IHwgdW5kZWZpbmVkO1xuICAgICAgICAgIFVJPzogVUlDb250ZW50UGFydENvbXBvbmVudCB8IHVuZGVmaW5lZDtcbiAgICAgICAgICB0b29scz86XG4gICAgICAgICAgICB8IHtcbiAgICAgICAgICAgICAgICBieV9uYW1lPzpcbiAgICAgICAgICAgICAgICAgIHwgUmVjb3JkPHN0cmluZywgVG9vbENhbGxDb250ZW50UGFydENvbXBvbmVudCB8IHVuZGVmaW5lZD5cbiAgICAgICAgICAgICAgICAgIHwgdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIEZhbGxiYWNrPzogQ29tcG9uZW50VHlwZTxUb29sQ2FsbENvbnRlbnRQYXJ0UHJvcHM+IHwgdW5kZWZpbmVkO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB8IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgfCB1bmRlZmluZWQ7XG4gIH07XG59XG5cbmNvbnN0IFRvb2xVSURpc3BsYXkgPSAoe1xuICBVSSxcbiAgLi4ucHJvcHNcbn06IHtcbiAgVUk6IFRvb2xDYWxsQ29udGVudFBhcnRDb21wb25lbnQgfCB1bmRlZmluZWQ7XG59ICYgVG9vbENhbGxDb250ZW50UGFydFByb3BzKSA9PiB7XG4gIGNvbnN0IFJlbmRlciA9IHVzZVRvb2xVSXMoKHMpID0+IHMuZ2V0VG9vbFVJKHByb3BzLnRvb2xOYW1lKSkgPz8gVUk7XG4gIGlmICghUmVuZGVyKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIDxSZW5kZXIgey4uLnByb3BzfSAvPjtcbn07XG5cbmNvbnN0IGRlZmF1bHRDb21wb25lbnRzID0ge1xuICBUZXh0OiAoKSA9PiAoXG4gICAgPHAgc3R5bGU9e3sgd2hpdGVTcGFjZTogXCJwcmUtbGluZVwiIH19PlxuICAgICAgPENvbnRlbnRQYXJ0UHJpbWl0aXZlVGV4dCAvPlxuICAgICAgPENvbnRlbnRQYXJ0UHJpbWl0aXZlSW5Qcm9ncmVzcz5cbiAgICAgICAgPHNwYW4gc3R5bGU9e3sgZm9udEZhbWlseTogXCJyZXZlcnRcIiB9fT57XCIgXFx1MjVDRlwifTwvc3Bhbj5cbiAgICAgIDwvQ29udGVudFBhcnRQcmltaXRpdmVJblByb2dyZXNzPlxuICAgIDwvcD5cbiAgKSxcbiAgSW1hZ2U6ICgpID0+IDxDb250ZW50UGFydFByaW1pdGl2ZUltYWdlIC8+LFxuICBVSTogKCkgPT4gPENvbnRlbnRQYXJ0UHJpbWl0aXZlRGlzcGxheSAvPixcbn0gc2F0aXNmaWVzIE1lc3NhZ2VQcmltaXRpdmVDb250ZW50LlByb3BzW1wiY29tcG9uZW50c1wiXTtcblxudHlwZSBNZXNzYWdlQ29udGVudFBhcnRDb21wb25lbnRQcm9wcyA9IHtcbiAgY29tcG9uZW50czogTWVzc2FnZVByaW1pdGl2ZUNvbnRlbnQuUHJvcHNbXCJjb21wb25lbnRzXCJdO1xufTtcblxuY29uc3QgTWVzc2FnZUNvbnRlbnRQYXJ0Q29tcG9uZW50OiBGQzxNZXNzYWdlQ29udGVudFBhcnRDb21wb25lbnRQcm9wcz4gPSAoe1xuICBjb21wb25lbnRzOiB7XG4gICAgVGV4dCA9IGRlZmF1bHRDb21wb25lbnRzLlRleHQsXG4gICAgRW1wdHksXG4gICAgSW1hZ2UgPSBkZWZhdWx0Q29tcG9uZW50cy5JbWFnZSxcbiAgICBVSSA9IGRlZmF1bHRDb21wb25lbnRzLlVJLFxuICAgIHRvb2xzOiB7IGJ5X25hbWUgPSB7fSwgRmFsbGJhY2sgPSB1bmRlZmluZWQgfSA9IHt9LFxuICB9ID0ge30sXG59KSA9PiB7XG4gIGNvbnN0IGNvbnRlbnRQYXJ0UnVudGltZSA9IHVzZUNvbnRlbnRQYXJ0UnVudGltZSgpO1xuXG4gIGNvbnN0IHBhcnQgPSB1c2VDb250ZW50UGFydCgpO1xuXG4gIGNvbnN0IHR5cGUgPSBwYXJ0LnR5cGU7XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgXCJ0ZXh0XCI6XG4gICAgICBpZiAocGFydC5zdGF0dXMudHlwZSA9PT0gXCJyZXF1aXJlcy1hY3Rpb25cIilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRW5jb3VudGVyZWQgdW5leHBlY3RlZCByZXF1aXJlcy1hY3Rpb24gc3RhdHVzXCIpO1xuICAgICAgaWYgKHBhcnQucGFydCA9PT0gRU1QVFlfQ09OVEVOVCAmJiAhIUVtcHR5KSB7XG4gICAgICAgIHJldHVybiA8RW1wdHkgc3RhdHVzPXtwYXJ0LnN0YXR1c30gLz47XG4gICAgICB9XG5cbiAgICAgIHJldHVybiA8VGV4dCB7Li4ucGFydH0gcGFydD17cGFydH0gLz47XG5cbiAgICBjYXNlIFwiaW1hZ2VcIjpcbiAgICAgIGlmIChwYXJ0LnN0YXR1cy50eXBlID09PSBcInJlcXVpcmVzLWFjdGlvblwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFbmNvdW50ZXJlZCB1bmV4cGVjdGVkIHJlcXVpcmVzLWFjdGlvbiBzdGF0dXNcIik7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUganN4LWExMXkvYWx0LXRleHRcbiAgICAgIHJldHVybiA8SW1hZ2Ugey4uLnBhcnR9IHBhcnQ9e3BhcnR9IC8+O1xuXG4gICAgY2FzZSBcInVpXCI6XG4gICAgICBpZiAocGFydC5zdGF0dXMudHlwZSA9PT0gXCJyZXF1aXJlcy1hY3Rpb25cIilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRW5jb3VudGVyZWQgdW5leHBlY3RlZCByZXF1aXJlcy1hY3Rpb24gc3RhdHVzXCIpO1xuICAgICAgcmV0dXJuIDxVSSB7Li4ucGFydH0gcGFydD17cGFydH0gLz47XG5cbiAgICBjYXNlIFwidG9vbC1jYWxsXCI6IHtcbiAgICAgIGNvbnN0IFRvb2wgPSBieV9uYW1lW3BhcnQudG9vbE5hbWVdIHx8IEZhbGxiYWNrO1xuICAgICAgY29uc3QgYWRkUmVzdWx0ID0gKHJlc3VsdDogYW55KSA9PlxuICAgICAgICBjb250ZW50UGFydFJ1bnRpbWUuYWRkVG9vbFJlc3VsdChyZXN1bHQpO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPFRvb2xVSURpc3BsYXkgey4uLnBhcnR9IHBhcnQ9e3BhcnR9IFVJPXtUb29sfSBhZGRSZXN1bHQ9e2FkZFJlc3VsdH0gLz5cbiAgICAgICk7XG4gICAgfVxuICAgIGRlZmF1bHQ6XG4gICAgICBjb25zdCB1bmhhbmRsZWRUeXBlOiBuZXZlciA9IHR5cGU7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY29udGVudCBwYXJ0IHR5cGU6ICR7dW5oYW5kbGVkVHlwZX1gKTtcbiAgfVxufTtcblxudHlwZSBNZXNzYWdlQ29udGVudFBhcnRQcm9wcyA9IHtcbiAgcGFydEluZGV4OiBudW1iZXI7XG4gIGNvbXBvbmVudHM6IE1lc3NhZ2VQcmltaXRpdmVDb250ZW50LlByb3BzW1wiY29tcG9uZW50c1wiXTtcbn07XG5cbmNvbnN0IE1lc3NhZ2VDb250ZW50UGFydEltcGw6IEZDPE1lc3NhZ2VDb250ZW50UGFydFByb3BzPiA9ICh7XG4gIHBhcnRJbmRleCxcbiAgY29tcG9uZW50cyxcbn0pID0+IHtcbiAgY29uc3QgbWVzc2FnZVJ1bnRpbWUgPSB1c2VNZXNzYWdlUnVudGltZSgpO1xuICBjb25zdCBydW50aW1lID0gdXNlTWVtbyhcbiAgICAoKSA9PiBtZXNzYWdlUnVudGltZS5nZXRDb250ZW50UGFydEJ5SW5kZXgocGFydEluZGV4KSxcbiAgICBbbWVzc2FnZVJ1bnRpbWUsIHBhcnRJbmRleF0sXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGVudFBhcnRSdW50aW1lUHJvdmlkZXIgcnVudGltZT17cnVudGltZX0+XG4gICAgICA8TWVzc2FnZUNvbnRlbnRQYXJ0Q29tcG9uZW50IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IC8+XG4gICAgPC9Db250ZW50UGFydFJ1bnRpbWVQcm92aWRlcj5cbiAgKTtcbn07XG5cbmNvbnN0IE1lc3NhZ2VDb250ZW50UGFydCA9IG1lbW8oXG4gIE1lc3NhZ2VDb250ZW50UGFydEltcGwsXG4gIChwcmV2LCBuZXh0KSA9PlxuICAgIHByZXYucGFydEluZGV4ID09PSBuZXh0LnBhcnRJbmRleCAmJlxuICAgIHByZXYuY29tcG9uZW50cz8uVGV4dCA9PT0gbmV4dC5jb21wb25lbnRzPy5UZXh0ICYmXG4gICAgcHJldi5jb21wb25lbnRzPy5JbWFnZSA9PT0gbmV4dC5jb21wb25lbnRzPy5JbWFnZSAmJlxuICAgIHByZXYuY29tcG9uZW50cz8uVUkgPT09IG5leHQuY29tcG9uZW50cz8uVUkgJiZcbiAgICBwcmV2LmNvbXBvbmVudHM/LnRvb2xzID09PSBuZXh0LmNvbXBvbmVudHM/LnRvb2xzLFxuKTtcblxuZXhwb3J0IGNvbnN0IE1lc3NhZ2VQcmltaXRpdmVDb250ZW50OiBGQzxNZXNzYWdlUHJpbWl0aXZlQ29udGVudC5Qcm9wcz4gPSAoe1xuICBjb21wb25lbnRzLFxufSkgPT4ge1xuICBjb25zdCBjb250ZW50TGVuZ3RoID0gdXNlTWVzc2FnZSgocykgPT4gcy5jb250ZW50Lmxlbmd0aCkgfHwgMTtcblxuICByZXR1cm4gQXJyYXkuZnJvbSh7IGxlbmd0aDogY29udGVudExlbmd0aCB9LCAoXywgaW5kZXgpID0+IChcbiAgICA8TWVzc2FnZUNvbnRlbnRQYXJ0IGtleT17aW5kZXh9IHBhcnRJbmRleD17aW5kZXh9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IC8+XG4gICkpO1xufTtcblxuTWVzc2FnZVByaW1pdGl2ZUNvbnRlbnQuZGlzcGxheU5hbWUgPSBcIk1lc3NhZ2VQcmltaXRpdmUuQ29udGVudFwiO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHR5cGUgRkMsIHR5cGUgUHJvcHNXaXRoQ2hpbGRyZW4sIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gXCJ6dXN0YW5kXCI7XG5pbXBvcnQgeyBDb250ZW50UGFydENvbnRleHQgfSBmcm9tIFwiLi4vcmVhY3QvQ29udGVudFBhcnRDb250ZXh0XCI7XG5pbXBvcnQgdHlwZSB7IENvbnRlbnRQYXJ0Q29udGV4dFZhbHVlIH0gZnJvbSBcIi4uL3JlYWN0L0NvbnRlbnRQYXJ0Q29udGV4dFwiO1xuaW1wb3J0IHsgd3JpdGFibGVTdG9yZSB9IGZyb20gXCIuLi9SZWFkb25seVN0b3JlXCI7XG5pbXBvcnQgeyBDb250ZW50UGFydFJ1bnRpbWUgfSBmcm9tIFwiLi4vLi4vYXBpXCI7XG5cbnR5cGUgQ29udGVudFBhcnRQcm92aWRlclByb3BzID0gUHJvcHNXaXRoQ2hpbGRyZW48e1xuICBydW50aW1lOiBDb250ZW50UGFydFJ1bnRpbWU7XG59PjtcblxuY29uc3QgdXNlQ29udGVudFBhcnRSdW50aW1lU3RvcmUgPSAocnVudGltZTogQ29udGVudFBhcnRSdW50aW1lKSA9PiB7XG4gIGNvbnN0IFtzdG9yZV0gPSB1c2VTdGF0ZSgoKSA9PiBjcmVhdGUoKCkgPT4gcnVudGltZSkpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgd3JpdGFibGVTdG9yZShzdG9yZSkuc2V0U3RhdGUocnVudGltZSwgdHJ1ZSk7XG4gIH0sIFtydW50aW1lLCBzdG9yZV0pO1xuXG4gIHJldHVybiBzdG9yZTtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VDb250ZW50UGFydFN0b3JlID0gKHJ1bnRpbWU6IENvbnRlbnRQYXJ0UnVudGltZSkgPT4ge1xuICBjb25zdCBbc3RvcmVdID0gdXNlU3RhdGUoKCkgPT4gY3JlYXRlKCgpID0+IHJ1bnRpbWUuZ2V0U3RhdGUoKSkpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZVN0YXRlID0gKCkgPT5cbiAgICAgIHdyaXRhYmxlU3RvcmUoc3RvcmUpLnNldFN0YXRlKHJ1bnRpbWUuZ2V0U3RhdGUoKSwgdHJ1ZSk7XG4gICAgdXBkYXRlU3RhdGUoKTtcbiAgICByZXR1cm4gcnVudGltZS5zdWJzY3JpYmUodXBkYXRlU3RhdGUpO1xuICB9LCBbcnVudGltZSwgc3RvcmVdKTtcblxuICByZXR1cm4gc3RvcmU7XG59O1xuXG5leHBvcnQgY29uc3QgQ29udGVudFBhcnRSdW50aW1lUHJvdmlkZXI6IEZDPENvbnRlbnRQYXJ0UHJvdmlkZXJQcm9wcz4gPSAoe1xuICBydW50aW1lLFxuICBjaGlsZHJlbixcbn0pID0+IHtcbiAgY29uc3QgdXNlQ29udGVudFBhcnRSdW50aW1lID0gdXNlQ29udGVudFBhcnRSdW50aW1lU3RvcmUocnVudGltZSk7XG4gIGNvbnN0IHVzZUNvbnRlbnRQYXJ0ID0gdXNlQ29udGVudFBhcnRTdG9yZShydW50aW1lKTtcbiAgY29uc3QgW2NvbnRleHRdID0gdXNlU3RhdGU8Q29udGVudFBhcnRDb250ZXh0VmFsdWU+KCgpID0+IHtcbiAgICByZXR1cm4geyB1c2VDb250ZW50UGFydFJ1bnRpbWUsIHVzZUNvbnRlbnRQYXJ0IH07XG4gIH0pO1xuXG4gIHJldHVybiAoXG4gICAgPENvbnRlbnRQYXJ0Q29udGV4dC5Qcm92aWRlciB2YWx1ZT17Y29udGV4dH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Db250ZW50UGFydENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IFByaW1pdGl2ZSB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlXCI7XG5pbXBvcnQge1xuICB0eXBlIEVsZW1lbnRSZWYsXG4gIGZvcndhcmRSZWYsXG4gIENvbXBvbmVudFByb3BzV2l0aG91dFJlZixcbiAgRWxlbWVudFR5cGUsXG59IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQ29udGVudFBhcnRUZXh0IH0gZnJvbSBcIi4uLy4uL3ByaW1pdGl2ZS1ob29rcy9jb250ZW50UGFydC91c2VDb250ZW50UGFydFRleHRcIjtcbmltcG9ydCB7IHVzZVNtb290aCB9IGZyb20gXCIuLi8uLi91dGlscy9zbW9vdGgvdXNlU21vb3RoXCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBDb250ZW50UGFydFByaW1pdGl2ZS5UZXh0LlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIENvbnRlbnRQYXJ0UHJpbWl0aXZlVGV4dFByb3BzID0gQ29udGVudFBhcnRQcmltaXRpdmVUZXh0LlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIENvbnRlbnRQYXJ0UHJpbWl0aXZlVGV4dCB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBFbGVtZW50UmVmPHR5cGVvZiBQcmltaXRpdmUuc3Bhbj47XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gT21pdDxcbiAgICBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFByaW1pdGl2ZS5zcGFuPixcbiAgICBcImNoaWxkcmVuXCIgfCBcImFzQ2hpbGRcIlxuICA+ICYge1xuICAgIHNtb290aD86IGJvb2xlYW47XG4gICAgY29tcG9uZW50PzogRWxlbWVudFR5cGU7XG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCBDb250ZW50UGFydFByaW1pdGl2ZVRleHQgPSBmb3J3YXJkUmVmPFxuICBDb250ZW50UGFydFByaW1pdGl2ZVRleHQuRWxlbWVudCxcbiAgQ29udGVudFBhcnRQcmltaXRpdmVUZXh0LlByb3BzXG4+KCh7IHNtb290aCA9IHRydWUsIGNvbXBvbmVudDogQ29tcG9uZW50ID0gXCJzcGFuXCIsIC4uLnJlc3QgfSwgZm9yd2FyZGVkUmVmKSA9PiB7XG4gIGNvbnN0IHsgdGV4dCwgc3RhdHVzIH0gPSB1c2VTbW9vdGgodXNlQ29udGVudFBhcnRUZXh0KCksIHNtb290aCk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q29tcG9uZW50IGRhdGEtc3RhdHVzPXtzdGF0dXMudHlwZX0gey4uLnJlc3R9IHJlZj17Zm9yd2FyZGVkUmVmfT5cbiAgICAgIHt0ZXh0fVxuICAgIDwvQ29tcG9uZW50PlxuICApO1xufSk7XG5cbkNvbnRlbnRQYXJ0UHJpbWl0aXZlVGV4dC5kaXNwbGF5TmFtZSA9IFwiQ29udGVudFBhcnRQcmltaXRpdmUuVGV4dFwiO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlTWVtbywgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlTWVzc2FnZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5pbXBvcnQgeyBDb250ZW50UGFydFN0YXR1cywgVGV4dENvbnRlbnRQYXJ0IH0gZnJvbSBcIi4uLy4uL3R5cGVzL0Fzc2lzdGFudFR5cGVzXCI7XG5pbXBvcnQgeyB1c2VDYWxsYmFja1JlZiB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtdXNlLWNhbGxiYWNrLXJlZlwiO1xuaW1wb3J0IHsgdXNlU21vb3RoU3RhdHVzU3RvcmUgfSBmcm9tIFwiLi9TbW9vdGhDb250ZXh0XCI7XG5pbXBvcnQgeyB3cml0YWJsZVN0b3JlIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvUmVhZG9ubHlTdG9yZVwiO1xuaW1wb3J0IHsgQ29udGVudFBhcnRTdGF0ZSB9IGZyb20gXCIuLi8uLi9hcGkvQ29udGVudFBhcnRSdW50aW1lXCI7XG5cbmNsYXNzIFRleHRTdHJlYW1BbmltYXRvciB7XG4gIHByaXZhdGUgYW5pbWF0aW9uRnJhbWVJZDogbnVtYmVyIHwgbnVsbCA9IG51bGw7XG4gIHByaXZhdGUgbGFzdFVwZGF0ZVRpbWU6IG51bWJlciA9IERhdGUubm93KCk7XG5cbiAgcHVibGljIHRhcmdldFRleHQ6IHN0cmluZyA9IFwiXCI7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGN1cnJlbnRUZXh0OiBzdHJpbmcsXG4gICAgcHJpdmF0ZSBzZXRUZXh0OiAobmV3VGV4dDogc3RyaW5nKSA9PiB2b2lkLFxuICApIHt9XG5cbiAgc3RhcnQoKSB7XG4gICAgaWYgKHRoaXMuYW5pbWF0aW9uRnJhbWVJZCAhPT0gbnVsbCkgcmV0dXJuO1xuICAgIHRoaXMubGFzdFVwZGF0ZVRpbWUgPSBEYXRlLm5vdygpO1xuICAgIHRoaXMuYW5pbWF0ZSgpO1xuICB9XG5cbiAgc3RvcCgpIHtcbiAgICBpZiAodGhpcy5hbmltYXRpb25GcmFtZUlkICE9PSBudWxsKSB7XG4gICAgICBjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGlvbkZyYW1lSWQpO1xuICAgICAgdGhpcy5hbmltYXRpb25GcmFtZUlkID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGFuaW1hdGUgPSAoKSA9PiB7XG4gICAgY29uc3QgY3VycmVudFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIGNvbnN0IGRlbHRhVGltZSA9IGN1cnJlbnRUaW1lIC0gdGhpcy5sYXN0VXBkYXRlVGltZTtcbiAgICBsZXQgdGltZVRvQ29uc3VtZSA9IGRlbHRhVGltZTtcblxuICAgIGNvbnN0IHJlbWFpbmluZ0NoYXJzID0gdGhpcy50YXJnZXRUZXh0Lmxlbmd0aCAtIHRoaXMuY3VycmVudFRleHQubGVuZ3RoO1xuICAgIGNvbnN0IGJhc2VUaW1lUGVyQ2hhciA9IE1hdGgubWluKDUsIDI1MCAvIHJlbWFpbmluZ0NoYXJzKTtcblxuICAgIGxldCBjaGFyc1RvQWRkID0gMDtcbiAgICB3aGlsZSAodGltZVRvQ29uc3VtZSA+PSBiYXNlVGltZVBlckNoYXIgJiYgY2hhcnNUb0FkZCA8IHJlbWFpbmluZ0NoYXJzKSB7XG4gICAgICBjaGFyc1RvQWRkKys7XG4gICAgICB0aW1lVG9Db25zdW1lIC09IGJhc2VUaW1lUGVyQ2hhcjtcbiAgICB9XG5cbiAgICBpZiAoY2hhcnNUb0FkZCAhPT0gcmVtYWluaW5nQ2hhcnMpIHtcbiAgICAgIHRoaXMuYW5pbWF0aW9uRnJhbWVJZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFuaW1hdGlvbkZyYW1lSWQgPSBudWxsO1xuICAgIH1cbiAgICBpZiAoY2hhcnNUb0FkZCA9PT0gMCkgcmV0dXJuO1xuXG4gICAgdGhpcy5jdXJyZW50VGV4dCA9IHRoaXMudGFyZ2V0VGV4dC5zbGljZShcbiAgICAgIDAsXG4gICAgICB0aGlzLmN1cnJlbnRUZXh0Lmxlbmd0aCArIGNoYXJzVG9BZGQsXG4gICAgKTtcbiAgICB0aGlzLmxhc3RVcGRhdGVUaW1lID0gY3VycmVudFRpbWUgLSB0aW1lVG9Db25zdW1lO1xuICAgIHRoaXMuc2V0VGV4dCh0aGlzLmN1cnJlbnRUZXh0KTtcbiAgfTtcbn1cblxuY29uc3QgU01PT1RIX1NUQVRVUzogQ29udGVudFBhcnRTdGF0dXMgPSBPYmplY3QuZnJlZXplKHtcbiAgdHlwZTogXCJydW5uaW5nXCIsXG59KTtcblxuZXhwb3J0IGNvbnN0IHVzZVNtb290aCA9IChcbiAgc3RhdGU6IENvbnRlbnRQYXJ0U3RhdGUgJiBUZXh0Q29udGVudFBhcnQsXG4gIHNtb290aDogYm9vbGVhbiA9IGZhbHNlLFxuKTogQ29udGVudFBhcnRTdGF0ZSAmIFRleHRDb250ZW50UGFydCA9PiB7XG4gIGNvbnN0IHsgdGV4dCB9ID0gc3RhdGU7XG4gIGNvbnN0IGlkID0gdXNlTWVzc2FnZSh7XG4gICAgb3B0aW9uYWw6IHRydWUsXG4gICAgc2VsZWN0b3I6IChtOiB7IGlkOiBzdHJpbmcgfSkgPT4gbS5pZCxcbiAgfSk7XG5cbiAgY29uc3QgaWRSZWYgPSB1c2VSZWYoaWQpO1xuICBjb25zdCBbZGlzcGxheWVkVGV4dCwgc2V0RGlzcGxheWVkVGV4dF0gPSB1c2VTdGF0ZSh0ZXh0KTtcblxuICBjb25zdCBzbW9vdGhTdGF0dXNTdG9yZSA9IHVzZVNtb290aFN0YXR1c1N0b3JlKHsgb3B0aW9uYWw6IHRydWUgfSk7XG4gIGNvbnN0IHNldFRleHQgPSB1c2VDYWxsYmFja1JlZigodGV4dDogc3RyaW5nKSA9PiB7XG4gICAgc2V0RGlzcGxheWVkVGV4dCh0ZXh0KTtcbiAgICBpZiAoc21vb3RoU3RhdHVzU3RvcmUpIHtcbiAgICAgIHdyaXRhYmxlU3RvcmUoc21vb3RoU3RhdHVzU3RvcmUpLnNldFN0YXRlKFxuICAgICAgICB0ZXh0ICE9PSBzdGF0ZS50ZXh0ID8gU01PT1RIX1NUQVRVUyA6IHN0YXRlLnN0YXR1cyxcbiAgICAgICk7XG4gICAgfVxuICB9KTtcblxuICAvLyBUT0RPIHRoaXMgaXMgaGFja3lcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoc21vb3RoU3RhdHVzU3RvcmUpIHtcbiAgICAgIHdyaXRhYmxlU3RvcmUoc21vb3RoU3RhdHVzU3RvcmUpLnNldFN0YXRlKFxuICAgICAgICB0ZXh0ICE9PSBzdGF0ZS50ZXh0ID8gU01PT1RIX1NUQVRVUyA6IHN0YXRlLnN0YXR1cyxcbiAgICAgICk7XG4gICAgfVxuICB9LCBbc21vb3RoU3RhdHVzU3RvcmUsIHRleHQsIGRpc3BsYXllZFRleHQsIHN0YXRlLnN0YXR1cywgc3RhdGUudGV4dF0pO1xuXG4gIGNvbnN0IFthbmltYXRvclJlZl0gPSB1c2VTdGF0ZTxUZXh0U3RyZWFtQW5pbWF0b3I+KFxuICAgIG5ldyBUZXh0U3RyZWFtQW5pbWF0b3IodGV4dCwgc2V0VGV4dCksXG4gICk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXNtb290aCkge1xuICAgICAgYW5pbWF0b3JSZWYuc3RvcCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChpZFJlZi5jdXJyZW50ICE9PSBpZCB8fCAhdGV4dC5zdGFydHNXaXRoKGFuaW1hdG9yUmVmLnRhcmdldFRleHQpKSB7XG4gICAgICBpZFJlZi5jdXJyZW50ID0gaWQ7XG4gICAgICBzZXRUZXh0KHRleHQpO1xuXG4gICAgICBhbmltYXRvclJlZi5jdXJyZW50VGV4dCA9IHRleHQ7XG4gICAgICBhbmltYXRvclJlZi50YXJnZXRUZXh0ID0gdGV4dDtcbiAgICAgIGFuaW1hdG9yUmVmLnN0b3AoKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGFuaW1hdG9yUmVmLnRhcmdldFRleHQgPSB0ZXh0O1xuICAgIGFuaW1hdG9yUmVmLnN0YXJ0KCk7XG4gIH0sIFtzZXRUZXh0LCBhbmltYXRvclJlZiwgaWQsIHNtb290aCwgdGV4dF0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGFuaW1hdG9yUmVmLnN0b3AoKTtcbiAgICB9O1xuICB9LCBbYW5pbWF0b3JSZWZdKTtcblxuICByZXR1cm4gdXNlTWVtbyhcbiAgICAoKSA9PlxuICAgICAgc21vb3RoXG4gICAgICAgID8ge1xuICAgICAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgICAgICB0ZXh0OiBkaXNwbGF5ZWRUZXh0LFxuICAgICAgICAgICAgcGFydDogeyB0eXBlOiBcInRleHRcIiwgdGV4dDogZGlzcGxheWVkVGV4dCB9LFxuICAgICAgICAgICAgc3RhdHVzOiB0ZXh0ID09PSBkaXNwbGF5ZWRUZXh0ID8gc3RhdGUuc3RhdHVzIDogU01PT1RIX1NUQVRVUyxcbiAgICAgICAgICB9XG4gICAgICAgIDogc3RhdGUsXG4gICAgW3Ntb290aCwgZGlzcGxheWVkVGV4dCwgc3RhdGUsIHRleHRdLFxuICApO1xufTtcbiIsImltcG9ydCB7XG4gIENvbXBvbmVudFR5cGUsXG4gIGNyZWF0ZUNvbnRleHQsXG4gIEZDLFxuICBmb3J3YXJkUmVmLFxuICBQcm9wc1dpdGhDaGlsZHJlbixcbiAgdXNlQ29udGV4dCxcbiAgdXNlU3RhdGUsXG59IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgUmVhZG9ubHlTdG9yZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0L1JlYWRvbmx5U3RvcmVcIjtcbmltcG9ydCB7IGNyZWF0ZSwgVXNlQm91bmRTdG9yZSB9IGZyb20gXCJ6dXN0YW5kXCI7XG5pbXBvcnQge1xuICBDb250ZW50UGFydFN0YXR1cyxcbiAgVG9vbENhbGxDb250ZW50UGFydFN0YXR1cyxcbn0gZnJvbSBcIi4uLy4uL3R5cGVzL0Fzc2lzdGFudFR5cGVzXCI7XG5pbXBvcnQgeyB1c2VDb250ZW50UGFydFN0b3JlIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvQ29udGVudFBhcnRDb250ZXh0XCI7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0U3RvcmVIb29rIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvdXRpbHMvY3JlYXRlQ29udGV4dFN0b3JlSG9va1wiO1xuXG50eXBlIFNtb290aENvbnRleHRWYWx1ZSA9IHtcbiAgdXNlU21vb3RoU3RhdHVzOiBVc2VCb3VuZFN0b3JlPFxuICAgIFJlYWRvbmx5U3RvcmU8Q29udGVudFBhcnRTdGF0dXMgfCBUb29sQ2FsbENvbnRlbnRQYXJ0U3RhdHVzPlxuICA+O1xufTtcblxuY29uc3QgU21vb3RoQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8U21vb3RoQ29udGV4dFZhbHVlIHwgbnVsbD4obnVsbCk7XG5cbmNvbnN0IG1ha2VTbW9vdGhDb250ZXh0ID0gKFxuICBpbml0aWFsU3RhdGU6IENvbnRlbnRQYXJ0U3RhdHVzIHwgVG9vbENhbGxDb250ZW50UGFydFN0YXR1cyxcbikgPT4ge1xuICBjb25zdCB1c2VTbW9vdGhTdGF0dXMgPSBjcmVhdGUoKCkgPT4gaW5pdGlhbFN0YXRlKTtcbiAgcmV0dXJuIHsgdXNlU21vb3RoU3RhdHVzIH07XG59O1xuXG5leHBvcnQgY29uc3QgU21vb3RoQ29udGV4dFByb3ZpZGVyOiBGQzxQcm9wc1dpdGhDaGlsZHJlbj4gPSAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gIGNvbnN0IG91dGVyID0gdXNlU21vb3RoQ29udGV4dCh7IG9wdGlvbmFsOiB0cnVlIH0pO1xuICBjb25zdCBjb250ZW50UGFydFN0b3JlID0gdXNlQ29udGVudFBhcnRTdG9yZSgpO1xuXG4gIGNvbnN0IFtjb250ZXh0XSA9IHVzZVN0YXRlKCgpID0+XG4gICAgbWFrZVNtb290aENvbnRleHQoY29udGVudFBhcnRTdG9yZS5nZXRTdGF0ZSgpLnN0YXR1cyksXG4gICk7XG5cbiAgLy8gZG8gbm90IHdyYXAgaWYgdGhlcmUgaXMgYW4gb3V0ZXIgU21vb3RoQ29udGV4dFByb3ZpZGVyXG4gIGlmIChvdXRlcikgcmV0dXJuIGNoaWxkcmVuO1xuXG4gIHJldHVybiAoXG4gICAgPFNtb290aENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e2NvbnRleHR9PntjaGlsZHJlbn08L1Ntb290aENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3Qgd2l0aFNtb290aENvbnRleHRQcm92aWRlciA9IDxDIGV4dGVuZHMgQ29tcG9uZW50VHlwZTxhbnk+PihcbiAgQ29tcG9uZW50OiBDLFxuKTogQyA9PiB7XG4gIGNvbnN0IFdyYXBwZWQgPSBmb3J3YXJkUmVmKChwcm9wcywgcmVmKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxTbW9vdGhDb250ZXh0UHJvdmlkZXI+XG4gICAgICAgIDxDb21wb25lbnQgey4uLihwcm9wcyBhcyBhbnkpfSByZWY9e3JlZn0gLz5cbiAgICAgIDwvU21vb3RoQ29udGV4dFByb3ZpZGVyPlxuICAgICk7XG4gIH0pO1xuICBXcmFwcGVkLmRpc3BsYXlOYW1lID0gQ29tcG9uZW50LmRpc3BsYXlOYW1lO1xuICByZXR1cm4gV3JhcHBlZCBhcyBhbnk7XG59O1xuXG5mdW5jdGlvbiB1c2VTbW9vdGhDb250ZXh0KG9wdGlvbnM/OiB7XG4gIG9wdGlvbmFsPzogZmFsc2UgfCB1bmRlZmluZWQ7XG59KTogU21vb3RoQ29udGV4dFZhbHVlO1xuZnVuY3Rpb24gdXNlU21vb3RoQ29udGV4dChvcHRpb25zPzoge1xuICBvcHRpb25hbD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59KTogU21vb3RoQ29udGV4dFZhbHVlIHwgbnVsbDtcbmZ1bmN0aW9uIHVzZVNtb290aENvbnRleHQob3B0aW9ucz86IHsgb3B0aW9uYWw/OiBib29sZWFuIHwgdW5kZWZpbmVkIH0pIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoU21vb3RoQ29udGV4dCk7XG4gIGlmICghb3B0aW9ucz8ub3B0aW9uYWwgJiYgIWNvbnRleHQpXG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJUaGlzIGNvbXBvbmVudCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgU21vb3RoQ29udGV4dFByb3ZpZGVyLlwiLFxuICAgICk7XG4gIHJldHVybiBjb250ZXh0O1xufVxuXG5leHBvcnQgY29uc3QgeyB1c2VTbW9vdGhTdGF0dXMsIHVzZVNtb290aFN0YXR1c1N0b3JlIH0gPSBjcmVhdGVDb250ZXh0U3RvcmVIb29rKFxuICB1c2VTbW9vdGhDb250ZXh0LFxuICBcInVzZVNtb290aFN0YXR1c1wiLFxuKTtcbiIsImltcG9ydCB7IFByaW1pdGl2ZSB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlXCI7XG5pbXBvcnQgeyB0eXBlIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYsIENvbXBvbmVudFByb3BzV2l0aG91dFJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQ29udGVudFBhcnRJbWFnZSB9IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3MvY29udGVudFBhcnQvdXNlQ29udGVudFBhcnRJbWFnZVwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgQ29udGVudFBhcnRQcmltaXRpdmUuSW1hZ2UuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQ29udGVudFBhcnRQcmltaXRpdmVJbWFnZVByb3BzID0gQ29udGVudFBhcnRQcmltaXRpdmVJbWFnZS5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBDb250ZW50UGFydFByaW1pdGl2ZUltYWdlIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEVsZW1lbnRSZWY8dHlwZW9mIFByaW1pdGl2ZS5pbWc+O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IENvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUHJpbWl0aXZlLmltZz47XG59XG5cbmV4cG9ydCBjb25zdCBDb250ZW50UGFydFByaW1pdGl2ZUltYWdlID0gZm9yd2FyZFJlZjxcbiAgQ29udGVudFBhcnRQcmltaXRpdmVJbWFnZS5FbGVtZW50LFxuICBDb250ZW50UGFydFByaW1pdGl2ZUltYWdlLlByb3BzXG4+KChwcm9wcywgZm9yd2FyZGVkUmVmKSA9PiB7XG4gIGNvbnN0IHsgaW1hZ2UgfSA9IHVzZUNvbnRlbnRQYXJ0SW1hZ2UoKTtcbiAgcmV0dXJuIDxQcmltaXRpdmUuaW1nIHNyYz17aW1hZ2V9IHsuLi5wcm9wc30gcmVmPXtmb3J3YXJkZWRSZWZ9IC8+O1xufSk7XG5cbkNvbnRlbnRQYXJ0UHJpbWl0aXZlSW1hZ2UuZGlzcGxheU5hbWUgPSBcIkNvbnRlbnRQYXJ0UHJpbWl0aXZlLkltYWdlXCI7XG4iLCJpbXBvcnQgdHlwZSB7IEZDIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDb250ZW50UGFydERpc3BsYXkgfSBmcm9tIFwiLi4vLi4vcHJpbWl0aXZlLWhvb2tzL2NvbnRlbnRQYXJ0L3VzZUNvbnRlbnRQYXJ0RGlzcGxheVwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgQ29udGVudFBhcnRQcmltaXRpdmUuRGlzcGxheS5Qcm9wc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBDb250ZW50UGFydFByaW1pdGl2ZURpc3BsYXlQcm9wcyA9XG4gIENvbnRlbnRQYXJ0UHJpbWl0aXZlRGlzcGxheS5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBDb250ZW50UGFydFByaW1pdGl2ZURpc3BsYXkge1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFJlY29yZDxzdHJpbmcsIG5ldmVyPjtcbn1cblxuZXhwb3J0IGNvbnN0IENvbnRlbnRQYXJ0UHJpbWl0aXZlRGlzcGxheTogRkM8XG4gIENvbnRlbnRQYXJ0UHJpbWl0aXZlRGlzcGxheS5Qcm9wc1xuPiA9ICgpID0+IHtcbiAgY29uc3QgeyBkaXNwbGF5IH0gPSB1c2VDb250ZW50UGFydERpc3BsYXkoKTtcbiAgcmV0dXJuIGRpc3BsYXkgPz8gbnVsbDtcbn07XG5cbkNvbnRlbnRQYXJ0UHJpbWl0aXZlRGlzcGxheS5kaXNwbGF5TmFtZSA9IFwiQ29udGVudFBhcnRQcmltaXRpdmUuRGlzcGxheVwiO1xuIiwiaW1wb3J0IHsgRkMsIFByb3BzV2l0aENoaWxkcmVuIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDb250ZW50UGFydCB9IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBDb250ZW50UGFydFByaW1pdGl2ZS5JblByb2dyZXNzLlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIENvbnRlbnRQYXJ0UHJpbWl0aXZlSW5Qcm9ncmVzc1Byb3BzID1cbiAgQ29udGVudFBhcnRQcmltaXRpdmVJblByb2dyZXNzLlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIENvbnRlbnRQYXJ0UHJpbWl0aXZlSW5Qcm9ncmVzcyB7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUHJvcHNXaXRoQ2hpbGRyZW47XG59XG5cbi8vIFRPRE8gc2hvdWxkIHRoaXMgYmUgcmVuYW1lZCB0byBJc1J1bm5pbmc/XG5leHBvcnQgY29uc3QgQ29udGVudFBhcnRQcmltaXRpdmVJblByb2dyZXNzOiBGQzxcbiAgQ29udGVudFBhcnRQcmltaXRpdmVJblByb2dyZXNzLlByb3BzXG4+ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCBpc0luUHJvZ3Jlc3MgPSB1c2VDb250ZW50UGFydCgoYykgPT4gYy5zdGF0dXMudHlwZSA9PT0gXCJydW5uaW5nXCIpO1xuXG4gIHJldHVybiBpc0luUHJvZ3Jlc3MgPyBjaGlsZHJlbiA6IG51bGw7XG59O1xuXG5Db250ZW50UGFydFByaW1pdGl2ZUluUHJvZ3Jlc3MuZGlzcGxheU5hbWUgPSBcIkNvbnRlbnRQYXJ0UHJpbWl0aXZlLkluUHJvZ3Jlc3NcIjtcbiIsImltcG9ydCB0eXBlIHtcbiAgQXBwZW5kTWVzc2FnZSxcbiAgVGV4dENvbnRlbnRQYXJ0LFxuICBUaHJlYWRNZXNzYWdlLFxufSBmcm9tIFwiLi4vdHlwZXMvQXNzaXN0YW50VHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IGdldFRocmVhZE1lc3NhZ2VUZXh0ID0gKFxuICBtZXNzYWdlOiBUaHJlYWRNZXNzYWdlIHwgQXBwZW5kTWVzc2FnZSxcbikgPT4ge1xuICBjb25zdCB0ZXh0UGFydHMgPSBtZXNzYWdlLmNvbnRlbnQuZmlsdGVyKFxuICAgIChwYXJ0KSA9PiBwYXJ0LnR5cGUgPT09IFwidGV4dFwiLFxuICApIGFzIFRleHRDb250ZW50UGFydFtdO1xuXG4gIHJldHVybiB0ZXh0UGFydHMubWFwKChwYXJ0KSA9PiBwYXJ0LnRleHQpLmpvaW4oXCJcXG5cXG5cIik7XG59O1xuIiwiaW1wb3J0IHsgU3Vic2NyaWJhYmxlV2l0aFN0YXRlIH0gZnJvbSBcIi4vc3Vic2NyaWJhYmxlL1N1YnNjcmliYWJsZVwiO1xuXG5pbXBvcnQgeyBDb21wb3NlclJ1bnRpbWVDb3JlQmluZGluZyB9IGZyb20gXCIuL0NvbXBvc2VyUnVudGltZVwiO1xuaW1wb3J0IHtcbiAgQXR0YWNobWVudCxcbiAgQ29tcGxldGVBdHRhY2htZW50LFxuICBQZW5kaW5nQXR0YWNobWVudCxcbiAgVW5zdWJzY3JpYmUsXG59IGZyb20gXCIuLi90eXBlc1wiO1xuaW1wb3J0IHsgQXR0YWNobWVudFJ1bnRpbWVQYXRoIH0gZnJvbSBcIi4vUGF0aFR5cGVzXCI7XG5cbnR5cGUgTWVzc2FnZUF0dGFjaG1lbnRTdGF0ZSA9IENvbXBsZXRlQXR0YWNobWVudCAmIHtcbiAgc291cmNlOiBcIm1lc3NhZ2VcIjtcbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFlvdSBjYW4gZGlyZWN0bHkgYWNjZXNzIGNvbnRlbnQgcGFydCBmaWVsZHMgaW4gdGhlIHN0YXRlLiBSZXBsYWNlIGAuYXR0YWNobWVudC50eXBlYCB3aXRoIGAudHlwZWAgZXRjLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIGF0dGFjaG1lbnQ6IENvbXBsZXRlQXR0YWNobWVudDtcbn07XG5cbnR5cGUgVGhyZWFkQ29tcG9zZXJBdHRhY2htZW50U3RhdGUgPSBQZW5kaW5nQXR0YWNobWVudCAmIHtcbiAgc291cmNlOiBcInRocmVhZC1jb21wb3NlclwiO1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgWW91IGNhbiBkaXJlY3RseSBhY2Nlc3MgY29udGVudCBwYXJ0IGZpZWxkcyBpbiB0aGUgc3RhdGUuIFJlcGxhY2UgYC5hdHRhY2htZW50LnR5cGVgIHdpdGggYC50eXBlYCBldGMuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgYXR0YWNobWVudDogUGVuZGluZ0F0dGFjaG1lbnQ7XG59O1xuXG50eXBlIEVkaXRDb21wb3NlckF0dGFjaG1lbnRTdGF0ZSA9IEF0dGFjaG1lbnQgJiB7XG4gIHNvdXJjZTogXCJlZGl0LWNvbXBvc2VyXCI7XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBZb3UgY2FuIGRpcmVjdGx5IGFjY2VzcyBjb250ZW50IHBhcnQgZmllbGRzIGluIHRoZSBzdGF0ZS4gUmVwbGFjZSBgLmF0dGFjaG1lbnQudHlwZWAgd2l0aCBgLnR5cGVgIGV0Yy4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBhdHRhY2htZW50OiBBdHRhY2htZW50O1xufTtcblxuZXhwb3J0IHR5cGUgQXR0YWNobWVudFN0YXRlID1cbiAgfCBUaHJlYWRDb21wb3NlckF0dGFjaG1lbnRTdGF0ZVxuICB8IEVkaXRDb21wb3NlckF0dGFjaG1lbnRTdGF0ZVxuICB8IE1lc3NhZ2VBdHRhY2htZW50U3RhdGU7XG5cbnR5cGUgQXR0YWNobWVudFNuYXBzaG90QmluZGluZzxTb3VyY2UgZXh0ZW5kcyBBdHRhY2htZW50UnVudGltZVNvdXJjZT4gPVxuICBTdWJzY3JpYmFibGVXaXRoU3RhdGU8XG4gICAgQXR0YWNobWVudFN0YXRlICYgeyBzb3VyY2U6IFNvdXJjZSB9LFxuICAgIEF0dGFjaG1lbnRSdW50aW1lUGF0aCAmIHsgYXR0YWNobWVudFNvdXJjZTogU291cmNlIH1cbiAgPjtcblxudHlwZSBBdHRhY2htZW50UnVudGltZVNvdXJjZSA9IEF0dGFjaG1lbnRTdGF0ZVtcInNvdXJjZVwiXTtcblxuZXhwb3J0IHR5cGUgQXR0YWNobWVudFJ1bnRpbWU8XG4gIFRTb3VyY2UgZXh0ZW5kcyBBdHRhY2htZW50UnVudGltZVNvdXJjZSA9IEF0dGFjaG1lbnRSdW50aW1lU291cmNlLFxuPiA9IHtcbiAgcGF0aDogQXR0YWNobWVudFJ1bnRpbWVQYXRoICYgeyBhdHRhY2htZW50U291cmNlOiBUU291cmNlIH07XG4gIHJlYWRvbmx5IHNvdXJjZTogVFNvdXJjZTtcbiAgZ2V0U3RhdGUoKTogQXR0YWNobWVudFN0YXRlICYgeyBzb3VyY2U6IFRTb3VyY2UgfTtcbiAgcmVtb3ZlKCk6IFByb21pc2U8dm9pZD47XG4gIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCk6IFVuc3Vic2NyaWJlO1xufTtcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEF0dGFjaG1lbnRSdW50aW1lSW1wbDxcbiAgU291cmNlIGV4dGVuZHMgQXR0YWNobWVudFJ1bnRpbWVTb3VyY2UgPSBBdHRhY2htZW50UnVudGltZVNvdXJjZSxcbj4gaW1wbGVtZW50cyBBdHRhY2htZW50UnVudGltZVxue1xuICBwdWJsaWMgZ2V0IHBhdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NvcmUucGF0aDtcbiAgfVxuXG4gIHB1YmxpYyBhYnN0cmFjdCBnZXQgc291cmNlKCk6IFNvdXJjZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9jb3JlOiBBdHRhY2htZW50U25hcHNob3RCaW5kaW5nPFNvdXJjZT4pIHt9XG5cbiAgcHVibGljIGdldFN0YXRlKCk6IEF0dGFjaG1lbnRTdGF0ZSAmIHsgc291cmNlOiBTb3VyY2UgfSB7XG4gICAgcmV0dXJuIHRoaXMuX2NvcmUuZ2V0U3RhdGUoKTtcbiAgfVxuXG4gIHB1YmxpYyBhYnN0cmFjdCByZW1vdmUoKTogUHJvbWlzZTx2b2lkPjtcblxuICBwdWJsaWMgc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NvcmUuc3Vic2NyaWJlKGNhbGxiYWNrKTtcbiAgfVxufVxuXG5hYnN0cmFjdCBjbGFzcyBDb21wb3NlckF0dGFjaG1lbnRSdW50aW1lPFxuICBTb3VyY2UgZXh0ZW5kcyBcInRocmVhZC1jb21wb3NlclwiIHwgXCJlZGl0LWNvbXBvc2VyXCIsXG4+IGV4dGVuZHMgQXR0YWNobWVudFJ1bnRpbWVJbXBsPFNvdXJjZT4ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBjb3JlOiBBdHRhY2htZW50U25hcHNob3RCaW5kaW5nPFNvdXJjZT4sXG4gICAgcHJpdmF0ZSBfY29tcG9zZXJBcGk6IENvbXBvc2VyUnVudGltZUNvcmVCaW5kaW5nLFxuICApIHtcbiAgICBzdXBlcihjb3JlKTtcbiAgfVxuXG4gIHB1YmxpYyByZW1vdmUoKSB7XG4gICAgY29uc3QgY29yZSA9IHRoaXMuX2NvbXBvc2VyQXBpLmdldFN0YXRlKCk7XG4gICAgaWYgKCFjb3JlKSB0aHJvdyBuZXcgRXJyb3IoXCJDb21wb3NlciBpcyBub3QgYXZhaWxhYmxlXCIpO1xuICAgIHJldHVybiBjb3JlLnJlbW92ZUF0dGFjaG1lbnQodGhpcy5nZXRTdGF0ZSgpLmlkKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgVGhyZWFkQ29tcG9zZXJBdHRhY2htZW50UnVudGltZUltcGwgZXh0ZW5kcyBDb21wb3NlckF0dGFjaG1lbnRSdW50aW1lPFwidGhyZWFkLWNvbXBvc2VyXCI+IHtcbiAgcHVibGljIGdldCBzb3VyY2UoKTogXCJ0aHJlYWQtY29tcG9zZXJcIiB7XG4gICAgcmV0dXJuIFwidGhyZWFkLWNvbXBvc2VyXCI7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEVkaXRDb21wb3NlckF0dGFjaG1lbnRSdW50aW1lSW1wbCBleHRlbmRzIENvbXBvc2VyQXR0YWNobWVudFJ1bnRpbWU8XCJlZGl0LWNvbXBvc2VyXCI+IHtcbiAgcHVibGljIGdldCBzb3VyY2UoKTogXCJlZGl0LWNvbXBvc2VyXCIge1xuICAgIHJldHVybiBcImVkaXQtY29tcG9zZXJcIjtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTWVzc2FnZUF0dGFjaG1lbnRSdW50aW1lSW1wbCBleHRlbmRzIEF0dGFjaG1lbnRSdW50aW1lSW1wbDxcIm1lc3NhZ2VcIj4ge1xuICBwdWJsaWMgZ2V0IHNvdXJjZSgpOiBcIm1lc3NhZ2VcIiB7XG4gICAgcmV0dXJuIFwibWVzc2FnZVwiO1xuICB9XG5cbiAgY29uc3RydWN0b3IoY29yZTogQXR0YWNobWVudFNuYXBzaG90QmluZGluZzxcIm1lc3NhZ2VcIj4pIHtcbiAgICBzdXBlcihjb3JlKTtcbiAgfVxuXG4gIHB1YmxpYyByZW1vdmUoKTogbmV2ZXIge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk1lc3NhZ2UgYXR0YWNobWVudHMgY2Fubm90IGJlIHJlbW92ZWRcIik7XG4gIH1cbn1cbiIsImltcG9ydCB7IFVuc3Vic2NyaWJlIH0gZnJvbSBcIi4uLy4uL3R5cGVzL1Vuc3Vic2NyaWJlXCI7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBCYXNlU3ViamVjdCB7XG4gIHByaXZhdGUgX3N1YnNjcmlwdGlvbnMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KCk7XG4gIHByaXZhdGUgX2Nvbm5lY3Rpb246IFVuc3Vic2NyaWJlIHwgdW5kZWZpbmVkO1xuXG4gIHByb3RlY3RlZCBnZXQgaXNDb25uZWN0ZWQoKSB7XG4gICAgcmV0dXJuICEhdGhpcy5fY29ubmVjdGlvbjtcbiAgfVxuXG4gIHByb3RlY3RlZCBhYnN0cmFjdCBfY29ubmVjdCgpOiBVbnN1YnNjcmliZTtcblxuICBwcm90ZWN0ZWQgbm90aWZ5U3Vic2NyaWJlcnMoKSB7XG4gICAgZm9yIChjb25zdCBjYWxsYmFjayBvZiB0aGlzLl9zdWJzY3JpcHRpb25zKSBjYWxsYmFjaygpO1xuICB9XG5cbiAgcHJpdmF0ZSBfdXBkYXRlQ29ubmVjdGlvbigpIHtcbiAgICBpZiAodGhpcy5fc3Vic2NyaXB0aW9ucy5zaXplID4gMCkge1xuICAgICAgaWYgKHRoaXMuX2Nvbm5lY3Rpb24pIHJldHVybjtcbiAgICAgIHRoaXMuX2Nvbm5lY3Rpb24gPSB0aGlzLl9jb25uZWN0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2Nvbm5lY3Rpb24/LigpO1xuICAgICAgdGhpcy5fY29ubmVjdGlvbiA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgdGhpcy5fc3Vic2NyaXB0aW9ucy5hZGQoY2FsbGJhY2spO1xuICAgIHRoaXMuX3VwZGF0ZUNvbm5lY3Rpb24oKTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aGlzLl9zdWJzY3JpcHRpb25zLmRlbGV0ZShjYWxsYmFjayk7XG4gICAgICB0aGlzLl91cGRhdGVDb25uZWN0aW9uKCk7XG4gICAgfTtcbiAgfVxufVxuIiwiZXhwb3J0IGNvbnN0IFNLSVBfVVBEQVRFID0gU3ltYm9sKFwic2tpcC11cGRhdGVcIik7XG5leHBvcnQgdHlwZSBTS0lQX1VQREFURSA9IHR5cGVvZiBTS0lQX1VQREFURTtcbiIsImltcG9ydCB7IEJhc2VTdWJqZWN0IH0gZnJvbSBcIi4vQmFzZVN1YmplY3RcIjtcbmltcG9ydCB7IFNLSVBfVVBEQVRFIH0gZnJvbSBcIi4vU0tJUF9VUERBVEVcIjtcbmltcG9ydCB7IFN1YnNjcmliYWJsZVdpdGhTdGF0ZSB9IGZyb20gXCIuL1N1YnNjcmliYWJsZVwiO1xuXG5leHBvcnQgY2xhc3MgTGF6eU1lbW9pemVTdWJqZWN0PFRTdGF0ZSBleHRlbmRzIG9iamVjdCwgVFBhdGg+XG4gIGV4dGVuZHMgQmFzZVN1YmplY3RcbiAgaW1wbGVtZW50cyBTdWJzY3JpYmFibGVXaXRoU3RhdGU8VFN0YXRlLCBUUGF0aD5cbntcbiAgcHVibGljIGdldCBwYXRoKCkge1xuICAgIHJldHVybiB0aGlzLmJpbmRpbmcucGF0aDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYmluZGluZzogU3Vic2NyaWJhYmxlV2l0aFN0YXRlPFRTdGF0ZSB8IFNLSVBfVVBEQVRFLCBUUGF0aD4sXG4gICkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBwcml2YXRlIF9wcmV2aW91c1N0YXRlRGlydHkgPSB0cnVlO1xuICBwcml2YXRlIF9wcmV2aW91c1N0YXRlOiBUU3RhdGUgfCB1bmRlZmluZWQ7XG4gIHB1YmxpYyBnZXRTdGF0ZSA9ICgpID0+IHtcbiAgICBpZiAoIXRoaXMuaXNDb25uZWN0ZWQgfHwgdGhpcy5fcHJldmlvdXNTdGF0ZURpcnR5KSB7XG4gICAgICBjb25zdCBuZXdTdGF0ZSA9IHRoaXMuYmluZGluZy5nZXRTdGF0ZSgpO1xuICAgICAgaWYgKG5ld1N0YXRlICE9PSBTS0lQX1VQREFURSkge1xuICAgICAgICB0aGlzLl9wcmV2aW91c1N0YXRlID0gbmV3U3RhdGU7XG4gICAgICB9XG4gICAgICB0aGlzLl9wcmV2aW91c1N0YXRlRGlydHkgPSBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHRoaXMuX3ByZXZpb3VzU3RhdGUgPT09IHVuZGVmaW5lZClcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkVudHJ5IG5vdCBhdmFpbGFibGUgaW4gdGhlIHN0b3JlXCIpO1xuICAgIHJldHVybiB0aGlzLl9wcmV2aW91c1N0YXRlO1xuICB9O1xuXG4gIHByb3RlY3RlZCBfY29ubmVjdCgpIHtcbiAgICBjb25zdCBjYWxsYmFjayA9ICgpID0+IHtcbiAgICAgIHRoaXMuX3ByZXZpb3VzU3RhdGVEaXJ0eSA9IHRydWU7XG4gICAgICB0aGlzLm5vdGlmeVN1YnNjcmliZXJzKCk7XG4gICAgfTtcblxuICAgIHJldHVybiB0aGlzLmJpbmRpbmcuc3Vic2NyaWJlKGNhbGxiYWNrKTtcbiAgfVxufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbDxUIGV4dGVuZHMgb2JqZWN0PihcbiAgb2JqQTogVCB8IHVuZGVmaW5lZCxcbiAgb2JqQjogVCB8IHVuZGVmaW5lZCxcbikge1xuICBpZiAob2JqQSA9PT0gdW5kZWZpbmVkICYmIG9iakIgPT09IHVuZGVmaW5lZCkgcmV0dXJuIHRydWU7XG4gIGlmIChvYmpBID09PSB1bmRlZmluZWQpIHJldHVybiBmYWxzZTtcbiAgaWYgKG9iakIgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGZhbHNlO1xuXG4gIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKG9iakEpKSB7XG4gICAgY29uc3QgdmFsdWVBID0gb2JqQVtrZXkgYXMga2V5b2YgVF07XG4gICAgY29uc3QgdmFsdWVCID0gb2JqQltrZXkgYXMga2V5b2YgVF07XG4gICAgaWYgKCFPYmplY3QuaXModmFsdWVBLCB2YWx1ZUIpKSByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cbiIsImltcG9ydCB7IHNoYWxsb3dFcXVhbCB9IGZyb20gXCIuL3NoYWxsb3dFcXVhbFwiO1xuaW1wb3J0IHsgQmFzZVN1YmplY3QgfSBmcm9tIFwiLi9CYXNlU3ViamVjdFwiO1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlV2l0aFN0YXRlIH0gZnJvbSBcIi4vU3Vic2NyaWJhYmxlXCI7XG5pbXBvcnQgeyBTS0lQX1VQREFURSB9IGZyb20gXCIuL1NLSVBfVVBEQVRFXCI7XG5cbmV4cG9ydCBjbGFzcyBTaGFsbG93TWVtb2l6ZVN1YmplY3Q8VFN0YXRlIGV4dGVuZHMgb2JqZWN0LCBUUGF0aD5cbiAgZXh0ZW5kcyBCYXNlU3ViamVjdFxuICBpbXBsZW1lbnRzIFN1YnNjcmliYWJsZVdpdGhTdGF0ZTxUU3RhdGUsIFRQYXRoPlxue1xuICBwdWJsaWMgZ2V0IHBhdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuYmluZGluZy5wYXRoO1xuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBiaW5kaW5nOiBTdWJzY3JpYmFibGVXaXRoU3RhdGU8VFN0YXRlIHwgU0tJUF9VUERBVEUsIFRQYXRoPixcbiAgKSB7XG4gICAgc3VwZXIoKTtcbiAgICBjb25zdCBzdGF0ZSA9IGJpbmRpbmcuZ2V0U3RhdGUoKTtcbiAgICBpZiAoc3RhdGUgPT09IFNLSVBfVVBEQVRFKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRW50cnkgbm90IGF2YWlsYWJsZSBpbiB0aGUgc3RvcmVcIik7XG4gICAgdGhpcy5fcHJldmlvdXNTdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgcHJpdmF0ZSBfcHJldmlvdXNTdGF0ZTogVFN0YXRlO1xuICBwdWJsaWMgZ2V0U3RhdGUgPSAoKSA9PiB7XG4gICAgaWYgKCF0aGlzLmlzQ29ubmVjdGVkKSB0aGlzLl9zeW5jU3RhdGUoKTtcbiAgICByZXR1cm4gdGhpcy5fcHJldmlvdXNTdGF0ZTtcbiAgfTtcblxuICBwcml2YXRlIF9zeW5jU3RhdGUoKSB7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLmJpbmRpbmcuZ2V0U3RhdGUoKTtcbiAgICBpZiAoc3RhdGUgPT09IFNLSVBfVVBEQVRFKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHNoYWxsb3dFcXVhbChzdGF0ZSwgdGhpcy5fcHJldmlvdXNTdGF0ZSkpIHJldHVybiBmYWxzZTtcbiAgICB0aGlzLl9wcmV2aW91c1N0YXRlID0gc3RhdGU7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBwcm90ZWN0ZWQgX2Nvbm5lY3QoKSB7XG4gICAgY29uc3QgY2FsbGJhY2sgPSAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5fc3luY1N0YXRlKCkpIHtcbiAgICAgICAgdGhpcy5ub3RpZnlTdWJzY3JpYmVycygpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gdGhpcy5iaW5kaW5nLnN1YnNjcmliZShjYWxsYmFjayk7XG4gIH1cbn1cbiIsImltcG9ydCB7IEF0dGFjaG1lbnQsIFBlbmRpbmdBdHRhY2htZW50IH0gZnJvbSBcIi4uL3R5cGVzL0F0dGFjaG1lbnRUeXBlc1wiO1xuaW1wb3J0IHtcbiAgQ29tcG9zZXJSdW50aW1lQ29yZSxcbiAgVGhyZWFkQ29tcG9zZXJSdW50aW1lQ29yZSxcbn0gZnJvbSBcIi4uL3J1bnRpbWVzL2NvcmUvQ29tcG9zZXJSdW50aW1lQ29yZVwiO1xuaW1wb3J0IHsgVW5zdWJzY3JpYmUgfSBmcm9tIFwiLi4vdHlwZXNcIjtcbmltcG9ydCB7IFN1YnNjcmliYWJsZVdpdGhTdGF0ZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS9TdWJzY3JpYmFibGVcIjtcbmltcG9ydCB7IExhenlNZW1vaXplU3ViamVjdCB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS9MYXp5TWVtb2l6ZVN1YmplY3RcIjtcbmltcG9ydCB7XG4gIEF0dGFjaG1lbnRSdW50aW1lLFxuICBBdHRhY2htZW50U3RhdGUsXG4gIEVkaXRDb21wb3NlckF0dGFjaG1lbnRSdW50aW1lSW1wbCxcbiAgVGhyZWFkQ29tcG9zZXJBdHRhY2htZW50UnVudGltZUltcGwsXG59IGZyb20gXCIuL0F0dGFjaG1lbnRSdW50aW1lXCI7XG5pbXBvcnQgeyBTaGFsbG93TWVtb2l6ZVN1YmplY3QgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUvU2hhbGxvd01lbW9pemVTdWJqZWN0XCI7XG5pbXBvcnQgeyBTS0lQX1VQREFURSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS9TS0lQX1VQREFURVwiO1xuaW1wb3J0IHsgQ29tcG9zZXJSdW50aW1lUGF0aCB9IGZyb20gXCIuL1BhdGhUeXBlc1wiO1xuXG5leHBvcnQgdHlwZSBUaHJlYWRDb21wb3NlclJ1bnRpbWVDb3JlQmluZGluZyA9IFN1YnNjcmliYWJsZVdpdGhTdGF0ZTxcbiAgVGhyZWFkQ29tcG9zZXJSdW50aW1lQ29yZSB8IHVuZGVmaW5lZCxcbiAgQ29tcG9zZXJSdW50aW1lUGF0aCAmIHsgY29tcG9zZXJTb3VyY2U6IFwidGhyZWFkXCIgfVxuPjtcblxuZXhwb3J0IHR5cGUgRWRpdENvbXBvc2VyUnVudGltZUNvcmVCaW5kaW5nID0gU3Vic2NyaWJhYmxlV2l0aFN0YXRlPFxuICBDb21wb3NlclJ1bnRpbWVDb3JlIHwgdW5kZWZpbmVkLFxuICBDb21wb3NlclJ1bnRpbWVQYXRoICYgeyBjb21wb3NlclNvdXJjZTogXCJlZGl0XCIgfVxuPjtcblxuZXhwb3J0IHR5cGUgQ29tcG9zZXJSdW50aW1lQ29yZUJpbmRpbmcgPSBTdWJzY3JpYmFibGVXaXRoU3RhdGU8XG4gIENvbXBvc2VyUnVudGltZUNvcmUgfCB1bmRlZmluZWQsXG4gIENvbXBvc2VyUnVudGltZVBhdGhcbj47XG5cbnR5cGUgTGVnYWN5RWRpdENvbXBvc2VyU3RhdGUgPSBSZWFkb25seTx7XG4gIHR5cGU6IFwiZWRpdFwiO1xuXG4gIC8qKiBAZGVwcmVjYXRlZCBVc2UgYHRleHRgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLiAqL1xuICB2YWx1ZTogc3RyaW5nO1xuICAvKiogQGRlcHJlY2F0ZWQgVXNlIGB1c2VDb21wb3NlclJ1bnRpbWUoKS5zZXRUZXh0KClgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLiAqL1xuICBzZXRWYWx1ZTogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQ7XG5cbiAgdGV4dDogc3RyaW5nO1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGB1c2VDb21wb3NlclJ1bnRpbWUoKS5zZXRUZXh0KClgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgc2V0VGV4dDogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQ7XG5cbiAgY2FuQ2FuY2VsOiBib29sZWFuO1xuICBpc0VkaXRpbmc6IGJvb2xlYW47XG4gIGlzRW1wdHk6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSB1c2VDb21wb3NlclJ1bnRpbWUoKS5iZWdpbkVkaXQoKSBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIGVkaXQ6ICgpID0+IHZvaWQ7XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYHVzZUNvbXBvc2VyUnVudGltZSgpLnNlbmQoKWAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBzZW5kOiAoKSA9PiB2b2lkO1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGB1c2VDb21wb3NlclJ1bnRpbWUoKS5jYW5jZWwoKWAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBjYW5jZWw6ICgpID0+IHZvaWQ7XG59PjtcblxudHlwZSBMZWdhY3lUaHJlYWRDb21wb3NlclN0YXRlID0gUmVhZG9ubHk8e1xuICB0eXBlOiBcInRocmVhZFwiO1xuXG4gIC8qKiBAZGVwcmVjYXRlZCBVc2UgYHRleHRgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLiAqL1xuICB2YWx1ZTogc3RyaW5nO1xuICAvKiogQGRlcHJlY2F0ZWQgVXNlIGB1c2VDb21wb3NlclJ1bnRpbWUoKS5zZXRUZXh0YCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC4gKi9cbiAgc2V0VmFsdWU6ICh2YWx1ZTogc3RyaW5nKSA9PiB2b2lkO1xuXG4gIGF0dGFjaG1lbnRzOiByZWFkb25seSBBdHRhY2htZW50W107XG5cbiAgLyoqIEBkZXByZWNhdGVkIFVzZSBgdXNlQ29tcG9zZXJSdW50aW1lKCkuYWRkQXR0YWNobWVudGAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuICovXG4gIGFkZEF0dGFjaG1lbnQ6IChmaWxlOiBGaWxlKSA9PiBQcm9taXNlPHZvaWQ+O1xuICAvKiogQGRlcHJlY2F0ZWQgVXNlIGB1c2VDb21wb3NlclJ1bnRpbWUoKS5yZW1vdmVBdHRhY2htZW50YCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC4gKi9cbiAgcmVtb3ZlQXR0YWNobWVudDogKGF0dGFjaG1lbnRJZDogc3RyaW5nKSA9PiBQcm9taXNlPHZvaWQ+O1xuXG4gIHRleHQ6IHN0cmluZztcbiAgLyoqIEBkZXByZWNhdGVkIFVzZSBgdXNlQ29tcG9zZXJSdW50aW1lKCkuc2V0VGV4dGAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuICovXG4gIHNldFRleHQ6ICh2YWx1ZTogc3RyaW5nKSA9PiB2b2lkO1xuXG4gIC8qKiBAZGVwcmVjYXRlZCBVc2UgYHVzZUNvbXBvc2VyUnVudGltZSgpLnJlc2V0YCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC4gKi9cbiAgcmVzZXQ6ICgpID0+IHZvaWQ7XG5cbiAgY2FuQ2FuY2VsOiBib29sZWFuO1xuICBpc0VkaXRpbmc6IGJvb2xlYW47XG4gIGlzRW1wdHk6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgdXNlQ29tcG9zZXJSdW50aW1lKCkuc2VuZGAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqKi9cbiAgc2VuZDogKCkgPT4gdm9pZDtcbiAgLyoqIEBkZXByZWNhdGVkIFVzZSBgdXNlQ29tcG9zZXJSdW50aW1lKCkuY2FuY2VsYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC4gKi9cbiAgY2FuY2VsOiAoKSA9PiB2b2lkO1xufT47XG5cbnR5cGUgQmFzZUNvbXBvc2VyU3RhdGUgPSB7XG4gIHRleHQ6IHN0cmluZztcbiAgYXR0YWNobWVudHM6IHJlYWRvbmx5IEF0dGFjaG1lbnRbXTtcblxuICBjYW5DYW5jZWw6IGJvb2xlYW47XG4gIGlzRWRpdGluZzogYm9vbGVhbjtcbiAgaXNFbXB0eTogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCB0eXBlIFRocmVhZENvbXBvc2VyU3RhdGUgPSBMZWdhY3lUaHJlYWRDb21wb3NlclN0YXRlICZcbiAgQmFzZUNvbXBvc2VyU3RhdGUgJiB7XG4gICAgdHlwZTogXCJ0aHJlYWRcIjtcblxuICAgIGF0dGFjaG1lbnRzOiByZWFkb25seSBQZW5kaW5nQXR0YWNobWVudFtdO1xuICB9O1xuXG5leHBvcnQgdHlwZSBFZGl0Q29tcG9zZXJTdGF0ZSA9IExlZ2FjeUVkaXRDb21wb3NlclN0YXRlICZcbiAgQmFzZUNvbXBvc2VyU3RhdGUgJiB7XG4gICAgdHlwZTogXCJlZGl0XCI7XG4gIH07XG5cbmV4cG9ydCB0eXBlIENvbXBvc2VyU3RhdGUgPSBUaHJlYWRDb21wb3NlclN0YXRlIHwgRWRpdENvbXBvc2VyU3RhdGU7XG5cbmNvbnN0IE1FVEhPRF9OT1RfU1VQUE9SVEVEID0gKCkgPT4ge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJDb21wb3NlciBpcyBub3QgYXZhaWxhYmxlXCIpO1xufTtcbmNvbnN0IEVNUFRZX0FSUkFZID0gT2JqZWN0LmZyZWV6ZShbXSk7XG5jb25zdCBnZXRUaHJlYWRDb21wb3NlclN0YXRlID0gKFxuICBydW50aW1lOiBUaHJlYWRDb21wb3NlclJ1bnRpbWVDb3JlIHwgdW5kZWZpbmVkLFxuKTogVGhyZWFkQ29tcG9zZXJTdGF0ZSA9PiB7XG4gIHJldHVybiBPYmplY3QuZnJlZXplKHtcbiAgICB0eXBlOiBcInRocmVhZFwiLFxuXG4gICAgaXNFZGl0aW5nOiBydW50aW1lPy5pc0VkaXRpbmcgPz8gZmFsc2UsXG4gICAgY2FuQ2FuY2VsOiBydW50aW1lPy5jYW5DYW5jZWwgPz8gZmFsc2UsXG4gICAgaXNFbXB0eTogcnVudGltZT8uaXNFbXB0eSA/PyB0cnVlLFxuICAgIHRleHQ6IHJ1bnRpbWU/LnRleHQgPz8gXCJcIixcbiAgICBhdHRhY2htZW50czogcnVudGltZT8uYXR0YWNobWVudHMgPz8gRU1QVFlfQVJSQVksXG5cbiAgICB2YWx1ZTogcnVudGltZT8udGV4dCA/PyBcIlwiLFxuICAgIHNldFZhbHVlOiBydW50aW1lPy5zZXRUZXh0LmJpbmQocnVudGltZSkgPz8gTUVUSE9EX05PVF9TVVBQT1JURUQsXG4gICAgc2V0VGV4dDogcnVudGltZT8uc2V0VGV4dC5iaW5kKHJ1bnRpbWUpID8/IE1FVEhPRF9OT1RfU1VQUE9SVEVELFxuICAgIC8vIGVkaXQ6IGJlZ2luRWRpdCxcbiAgICBzZW5kOiBydW50aW1lPy5zZW5kLmJpbmQocnVudGltZSkgPz8gTUVUSE9EX05PVF9TVVBQT1JURUQsXG4gICAgY2FuY2VsOiBydW50aW1lPy5jYW5jZWwuYmluZChydW50aW1lKSA/PyBNRVRIT0RfTk9UX1NVUFBPUlRFRCxcbiAgICByZXNldDogcnVudGltZT8ucmVzZXQuYmluZChydW50aW1lKSA/PyBNRVRIT0RfTk9UX1NVUFBPUlRFRCxcblxuICAgIGFkZEF0dGFjaG1lbnQ6IHJ1bnRpbWU/LmFkZEF0dGFjaG1lbnQuYmluZChydW50aW1lKSA/PyBNRVRIT0RfTk9UX1NVUFBPUlRFRCxcbiAgICByZW1vdmVBdHRhY2htZW50OlxuICAgICAgcnVudGltZT8ucmVtb3ZlQXR0YWNobWVudC5iaW5kKHJ1bnRpbWUpID8/IE1FVEhPRF9OT1RfU1VQUE9SVEVELFxuICB9KTtcbn07XG5cbmNvbnN0IGdldEVkaXRDb21wb3NlclN0YXRlID0gKFxuICBydW50aW1lOiBDb21wb3NlclJ1bnRpbWVDb3JlIHwgdW5kZWZpbmVkLFxuICBiZWdpbkVkaXQ6ICgpID0+IHZvaWQsXG4pOiBFZGl0Q29tcG9zZXJTdGF0ZSA9PiB7XG4gIHJldHVybiBPYmplY3QuZnJlZXplKHtcbiAgICB0eXBlOiBcImVkaXRcIixcblxuICAgIGlzRWRpdGluZzogcnVudGltZT8uaXNFZGl0aW5nID8/IGZhbHNlLFxuICAgIGNhbkNhbmNlbDogcnVudGltZT8uY2FuQ2FuY2VsID8/IGZhbHNlLFxuICAgIGlzRW1wdHk6IHJ1bnRpbWU/LmlzRW1wdHkgPz8gdHJ1ZSxcbiAgICB0ZXh0OiBydW50aW1lPy50ZXh0ID8/IFwiXCIsXG4gICAgYXR0YWNobWVudHM6IHJ1bnRpbWU/LmF0dGFjaG1lbnRzID8/IEVNUFRZX0FSUkFZLFxuXG4gICAgdmFsdWU6IHJ1bnRpbWU/LnRleHQgPz8gXCJcIixcbiAgICBzZXRWYWx1ZTogcnVudGltZT8uc2V0VGV4dC5iaW5kKHJ1bnRpbWUpID8/IE1FVEhPRF9OT1RfU1VQUE9SVEVELFxuICAgIHNldFRleHQ6IHJ1bnRpbWU/LnNldFRleHQuYmluZChydW50aW1lKSA/PyBNRVRIT0RfTk9UX1NVUFBPUlRFRCxcbiAgICBlZGl0OiBiZWdpbkVkaXQsXG4gICAgc2VuZDogcnVudGltZT8uc2VuZC5iaW5kKHJ1bnRpbWUpID8/IE1FVEhPRF9OT1RfU1VQUE9SVEVELFxuICAgIGNhbmNlbDogcnVudGltZT8uY2FuY2VsLmJpbmQocnVudGltZSkgPz8gTUVUSE9EX05PVF9TVVBQT1JURUQsXG4gIH0pO1xufTtcblxuZXhwb3J0IHR5cGUgQ29tcG9zZXJSdW50aW1lID0ge1xuICBwYXRoOiBDb21wb3NlclJ1bnRpbWVQYXRoO1xuICByZWFkb25seSB0eXBlOiBcImVkaXRcIiB8IFwidGhyZWFkXCI7XG4gIGdldFN0YXRlKCk6IENvbXBvc2VyU3RhdGU7XG5cbiAgLyoqIEBkZXByZWNhdGVkIFVzZSBgZ2V0U3RhdGUoKS5pc0VkaXRpbmdgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLiAqL1xuICByZWFkb25seSBpc0VkaXRpbmc6IGJvb2xlYW47XG5cbiAgLyoqIEBkZXByZWNhdGVkIFVzZSBgZ2V0U3RhdGUoKS5pc0VtcHR5YCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC4gKi9cbiAgcmVhZG9ubHkgaXNFbXB0eTogYm9vbGVhbjtcblxuICAvKiogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLmNhbkNhbmNlbGAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuICovXG4gIHJlYWRvbmx5IGNhbkNhbmNlbDogYm9vbGVhbjtcblxuICAvKiogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLnRleHRgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLiAqL1xuICByZWFkb25seSB0ZXh0OiBzdHJpbmc7XG5cbiAgLyoqIEBkZXByZWNhdGVkIFVzZSBgZ2V0U3RhdGUoKS5hdHRhY2htZW50c2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuICovXG4gIHJlYWRvbmx5IGF0dGFjaG1lbnRzOiByZWFkb25seSBBdHRhY2htZW50W107XG5cbiAgLyoqIEBkZXByZWNhdGVkIFVzZSBgZ2V0U3RhdGUoKS50ZXh0YCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC4gKi9cbiAgcmVhZG9ubHkgdmFsdWU6IHN0cmluZztcblxuICBzZXRUZXh0KHRleHQ6IHN0cmluZyk6IHZvaWQ7XG4gIHNldFZhbHVlKHRleHQ6IHN0cmluZyk6IHZvaWQ7XG5cbiAgZ2V0QXR0YWNobWVudEFjY2VwdCgpOiBzdHJpbmc7XG4gIGFkZEF0dGFjaG1lbnQoZmlsZTogRmlsZSk6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqIEBkZXByZWNhdGVkIFVzZSBgZ2V0QXR0YWNobWVudEJ5SWQoaWQpLnJlbW92ZUF0dGFjaG1lbnQoKWAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuICovXG4gIHJlbW92ZUF0dGFjaG1lbnQoYXR0YWNobWVudElkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKiBAZGVwcmVjYXRlZCBUaGlzIG1ldGhvZCB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuIFN1Ym1pdCBmZWVkYmFjayBpZiB5b3UgbmVlZCB0aGlzIGZ1bmN0aW9uYWxpdHkuICovXG4gIHJlc2V0KCk6IHZvaWQ7XG5cbiAgc2VuZCgpOiB2b2lkO1xuICBjYW5jZWwoKTogdm9pZDtcbiAgc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogVW5zdWJzY3JpYmU7XG4gIGdldEF0dGFjaG1lbnRCeUluZGV4KGlkeDogbnVtYmVyKTogQXR0YWNobWVudFJ1bnRpbWU7XG59O1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ29tcG9zZXJSdW50aW1lSW1wbFxuICBpbXBsZW1lbnRzIENvbXBvc2VyUnVudGltZUNvcmUsIENvbXBvc2VyUnVudGltZVxue1xuICBwdWJsaWMgZ2V0IHBhdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NvcmUucGF0aDtcbiAgfVxuXG4gIHB1YmxpYyBhYnN0cmFjdCBnZXQgdHlwZSgpOiBcImVkaXRcIiB8IFwidGhyZWFkXCI7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIF9jb3JlOiBDb21wb3NlclJ1bnRpbWVDb3JlQmluZGluZykge31cblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLmlzRWRpdGluZ2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBwdWJsaWMgZ2V0IGlzRWRpdGluZygpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRTdGF0ZSgpLmlzRWRpdGluZztcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldFN0YXRlKCkuaXNFbXB0eWAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBwdWJsaWMgZ2V0IGlzRW1wdHkoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0U3RhdGUoKS5pc0VtcHR5O1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0U3RhdGUoKS5jYW5DYW5jZWxgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgcHVibGljIGdldCBjYW5DYW5jZWwoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0U3RhdGUoKS5jYW5DYW5jZWw7XG4gIH1cblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLnRleHRgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgcHVibGljIGdldCB0ZXh0KCkge1xuICAgIHJldHVybiB0aGlzLmdldFN0YXRlKCkudGV4dDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldFN0YXRlKCkuYXR0YWNobWVudHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgcHVibGljIGdldCBhdHRhY2htZW50cygpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRTdGF0ZSgpLmF0dGFjaG1lbnRzO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0U3RhdGUoKS50ZXh0YCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHB1YmxpYyBnZXQgdmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMudGV4dDtcbiAgfVxuXG4gIHB1YmxpYyBhYnN0cmFjdCBnZXRTdGF0ZSgpOiBDb21wb3NlclN0YXRlO1xuXG4gIHB1YmxpYyBzZXRUZXh0KHRleHQ6IHN0cmluZykge1xuICAgIGNvbnN0IGNvcmUgPSB0aGlzLl9jb3JlLmdldFN0YXRlKCk7XG4gICAgaWYgKCFjb3JlKSB0aHJvdyBuZXcgRXJyb3IoXCJDb21wb3NlciBpcyBub3QgYXZhaWxhYmxlXCIpO1xuICAgIGNvcmUuc2V0VGV4dCh0ZXh0KTtcbiAgfVxuXG4gIHB1YmxpYyBzZXRWYWx1ZSh0ZXh0OiBzdHJpbmcpIHtcbiAgICB0aGlzLnNldFRleHQodGV4dCk7XG4gIH1cblxuICBwdWJsaWMgYWRkQXR0YWNobWVudChmaWxlOiBGaWxlKSB7XG4gICAgY29uc3QgY29yZSA9IHRoaXMuX2NvcmUuZ2V0U3RhdGUoKTtcbiAgICBpZiAoIWNvcmUpIHRocm93IG5ldyBFcnJvcihcIkNvbXBvc2VyIGlzIG5vdCBhdmFpbGFibGVcIik7XG4gICAgcmV0dXJuIGNvcmUuYWRkQXR0YWNobWVudChmaWxlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldEF0dGFjaG1lbnRCeUlkKGlkKS5yZW1vdmVBdHRhY2htZW50KClgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgcHVibGljIHJlbW92ZUF0dGFjaG1lbnQoYXR0YWNobWVudElkOiBzdHJpbmcpIHtcbiAgICBjb25zdCBjb3JlID0gdGhpcy5fY29yZS5nZXRTdGF0ZSgpO1xuICAgIGlmICghY29yZSkgdGhyb3cgbmV3IEVycm9yKFwiQ29tcG9zZXIgaXMgbm90IGF2YWlsYWJsZVwiKTtcbiAgICByZXR1cm4gY29yZS5yZW1vdmVBdHRhY2htZW50KGF0dGFjaG1lbnRJZCk7XG4gIH1cblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVGhpcyBtZXRob2Qgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLiBTdWJtaXQgZmVlZGJhY2sgaWYgeW91IG5lZWQgdGhpcyBmdW5jdGlvbmFsaXR5LlxuICAgKi9cbiAgcHVibGljIHJlc2V0KCkge1xuICAgIGNvbnN0IGNvcmUgPSB0aGlzLl9jb3JlLmdldFN0YXRlKCk7XG4gICAgaWYgKCFjb3JlKSB0aHJvdyBuZXcgRXJyb3IoXCJDb21wb3NlciBpcyBub3QgYXZhaWxhYmxlXCIpO1xuICAgIGNvcmUucmVzZXQoKTtcbiAgfVxuXG4gIHB1YmxpYyBzZW5kKCkge1xuICAgIGNvbnN0IGNvcmUgPSB0aGlzLl9jb3JlLmdldFN0YXRlKCk7XG4gICAgaWYgKCFjb3JlKSB0aHJvdyBuZXcgRXJyb3IoXCJDb21wb3NlciBpcyBub3QgYXZhaWxhYmxlXCIpO1xuICAgIGNvcmUuc2VuZCgpO1xuICB9XG5cbiAgcHVibGljIGNhbmNlbCgpIHtcbiAgICBjb25zdCBjb3JlID0gdGhpcy5fY29yZS5nZXRTdGF0ZSgpO1xuICAgIGlmICghY29yZSkgdGhyb3cgbmV3IEVycm9yKFwiQ29tcG9zZXIgaXMgbm90IGF2YWlsYWJsZVwiKTtcbiAgICBjb3JlLmNhbmNlbCgpO1xuICB9XG5cbiAgcHVibGljIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiB0aGlzLl9jb3JlLnN1YnNjcmliZShjYWxsYmFjayk7XG4gIH1cblxuICBwdWJsaWMgZ2V0QXR0YWNobWVudEFjY2VwdCgpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNvcmUgPSB0aGlzLl9jb3JlLmdldFN0YXRlKCk7XG4gICAgaWYgKCFjb3JlKSB0aHJvdyBuZXcgRXJyb3IoXCJDb21wb3NlciBpcyBub3QgYXZhaWxhYmxlXCIpO1xuICAgIHJldHVybiBjb3JlLmdldEF0dGFjaG1lbnRBY2NlcHQoKTtcbiAgfVxuXG4gIHB1YmxpYyBhYnN0cmFjdCBnZXRBdHRhY2htZW50QnlJbmRleChpZHg6IG51bWJlcik6IEF0dGFjaG1lbnRSdW50aW1lO1xufVxuXG5leHBvcnQgdHlwZSBUaHJlYWRDb21wb3NlclJ1bnRpbWUgPSBPbWl0PFxuICBDb21wb3NlclJ1bnRpbWUsXG4gIFwiZ2V0U3RhdGVcIiB8IFwiZ2V0QXR0YWNobWVudEJ5SW5kZXhcIlxuPiAmIHtcbiAgcmVhZG9ubHkgcGF0aDogQ29tcG9zZXJSdW50aW1lUGF0aCAmIHsgY29tcG9zZXJTb3VyY2U6IFwidGhyZWFkXCIgfTtcbiAgcmVhZG9ubHkgdHlwZTogXCJ0aHJlYWRcIjtcbiAgZ2V0U3RhdGUoKTogVGhyZWFkQ29tcG9zZXJTdGF0ZTtcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLmF0dGFjaG1lbnRzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIGF0dGFjaG1lbnRzOiByZWFkb25seSBQZW5kaW5nQXR0YWNobWVudFtdO1xuXG4gIGdldEF0dGFjaG1lbnRCeUluZGV4KFxuICAgIGlkeDogbnVtYmVyLFxuICApOiBBdHRhY2htZW50UnVudGltZSAmIHsgc291cmNlOiBcInRocmVhZC1jb21wb3NlclwiIH07XG59O1xuXG5leHBvcnQgY2xhc3MgVGhyZWFkQ29tcG9zZXJSdW50aW1lSW1wbFxuICBleHRlbmRzIENvbXBvc2VyUnVudGltZUltcGxcbiAgaW1wbGVtZW50cyBUaHJlYWRDb21wb3NlclJ1bnRpbWUsIFRocmVhZENvbXBvc2VyU3RhdGVcbntcbiAgcHVibGljIG92ZXJyaWRlIGdldCBwYXRoKCkge1xuICAgIHJldHVybiB0aGlzLl9jb3JlLnBhdGggYXMgQ29tcG9zZXJSdW50aW1lUGF0aCAmIHtcbiAgICAgIGNvbXBvc2VyU291cmNlOiBcInRocmVhZFwiO1xuICAgIH07XG4gIH1cblxuICBwdWJsaWMgZ2V0IHR5cGUoKSB7XG4gICAgcmV0dXJuIFwidGhyZWFkXCIgYXMgY29uc3Q7XG4gIH1cblxuICBwcml2YXRlIF9nZXRTdGF0ZTtcblxuICBjb25zdHJ1Y3Rvcihjb3JlOiBUaHJlYWRDb21wb3NlclJ1bnRpbWVDb3JlQmluZGluZykge1xuICAgIGNvbnN0IHN0YXRlQmluZGluZyA9IG5ldyBMYXp5TWVtb2l6ZVN1YmplY3Qoe1xuICAgICAgcGF0aDogY29yZS5wYXRoLFxuICAgICAgZ2V0U3RhdGU6ICgpID0+IGdldFRocmVhZENvbXBvc2VyU3RhdGUoY29yZS5nZXRTdGF0ZSgpKSxcbiAgICAgIHN1YnNjcmliZTogKGNhbGxiYWNrKSA9PiBjb3JlLnN1YnNjcmliZShjYWxsYmFjayksXG4gICAgfSk7XG4gICAgc3VwZXIoe1xuICAgICAgcGF0aDogY29yZS5wYXRoLFxuICAgICAgZ2V0U3RhdGU6ICgpID0+IGNvcmUuZ2V0U3RhdGUoKSxcbiAgICAgIHN1YnNjcmliZTogKGNhbGxiYWNrKSA9PiBzdGF0ZUJpbmRpbmcuc3Vic2NyaWJlKGNhbGxiYWNrKSxcbiAgICB9KTtcbiAgICB0aGlzLl9nZXRTdGF0ZSA9IHN0YXRlQmluZGluZy5nZXRTdGF0ZS5iaW5kKHN0YXRlQmluZGluZyk7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0IGF0dGFjaG1lbnRzKCkge1xuICAgIHJldHVybiB0aGlzLmdldFN0YXRlKCk/LmF0dGFjaG1lbnRzID8/IEVNUFRZX0FSUkFZO1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldFN0YXRlKCk6IFRocmVhZENvbXBvc2VyU3RhdGUge1xuICAgIHJldHVybiB0aGlzLl9nZXRTdGF0ZSgpO1xuICB9XG5cbiAgcHVibGljIGdldEF0dGFjaG1lbnRCeUluZGV4KGlkeDogbnVtYmVyKSB7XG4gICAgcmV0dXJuIG5ldyBUaHJlYWRDb21wb3NlckF0dGFjaG1lbnRSdW50aW1lSW1wbChcbiAgICAgIG5ldyBTaGFsbG93TWVtb2l6ZVN1YmplY3Qoe1xuICAgICAgICBwYXRoOiB7XG4gICAgICAgICAgLi4udGhpcy5wYXRoLFxuICAgICAgICAgIGF0dGFjaG1lbnRTb3VyY2U6IFwidGhyZWFkLWNvbXBvc2VyXCIsXG4gICAgICAgICAgYXR0YWNobWVudFNlbGVjdG9yOiB7IHR5cGU6IFwiaW5kZXhcIiwgaW5kZXg6IGlkeCB9LFxuICAgICAgICAgIHJlZjogdGhpcy5wYXRoLnJlZiArIGAke3RoaXMucGF0aC5yZWZ9LmF0dGFjaG1lbnRzWyR7aWR4fV1gLFxuICAgICAgICB9LFxuICAgICAgICBnZXRTdGF0ZTogKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGF0dGFjaG1lbnRzID0gdGhpcy5nZXRTdGF0ZSgpLmF0dGFjaG1lbnRzO1xuICAgICAgICAgIGNvbnN0IGF0dGFjaG1lbnQgPSBhdHRhY2htZW50c1tpZHhdO1xuICAgICAgICAgIGlmICghYXR0YWNobWVudCkgcmV0dXJuIFNLSVBfVVBEQVRFO1xuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLmF0dGFjaG1lbnQsXG4gICAgICAgICAgICBhdHRhY2htZW50OiBhdHRhY2htZW50LFxuICAgICAgICAgICAgc291cmNlOiBcInRocmVhZC1jb21wb3NlclwiLFxuICAgICAgICAgIH0gc2F0aXNmaWVzIEF0dGFjaG1lbnRTdGF0ZSAmIHsgc291cmNlOiBcInRocmVhZC1jb21wb3NlclwiIH07XG4gICAgICAgIH0sXG4gICAgICAgIHN1YnNjcmliZTogKGNhbGxiYWNrKSA9PiB0aGlzLl9jb3JlLnN1YnNjcmliZShjYWxsYmFjayksXG4gICAgICB9KSxcbiAgICAgIHRoaXMuX2NvcmUsXG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBFZGl0Q29tcG9zZXJSdW50aW1lID0gT21pdDxcbiAgQ29tcG9zZXJSdW50aW1lLFxuICBcImdldFN0YXRlXCIgfCBcImdldEF0dGFjaG1lbnRCeUluZGV4XCJcbj4gJiB7XG4gIHJlYWRvbmx5IHBhdGg6IENvbXBvc2VyUnVudGltZVBhdGggJiB7IGNvbXBvc2VyU291cmNlOiBcImVkaXRcIiB9O1xuICByZWFkb25seSB0eXBlOiBcImVkaXRcIjtcblxuICBnZXRTdGF0ZSgpOiBFZGl0Q29tcG9zZXJTdGF0ZTtcbiAgYmVnaW5FZGl0KCk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgYmVnaW5FZGl0KClgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgZWRpdCgpOiB2b2lkO1xuXG4gIGdldEF0dGFjaG1lbnRCeUluZGV4KFxuICAgIGlkeDogbnVtYmVyLFxuICApOiBBdHRhY2htZW50UnVudGltZSAmIHsgc291cmNlOiBcImVkaXQtY29tcG9zZXJcIiB9O1xufTtcblxuZXhwb3J0IGNsYXNzIEVkaXRDb21wb3NlclJ1bnRpbWVJbXBsXG4gIGV4dGVuZHMgQ29tcG9zZXJSdW50aW1lSW1wbFxuICBpbXBsZW1lbnRzIEVkaXRDb21wb3NlclJ1bnRpbWUsIEVkaXRDb21wb3NlclN0YXRlXG57XG4gIHB1YmxpYyBvdmVycmlkZSBnZXQgcGF0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5fY29yZS5wYXRoIGFzIENvbXBvc2VyUnVudGltZVBhdGggJiB7IGNvbXBvc2VyU291cmNlOiBcImVkaXRcIiB9O1xuICB9XG5cbiAgcHVibGljIGdldCB0eXBlKCkge1xuICAgIHJldHVybiBcImVkaXRcIiBhcyBjb25zdDtcbiAgfVxuXG4gIHByaXZhdGUgX2dldFN0YXRlO1xuICBjb25zdHJ1Y3RvcihcbiAgICBjb3JlOiBFZGl0Q29tcG9zZXJSdW50aW1lQ29yZUJpbmRpbmcsXG4gICAgcHJpdmF0ZSBfYmVnaW5FZGl0OiAoKSA9PiB2b2lkLFxuICApIHtcbiAgICBjb25zdCBzdGF0ZUJpbmRpbmcgPSBuZXcgTGF6eU1lbW9pemVTdWJqZWN0KHtcbiAgICAgIHBhdGg6IGNvcmUucGF0aCxcbiAgICAgIGdldFN0YXRlOiAoKSA9PiBnZXRFZGl0Q29tcG9zZXJTdGF0ZShjb3JlLmdldFN0YXRlKCksIHRoaXMuX2JlZ2luRWRpdCksXG4gICAgICBzdWJzY3JpYmU6IChjYWxsYmFjaykgPT4gY29yZS5zdWJzY3JpYmUoY2FsbGJhY2spLFxuICAgIH0pO1xuXG4gICAgc3VwZXIoe1xuICAgICAgcGF0aDogY29yZS5wYXRoLFxuICAgICAgZ2V0U3RhdGU6ICgpID0+IGNvcmUuZ2V0U3RhdGUoKSxcbiAgICAgIHN1YnNjcmliZTogKGNhbGxiYWNrKSA9PiBzdGF0ZUJpbmRpbmcuc3Vic2NyaWJlKGNhbGxiYWNrKSxcbiAgICB9KTtcblxuICAgIHRoaXMuX2dldFN0YXRlID0gc3RhdGVCaW5kaW5nLmdldFN0YXRlLmJpbmQoc3RhdGVCaW5kaW5nKTtcbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBnZXRTdGF0ZSgpOiBFZGl0Q29tcG9zZXJTdGF0ZSB7XG4gICAgcmV0dXJuIHRoaXMuX2dldFN0YXRlKCk7XG4gIH1cblxuICBwdWJsaWMgYmVnaW5FZGl0KCkge1xuICAgIHRoaXMuX2JlZ2luRWRpdCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgYmVnaW5FZGl0KClgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgcHVibGljIGVkaXQoKSB7XG4gICAgdGhpcy5iZWdpbkVkaXQoKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRBdHRhY2htZW50QnlJbmRleChpZHg6IG51bWJlcikge1xuICAgIHJldHVybiBuZXcgRWRpdENvbXBvc2VyQXR0YWNobWVudFJ1bnRpbWVJbXBsKFxuICAgICAgbmV3IFNoYWxsb3dNZW1vaXplU3ViamVjdCh7XG4gICAgICAgIHBhdGg6IHtcbiAgICAgICAgICAuLi50aGlzLnBhdGgsXG4gICAgICAgICAgYXR0YWNobWVudFNvdXJjZTogXCJlZGl0LWNvbXBvc2VyXCIsXG4gICAgICAgICAgYXR0YWNobWVudFNlbGVjdG9yOiB7IHR5cGU6IFwiaW5kZXhcIiwgaW5kZXg6IGlkeCB9LFxuICAgICAgICAgIHJlZjogdGhpcy5wYXRoLnJlZiArIGAke3RoaXMucGF0aC5yZWZ9LmF0dGFjaG1lbnRzWyR7aWR4fV1gLFxuICAgICAgICB9LFxuICAgICAgICBnZXRTdGF0ZTogKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGF0dGFjaG1lbnRzID0gdGhpcy5nZXRTdGF0ZSgpLmF0dGFjaG1lbnRzO1xuICAgICAgICAgIGNvbnN0IGF0dGFjaG1lbnQgPSBhdHRhY2htZW50c1tpZHhdO1xuICAgICAgICAgIGlmICghYXR0YWNobWVudCkgcmV0dXJuIFNLSVBfVVBEQVRFO1xuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLmF0dGFjaG1lbnQsXG4gICAgICAgICAgICBhdHRhY2htZW50OiBhdHRhY2htZW50LFxuICAgICAgICAgICAgc291cmNlOiBcImVkaXQtY29tcG9zZXJcIixcbiAgICAgICAgICB9IHNhdGlzZmllcyBBdHRhY2htZW50U3RhdGUgJiB7IHNvdXJjZTogXCJlZGl0LWNvbXBvc2VyXCIgfTtcbiAgICAgICAgfSxcbiAgICAgICAgc3Vic2NyaWJlOiAoY2FsbGJhY2spID0+IHRoaXMuX2NvcmUuc3Vic2NyaWJlKGNhbGxiYWNrKSxcbiAgICAgIH0pLFxuICAgICAgdGhpcy5fY29yZSxcbiAgICApO1xuICB9XG59XG4iLCJpbXBvcnQgeyBVbnN1YnNjcmliZSB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuaW1wb3J0IHsgQmFzZVN1YmplY3QgfSBmcm9tIFwiLi9CYXNlU3ViamVjdFwiO1xuaW1wb3J0IHtcbiAgTmVzdGVkU3Vic2NyaWJhYmxlLFxuICBTdWJzY3JpYmFibGUsXG4gIFN1YnNjcmliYWJsZVdpdGhTdGF0ZSxcbn0gZnJvbSBcIi4vU3Vic2NyaWJhYmxlXCI7XG5cbmV4cG9ydCBjbGFzcyBOZXN0ZWRTdWJzY3JpcHRpb25TdWJqZWN0PFRTdGF0ZSBleHRlbmRzIFN1YnNjcmliYWJsZSB8IHVuZGVmaW5lZCwgVFBhdGg+XG4gIGV4dGVuZHMgQmFzZVN1YmplY3RcbiAgaW1wbGVtZW50cyBTdWJzY3JpYmFibGVXaXRoU3RhdGU8VFN0YXRlLCBUUGF0aD4sIE5lc3RlZFN1YnNjcmliYWJsZTxUU3RhdGUsIFRQYXRoPlxue1xuICBwdWJsaWMgZ2V0IHBhdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuYmluZGluZy5wYXRoO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBiaW5kaW5nOiBOZXN0ZWRTdWJzY3JpYmFibGU8VFN0YXRlLCBUUGF0aD4pIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgcHVibGljIGdldFN0YXRlKCkge1xuICAgIHJldHVybiB0aGlzLmJpbmRpbmcuZ2V0U3RhdGUoKTtcbiAgfVxuXG4gIHB1YmxpYyBvdXRlclN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiB0aGlzLmJpbmRpbmcuc3Vic2NyaWJlKGNhbGxiYWNrKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBfY29ubmVjdCgpOiBVbnN1YnNjcmliZSB7XG4gICAgY29uc3QgY2FsbGJhY2sgPSAoKSA9PiB7XG4gICAgICB0aGlzLm5vdGlmeVN1YnNjcmliZXJzKCk7XG4gICAgfTtcblxuICAgIGxldCBsYXN0U3RhdGUgPSB0aGlzLmJpbmRpbmcuZ2V0U3RhdGUoKTtcbiAgICBsZXQgaW5uZXJVbnN1YnNjcmliZSA9IGxhc3RTdGF0ZT8uc3Vic2NyaWJlKGNhbGxiYWNrKTtcbiAgICBjb25zdCBvblJ1bnRpbWVVcGRhdGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCBuZXdTdGF0ZSA9IHRoaXMuYmluZGluZy5nZXRTdGF0ZSgpO1xuICAgICAgaWYgKG5ld1N0YXRlID09PSBsYXN0U3RhdGUpIHJldHVybjtcbiAgICAgIGxhc3RTdGF0ZSA9IG5ld1N0YXRlO1xuXG4gICAgICBpbm5lclVuc3Vic2NyaWJlPy4oKTtcbiAgICAgIGlubmVyVW5zdWJzY3JpYmUgPSB0aGlzLmJpbmRpbmcuZ2V0U3RhdGUoKT8uc3Vic2NyaWJlKGNhbGxiYWNrKTtcblxuICAgICAgY2FsbGJhY2soKTtcbiAgICB9O1xuXG4gICAgY29uc3Qgb3V0ZXJVbnN1YnNjcmliZSA9IHRoaXMub3V0ZXJTdWJzY3JpYmUob25SdW50aW1lVXBkYXRlKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgb3V0ZXJVbnN1YnNjcmliZT8uKCk7XG4gICAgICBpbm5lclVuc3Vic2NyaWJlPy4oKTtcbiAgICB9O1xuICB9XG59XG4iLCJpbXBvcnQge1xuICBTcGVlY2hTdGF0ZSxcbiAgU3VibWl0dGVkRmVlZGJhY2ssXG59IGZyb20gXCIuLi9ydW50aW1lcy9jb3JlL1RocmVhZFJ1bnRpbWVDb3JlXCI7XG5pbXBvcnQge1xuICBUaHJlYWRNZXNzYWdlLFxuICBUaHJlYWRBc3Npc3RhbnRDb250ZW50UGFydCxcbiAgVGhyZWFkVXNlckNvbnRlbnRQYXJ0LFxuICBVbnN1YnNjcmliZSxcbn0gZnJvbSBcIi4uL3R5cGVzXCI7XG5pbXBvcnQge1xuICBDb250ZW50UGFydFN0YXR1cyxcbiAgVG9vbENhbGxDb250ZW50UGFydFN0YXR1cyxcbn0gZnJvbSBcIi4uL3R5cGVzL0Fzc2lzdGFudFR5cGVzXCI7XG5pbXBvcnQgeyBnZXRUaHJlYWRNZXNzYWdlVGV4dCB9IGZyb20gXCIuLi91dGlscy9nZXRUaHJlYWRNZXNzYWdlVGV4dFwiO1xuaW1wb3J0IHtcbiAgQXR0YWNobWVudFJ1bnRpbWUsXG4gIEF0dGFjaG1lbnRTdGF0ZSxcbiAgTWVzc2FnZUF0dGFjaG1lbnRSdW50aW1lSW1wbCxcbn0gZnJvbSBcIi4vQXR0YWNobWVudFJ1bnRpbWVcIjtcbmltcG9ydCB7XG4gIEVkaXRDb21wb3NlclJ1bnRpbWUsXG4gIEVkaXRDb21wb3NlclJ1bnRpbWVJbXBsLFxufSBmcm9tIFwiLi9Db21wb3NlclJ1bnRpbWVcIjtcbmltcG9ydCB7XG4gIENvbnRlbnRQYXJ0UnVudGltZSxcbiAgQ29udGVudFBhcnRSdW50aW1lSW1wbCxcbiAgQ29udGVudFBhcnRTdGF0ZSxcbn0gZnJvbSBcIi4vQ29udGVudFBhcnRSdW50aW1lXCI7XG5pbXBvcnQgeyBNZXNzYWdlUnVudGltZVBhdGggfSBmcm9tIFwiLi9QYXRoVHlwZXNcIjtcbmltcG9ydCB7IFRocmVhZFJ1bnRpbWVDb3JlQmluZGluZyB9IGZyb20gXCIuL1RocmVhZFJ1bnRpbWVcIjtcbmltcG9ydCB7IE5lc3RlZFN1YnNjcmlwdGlvblN1YmplY3QgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUvTmVzdGVkU3Vic2NyaXB0aW9uU3ViamVjdFwiO1xuaW1wb3J0IHsgU0tJUF9VUERBVEUgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUvU0tJUF9VUERBVEVcIjtcbmltcG9ydCB7IFNoYWxsb3dNZW1vaXplU3ViamVjdCB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS9TaGFsbG93TWVtb2l6ZVN1YmplY3RcIjtcbmltcG9ydCB7IFN1YnNjcmliYWJsZVdpdGhTdGF0ZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS9TdWJzY3JpYmFibGVcIjtcblxuY29uc3QgQ09NUExFVEVfU1RBVFVTOiBDb250ZW50UGFydFN0YXR1cyA9IHtcbiAgdHlwZTogXCJjb21wbGV0ZVwiLFxufTtcblxuZXhwb3J0IGNvbnN0IHRvQ29udGVudFBhcnRTdGF0dXMgPSAoXG4gIG1lc3NhZ2U6IFRocmVhZE1lc3NhZ2UsXG4gIHBhcnRJbmRleDogbnVtYmVyLFxuICBwYXJ0OiBUaHJlYWRVc2VyQ29udGVudFBhcnQgfCBUaHJlYWRBc3Npc3RhbnRDb250ZW50UGFydCxcbik6IFRvb2xDYWxsQ29udGVudFBhcnRTdGF0dXMgPT4ge1xuICBpZiAobWVzc2FnZS5yb2xlICE9PSBcImFzc2lzdGFudFwiKSByZXR1cm4gQ09NUExFVEVfU1RBVFVTO1xuXG4gIGNvbnN0IGlzTGFzdFBhcnQgPSBwYXJ0SW5kZXggPT09IE1hdGgubWF4KDAsIG1lc3NhZ2UuY29udGVudC5sZW5ndGggLSAxKTtcbiAgaWYgKHBhcnQudHlwZSAhPT0gXCJ0b29sLWNhbGxcIikge1xuICAgIGlmIChcbiAgICAgIFwicmVhc29uXCIgaW4gbWVzc2FnZS5zdGF0dXMgJiZcbiAgICAgIG1lc3NhZ2Uuc3RhdHVzLnJlYXNvbiA9PT0gXCJ0b29sLWNhbGxzXCIgJiZcbiAgICAgIGlzTGFzdFBhcnRcbiAgICApXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiRW5jb3VudGVyZWQgdW5leHBlY3RlZCByZXF1aXJlcy1hY3Rpb24gc3RhdHVzLiBUaGlzIGlzIGxpa2VseSBhbiBpbnRlcm5hbCBidWcgaW4gYXNzaXN0YW50LXVpLlwiLFxuICAgICAgKTtcblxuICAgIHJldHVybiBpc0xhc3RQYXJ0ID8gKG1lc3NhZ2Uuc3RhdHVzIGFzIENvbnRlbnRQYXJ0U3RhdHVzKSA6IENPTVBMRVRFX1NUQVRVUztcbiAgfVxuXG4gIGlmICghIXBhcnQucmVzdWx0KSB7XG4gICAgcmV0dXJuIENPTVBMRVRFX1NUQVRVUztcbiAgfVxuXG4gIHJldHVybiBtZXNzYWdlLnN0YXR1cyBhcyBUb29sQ2FsbENvbnRlbnRQYXJ0U3RhdHVzO1xufTtcblxuZXhwb3J0IGNvbnN0IEVNUFRZX0NPTlRFTlQgPSBPYmplY3QuZnJlZXplKHsgdHlwZTogXCJ0ZXh0XCIsIHRleHQ6IFwiXCIgfSk7XG5cbmNvbnN0IGdldENvbnRlbnRQYXJ0U3RhdGUgPSAoXG4gIG1lc3NhZ2U6IE1lc3NhZ2VTdGF0ZSxcbiAgcGFydEluZGV4OiBudW1iZXIsXG4pOiBDb250ZW50UGFydFN0YXRlIHwgU0tJUF9VUERBVEUgPT4ge1xuICBsZXQgcGFydCA9IG1lc3NhZ2UuY29udGVudFtwYXJ0SW5kZXhdO1xuICBpZiAoIXBhcnQpIHtcbiAgICAvLyBmb3IgZW1wdHkgbWVzc2FnZXMsIHNob3cgYW4gZW1wdHkgdGV4dCBjb250ZW50IHBhcnRcbiAgICBpZiAobWVzc2FnZS5jb250ZW50Lmxlbmd0aCA9PT0gMCAmJiBwYXJ0SW5kZXggPT09IDApIHtcbiAgICAgIHBhcnQgPSBFTVBUWV9DT05URU5UO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gU0tJUF9VUERBVEU7XG4gICAgfVxuICB9IGVsc2UgaWYgKFxuICAgIG1lc3NhZ2UuY29udGVudC5sZW5ndGggPT09IDEgJiZcbiAgICBwYXJ0LnR5cGUgPT09IFwidGV4dFwiICYmXG4gICAgcGFydC50ZXh0Lmxlbmd0aCA9PT0gMFxuICApIHtcbiAgICAvLyBlbnN1cmUgcmVmZXJlbmNlIGVxdWFsaXR5IGZvciBlcXVpdmFsZW50IGVtcHR5IHRleHQgcGFydHNcbiAgICBwYXJ0ID0gRU1QVFlfQ09OVEVOVDtcbiAgfVxuXG4gIC8vIGlmIHRoZSBjb250ZW50IHBhcnQgaXMgdGhlIHNhbWUsIGRvbid0IHVwZGF0ZVxuICBjb25zdCBzdGF0dXMgPSB0b0NvbnRlbnRQYXJ0U3RhdHVzKG1lc3NhZ2UsIHBhcnRJbmRleCwgcGFydCk7XG4gIHJldHVybiBPYmplY3QuZnJlZXplKHsgLi4ucGFydCwgcGFydCwgc3RhdHVzIH0pO1xufTtcblxuZXhwb3J0IHR5cGUgTWVzc2FnZVN0YXRlID0gVGhyZWFkTWVzc2FnZSAmIHtcbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFlvdSBjYW4gZGlyZWN0bHkgYWNjZXNzIG1lc3NhZ2UgZmllbGRzIGluIHRoZSBzdGF0ZS4gUmVwbGFjZSBgLm1lc3NhZ2UuY29udGVudGAgd2l0aCBgLmNvbnRlbnRgIGV0Yy4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBtZXNzYWdlOiBUaHJlYWRNZXNzYWdlO1xuICBwYXJlbnRJZDogc3RyaW5nIHwgbnVsbDtcbiAgaXNMYXN0OiBib29sZWFuO1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBicmFuY2hOdW1iZXJgIGFuZCBgYnJhbmNoQ291bnRgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgYnJhbmNoZXM6IHJlYWRvbmx5IHN0cmluZ1tdO1xuXG4gIGJyYW5jaE51bWJlcjogbnVtYmVyO1xuICBicmFuY2hDb3VudDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBUaGlzIEFQSSBpcyBzdGlsbCB1bmRlciBhY3RpdmUgZGV2ZWxvcG1lbnQgYW5kIG1pZ2h0IGNoYW5nZSB3aXRob3V0IG5vdGljZS5cbiAgICovXG4gIHNwZWVjaDogU3BlZWNoU3RhdGUgfCB1bmRlZmluZWQ7XG4gIHN1Ym1pdHRlZEZlZWRiYWNrOiBTdWJtaXR0ZWRGZWVkYmFjayB8IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCB0eXBlIE1lc3NhZ2VTdGF0ZUJpbmRpbmcgPSBTdWJzY3JpYmFibGVXaXRoU3RhdGU8XG4gIE1lc3NhZ2VTdGF0ZSxcbiAgTWVzc2FnZVJ1bnRpbWVQYXRoXG4+O1xuXG5leHBvcnQgdHlwZSBNZXNzYWdlUnVudGltZSA9IHtcbiAgcmVhZG9ubHkgcGF0aDogTWVzc2FnZVJ1bnRpbWVQYXRoO1xuXG4gIHJlYWRvbmx5IGNvbXBvc2VyOiBFZGl0Q29tcG9zZXJSdW50aW1lO1xuXG4gIGdldFN0YXRlKCk6IE1lc3NhZ2VTdGF0ZTtcbiAgcmVsb2FkKCk6IHZvaWQ7XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBUaGlzIEFQSSBpcyBzdGlsbCB1bmRlciBhY3RpdmUgZGV2ZWxvcG1lbnQgYW5kIG1pZ2h0IGNoYW5nZSB3aXRob3V0IG5vdGljZS5cbiAgICovXG4gIHNwZWFrKCk6IHZvaWQ7XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBUaGlzIEFQSSBpcyBzdGlsbCB1bmRlciBhY3RpdmUgZGV2ZWxvcG1lbnQgYW5kIG1pZ2h0IGNoYW5nZSB3aXRob3V0IG5vdGljZS5cbiAgICovXG4gIHN0b3BTcGVha2luZygpOiB2b2lkO1xuICBzdWJtaXRGZWVkYmFjayh7IHR5cGUgfTogeyB0eXBlOiBcInBvc2l0aXZlXCIgfCBcIm5lZ2F0aXZlXCIgfSk6IHZvaWQ7XG4gIHN3aXRjaFRvQnJhbmNoKHtcbiAgICBwb3NpdGlvbixcbiAgICBicmFuY2hJZCxcbiAgfToge1xuICAgIHBvc2l0aW9uPzogXCJwcmV2aW91c1wiIHwgXCJuZXh0XCIgfCB1bmRlZmluZWQ7XG4gICAgYnJhbmNoSWQ/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIH0pOiB2b2lkO1xuICB1bnN0YWJsZV9nZXRDb3B5VGV4dCgpOiBzdHJpbmc7XG5cbiAgc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogVW5zdWJzY3JpYmU7XG5cbiAgZ2V0Q29udGVudFBhcnRCeUluZGV4KGlkeDogbnVtYmVyKTogQ29udGVudFBhcnRSdW50aW1lO1xuICBnZXRDb250ZW50UGFydEJ5VG9vbENhbGxJZCh0b29sQ2FsbElkOiBzdHJpbmcpOiBDb250ZW50UGFydFJ1bnRpbWU7XG5cbiAgZ2V0QXR0YWNobWVudEJ5SW5kZXgoaWR4OiBudW1iZXIpOiBBdHRhY2htZW50UnVudGltZSAmIHsgc291cmNlOiBcIm1lc3NhZ2VcIiB9O1xufTtcblxuZXhwb3J0IGNsYXNzIE1lc3NhZ2VSdW50aW1lSW1wbCBpbXBsZW1lbnRzIE1lc3NhZ2VSdW50aW1lIHtcbiAgcHVibGljIGdldCBwYXRoKCkge1xuICAgIHJldHVybiB0aGlzLl9jb3JlLnBhdGg7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIF9jb3JlOiBNZXNzYWdlU3RhdGVCaW5kaW5nLFxuICAgIHByaXZhdGUgX3RocmVhZEJpbmRpbmc6IFRocmVhZFJ1bnRpbWVDb3JlQmluZGluZyxcbiAgKSB7XG4gICAgdGhpcy5jb21wb3NlciA9IG5ldyBFZGl0Q29tcG9zZXJSdW50aW1lSW1wbChcbiAgICAgIG5ldyBOZXN0ZWRTdWJzY3JpcHRpb25TdWJqZWN0KHtcbiAgICAgICAgcGF0aDoge1xuICAgICAgICAgIC4uLnRoaXMucGF0aCxcbiAgICAgICAgICByZWY6IHRoaXMucGF0aC5yZWYgKyBgJHt0aGlzLnBhdGgucmVmfS5jb21wb3NlcmAsXG4gICAgICAgICAgY29tcG9zZXJTb3VyY2U6IFwiZWRpdFwiLFxuICAgICAgICB9LFxuICAgICAgICBnZXRTdGF0ZTogKCkgPT5cbiAgICAgICAgICB0aGlzLl90aHJlYWRCaW5kaW5nXG4gICAgICAgICAgICAuZ2V0U3RhdGUoKVxuICAgICAgICAgICAgLmdldEVkaXRDb21wb3Nlcih0aGlzLl9jb3JlLmdldFN0YXRlKCkuaWQpLFxuICAgICAgICBzdWJzY3JpYmU6IChjYWxsYmFjaykgPT4gdGhpcy5fdGhyZWFkQmluZGluZy5zdWJzY3JpYmUoY2FsbGJhY2spLFxuICAgICAgfSksXG4gICAgICAoKSA9PiB0aGlzLl90aHJlYWRCaW5kaW5nLmdldFN0YXRlKCkuYmVnaW5FZGl0KHRoaXMuX2NvcmUuZ2V0U3RhdGUoKS5pZCksXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBjb21wb3NlcjtcblxuICBwdWJsaWMgZ2V0U3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NvcmUuZ2V0U3RhdGUoKTtcbiAgfVxuXG4gIHB1YmxpYyByZWxvYWQoKSB7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLl9jb3JlLmdldFN0YXRlKCk7XG4gICAgaWYgKCFzdGF0ZSkgdGhyb3cgbmV3IEVycm9yKFwiTWVzc2FnZSBpcyBub3QgYXZhaWxhYmxlXCIpO1xuICAgIGlmIChzdGF0ZS5yb2xlICE9PSBcImFzc2lzdGFudFwiKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2FuIG9ubHkgcmVsb2FkIGFzc2lzdGFudCBtZXNzYWdlc1wiKTtcblxuICAgIHRoaXMuX3RocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKS5zdGFydFJ1bihzdGF0ZS5wYXJlbnRJZCk7XG4gIH1cblxuICBwdWJsaWMgc3BlYWsoKSB7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLl9jb3JlLmdldFN0YXRlKCk7XG4gICAgaWYgKCFzdGF0ZSkgdGhyb3cgbmV3IEVycm9yKFwiTWVzc2FnZSBpcyBub3QgYXZhaWxhYmxlXCIpO1xuXG4gICAgcmV0dXJuIHRoaXMuX3RocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKS5zcGVhayhzdGF0ZS5pZCk7XG4gIH1cblxuICBwdWJsaWMgc3RvcFNwZWFraW5nKCkge1xuICAgIGNvbnN0IHN0YXRlID0gdGhpcy5fY29yZS5nZXRTdGF0ZSgpO1xuICAgIGlmICghc3RhdGUpIHRocm93IG5ldyBFcnJvcihcIk1lc3NhZ2UgaXMgbm90IGF2YWlsYWJsZVwiKTtcblxuICAgIGNvbnN0IHRocmVhZCA9IHRoaXMuX3RocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKTtcbiAgICBpZiAodGhyZWFkLnNwZWVjaD8ubWVzc2FnZUlkID09PSBzdGF0ZS5pZCkge1xuICAgICAgdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLnN0b3BTcGVha2luZygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNZXNzYWdlIGlzIG5vdCBiZWluZyBzcG9rZW5cIik7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIHN1Ym1pdEZlZWRiYWNrKHsgdHlwZSB9OiB7IHR5cGU6IFwicG9zaXRpdmVcIiB8IFwibmVnYXRpdmVcIiB9KSB7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLl9jb3JlLmdldFN0YXRlKCk7XG4gICAgaWYgKCFzdGF0ZSkgdGhyb3cgbmV3IEVycm9yKFwiTWVzc2FnZSBpcyBub3QgYXZhaWxhYmxlXCIpO1xuXG4gICAgdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLnN1Ym1pdEZlZWRiYWNrKHtcbiAgICAgIG1lc3NhZ2VJZDogc3RhdGUuaWQsXG4gICAgICB0eXBlLFxuICAgIH0pO1xuICB9XG5cbiAgcHVibGljIHN3aXRjaFRvQnJhbmNoKHtcbiAgICBwb3NpdGlvbixcbiAgICBicmFuY2hJZCxcbiAgfToge1xuICAgIHBvc2l0aW9uPzogXCJwcmV2aW91c1wiIHwgXCJuZXh0XCIgfCB1bmRlZmluZWQ7XG4gICAgYnJhbmNoSWQ/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIH0pIHtcbiAgICBjb25zdCBzdGF0ZSA9IHRoaXMuX2NvcmUuZ2V0U3RhdGUoKTtcbiAgICBpZiAoIXN0YXRlKSB0aHJvdyBuZXcgRXJyb3IoXCJNZXNzYWdlIGlzIG5vdCBhdmFpbGFibGVcIik7XG5cbiAgICBpZiAoYnJhbmNoSWQgJiYgcG9zaXRpb24pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk1heSBub3Qgc3BlY2lmeSBib3RoIGJyYW5jaElkIGFuZCBwb3NpdGlvblwiKTtcbiAgICB9IGVsc2UgaWYgKCFicmFuY2hJZCAmJiAhcG9zaXRpb24pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk11c3Qgc3BlY2lmeSBlaXRoZXIgYnJhbmNoSWQgb3IgcG9zaXRpb25cIik7XG4gICAgfVxuXG4gICAgY29uc3QgdGhyZWFkID0gdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpO1xuICAgIGNvbnN0IGJyYW5jaGVzID0gdGhyZWFkLmdldEJyYW5jaGVzKHN0YXRlLmlkKTtcbiAgICBsZXQgdGFyZ2V0QnJhbmNoID0gYnJhbmNoSWQ7XG4gICAgaWYgKHBvc2l0aW9uID09PSBcInByZXZpb3VzXCIpIHtcbiAgICAgIHRhcmdldEJyYW5jaCA9IGJyYW5jaGVzW3N0YXRlLmJyYW5jaE51bWJlciAtIDJdO1xuICAgIH0gZWxzZSBpZiAocG9zaXRpb24gPT09IFwibmV4dFwiKSB7XG4gICAgICB0YXJnZXRCcmFuY2ggPSBicmFuY2hlc1tzdGF0ZS5icmFuY2hOdW1iZXJdO1xuICAgIH1cbiAgICBpZiAoIXRhcmdldEJyYW5jaCkgdGhyb3cgbmV3IEVycm9yKFwiQnJhbmNoIG5vdCBmb3VuZFwiKTtcblxuICAgIHRoaXMuX3RocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKS5zd2l0Y2hUb0JyYW5jaCh0YXJnZXRCcmFuY2gpO1xuICB9XG5cbiAgcHVibGljIHVuc3RhYmxlX2dldENvcHlUZXh0KCkge1xuICAgIHJldHVybiBnZXRUaHJlYWRNZXNzYWdlVGV4dCh0aGlzLmdldFN0YXRlKCkpO1xuICB9XG5cbiAgcHVibGljIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiB0aGlzLl9jb3JlLnN1YnNjcmliZShjYWxsYmFjayk7XG4gIH1cblxuICBwdWJsaWMgZ2V0Q29udGVudFBhcnRCeUluZGV4KGlkeDogbnVtYmVyKSB7XG4gICAgaWYgKGlkeCA8IDApIHRocm93IG5ldyBFcnJvcihcIkNvbnRlbnQgcGFydCBpbmRleCBtdXN0IGJlID49IDBcIik7XG4gICAgcmV0dXJuIG5ldyBDb250ZW50UGFydFJ1bnRpbWVJbXBsKFxuICAgICAgbmV3IFNoYWxsb3dNZW1vaXplU3ViamVjdCh7XG4gICAgICAgIHBhdGg6IHtcbiAgICAgICAgICAuLi50aGlzLnBhdGgsXG4gICAgICAgICAgcmVmOiB0aGlzLnBhdGgucmVmICsgYCR7dGhpcy5wYXRoLnJlZn0uY29udGVudFske2lkeH1dYCxcbiAgICAgICAgICBjb250ZW50UGFydFNlbGVjdG9yOiB7IHR5cGU6IFwiaW5kZXhcIiwgaW5kZXg6IGlkeCB9LFxuICAgICAgICB9LFxuICAgICAgICBnZXRTdGF0ZTogKCkgPT4ge1xuICAgICAgICAgIHJldHVybiBnZXRDb250ZW50UGFydFN0YXRlKHRoaXMuZ2V0U3RhdGUoKSwgaWR4KTtcbiAgICAgICAgfSxcbiAgICAgICAgc3Vic2NyaWJlOiAoY2FsbGJhY2spID0+IHRoaXMuX2NvcmUuc3Vic2NyaWJlKGNhbGxiYWNrKSxcbiAgICAgIH0pLFxuICAgICAgdGhpcy5fY29yZSxcbiAgICAgIHRoaXMuX3RocmVhZEJpbmRpbmcsXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRDb250ZW50UGFydEJ5VG9vbENhbGxJZCh0b29sQ2FsbElkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gbmV3IENvbnRlbnRQYXJ0UnVudGltZUltcGwoXG4gICAgICBuZXcgU2hhbGxvd01lbW9pemVTdWJqZWN0KHtcbiAgICAgICAgcGF0aDoge1xuICAgICAgICAgIC4uLnRoaXMucGF0aCxcbiAgICAgICAgICByZWY6XG4gICAgICAgICAgICB0aGlzLnBhdGgucmVmICtcbiAgICAgICAgICAgIGAke3RoaXMucGF0aC5yZWZ9LmNvbnRlbnRbdG9vbENhbGxJZD0ke0pTT04uc3RyaW5naWZ5KHRvb2xDYWxsSWQpfV1gLFxuICAgICAgICAgIGNvbnRlbnRQYXJ0U2VsZWN0b3I6IHsgdHlwZTogXCJ0b29sQ2FsbElkXCIsIHRvb2xDYWxsSWQgfSxcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0U3RhdGU6ICgpID0+IHtcbiAgICAgICAgICBjb25zdCBzdGF0ZSA9IHRoaXMuX2NvcmUuZ2V0U3RhdGUoKTtcbiAgICAgICAgICBjb25zdCBpZHggPSBzdGF0ZS5jb250ZW50LmZpbmRJbmRleChcbiAgICAgICAgICAgIChwYXJ0KSA9PlxuICAgICAgICAgICAgICBwYXJ0LnR5cGUgPT09IFwidG9vbC1jYWxsXCIgJiYgcGFydC50b29sQ2FsbElkID09PSB0b29sQ2FsbElkLFxuICAgICAgICAgICk7XG4gICAgICAgICAgaWYgKGlkeCA9PT0gLTEpIHJldHVybiBTS0lQX1VQREFURTtcbiAgICAgICAgICByZXR1cm4gZ2V0Q29udGVudFBhcnRTdGF0ZShzdGF0ZSwgaWR4KTtcbiAgICAgICAgfSxcbiAgICAgICAgc3Vic2NyaWJlOiAoY2FsbGJhY2spID0+IHRoaXMuX2NvcmUuc3Vic2NyaWJlKGNhbGxiYWNrKSxcbiAgICAgIH0pLFxuICAgICAgdGhpcy5fY29yZSxcbiAgICAgIHRoaXMuX3RocmVhZEJpbmRpbmcsXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRBdHRhY2htZW50QnlJbmRleChpZHg6IG51bWJlcikge1xuICAgIHJldHVybiBuZXcgTWVzc2FnZUF0dGFjaG1lbnRSdW50aW1lSW1wbChcbiAgICAgIG5ldyBTaGFsbG93TWVtb2l6ZVN1YmplY3Qoe1xuICAgICAgICBwYXRoOiB7XG4gICAgICAgICAgLi4udGhpcy5wYXRoLFxuICAgICAgICAgIHJlZjogdGhpcy5wYXRoLnJlZiArIGAke3RoaXMucGF0aC5yZWZ9LmF0dGFjaG1lbnRzWyR7aWR4fV1gLFxuICAgICAgICAgIGF0dGFjaG1lbnRTb3VyY2U6IFwibWVzc2FnZVwiLFxuICAgICAgICAgIGF0dGFjaG1lbnRTZWxlY3RvcjogeyB0eXBlOiBcImluZGV4XCIsIGluZGV4OiBpZHggfSxcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0U3RhdGU6ICgpID0+IHtcbiAgICAgICAgICBjb25zdCBhdHRhY2htZW50cyA9IHRoaXMuZ2V0U3RhdGUoKS5hdHRhY2htZW50cztcbiAgICAgICAgICBjb25zdCBhdHRhY2htZW50ID0gYXR0YWNobWVudHM/LltpZHhdO1xuICAgICAgICAgIGlmICghYXR0YWNobWVudCkgcmV0dXJuIFNLSVBfVVBEQVRFO1xuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLmF0dGFjaG1lbnQsXG4gICAgICAgICAgICBhdHRhY2htZW50OiBhdHRhY2htZW50LFxuICAgICAgICAgICAgc291cmNlOiBcIm1lc3NhZ2VcIixcbiAgICAgICAgICB9IHNhdGlzZmllcyBBdHRhY2htZW50U3RhdGUgJiB7IHNvdXJjZTogXCJtZXNzYWdlXCIgfTtcbiAgICAgICAgfSxcbiAgICAgICAgc3Vic2NyaWJlOiAoY2FsbGJhY2spID0+IHRoaXMuX2NvcmUuc3Vic2NyaWJlKGNhbGxiYWNrKSxcbiAgICAgIH0pLFxuICAgICk7XG4gIH1cbn1cbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBQcmltaXRpdmUgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZVwiO1xuaW1wb3J0IHsgQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmLCBGQyB9IGZyb20gXCJyZWFjdFwiO1xuXG50eXBlIFByaW1pdGl2ZVNwYW5Qcm9wcyA9IENvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUHJpbWl0aXZlLnNwYW4+O1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIERlZmluZSBhIGN1c3RvbSBUZXh0IHJlbmRlcmVyIHZpYSBDb250ZW50UGFydFByaW1pdGl2ZUluUHJvZ3Jlc3MgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBNZXNzYWdlUHJpbWl0aXZlSW5Qcm9ncmVzc1Byb3BzID0gUHJpbWl0aXZlU3BhblByb3BzO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIERlZmluZSBhIGN1c3RvbSBUZXh0IHJlbmRlcmVyIHZpYSBDb250ZW50UGFydFByaW1pdGl2ZUluUHJvZ3Jlc3MgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgY29uc3QgTWVzc2FnZVByaW1pdGl2ZUluUHJvZ3Jlc3M6IEZDPFxuICBNZXNzYWdlUHJpbWl0aXZlSW5Qcm9ncmVzc1Byb3BzXG4+ID0gKCkgPT4ge1xuICByZXR1cm4gbnVsbDtcbn07XG5cbk1lc3NhZ2VQcmltaXRpdmVJblByb2dyZXNzLmRpc3BsYXlOYW1lID0gXCJNZXNzYWdlUHJpbWl0aXZlLkluUHJvZ3Jlc3NcIjtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBDb21wb25lbnRUeXBlLCB0eXBlIEZDLCBtZW1vLCB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VNZXNzYWdlLCB1c2VNZXNzYWdlUnVudGltZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VNZXNzYWdlQXR0YWNobWVudCB9IGZyb20gXCIuLi8uLi9jb250ZXh0L3JlYWN0L0F0dGFjaG1lbnRDb250ZXh0XCI7XG5pbXBvcnQgeyBBdHRhY2htZW50UnVudGltZVByb3ZpZGVyIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcHJvdmlkZXJzL0F0dGFjaG1lbnRSdW50aW1lUHJvdmlkZXJcIjtcbmltcG9ydCB7IENvbXBsZXRlQXR0YWNobWVudCB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgTWVzc2FnZVByaW1pdGl2ZS5BdHRhY2htZW50cy5Qcm9wc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBNZXNzYWdlUHJpbWl0aXZlQXR0YWNobWVudHNQcm9wcyA9XG4gIE1lc3NhZ2VQcmltaXRpdmVBdHRhY2htZW50cy5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBNZXNzYWdlUHJpbWl0aXZlQXR0YWNobWVudHMge1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IHtcbiAgICBjb21wb25lbnRzOlxuICAgICAgfCB7XG4gICAgICAgICAgSW1hZ2U/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgICAgIERvY3VtZW50PzogQ29tcG9uZW50VHlwZSB8IHVuZGVmaW5lZDtcbiAgICAgICAgICBGaWxlPzogQ29tcG9uZW50VHlwZSB8IHVuZGVmaW5lZDtcbiAgICAgICAgICBBdHRhY2htZW50PzogQ29tcG9uZW50VHlwZSB8IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgfCB1bmRlZmluZWQ7XG4gIH07XG59XG5cbmNvbnN0IGdldENvbXBvbmVudCA9IChcbiAgY29tcG9uZW50czogTWVzc2FnZVByaW1pdGl2ZUF0dGFjaG1lbnRzLlByb3BzW1wiY29tcG9uZW50c1wiXSxcbiAgYXR0YWNobWVudDogQ29tcGxldGVBdHRhY2htZW50LFxuKSA9PiB7XG4gIGNvbnN0IHR5cGUgPSBhdHRhY2htZW50LnR5cGU7XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgXCJpbWFnZVwiOlxuICAgICAgcmV0dXJuIGNvbXBvbmVudHM/LkltYWdlID8/IGNvbXBvbmVudHM/LkF0dGFjaG1lbnQ7XG4gICAgY2FzZSBcImRvY3VtZW50XCI6XG4gICAgICByZXR1cm4gY29tcG9uZW50cz8uRG9jdW1lbnQgPz8gY29tcG9uZW50cz8uQXR0YWNobWVudDtcbiAgICBjYXNlIFwiZmlsZVwiOlxuICAgICAgcmV0dXJuIGNvbXBvbmVudHM/LkZpbGUgPz8gY29tcG9uZW50cz8uQXR0YWNobWVudDtcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc3QgX2V4aGF1c3RpdmVDaGVjazogbmV2ZXIgPSB0eXBlO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGF0dGFjaG1lbnQgdHlwZTogJHtfZXhoYXVzdGl2ZUNoZWNrfWApO1xuICB9XG59O1xuXG5jb25zdCBBdHRhY2htZW50Q29tcG9uZW50OiBGQzx7XG4gIGNvbXBvbmVudHM6IE1lc3NhZ2VQcmltaXRpdmVBdHRhY2htZW50cy5Qcm9wc1tcImNvbXBvbmVudHNcIl07XG59PiA9ICh7IGNvbXBvbmVudHMgfSkgPT4ge1xuICBjb25zdCBDb21wb25lbnQgPSB1c2VNZXNzYWdlQXR0YWNobWVudCgoYSkgPT5cbiAgICBnZXRDb21wb25lbnQoY29tcG9uZW50cywgYS5hdHRhY2htZW50KSxcbiAgKTtcblxuICBpZiAoIUNvbXBvbmVudCkgcmV0dXJuIG51bGw7XG4gIHJldHVybiA8Q29tcG9uZW50IC8+O1xufTtcblxuY29uc3QgTWVzc2FnZUF0dGFjaG1lbnRJbXBsOiBGQzxcbiAgTWVzc2FnZVByaW1pdGl2ZUF0dGFjaG1lbnRzLlByb3BzICYgeyBhdHRhY2htZW50SW5kZXg6IG51bWJlciB9XG4+ID0gKHsgY29tcG9uZW50cywgYXR0YWNobWVudEluZGV4IH0pID0+IHtcbiAgY29uc3QgbWVzc2FnZVJ1bnRpbWUgPSB1c2VNZXNzYWdlUnVudGltZSgpO1xuICBjb25zdCBydW50aW1lID0gdXNlTWVtbyhcbiAgICAoKSA9PiBtZXNzYWdlUnVudGltZS5nZXRBdHRhY2htZW50QnlJbmRleChhdHRhY2htZW50SW5kZXgpLFxuICAgIFttZXNzYWdlUnVudGltZSwgYXR0YWNobWVudEluZGV4XSxcbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxBdHRhY2htZW50UnVudGltZVByb3ZpZGVyIHJ1bnRpbWU9e3J1bnRpbWV9PlxuICAgICAgPEF0dGFjaG1lbnRDb21wb25lbnQgY29tcG9uZW50cz17Y29tcG9uZW50c30gLz5cbiAgICA8L0F0dGFjaG1lbnRSdW50aW1lUHJvdmlkZXI+XG4gICk7XG59O1xuXG5jb25zdCBNZXNzYWdlQXR0YWNobWVudCA9IG1lbW8oXG4gIE1lc3NhZ2VBdHRhY2htZW50SW1wbCxcbiAgKHByZXYsIG5leHQpID0+XG4gICAgcHJldi5hdHRhY2htZW50SW5kZXggPT09IG5leHQuYXR0YWNobWVudEluZGV4ICYmXG4gICAgcHJldi5jb21wb25lbnRzPy5JbWFnZSA9PT0gbmV4dC5jb21wb25lbnRzPy5JbWFnZSAmJlxuICAgIHByZXYuY29tcG9uZW50cz8uRG9jdW1lbnQgPT09IG5leHQuY29tcG9uZW50cz8uRG9jdW1lbnQgJiZcbiAgICBwcmV2LmNvbXBvbmVudHM/LkZpbGUgPT09IG5leHQuY29tcG9uZW50cz8uRmlsZSAmJlxuICAgIHByZXYuY29tcG9uZW50cz8uQXR0YWNobWVudCA9PT0gbmV4dC5jb21wb25lbnRzPy5BdHRhY2htZW50LFxuKTtcblxuZXhwb3J0IGNvbnN0IE1lc3NhZ2VQcmltaXRpdmVBdHRhY2htZW50czogRkM8XG4gIE1lc3NhZ2VQcmltaXRpdmVBdHRhY2htZW50cy5Qcm9wc1xuPiA9ICh7IGNvbXBvbmVudHMgfSkgPT4ge1xuICBjb25zdCBhdHRhY2htZW50c0NvdW50ID0gdXNlTWVzc2FnZSgoeyBtZXNzYWdlIH0pID0+IHtcbiAgICBpZiAobWVzc2FnZS5yb2xlICE9PSBcInVzZXJcIikgcmV0dXJuIDA7XG4gICAgcmV0dXJuIG1lc3NhZ2UuYXR0YWNobWVudHMubGVuZ3RoO1xuICB9KTtcblxuICByZXR1cm4gQXJyYXkuZnJvbSh7IGxlbmd0aDogYXR0YWNobWVudHNDb3VudCB9LCAoXywgaW5kZXgpID0+IChcbiAgICA8TWVzc2FnZUF0dGFjaG1lbnRcbiAgICAgIGtleT17aW5kZXh9XG4gICAgICBhdHRhY2htZW50SW5kZXg9e2luZGV4fVxuICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAvPlxuICApKTtcbn07XG5cbk1lc3NhZ2VQcmltaXRpdmVBdHRhY2htZW50cy5kaXNwbGF5TmFtZSA9IFwiTWVzc2FnZVByaW1pdGl2ZS5BdHRhY2htZW50c1wiO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7XG4gIHR5cGUgRkMsXG4gIHR5cGUgUHJvcHNXaXRoQ2hpbGRyZW4sXG4gIHVzZUVmZmVjdCxcbiAgdXNlTWVtbyxcbiAgdXNlU3RhdGUsXG59IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSBcInp1c3RhbmRcIjtcbmltcG9ydCB7IEF0dGFjaG1lbnRDb250ZXh0IH0gZnJvbSBcIi4uL3JlYWN0L0F0dGFjaG1lbnRDb250ZXh0XCI7XG5pbXBvcnQgeyB3cml0YWJsZVN0b3JlIH0gZnJvbSBcIi4uL1JlYWRvbmx5U3RvcmVcIjtcbmltcG9ydCB7IEF0dGFjaG1lbnRSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2FwaS9BdHRhY2htZW50UnVudGltZVwiO1xuXG50eXBlIEF0dGFjaG1lbnRSdW50aW1lUHJvdmlkZXJQcm9wcyA9IFByb3BzV2l0aENoaWxkcmVuPHtcbiAgcnVudGltZTogQXR0YWNobWVudFJ1bnRpbWU7XG59PjtcblxuY29uc3QgdXNlQXR0YWNobWVudFJ1bnRpbWVTdG9yZSA9IChydW50aW1lOiBBdHRhY2htZW50UnVudGltZSkgPT4ge1xuICBjb25zdCBbc3RvcmVdID0gdXNlU3RhdGUoKCkgPT4gY3JlYXRlKCgpID0+IHJ1bnRpbWUpKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHdyaXRhYmxlU3RvcmUoc3RvcmUpLnNldFN0YXRlKHJ1bnRpbWUsIHRydWUpO1xuICB9LCBbcnVudGltZSwgc3RvcmVdKTtcblxuICByZXR1cm4gc3RvcmU7XG59O1xuY29uc3QgdXNlQXR0YWNobWVudFN0b3JlID0gKHJ1bnRpbWU6IEF0dGFjaG1lbnRSdW50aW1lKSA9PiB7XG4gIGNvbnN0IFtzdG9yZV0gPSB1c2VTdGF0ZSgoKSA9PiBjcmVhdGUoKCkgPT4gcnVudGltZS5nZXRTdGF0ZSgpKSk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgdXBkYXRlU3RhdGUgPSAoKSA9PlxuICAgICAgd3JpdGFibGVTdG9yZShzdG9yZSkuc2V0U3RhdGUocnVudGltZS5nZXRTdGF0ZSgpLCB0cnVlKTtcbiAgICB1cGRhdGVTdGF0ZSgpO1xuICAgIHJldHVybiBydW50aW1lLnN1YnNjcmliZSh1cGRhdGVTdGF0ZSk7XG4gIH0sIFtydW50aW1lLCBzdG9yZV0pO1xuXG4gIHJldHVybiBzdG9yZTtcbn07XG5cbmV4cG9ydCBjb25zdCBBdHRhY2htZW50UnVudGltZVByb3ZpZGVyOiBGQzxBdHRhY2htZW50UnVudGltZVByb3ZpZGVyUHJvcHM+ID0gKHtcbiAgcnVudGltZSxcbiAgY2hpbGRyZW4sXG59KSA9PiB7XG4gIGNvbnN0IHVzZUF0dGFjaG1lbnRSdW50aW1lID0gdXNlQXR0YWNobWVudFJ1bnRpbWVTdG9yZShydW50aW1lKTtcbiAgY29uc3QgdXNlQXR0YWNobWVudCA9IHVzZUF0dGFjaG1lbnRTdG9yZShydW50aW1lKTtcbiAgY29uc3Qgc291cmNlID0gdXNlQXR0YWNobWVudCgocykgPT4gcy5zb3VyY2UpO1xuICBjb25zdCBjb250ZXh0ID0gdXNlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNvdXJjZSxcbiAgICAgIHVzZUF0dGFjaG1lbnRSdW50aW1lLFxuICAgICAgdXNlQXR0YWNobWVudCxcbiAgICB9O1xuICB9LCBbdXNlQXR0YWNobWVudFJ1bnRpbWUsIHVzZUF0dGFjaG1lbnRdKTtcblxuICByZXR1cm4gKFxuICAgIDxBdHRhY2htZW50Q29udGV4dC5Qcm92aWRlciB2YWx1ZT17Y29udGV4dH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9BdHRhY2htZW50Q29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn07XG4iLCJleHBvcnQgeyBDb21wb3NlclByaW1pdGl2ZVJvb3QgYXMgUm9vdCB9IGZyb20gXCIuL0NvbXBvc2VyUm9vdFwiO1xuZXhwb3J0IHsgQ29tcG9zZXJQcmltaXRpdmVJbnB1dCBhcyBJbnB1dCB9IGZyb20gXCIuL0NvbXBvc2VySW5wdXRcIjtcbmV4cG9ydCB7IENvbXBvc2VyUHJpbWl0aXZlU2VuZCBhcyBTZW5kIH0gZnJvbSBcIi4vQ29tcG9zZXJTZW5kXCI7XG5leHBvcnQgeyBDb21wb3NlclByaW1pdGl2ZUNhbmNlbCBhcyBDYW5jZWwgfSBmcm9tIFwiLi9Db21wb3NlckNhbmNlbFwiO1xuZXhwb3J0IHsgQ29tcG9zZXJQcmltaXRpdmVBZGRBdHRhY2htZW50IGFzIEFkZEF0dGFjaG1lbnQgfSBmcm9tIFwiLi9Db21wb3NlckFkZEF0dGFjaG1lbnRcIjtcbmV4cG9ydCB7IENvbXBvc2VyUHJpbWl0aXZlQXR0YWNobWVudHMgYXMgQXR0YWNobWVudHMgfSBmcm9tIFwiLi9Db21wb3NlckF0dGFjaG1lbnRzXCI7XG5leHBvcnQgeyBDb21wb3NlclByaW1pdGl2ZUlmIGFzIElmIH0gZnJvbSBcIi4vQ29tcG9zZXJJZlwiO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IGNvbXBvc2VFdmVudEhhbmRsZXJzIH0gZnJvbSBcIkByYWRpeC11aS9wcmltaXRpdmVcIjtcbmltcG9ydCB7IFByaW1pdGl2ZSB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlXCI7XG5pbXBvcnQge1xuICB0eXBlIEVsZW1lbnRSZWYsXG4gIHR5cGUgRm9ybUV2ZW50LFxuICBmb3J3YXJkUmVmLFxuICBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYsXG59IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQ29tcG9zZXJTZW5kIH0gZnJvbSBcIi4uLy4uL3ByaW1pdGl2ZS1ob29rc1wiO1xuXG5leHBvcnQgdHlwZSBDb21wb3NlclByaW1pdGl2ZVJvb3RQcm9wcyA9IENvbXBvc2VyUHJpbWl0aXZlUm9vdC5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBDb21wb3NlclByaW1pdGl2ZVJvb3Qge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gRWxlbWVudFJlZjx0eXBlb2YgUHJpbWl0aXZlLmZvcm0+O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IENvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUHJpbWl0aXZlLmZvcm0+O1xufVxuXG5leHBvcnQgY29uc3QgQ29tcG9zZXJQcmltaXRpdmVSb290ID0gZm9yd2FyZFJlZjxcbiAgQ29tcG9zZXJQcmltaXRpdmVSb290LkVsZW1lbnQsXG4gIENvbXBvc2VyUHJpbWl0aXZlUm9vdC5Qcm9wc1xuPigoeyBvblN1Ym1pdCwgLi4ucmVzdCB9LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgY29uc3Qgc2VuZCA9IHVzZUNvbXBvc2VyU2VuZCgpO1xuXG4gIGNvbnN0IGhhbmRsZVN1Ym1pdCA9IChlOiBGb3JtRXZlbnQpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBpZiAoIXNlbmQpIHJldHVybjtcbiAgICBzZW5kKCk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8UHJpbWl0aXZlLmZvcm1cbiAgICAgIHsuLi5yZXN0fVxuICAgICAgcmVmPXtmb3J3YXJkZWRSZWZ9XG4gICAgICBvblN1Ym1pdD17Y29tcG9zZUV2ZW50SGFuZGxlcnMob25TdWJtaXQsIGhhbmRsZVN1Ym1pdCl9XG4gICAgLz5cbiAgKTtcbn0pO1xuXG5Db21wb3NlclByaW1pdGl2ZVJvb3QuZGlzcGxheU5hbWUgPSBcIkNvbXBvc2VyUHJpbWl0aXZlLlJvb3RcIjtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBjb21wb3NlRXZlbnRIYW5kbGVycyB9IGZyb20gXCJAcmFkaXgtdWkvcHJpbWl0aXZlXCI7XG5pbXBvcnQgeyB1c2VDb21wb3NlZFJlZnMgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LWNvbXBvc2UtcmVmc1wiO1xuaW1wb3J0IHsgU2xvdCB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3Qtc2xvdFwiO1xuaW1wb3J0IHtcbiAgdHlwZSBLZXlib2FyZEV2ZW50LFxuICBmb3J3YXJkUmVmLFxuICB1c2VDYWxsYmFjayxcbiAgdXNlRWZmZWN0LFxuICB1c2VSZWYsXG59IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFRleHRhcmVhQXV0b3NpemUsIHtcbiAgdHlwZSBUZXh0YXJlYUF1dG9zaXplUHJvcHMsXG59IGZyb20gXCJyZWFjdC10ZXh0YXJlYS1hdXRvc2l6ZVwiO1xuaW1wb3J0IHtcbiAgdXNlQ29tcG9zZXIsXG4gIHVzZUNvbXBvc2VyUnVudGltZSxcbn0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcmVhY3QvQ29tcG9zZXJDb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VUaHJlYWQsIHVzZVRocmVhZFJ1bnRpbWUgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9UaHJlYWRDb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VFc2NhcGVLZXlkb3duIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC11c2UtZXNjYXBlLWtleWRvd25cIjtcbmltcG9ydCB7IHVzZU9uU2Nyb2xsVG9Cb3R0b20gfSBmcm9tIFwiLi4vLi4vdXRpbHMvaG9va3MvdXNlT25TY3JvbGxUb0JvdHRvbVwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgQ29tcG9zZXJQcmltaXRpdmUuSW5wdXQuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQ29tcG9zZXJQcmltaXRpdmVJbnB1dFByb3BzID0gQ29tcG9zZXJQcmltaXRpdmVJbnB1dC5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBDb21wb3NlclByaW1pdGl2ZUlucHV0IHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEhUTUxUZXh0QXJlYUVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gVGV4dGFyZWFBdXRvc2l6ZVByb3BzICYge1xuICAgIGFzQ2hpbGQ/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICAgIHN1Ym1pdE9uRW50ZXI/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICAgIGNhbmNlbE9uRXNjYXBlPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgICB1bnN0YWJsZV9mb2N1c09uUnVuU3RhcnQ/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICAgIHVuc3RhYmxlX2ZvY3VzT25TY3JvbGxUb0JvdHRvbT86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gICAgdW5zdGFibGVfZm9jdXNPblRocmVhZFN3aXRjaGVkPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IENvbXBvc2VyUHJpbWl0aXZlSW5wdXQgPSBmb3J3YXJkUmVmPFxuICBDb21wb3NlclByaW1pdGl2ZUlucHV0LkVsZW1lbnQsXG4gIENvbXBvc2VyUHJpbWl0aXZlSW5wdXQuUHJvcHNcbj4oXG4gIChcbiAgICB7XG4gICAgICBhdXRvRm9jdXMgPSBmYWxzZSxcbiAgICAgIGFzQ2hpbGQsXG4gICAgICBkaXNhYmxlZDogZGlzYWJsZWRQcm9wLFxuICAgICAgb25DaGFuZ2UsXG4gICAgICBvbktleURvd24sXG4gICAgICBzdWJtaXRPbkVudGVyID0gdHJ1ZSxcbiAgICAgIGNhbmNlbE9uRXNjYXBlID0gdHJ1ZSxcbiAgICAgIHVuc3RhYmxlX2ZvY3VzT25SdW5TdGFydCA9IHRydWUsXG4gICAgICB1bnN0YWJsZV9mb2N1c09uU2Nyb2xsVG9Cb3R0b20gPSB0cnVlLFxuICAgICAgdW5zdGFibGVfZm9jdXNPblRocmVhZFN3aXRjaGVkID0gdHJ1ZSxcbiAgICAgIC4uLnJlc3RcbiAgICB9LFxuICAgIGZvcndhcmRlZFJlZixcbiAgKSA9PiB7XG4gICAgY29uc3QgdGhyZWFkUnVudGltZSA9IHVzZVRocmVhZFJ1bnRpbWUoKTtcbiAgICBjb25zdCBjb21wb3NlclJ1bnRpbWUgPSB1c2VDb21wb3NlclJ1bnRpbWUoKTtcblxuICAgIGNvbnN0IHZhbHVlID0gdXNlQ29tcG9zZXIoKGMpID0+IHtcbiAgICAgIGlmICghYy5pc0VkaXRpbmcpIHJldHVybiBcIlwiO1xuICAgICAgcmV0dXJuIGMudGV4dDtcbiAgICB9KTtcblxuICAgIGNvbnN0IENvbXBvbmVudCA9IGFzQ2hpbGQgPyBTbG90IDogVGV4dGFyZWFBdXRvc2l6ZTtcblxuICAgIGNvbnN0IGlzRGlzYWJsZWQgPSB1c2VUaHJlYWQoKHQpID0+IHQuaXNEaXNhYmxlZCkgPz8gZGlzYWJsZWRQcm9wID8/IGZhbHNlO1xuICAgIGNvbnN0IHRleHRhcmVhUmVmID0gdXNlUmVmPEhUTUxUZXh0QXJlYUVsZW1lbnQ+KG51bGwpO1xuICAgIGNvbnN0IHJlZiA9IHVzZUNvbXBvc2VkUmVmcyhmb3J3YXJkZWRSZWYsIHRleHRhcmVhUmVmKTtcblxuICAgIHVzZUVzY2FwZUtleWRvd24oKGUpID0+IHtcbiAgICAgIGlmICghY2FuY2VsT25Fc2NhcGUpIHJldHVybjtcblxuICAgICAgaWYgKGNvbXBvc2VyUnVudGltZS5nZXRTdGF0ZSgpLmNhbkNhbmNlbCkge1xuICAgICAgICBjb21wb3NlclJ1bnRpbWUuY2FuY2VsKCk7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGNvbnN0IGhhbmRsZUtleVByZXNzID0gKGU6IEtleWJvYXJkRXZlbnQpID0+IHtcbiAgICAgIGlmIChpc0Rpc2FibGVkIHx8ICFzdWJtaXRPbkVudGVyKSByZXR1cm47XG5cbiAgICAgIC8vIGlnbm9yZSBJTUUgY29tcG9zaXRpb24gZXZlbnRzXG4gICAgICBpZiAoZS5uYXRpdmVFdmVudC5pc0NvbXBvc2luZykgcmV0dXJuO1xuXG4gICAgICBpZiAoZS5rZXkgPT09IFwiRW50ZXJcIiAmJiBlLnNoaWZ0S2V5ID09PSBmYWxzZSkge1xuICAgICAgICBjb25zdCB7IGlzUnVubmluZyB9ID0gdGhyZWFkUnVudGltZS5nZXRTdGF0ZSgpO1xuXG4gICAgICAgIGlmICghaXNSdW5uaW5nKSB7XG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgdGV4dGFyZWFSZWYuY3VycmVudD8uY2xvc2VzdChcImZvcm1cIik/LnJlcXVlc3RTdWJtaXQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBhdXRvRm9jdXNFbmFibGVkID0gYXV0b0ZvY3VzICYmICFpc0Rpc2FibGVkO1xuICAgIGNvbnN0IGZvY3VzID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgY29uc3QgdGV4dGFyZWEgPSB0ZXh0YXJlYVJlZi5jdXJyZW50O1xuICAgICAgaWYgKCF0ZXh0YXJlYSB8fCAhYXV0b0ZvY3VzRW5hYmxlZCkgcmV0dXJuO1xuXG4gICAgICB0ZXh0YXJlYS5mb2N1cyh7IHByZXZlbnRTY3JvbGw6IHRydWUgfSk7XG4gICAgICB0ZXh0YXJlYS5zZXRTZWxlY3Rpb25SYW5nZShcbiAgICAgICAgdGV4dGFyZWFSZWYuY3VycmVudC52YWx1ZS5sZW5ndGgsXG4gICAgICAgIHRleHRhcmVhUmVmLmN1cnJlbnQudmFsdWUubGVuZ3RoLFxuICAgICAgKTtcbiAgICB9LCBbYXV0b0ZvY3VzRW5hYmxlZF0pO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IGZvY3VzKCksIFtmb2N1c10pO1xuXG4gICAgdXNlT25TY3JvbGxUb0JvdHRvbSgoKSA9PiB7XG4gICAgICBpZiAoY29tcG9zZXJSdW50aW1lLnR5cGUgPT09IFwidGhyZWFkXCIgJiYgdW5zdGFibGVfZm9jdXNPblNjcm9sbFRvQm90dG9tKSB7XG4gICAgICAgIGZvY3VzKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgaWYgKGNvbXBvc2VyUnVudGltZS50eXBlICE9PSBcInRocmVhZFwiIHx8ICF1bnN0YWJsZV9mb2N1c09uUnVuU3RhcnQpXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgICAgIHJldHVybiB0aHJlYWRSdW50aW1lLnVuc3RhYmxlX29uKFwicnVuLXN0YXJ0XCIsIGZvY3VzKTtcbiAgICB9LCBbdW5zdGFibGVfZm9jdXNPblJ1blN0YXJ0XSk7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgaWYgKGNvbXBvc2VyUnVudGltZS50eXBlICE9PSBcInRocmVhZFwiIHx8ICF1bnN0YWJsZV9mb2N1c09uVGhyZWFkU3dpdGNoZWQpXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgICAgIHJldHVybiB0aHJlYWRSdW50aW1lLnVuc3RhYmxlX29uKFwic3dpdGNoZWQtdG9cIiwgZm9jdXMpO1xuICAgIH0sIFt1bnN0YWJsZV9mb2N1c09uVGhyZWFkU3dpdGNoZWRdKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Q29tcG9uZW50XG4gICAgICAgIG5hbWU9XCJpbnB1dFwiXG4gICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgey4uLnJlc3R9XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBkaXNhYmxlZD17aXNEaXNhYmxlZH1cbiAgICAgICAgb25DaGFuZ2U9e2NvbXBvc2VFdmVudEhhbmRsZXJzKG9uQ2hhbmdlLCAoZSkgPT4ge1xuICAgICAgICAgIGlmICghY29tcG9zZXJSdW50aW1lLmdldFN0YXRlKCkuaXNFZGl0aW5nKSByZXR1cm47XG4gICAgICAgICAgcmV0dXJuIGNvbXBvc2VyUnVudGltZS5zZXRUZXh0KGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgfSl9XG4gICAgICAgIG9uS2V5RG93bj17Y29tcG9zZUV2ZW50SGFuZGxlcnMob25LZXlEb3duLCBoYW5kbGVLZXlQcmVzcyl9XG4gICAgICAvPlxuICAgICk7XG4gIH0sXG4pO1xuXG5Db21wb3NlclByaW1pdGl2ZUlucHV0LmRpc3BsYXlOYW1lID0gXCJDb21wb3NlclByaW1pdGl2ZS5JbnB1dFwiO1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2tSZWYgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXVzZS1jYWxsYmFjay1yZWZcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlVGhyZWFkVmlld3BvcnQgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9UaHJlYWRDb250ZXh0XCI7XG5cbmV4cG9ydCBjb25zdCB1c2VPblNjcm9sbFRvQm90dG9tID0gKGNhbGxiYWNrOiAoKSA9PiB2b2lkKSA9PiB7XG4gIGNvbnN0IGNhbGxiYWNrUmVmID0gdXNlQ2FsbGJhY2tSZWYoY2FsbGJhY2spO1xuICBjb25zdCBvblNjcm9sbFRvQm90dG9tID0gdXNlVGhyZWFkVmlld3BvcnQoKHZwKSA9PiB2cC5vblNjcm9sbFRvQm90dG9tKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJldHVybiBvblNjcm9sbFRvQm90dG9tKGNhbGxiYWNrUmVmKTtcbiAgfSwgW29uU2Nyb2xsVG9Cb3R0b20sIGNhbGxiYWNrUmVmXSk7XG59O1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7XG4gIEFjdGlvbkJ1dHRvbkVsZW1lbnQsXG4gIEFjdGlvbkJ1dHRvblByb3BzLFxuICBjcmVhdGVBY3Rpb25CdXR0b24sXG59IGZyb20gXCIuLi8uLi91dGlscy9jcmVhdGVBY3Rpb25CdXR0b25cIjtcbmltcG9ydCB7IHVzZUNvbXBvc2VyU2VuZCB9IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3NcIjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYENvbXBvc2VyUHJpbWl0aXZlLlNlbmQuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQ29tcG9zZXJQcmltaXRpdmVTZW5kUHJvcHMgPSBDb21wb3NlclByaW1pdGl2ZVNlbmQuUHJvcHM7XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ29tcG9zZXJQcmltaXRpdmVTZW5kIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEFjdGlvbkJ1dHRvbkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gQWN0aW9uQnV0dG9uUHJvcHM8dHlwZW9mIHVzZUNvbXBvc2VyU2VuZD47XG59XG5cbmV4cG9ydCBjb25zdCBDb21wb3NlclByaW1pdGl2ZVNlbmQgPSBjcmVhdGVBY3Rpb25CdXR0b24oXG4gIFwiQ29tcG9zZXJQcmltaXRpdmUuU2VuZFwiLFxuICB1c2VDb21wb3NlclNlbmRcbik7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHtcbiAgQWN0aW9uQnV0dG9uRWxlbWVudCxcbiAgQWN0aW9uQnV0dG9uUHJvcHMsXG4gIGNyZWF0ZUFjdGlvbkJ1dHRvbixcbn0gZnJvbSBcIi4uLy4uL3V0aWxzL2NyZWF0ZUFjdGlvbkJ1dHRvblwiO1xuaW1wb3J0IHsgdXNlQ29tcG9zZXJDYW5jZWwgfSBmcm9tIFwiLi4vLi4vcHJpbWl0aXZlLWhvb2tzL2NvbXBvc2VyL3VzZUNvbXBvc2VyQ2FuY2VsXCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBDb21wb3NlclByaW1pdGl2ZS5DYW5jZWwuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgQ29tcG9zZXJQcmltaXRpdmVDYW5jZWxQcm9wcyA9IENvbXBvc2VyUHJpbWl0aXZlQ2FuY2VsLlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIENvbXBvc2VyUHJpbWl0aXZlQ2FuY2VsIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEFjdGlvbkJ1dHRvbkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gQWN0aW9uQnV0dG9uUHJvcHM8dHlwZW9mIHVzZUNvbXBvc2VyQ2FuY2VsPjtcbn1cblxuZXhwb3J0IGNvbnN0IENvbXBvc2VyUHJpbWl0aXZlQ2FuY2VsID0gY3JlYXRlQWN0aW9uQnV0dG9uKFxuICBcIkNvbXBvc2VyUHJpbWl0aXZlLkNhbmNlbFwiLFxuICB1c2VDb21wb3NlckNhbmNlbCxcbik7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHtcbiAgQWN0aW9uQnV0dG9uRWxlbWVudCxcbiAgQWN0aW9uQnV0dG9uUHJvcHMsXG4gIGNyZWF0ZUFjdGlvbkJ1dHRvbixcbn0gZnJvbSBcIi4uLy4uL3V0aWxzL2NyZWF0ZUFjdGlvbkJ1dHRvblwiO1xuaW1wb3J0IHsgdXNlQ29tcG9zZXJBZGRBdHRhY2htZW50IH0gZnJvbSBcIi4uLy4uL3ByaW1pdGl2ZS1ob29rcy9jb21wb3NlclwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgQ29tcG9zZXJQcmltaXRpdmUuQWRkQXR0YWNobWVudC5Qcm9wc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBDb21wb3NlclByaW1pdGl2ZUFkZEF0dGFjaG1lbnRQcm9wcyA9IENvbXBvc2VyUHJpbWl0aXZlQWRkQXR0YWNobWVudC5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBDb21wb3NlclByaW1pdGl2ZUFkZEF0dGFjaG1lbnQge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gQWN0aW9uQnV0dG9uRWxlbWVudDtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBBY3Rpb25CdXR0b25Qcm9wczx0eXBlb2YgdXNlQ29tcG9zZXJBZGRBdHRhY2htZW50Pjtcbn1cblxuZXhwb3J0IGNvbnN0IENvbXBvc2VyUHJpbWl0aXZlQWRkQXR0YWNobWVudCA9IGNyZWF0ZUFjdGlvbkJ1dHRvbihcbiAgXCJDb21wb3NlclByaW1pdGl2ZS5BZGRBdHRhY2htZW50XCIsXG4gIHVzZUNvbXBvc2VyQWRkQXR0YWNobWVudFxuKTtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBDb21wb25lbnRUeXBlLCB0eXBlIEZDLCBtZW1vLCB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBBdHRhY2htZW50IH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5pbXBvcnQgeyB1c2VDb21wb3NlciwgdXNlQ29tcG9zZXJSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2NvbnRleHRcIjtcbmltcG9ydCB7IHVzZVRocmVhZENvbXBvc2VyQXR0YWNobWVudCB9IGZyb20gXCIuLi8uLi9jb250ZXh0L3JlYWN0L0F0dGFjaG1lbnRDb250ZXh0XCI7XG5pbXBvcnQgeyBBdHRhY2htZW50UnVudGltZVByb3ZpZGVyIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcHJvdmlkZXJzL0F0dGFjaG1lbnRSdW50aW1lUHJvdmlkZXJcIjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYENvbXBvc2VyUHJpbWl0aXZlLkF0dGFjaG1lbnRzLlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIENvbXBvc2VyUHJpbWl0aXZlQXR0YWNobWVudHNQcm9wcyA9XG4gIENvbXBvc2VyUHJpbWl0aXZlQXR0YWNobWVudHMuUHJvcHM7XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ29tcG9zZXJQcmltaXRpdmVBdHRhY2htZW50cyB7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0ge1xuICAgIGNvbXBvbmVudHM6XG4gICAgICB8IHtcbiAgICAgICAgICBJbWFnZT86IENvbXBvbmVudFR5cGUgfCB1bmRlZmluZWQ7XG4gICAgICAgICAgRG9jdW1lbnQ/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgICAgIEZpbGU/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgICAgIEF0dGFjaG1lbnQ/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICB8IHVuZGVmaW5lZDtcbiAgfTtcbn1cblxuY29uc3QgZ2V0Q29tcG9uZW50ID0gKFxuICBjb21wb25lbnRzOiBDb21wb3NlclByaW1pdGl2ZUF0dGFjaG1lbnRzLlByb3BzW1wiY29tcG9uZW50c1wiXSxcbiAgYXR0YWNobWVudDogQXR0YWNobWVudCxcbikgPT4ge1xuICBjb25zdCB0eXBlID0gYXR0YWNobWVudC50eXBlO1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlIFwiaW1hZ2VcIjpcbiAgICAgIHJldHVybiBjb21wb25lbnRzPy5JbWFnZSA/PyBjb21wb25lbnRzPy5BdHRhY2htZW50O1xuICAgIGNhc2UgXCJkb2N1bWVudFwiOlxuICAgICAgcmV0dXJuIGNvbXBvbmVudHM/LkRvY3VtZW50ID8/IGNvbXBvbmVudHM/LkF0dGFjaG1lbnQ7XG4gICAgY2FzZSBcImZpbGVcIjpcbiAgICAgIHJldHVybiBjb21wb25lbnRzPy5GaWxlID8/IGNvbXBvbmVudHM/LkF0dGFjaG1lbnQ7XG4gICAgZGVmYXVsdDpcbiAgICAgIGNvbnN0IF9leGhhdXN0aXZlQ2hlY2s6IG5ldmVyID0gdHlwZTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBhdHRhY2htZW50IHR5cGU6ICR7X2V4aGF1c3RpdmVDaGVja31gKTtcbiAgfVxufTtcblxuY29uc3QgQXR0YWNobWVudENvbXBvbmVudDogRkM8e1xuICBjb21wb25lbnRzOiBDb21wb3NlclByaW1pdGl2ZUF0dGFjaG1lbnRzLlByb3BzW1wiY29tcG9uZW50c1wiXTtcbn0+ID0gKHsgY29tcG9uZW50cyB9KSA9PiB7XG4gIGNvbnN0IENvbXBvbmVudCA9IHVzZVRocmVhZENvbXBvc2VyQXR0YWNobWVudCgoYSkgPT5cbiAgICBnZXRDb21wb25lbnQoY29tcG9uZW50cywgYSksXG4gICk7XG5cbiAgaWYgKCFDb21wb25lbnQpIHJldHVybiBudWxsO1xuICByZXR1cm4gPENvbXBvbmVudCAvPjtcbn07XG5cbmNvbnN0IENvbXBvc2VyQXR0YWNobWVudEltcGw6IEZDPFxuICBDb21wb3NlclByaW1pdGl2ZUF0dGFjaG1lbnRzLlByb3BzICYgeyBhdHRhY2htZW50SW5kZXg6IG51bWJlciB9XG4+ID0gKHsgY29tcG9uZW50cywgYXR0YWNobWVudEluZGV4IH0pID0+IHtcbiAgY29uc3QgY29tcG9zZXJSdW50aW1lID0gdXNlQ29tcG9zZXJSdW50aW1lKCk7XG4gIGNvbnN0IHJ1bnRpbWUgPSB1c2VNZW1vKFxuICAgICgpID0+IGNvbXBvc2VyUnVudGltZS5nZXRBdHRhY2htZW50QnlJbmRleChhdHRhY2htZW50SW5kZXgpLFxuICAgIFtjb21wb3NlclJ1bnRpbWUsIGF0dGFjaG1lbnRJbmRleF0sXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8QXR0YWNobWVudFJ1bnRpbWVQcm92aWRlciBydW50aW1lPXtydW50aW1lfT5cbiAgICAgIDxBdHRhY2htZW50Q29tcG9uZW50IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IC8+XG4gICAgPC9BdHRhY2htZW50UnVudGltZVByb3ZpZGVyPlxuICApO1xufTtcblxuY29uc3QgQ29tcG9zZXJBdHRhY2htZW50ID0gbWVtbyhcbiAgQ29tcG9zZXJBdHRhY2htZW50SW1wbCxcbiAgKHByZXYsIG5leHQpID0+XG4gICAgcHJldi5hdHRhY2htZW50SW5kZXggPT09IG5leHQuYXR0YWNobWVudEluZGV4ICYmXG4gICAgcHJldi5jb21wb25lbnRzPy5JbWFnZSA9PT0gbmV4dC5jb21wb25lbnRzPy5JbWFnZSAmJlxuICAgIHByZXYuY29tcG9uZW50cz8uRG9jdW1lbnQgPT09IG5leHQuY29tcG9uZW50cz8uRG9jdW1lbnQgJiZcbiAgICBwcmV2LmNvbXBvbmVudHM/LkZpbGUgPT09IG5leHQuY29tcG9uZW50cz8uRmlsZSAmJlxuICAgIHByZXYuY29tcG9uZW50cz8uQXR0YWNobWVudCA9PT0gbmV4dC5jb21wb25lbnRzPy5BdHRhY2htZW50LFxuKTtcblxuZXhwb3J0IGNvbnN0IENvbXBvc2VyUHJpbWl0aXZlQXR0YWNobWVudHM6IEZDPFxuICBDb21wb3NlclByaW1pdGl2ZUF0dGFjaG1lbnRzLlByb3BzXG4+ID0gKHsgY29tcG9uZW50cyB9KSA9PiB7XG4gIGNvbnN0IGF0dGFjaG1lbnRzQ291bnQgPSB1c2VDb21wb3NlcigocykgPT4gcy5hdHRhY2htZW50cy5sZW5ndGgpO1xuXG4gIHJldHVybiBBcnJheS5mcm9tKHsgbGVuZ3RoOiBhdHRhY2htZW50c0NvdW50IH0sIChfLCBpbmRleCkgPT4gKFxuICAgIDxDb21wb3NlckF0dGFjaG1lbnRcbiAgICAgIGtleT17aW5kZXh9XG4gICAgICBhdHRhY2htZW50SW5kZXg9e2luZGV4fVxuICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAvPlxuICApKTtcbn07XG5cbkNvbXBvc2VyUHJpbWl0aXZlQXR0YWNobWVudHMuZGlzcGxheU5hbWUgPSBcIkNvbXBvc2VyUHJpbWl0aXZlLkF0dGFjaG1lbnRzXCI7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHR5cGUgeyBGQywgUHJvcHNXaXRoQ2hpbGRyZW4gfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7XG4gIFVzZUNvbXBvc2VySWZQcm9wcyxcbiAgdXNlQ29tcG9zZXJJZixcbn0gZnJvbSBcIi4uLy4uL3ByaW1pdGl2ZS1ob29rcy9jb21wb3Nlci91c2VDb21wb3NlcklmXCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBDb21wb3NlclByaW1pdGl2ZS5JZi5Qcm9wc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBDb21wb3NlclByaW1pdGl2ZUlmUHJvcHMgPSBDb21wb3NlclByaW1pdGl2ZUlmLlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIENvbXBvc2VyUHJpbWl0aXZlSWYge1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFByb3BzV2l0aENoaWxkcmVuPFVzZUNvbXBvc2VySWZQcm9wcz47XG59XG5cbmV4cG9ydCBjb25zdCBDb21wb3NlclByaW1pdGl2ZUlmOiBGQzxDb21wb3NlclByaW1pdGl2ZUlmLlByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICAuLi5xdWVyeVxufSkgPT4ge1xuICBjb25zdCByZXN1bHQgPSB1c2VDb21wb3NlcklmKHF1ZXJ5KTtcbiAgcmV0dXJuIHJlc3VsdCA/IGNoaWxkcmVuIDogbnVsbDtcbn07XG5cbkNvbXBvc2VyUHJpbWl0aXZlSWYuZGlzcGxheU5hbWUgPSBcIkNvbXBvc2VyUHJpbWl0aXZlLklmXCI7XG4iLCJleHBvcnQgeyBDb250ZW50UGFydFByaW1pdGl2ZVRleHQgYXMgVGV4dCB9IGZyb20gXCIuL0NvbnRlbnRQYXJ0VGV4dFwiO1xuZXhwb3J0IHsgQ29udGVudFBhcnRQcmltaXRpdmVJbWFnZSBhcyBJbWFnZSB9IGZyb20gXCIuL0NvbnRlbnRQYXJ0SW1hZ2VcIjtcbmV4cG9ydCB7IENvbnRlbnRQYXJ0UHJpbWl0aXZlRGlzcGxheSBhcyBEaXNwbGF5IH0gZnJvbSBcIi4vQ29udGVudFBhcnREaXNwbGF5XCI7XG5leHBvcnQgeyBDb250ZW50UGFydFByaW1pdGl2ZUluUHJvZ3Jlc3MgYXMgSW5Qcm9ncmVzcyB9IGZyb20gXCIuL0NvbnRlbnRQYXJ0SW5Qcm9ncmVzc1wiO1xuIiwiZXhwb3J0IHsgVGhyZWFkUHJpbWl0aXZlUm9vdCBhcyBSb290IH0gZnJvbSBcIi4vVGhyZWFkUm9vdFwiO1xuZXhwb3J0IHsgVGhyZWFkUHJpbWl0aXZlRW1wdHkgYXMgRW1wdHkgfSBmcm9tIFwiLi9UaHJlYWRFbXB0eVwiO1xuZXhwb3J0IHsgVGhyZWFkUHJpbWl0aXZlSWYgYXMgSWYgfSBmcm9tIFwiLi9UaHJlYWRJZlwiO1xuZXhwb3J0IHsgVGhyZWFkUHJpbWl0aXZlVmlld3BvcnQgYXMgVmlld3BvcnQgfSBmcm9tIFwiLi9UaHJlYWRWaWV3cG9ydFwiO1xuZXhwb3J0IHsgVGhyZWFkUHJpbWl0aXZlTWVzc2FnZXMgYXMgTWVzc2FnZXMgfSBmcm9tIFwiLi9UaHJlYWRNZXNzYWdlc1wiO1xuZXhwb3J0IHsgVGhyZWFkUHJpbWl0aXZlU2Nyb2xsVG9Cb3R0b20gYXMgU2Nyb2xsVG9Cb3R0b20gfSBmcm9tIFwiLi9UaHJlYWRTY3JvbGxUb0JvdHRvbVwiO1xuZXhwb3J0IHsgVGhyZWFkUHJpbWl0aXZlU3VnZ2VzdGlvbiBhcyBTdWdnZXN0aW9uIH0gZnJvbSBcIi4vVGhyZWFkU3VnZ2VzdGlvblwiO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IFByaW1pdGl2ZSB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlXCI7XG5pbXBvcnQgeyB0eXBlIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYsIENvbXBvbmVudFByb3BzV2l0aG91dFJlZiB9IGZyb20gXCJyZWFjdFwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgVGhyZWFkUHJpbWl0aXZlLlJvb3QuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgVGhyZWFkUHJpbWl0aXZlUm9vdFByb3BzID0gVGhyZWFkUHJpbWl0aXZlUm9vdC5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBUaHJlYWRQcmltaXRpdmVSb290IHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEVsZW1lbnRSZWY8dHlwZW9mIFByaW1pdGl2ZS5kaXY+O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IENvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUHJpbWl0aXZlLmRpdj47XG59XG5cbmV4cG9ydCBjb25zdCBUaHJlYWRQcmltaXRpdmVSb290ID0gZm9yd2FyZFJlZjxcbiAgVGhyZWFkUHJpbWl0aXZlUm9vdC5FbGVtZW50LFxuICBUaHJlYWRQcmltaXRpdmVSb290LlByb3BzXG4+KChwcm9wcywgcmVmKSA9PiB7XG4gIHJldHVybiA8UHJpbWl0aXZlLmRpdiB7Li4ucHJvcHN9IHJlZj17cmVmfSAvPjtcbn0pO1xuXG5UaHJlYWRQcmltaXRpdmVSb290LmRpc3BsYXlOYW1lID0gXCJUaHJlYWRQcmltaXRpdmUuUm9vdFwiO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB0eXBlIHsgRkMsIFByb3BzV2l0aENoaWxkcmVuIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRFbXB0eSB9IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3NcIjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYFRocmVhZFByaW1pdGl2ZS5FbXB0eS5Qcm9wc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBUaHJlYWRQcmltaXRpdmVFbXB0eVByb3BzID0gVGhyZWFkUHJpbWl0aXZlRW1wdHkuUHJvcHM7XG5cbmV4cG9ydCBuYW1lc3BhY2UgVGhyZWFkUHJpbWl0aXZlRW1wdHkge1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFByb3BzV2l0aENoaWxkcmVuO1xufVxuXG5leHBvcnQgY29uc3QgVGhyZWFkUHJpbWl0aXZlRW1wdHk6IEZDPFRocmVhZFByaW1pdGl2ZUVtcHR5LlByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxufSkgPT4ge1xuICBjb25zdCBlbXB0eSA9IHVzZVRocmVhZEVtcHR5KCk7XG4gIHJldHVybiBlbXB0eSA/IGNoaWxkcmVuIDogbnVsbDtcbn07XG5cblRocmVhZFByaW1pdGl2ZUVtcHR5LmRpc3BsYXlOYW1lID0gXCJUaHJlYWRQcmltaXRpdmUuRW1wdHlcIjtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgdHlwZSB7IEZDLCBQcm9wc1dpdGhDaGlsZHJlbiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtcbiAgVXNlVGhyZWFkSWZQcm9wcyxcbiAgdXNlVGhyZWFkSWYsXG59IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3MvdGhyZWFkL3VzZVRocmVhZElmXCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBUaHJlYWRQcmltaXRpdmUuSWYuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgVGhyZWFkUHJpbWl0aXZlSWZQcm9wcyA9IFRocmVhZFByaW1pdGl2ZUlmLlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIFRocmVhZFByaW1pdGl2ZUlmIHtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBQcm9wc1dpdGhDaGlsZHJlbjxVc2VUaHJlYWRJZlByb3BzPjtcbn1cblxuZXhwb3J0IGNvbnN0IFRocmVhZFByaW1pdGl2ZUlmOiBGQzxUaHJlYWRQcmltaXRpdmVJZi5Qcm9wcz4gPSAoe1xuICBjaGlsZHJlbixcbiAgLi4ucXVlcnlcbn0pID0+IHtcbiAgY29uc3QgcmVzdWx0ID0gdXNlVGhyZWFkSWYocXVlcnkpO1xuICByZXR1cm4gcmVzdWx0ID8gY2hpbGRyZW4gOiBudWxsO1xufTtcblxuVGhyZWFkUHJpbWl0aXZlSWYuZGlzcGxheU5hbWUgPSBcIlRocmVhZFByaW1pdGl2ZS5JZlwiO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZUNvbXBvc2VkUmVmcyB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzXCI7XG5pbXBvcnQgeyBQcmltaXRpdmUgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZVwiO1xuaW1wb3J0IHsgdHlwZSBFbGVtZW50UmVmLCBmb3J3YXJkUmVmLCBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7XG4gIFVzZVRocmVhZFZpZXdwb3J0QXV0b1Njcm9sbFByb3BzLFxuICB1c2VUaHJlYWRWaWV3cG9ydEF1dG9TY3JvbGwsXG59IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3MvdGhyZWFkL3VzZVRocmVhZFZpZXdwb3J0QXV0b1Njcm9sbFwiO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgVGhyZWFkUHJpbWl0aXZlLlZpZXdwb3J0LlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIFRocmVhZFByaW1pdGl2ZVZpZXdwb3J0UHJvcHMgPSBUaHJlYWRQcmltaXRpdmVWaWV3cG9ydC5Qcm9wcztcblxuZXhwb3J0IG5hbWVzcGFjZSBUaHJlYWRQcmltaXRpdmVWaWV3cG9ydCB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBFbGVtZW50UmVmPHR5cGVvZiBQcmltaXRpdmUuZGl2PjtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFByaW1pdGl2ZS5kaXY+ICZcbiAgICBVc2VUaHJlYWRWaWV3cG9ydEF1dG9TY3JvbGxQcm9wcztcbn1cblxuZXhwb3J0IGNvbnN0IFRocmVhZFByaW1pdGl2ZVZpZXdwb3J0ID0gZm9yd2FyZFJlZjxcbiAgVGhyZWFkUHJpbWl0aXZlVmlld3BvcnQuRWxlbWVudCxcbiAgVGhyZWFkUHJpbWl0aXZlVmlld3BvcnQuUHJvcHNcbj4oKHsgYXV0b1Njcm9sbCwgY2hpbGRyZW4sIC4uLnJlc3QgfSwgZm9yd2FyZGVkUmVmKSA9PiB7XG4gIGNvbnN0IGF1dG9TY3JvbGxSZWYgPSB1c2VUaHJlYWRWaWV3cG9ydEF1dG9TY3JvbGw8SFRNTERpdkVsZW1lbnQ+KHtcbiAgICBhdXRvU2Nyb2xsLFxuICB9KTtcblxuICBjb25zdCByZWYgPSB1c2VDb21wb3NlZFJlZnMoZm9yd2FyZGVkUmVmLCBhdXRvU2Nyb2xsUmVmKTtcblxuICByZXR1cm4gKFxuICAgIDxQcmltaXRpdmUuZGl2IHsuLi5yZXN0fSByZWY9e3JlZn0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9QcmltaXRpdmUuZGl2PlxuICApO1xufSk7XG5cblRocmVhZFByaW1pdGl2ZVZpZXdwb3J0LmRpc3BsYXlOYW1lID0gXCJUaHJlYWRQcmltaXRpdmUuVmlld3BvcnRcIjtcbiIsIlwidXNlIGNsaWVudFwiO1xuaW1wb3J0IHsgdXNlQ29tcG9zZWRSZWZzIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1jb21wb3NlLXJlZnNcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICB1c2VUaHJlYWRSdW50aW1lLFxuICB1c2VUaHJlYWRWaWV3cG9ydFN0b3JlLFxufSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9UaHJlYWRDb250ZXh0XCI7XG5pbXBvcnQgeyB1c2VPblJlc2l6ZUNvbnRlbnQgfSBmcm9tIFwiLi4vLi4vdXRpbHMvaG9va3MvdXNlT25SZXNpemVDb250ZW50XCI7XG5pbXBvcnQgeyB1c2VPblNjcm9sbFRvQm90dG9tIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2hvb2tzL3VzZU9uU2Nyb2xsVG9Cb3R0b21cIjtcbmltcG9ydCB7IHVzZU1hbmFnZWRSZWYgfSBmcm9tIFwiLi4vLi4vdXRpbHMvaG9va3MvdXNlTWFuYWdlZFJlZlwiO1xuaW1wb3J0IHsgd3JpdGFibGVTdG9yZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0L1JlYWRvbmx5U3RvcmVcIjtcblxuZXhwb3J0IHR5cGUgVXNlVGhyZWFkVmlld3BvcnRBdXRvU2Nyb2xsUHJvcHMgPSB7XG4gIGF1dG9TY3JvbGw/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICB1bnN0YWJsZV9zY3JvbGxUb0JvdHRvbU9uUnVuU3RhcnQ/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZVRocmVhZFZpZXdwb3J0QXV0b1Njcm9sbCA9IDxURWxlbWVudCBleHRlbmRzIEhUTUxFbGVtZW50Pih7XG4gIGF1dG9TY3JvbGwgPSB0cnVlLFxuICB1bnN0YWJsZV9zY3JvbGxUb0JvdHRvbU9uUnVuU3RhcnQgPSB0cnVlLFxufTogVXNlVGhyZWFkVmlld3BvcnRBdXRvU2Nyb2xsUHJvcHMpID0+IHtcbiAgY29uc3QgZGl2UmVmID0gdXNlUmVmPFRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCB0aHJlYWRWaWV3cG9ydFN0b3JlID0gdXNlVGhyZWFkVmlld3BvcnRTdG9yZSgpO1xuXG4gIGNvbnN0IGxhc3RTY3JvbGxUb3AgPSB1c2VSZWY8bnVtYmVyPigwKTtcblxuICAvLyBidWc6IHdoZW4gU2Nyb2xsVG9Cb3R0b20ncyBidXR0b24gY2hhbmdlcyBpdHMgZGlzYWJsZWQgc3RhdGUsIHRoZSBzY3JvbGwgc3RvcHNcbiAgLy8gZml4OiBkZWxheSB0aGUgc3RhdGUgY2hhbmdlIHVudGlsIHRoZSBzY3JvbGwgaXMgZG9uZVxuICBjb25zdCBpc1Njcm9sbGluZ1RvQm90dG9tUmVmID0gdXNlUmVmKGZhbHNlKTtcblxuICBjb25zdCBzY3JvbGxUb0JvdHRvbSA9IChiZWhhdmlvcjogU2Nyb2xsQmVoYXZpb3IpID0+IHtcbiAgICBjb25zdCBkaXYgPSBkaXZSZWYuY3VycmVudDtcbiAgICBpZiAoIWRpdiB8fCAhYXV0b1Njcm9sbCkgcmV0dXJuO1xuXG4gICAgaXNTY3JvbGxpbmdUb0JvdHRvbVJlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgICBkaXYuc2Nyb2xsVG8oeyB0b3A6IGRpdi5zY3JvbGxIZWlnaHQsIGJlaGF2aW9yIH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVNjcm9sbCA9ICgpID0+IHtcbiAgICBjb25zdCBkaXYgPSBkaXZSZWYuY3VycmVudDtcbiAgICBpZiAoIWRpdikgcmV0dXJuO1xuXG4gICAgY29uc3QgaXNBdEJvdHRvbSA9IHRocmVhZFZpZXdwb3J0U3RvcmUuZ2V0U3RhdGUoKS5pc0F0Qm90dG9tO1xuICAgIGNvbnN0IG5ld0lzQXRCb3R0b20gPVxuICAgICAgZGl2LnNjcm9sbEhlaWdodCAtIGRpdi5zY3JvbGxUb3AgPD0gZGl2LmNsaWVudEhlaWdodCArIDE7IC8vIFRPRE8gZmlndXJlIG91dCB3aHkgKzEgaXMgbmVlZGVkXG5cbiAgICBpZiAoIW5ld0lzQXRCb3R0b20gJiYgbGFzdFNjcm9sbFRvcC5jdXJyZW50IDwgZGl2LnNjcm9sbFRvcCkge1xuICAgICAgLy8gaWdub3JlIHNjcm9sbCBkb3duXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChuZXdJc0F0Qm90dG9tKSB7XG4gICAgICAgIGlzU2Nyb2xsaW5nVG9Cb3R0b21SZWYuY3VycmVudCA9IGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpZiAobmV3SXNBdEJvdHRvbSAhPT0gaXNBdEJvdHRvbSkge1xuICAgICAgICB3cml0YWJsZVN0b3JlKHRocmVhZFZpZXdwb3J0U3RvcmUpLnNldFN0YXRlKHtcbiAgICAgICAgICBpc0F0Qm90dG9tOiBuZXdJc0F0Qm90dG9tLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0U2Nyb2xsVG9wLmN1cnJlbnQgPSBkaXYuc2Nyb2xsVG9wO1xuICB9O1xuXG4gIGNvbnN0IHJlc2l6ZVJlZiA9IHVzZU9uUmVzaXplQ29udGVudCgoKSA9PiB7XG4gICAgaWYgKFxuICAgICAgaXNTY3JvbGxpbmdUb0JvdHRvbVJlZi5jdXJyZW50IHx8XG4gICAgICB0aHJlYWRWaWV3cG9ydFN0b3JlLmdldFN0YXRlKCkuaXNBdEJvdHRvbVxuICAgICkge1xuICAgICAgc2Nyb2xsVG9Cb3R0b20oXCJpbnN0YW50XCIpO1xuICAgIH1cblxuICAgIGhhbmRsZVNjcm9sbCgpO1xuICB9KTtcblxuICBjb25zdCBzY3JvbGxSZWYgPSB1c2VNYW5hZ2VkUmVmPEhUTUxFbGVtZW50PigoZWwpID0+IHtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIGhhbmRsZVNjcm9sbCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgaGFuZGxlU2Nyb2xsKTtcbiAgICB9O1xuICB9KTtcblxuICBjb25zdCBhdXRvU2Nyb2xsUmVmID0gdXNlQ29tcG9zZWRSZWZzPFRFbGVtZW50PihyZXNpemVSZWYsIHNjcm9sbFJlZiwgZGl2UmVmKTtcblxuICB1c2VPblNjcm9sbFRvQm90dG9tKCgpID0+IHtcbiAgICBzY3JvbGxUb0JvdHRvbShcImF1dG9cIik7XG4gIH0pO1xuXG4gIC8vIGF1dG9zY3JvbGwgb24gcnVuIHN0YXJ0XG4gIGNvbnN0IHRocmVhZFJ1bnRpbWUgPSB1c2VUaHJlYWRSdW50aW1lKCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCF1bnN0YWJsZV9zY3JvbGxUb0JvdHRvbU9uUnVuU3RhcnQpIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgICByZXR1cm4gdGhyZWFkUnVudGltZS51bnN0YWJsZV9vbihcInJ1bi1zdGFydFwiLCBmb2N1cyk7XG4gIH0sIFt1bnN0YWJsZV9zY3JvbGxUb0JvdHRvbU9uUnVuU3RhcnRdKTtcblxuICByZXR1cm4gYXV0b1Njcm9sbFJlZjtcbn07XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFja1JlZiB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtdXNlLWNhbGxiYWNrLXJlZlwiO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZU1hbmFnZWRSZWYgfSBmcm9tIFwiLi91c2VNYW5hZ2VkUmVmXCI7XG5cbmV4cG9ydCBjb25zdCB1c2VPblJlc2l6ZUNvbnRlbnQgPSAoY2FsbGJhY2s6ICgpID0+IHZvaWQpID0+IHtcbiAgY29uc3QgY2FsbGJhY2tSZWYgPSB1c2VDYWxsYmFja1JlZihjYWxsYmFjayk7XG5cbiAgY29uc3QgcmVmQ2FsbGJhY2sgPSB1c2VDYWxsYmFjayhcbiAgICAoZWw6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICBjb25zdCByZXNpemVPYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcigoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrUmVmKCk7XG4gICAgICB9KTtcblxuICAgICAgY29uc3QgbXV0YXRpb25PYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKChtdXRhdGlvbnMpID0+IHtcbiAgICAgICAgZm9yIChjb25zdCBtdXRhdGlvbiBvZiBtdXRhdGlvbnMpIHtcbiAgICAgICAgICBmb3IgKGNvbnN0IG5vZGUgb2YgbXV0YXRpb24uYWRkZWROb2Rlcykge1xuICAgICAgICAgICAgaWYgKG5vZGUgaW5zdGFuY2VvZiBFbGVtZW50KSB7XG4gICAgICAgICAgICAgIHJlc2l6ZU9ic2VydmVyLm9ic2VydmUobm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZm9yIChjb25zdCBub2RlIG9mIG11dGF0aW9uLnJlbW92ZWROb2Rlcykge1xuICAgICAgICAgICAgaWYgKG5vZGUgaW5zdGFuY2VvZiBFbGVtZW50KSB7XG4gICAgICAgICAgICAgIHJlc2l6ZU9ic2VydmVyLnVub2JzZXJ2ZShub2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjYWxsYmFja1JlZigpO1xuICAgICAgfSk7XG5cbiAgICAgIHJlc2l6ZU9ic2VydmVyLm9ic2VydmUoZWwpO1xuICAgICAgbXV0YXRpb25PYnNlcnZlci5vYnNlcnZlKGVsLCB7IGNoaWxkTGlzdDogdHJ1ZSB9KTtcblxuICAgICAgLy8gT2JzZXJ2ZSBleGlzdGluZyBjaGlsZHJlblxuICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiBlbC5jaGlsZHJlbikge1xuICAgICAgICByZXNpemVPYnNlcnZlci5vYnNlcnZlKGNoaWxkKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgcmVzaXplT2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgICAgICBtdXRhdGlvbk9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgIH07XG4gICAgfSxcbiAgICBbY2FsbGJhY2tSZWZdLFxuICApO1xuXG4gIHJldHVybiB1c2VNYW5hZ2VkUmVmKHJlZkNhbGxiYWNrKTtcbn07XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdHlwZSBDb21wb25lbnRUeXBlLCB0eXBlIEZDLCBtZW1vLCB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VUaHJlYWQsIHVzZVRocmVhZFJ1bnRpbWUgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9yZWFjdC9UaHJlYWRDb250ZXh0XCI7XG5pbXBvcnQgeyBNZXNzYWdlUnVudGltZVByb3ZpZGVyIH0gZnJvbSBcIi4uLy4uL2NvbnRleHQvcHJvdmlkZXJzL01lc3NhZ2VSdW50aW1lUHJvdmlkZXJcIjtcbmltcG9ydCB7IHVzZUVkaXRDb21wb3NlciwgdXNlTWVzc2FnZSB9IGZyb20gXCIuLi8uLi9jb250ZXh0XCI7XG5pbXBvcnQgeyBUaHJlYWRNZXNzYWdlIGFzIFRocmVhZE1lc3NhZ2VUeXBlIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBUaHJlYWRQcmltaXRpdmUuTWVzc2FnZXMuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgVGhyZWFkUHJpbWl0aXZlTWVzc2FnZXNQcm9wcyA9IFRocmVhZFByaW1pdGl2ZU1lc3NhZ2VzLlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIFRocmVhZFByaW1pdGl2ZU1lc3NhZ2VzIHtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gICAgY29tcG9uZW50czpcbiAgICAgIHwge1xuICAgICAgICAgIE1lc3NhZ2U6IENvbXBvbmVudFR5cGU7XG4gICAgICAgICAgRWRpdENvbXBvc2VyPzogQ29tcG9uZW50VHlwZSB8IHVuZGVmaW5lZDtcbiAgICAgICAgICBVc2VyRWRpdENvbXBvc2VyPzogQ29tcG9uZW50VHlwZSB8IHVuZGVmaW5lZDtcbiAgICAgICAgICBBc3Npc3RhbnRFZGl0Q29tcG9zZXI/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgICAgIFN5c3RlbUVkaXRDb21wb3Nlcj86IENvbXBvbmVudFR5cGUgfCB1bmRlZmluZWQ7XG4gICAgICAgICAgVXNlck1lc3NhZ2U/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgICAgIEFzc2lzdGFudE1lc3NhZ2U/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgICAgIFN5c3RlbU1lc3NhZ2U/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICB8IHtcbiAgICAgICAgICBNZXNzYWdlPzogQ29tcG9uZW50VHlwZSB8IHVuZGVmaW5lZDtcbiAgICAgICAgICBFZGl0Q29tcG9zZXI/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgICAgIFVzZXJFZGl0Q29tcG9zZXI/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgICAgIEFzc2lzdGFudEVkaXRDb21wb3Nlcj86IENvbXBvbmVudFR5cGUgfCB1bmRlZmluZWQ7XG4gICAgICAgICAgU3lzdGVtRWRpdENvbXBvc2VyPzogQ29tcG9uZW50VHlwZSB8IHVuZGVmaW5lZDtcbiAgICAgICAgICBVc2VyTWVzc2FnZTogQ29tcG9uZW50VHlwZTtcbiAgICAgICAgICBBc3Npc3RhbnRNZXNzYWdlOiBDb21wb25lbnRUeXBlO1xuICAgICAgICAgIFN5c3RlbU1lc3NhZ2U/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgICB9O1xuICB9O1xufVxuXG5jb25zdCBpc0NvbXBvbmVudHNTYW1lID0gKFxuICBwcmV2OiBUaHJlYWRQcmltaXRpdmVNZXNzYWdlcy5Qcm9wc1tcImNvbXBvbmVudHNcIl0sXG4gIG5leHQ6IFRocmVhZFByaW1pdGl2ZU1lc3NhZ2VzLlByb3BzW1wiY29tcG9uZW50c1wiXSxcbikgPT4ge1xuICByZXR1cm4gKFxuICAgIHByZXYuTWVzc2FnZSA9PT0gbmV4dC5NZXNzYWdlICYmXG4gICAgcHJldi5FZGl0Q29tcG9zZXIgPT09IG5leHQuRWRpdENvbXBvc2VyICYmXG4gICAgcHJldi5Vc2VyRWRpdENvbXBvc2VyID09PSBuZXh0LlVzZXJFZGl0Q29tcG9zZXIgJiZcbiAgICBwcmV2LkFzc2lzdGFudEVkaXRDb21wb3NlciA9PT0gbmV4dC5Bc3Npc3RhbnRFZGl0Q29tcG9zZXIgJiZcbiAgICBwcmV2LlN5c3RlbUVkaXRDb21wb3NlciA9PT0gbmV4dC5TeXN0ZW1FZGl0Q29tcG9zZXIgJiZcbiAgICBwcmV2LlVzZXJNZXNzYWdlID09PSBuZXh0LlVzZXJNZXNzYWdlICYmXG4gICAgcHJldi5Bc3Npc3RhbnRNZXNzYWdlID09PSBuZXh0LkFzc2lzdGFudE1lc3NhZ2UgJiZcbiAgICBwcmV2LlN5c3RlbU1lc3NhZ2UgPT09IG5leHQuU3lzdGVtTWVzc2FnZVxuICApO1xufTtcblxuY29uc3QgREVGQVVMVF9TWVNURU1fTUVTU0FHRSA9ICgpID0+IG51bGw7XG5cbmNvbnN0IGdldENvbXBvbmVudCA9IChcbiAgY29tcG9uZW50czogVGhyZWFkUHJpbWl0aXZlTWVzc2FnZXMuUHJvcHNbXCJjb21wb25lbnRzXCJdLFxuICByb2xlOiBUaHJlYWRNZXNzYWdlVHlwZVtcInJvbGVcIl0sXG4gIGlzRWRpdGluZzogYm9vbGVhbixcbikgPT4ge1xuICBzd2l0Y2ggKHJvbGUpIHtcbiAgICBjYXNlIFwidXNlclwiOlxuICAgICAgaWYgKGlzRWRpdGluZykge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIGNvbXBvbmVudHMuVXNlckVkaXRDb21wb3NlciA/P1xuICAgICAgICAgIGNvbXBvbmVudHMuRWRpdENvbXBvc2VyID8/XG4gICAgICAgICAgY29tcG9uZW50cy5Vc2VyTWVzc2FnZSA/P1xuICAgICAgICAgIChjb21wb25lbnRzLk1lc3NhZ2UgYXMgQ29tcG9uZW50VHlwZSlcbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBjb21wb25lbnRzLlVzZXJNZXNzYWdlID8/IChjb21wb25lbnRzLk1lc3NhZ2UgYXMgQ29tcG9uZW50VHlwZSk7XG4gICAgICB9XG4gICAgY2FzZSBcImFzc2lzdGFudFwiOlxuICAgICAgaWYgKGlzRWRpdGluZykge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIGNvbXBvbmVudHMuQXNzaXN0YW50RWRpdENvbXBvc2VyID8/XG4gICAgICAgICAgY29tcG9uZW50cy5FZGl0Q29tcG9zZXIgPz9cbiAgICAgICAgICBjb21wb25lbnRzLkFzc2lzdGFudE1lc3NhZ2UgPz9cbiAgICAgICAgICAoY29tcG9uZW50cy5NZXNzYWdlIGFzIENvbXBvbmVudFR5cGUpXG4gICAgICAgICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIGNvbXBvbmVudHMuQXNzaXN0YW50TWVzc2FnZSA/PyAoY29tcG9uZW50cy5NZXNzYWdlIGFzIENvbXBvbmVudFR5cGUpXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgY2FzZSBcInN5c3RlbVwiOlxuICAgICAgaWYgKGlzRWRpdGluZykge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIGNvbXBvbmVudHMuU3lzdGVtRWRpdENvbXBvc2VyID8/XG4gICAgICAgICAgY29tcG9uZW50cy5FZGl0Q29tcG9zZXIgPz9cbiAgICAgICAgICBjb21wb25lbnRzLlN5c3RlbU1lc3NhZ2UgPz9cbiAgICAgICAgICAoY29tcG9uZW50cy5NZXNzYWdlIGFzIENvbXBvbmVudFR5cGUpXG4gICAgICAgICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gY29tcG9uZW50cy5TeXN0ZW1NZXNzYWdlID8/IERFRkFVTFRfU1lTVEVNX01FU1NBR0U7XG4gICAgICB9XG4gICAgZGVmYXVsdDpcbiAgICAgIGNvbnN0IF9leGhhdXN0aXZlQ2hlY2s6IG5ldmVyID0gcm9sZTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBtZXNzYWdlIHJvbGU6ICR7X2V4aGF1c3RpdmVDaGVja31gKTtcbiAgfVxufTtcblxudHlwZSBUaHJlYWRNZXNzYWdlQ29tcG9uZW50UHJvcHMgPSB7XG4gIGNvbXBvbmVudHM6IFRocmVhZFByaW1pdGl2ZU1lc3NhZ2VzLlByb3BzW1wiY29tcG9uZW50c1wiXTtcbn07XG5cbmNvbnN0IFRocmVhZE1lc3NhZ2VDb21wb25lbnQ6IEZDPFRocmVhZE1lc3NhZ2VDb21wb25lbnRQcm9wcz4gPSAoe1xuICBjb21wb25lbnRzLFxufSkgPT4ge1xuICBjb25zdCByb2xlID0gdXNlTWVzc2FnZSgobSkgPT4gbS5yb2xlKTtcbiAgY29uc3QgaXNFZGl0aW5nID0gdXNlRWRpdENvbXBvc2VyKChjKSA9PiBjLmlzRWRpdGluZyk7XG4gIGNvbnN0IENvbXBvbmVudCA9IGdldENvbXBvbmVudChjb21wb25lbnRzLCByb2xlLCBpc0VkaXRpbmcpO1xuXG4gIHJldHVybiA8Q29tcG9uZW50IC8+O1xufTtcblxudHlwZSBUaHJlYWRNZXNzYWdlUHJvcHMgPSB7XG4gIG1lc3NhZ2VJbmRleDogbnVtYmVyO1xuICBjb21wb25lbnRzOiBUaHJlYWRQcmltaXRpdmVNZXNzYWdlcy5Qcm9wc1tcImNvbXBvbmVudHNcIl07XG59O1xuXG5jb25zdCBUaHJlYWRNZXNzYWdlSW1wbDogRkM8VGhyZWFkTWVzc2FnZVByb3BzPiA9ICh7XG4gIG1lc3NhZ2VJbmRleCxcbiAgY29tcG9uZW50cyxcbn0pID0+IHtcbiAgY29uc3QgdGhyZWFkUnVudGltZSA9IHVzZVRocmVhZFJ1bnRpbWUoKTtcbiAgY29uc3QgcnVudGltZSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gdGhyZWFkUnVudGltZS5nZXRNZXNzc2FnZUJ5SW5kZXgobWVzc2FnZUluZGV4KSxcbiAgICBbdGhyZWFkUnVudGltZSwgbWVzc2FnZUluZGV4XSxcbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxNZXNzYWdlUnVudGltZVByb3ZpZGVyIHJ1bnRpbWU9e3J1bnRpbWV9PlxuICAgICAgPFRocmVhZE1lc3NhZ2VDb21wb25lbnQgY29tcG9uZW50cz17Y29tcG9uZW50c30gLz5cbiAgICA8L01lc3NhZ2VSdW50aW1lUHJvdmlkZXI+XG4gICk7XG59O1xuXG5jb25zdCBUaHJlYWRNZXNzYWdlID0gbWVtbyhcbiAgVGhyZWFkTWVzc2FnZUltcGwsXG4gIChwcmV2LCBuZXh0KSA9PlxuICAgIHByZXYubWVzc2FnZUluZGV4ID09PSBuZXh0Lm1lc3NhZ2VJbmRleCAmJlxuICAgIGlzQ29tcG9uZW50c1NhbWUocHJldi5jb21wb25lbnRzLCBuZXh0LmNvbXBvbmVudHMpLFxuKTtcblxuZXhwb3J0IGNvbnN0IFRocmVhZFByaW1pdGl2ZU1lc3NhZ2VzSW1wbDogRkM8VGhyZWFkUHJpbWl0aXZlTWVzc2FnZXMuUHJvcHM+ID0gKHtcbiAgY29tcG9uZW50cyxcbn0pID0+IHtcbiAgY29uc3QgbWVzc2FnZXNMZW5ndGggPSB1c2VUaHJlYWQoKHQpID0+IHQubWVzc2FnZXMubGVuZ3RoKTtcbiAgaWYgKG1lc3NhZ2VzTGVuZ3RoID09PSAwKSByZXR1cm4gbnVsbDtcblxuICByZXR1cm4gQXJyYXkuZnJvbSh7IGxlbmd0aDogbWVzc2FnZXNMZW5ndGggfSwgKF8sIGluZGV4KSA9PiAoXG4gICAgPFRocmVhZE1lc3NhZ2Uga2V5PXtpbmRleH0gbWVzc2FnZUluZGV4PXtpbmRleH0gY29tcG9uZW50cz17Y29tcG9uZW50c30gLz5cbiAgKSk7XG59O1xuXG5UaHJlYWRQcmltaXRpdmVNZXNzYWdlc0ltcGwuZGlzcGxheU5hbWUgPSBcIlRocmVhZFByaW1pdGl2ZS5NZXNzYWdlc1wiO1xuXG5leHBvcnQgY29uc3QgVGhyZWFkUHJpbWl0aXZlTWVzc2FnZXMgPSBtZW1vKFxuICBUaHJlYWRQcmltaXRpdmVNZXNzYWdlc0ltcGwsXG4gIChwcmV2LCBuZXh0KSA9PiBpc0NvbXBvbmVudHNTYW1lKHByZXYuY29tcG9uZW50cywgbmV4dC5jb21wb25lbnRzKSxcbik7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdHlwZSBGQywgdHlwZSBQcm9wc1dpdGhDaGlsZHJlbiwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSBcInp1c3RhbmRcIjtcbmltcG9ydCB7IE1lc3NhZ2VDb250ZXh0IH0gZnJvbSBcIi4uL3JlYWN0L01lc3NhZ2VDb250ZXh0XCI7XG5pbXBvcnQgdHlwZSB7IE1lc3NhZ2VDb250ZXh0VmFsdWUgfSBmcm9tIFwiLi4vcmVhY3QvTWVzc2FnZUNvbnRleHRcIjtcbmltcG9ydCB7IG1ha2VNZXNzYWdlVXRpbHNTdG9yZSB9IGZyb20gXCIuLi9zdG9yZXMvTWVzc2FnZVV0aWxzXCI7XG5pbXBvcnQgeyBSZWFkb25seVN0b3JlLCB3cml0YWJsZVN0b3JlIH0gZnJvbSBcIi4uL1JlYWRvbmx5U3RvcmVcIjtcbmltcG9ydCB7IE1lc3NhZ2VSdW50aW1lIH0gZnJvbSBcIi4uLy4uL2FwaVwiO1xuXG50eXBlIE1lc3NhZ2VQcm92aWRlclByb3BzID0gUHJvcHNXaXRoQ2hpbGRyZW48e1xuICBydW50aW1lOiBNZXNzYWdlUnVudGltZTtcbn0+O1xuXG5jb25zdCB1c2VNZXNzYWdlUnVudGltZVN0b3JlID0gKHJ1bnRpbWU6IE1lc3NhZ2VSdW50aW1lKSA9PiB7XG4gIGNvbnN0IFtzdG9yZV0gPSB1c2VTdGF0ZSgoKSA9PiBjcmVhdGUoKCkgPT4gcnVudGltZSkpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgd3JpdGFibGVTdG9yZShzdG9yZSkuc2V0U3RhdGUocnVudGltZSwgdHJ1ZSk7XG4gIH0sIFtydW50aW1lLCBzdG9yZV0pO1xuXG4gIHJldHVybiBzdG9yZTtcbn07XG5cbmNvbnN0IHVzZU1lc3NhZ2VTdG9yZSA9IChydW50aW1lOiBNZXNzYWdlUnVudGltZSkgPT4ge1xuICBjb25zdCBbc3RvcmVdID0gdXNlU3RhdGUoKCkgPT4gY3JlYXRlKCgpID0+IHJ1bnRpbWUuZ2V0U3RhdGUoKSkpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZVN0YXRlID0gKCkgPT5cbiAgICAgIHdyaXRhYmxlU3RvcmUoc3RvcmUpLnNldFN0YXRlKHJ1bnRpbWUuZ2V0U3RhdGUoKSwgdHJ1ZSk7XG4gICAgdXBkYXRlU3RhdGUoKTtcbiAgICByZXR1cm4gcnVudGltZS5zdWJzY3JpYmUodXBkYXRlU3RhdGUpO1xuICB9LCBbcnVudGltZSwgc3RvcmVdKTtcblxuICByZXR1cm4gc3RvcmU7XG59O1xuXG5jb25zdCB1c2VNZXNzYWdlVXRpbHNTdG9yZSA9ICgpID0+IHtcbiAgY29uc3QgW3N0b3JlXSA9IHVzZVN0YXRlKCgpID0+IG1ha2VNZXNzYWdlVXRpbHNTdG9yZSgpKTtcbiAgcmV0dXJuIHN0b3JlO1xufTtcblxuY29uc3QgdXNlRWRpdENvbXBvc2VyU3RvcmUgPSAoXG4gIHVzZU1lc3NhZ2VSdW50aW1lOiBSZWFkb25seVN0b3JlPE1lc3NhZ2VSdW50aW1lPixcbikgPT4ge1xuICBjb25zdCBydW50aW1lID0gdXNlTWVzc2FnZVJ1bnRpbWUuZ2V0U3RhdGUoKS5jb21wb3NlcjtcbiAgY29uc3QgW3N0b3JlXSA9IHVzZVN0YXRlKCgpID0+IGNyZWF0ZSgoKSA9PiBydW50aW1lLmdldFN0YXRlKCkpKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZVN0YXRlID0gKCkgPT4gd3JpdGFibGVTdG9yZShzdG9yZSkuc2V0U3RhdGUocnVudGltZS5nZXRTdGF0ZSgpKTtcbiAgICB1cGRhdGVTdGF0ZSgpO1xuICAgIHJldHVybiBydW50aW1lLnN1YnNjcmliZSh1cGRhdGVTdGF0ZSk7XG4gIH0sIFtydW50aW1lLCBzdG9yZV0pO1xuXG4gIHJldHVybiBzdG9yZTtcbn07XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlUnVudGltZVByb3ZpZGVyOiBGQzxNZXNzYWdlUHJvdmlkZXJQcm9wcz4gPSAoe1xuICBydW50aW1lLFxuICBjaGlsZHJlbixcbn0pID0+IHtcbiAgY29uc3QgdXNlTWVzc2FnZVJ1bnRpbWUgPSB1c2VNZXNzYWdlUnVudGltZVN0b3JlKHJ1bnRpbWUpO1xuICBjb25zdCB1c2VNZXNzYWdlID0gdXNlTWVzc2FnZVN0b3JlKHJ1bnRpbWUpO1xuICBjb25zdCB1c2VNZXNzYWdlVXRpbHMgPSB1c2VNZXNzYWdlVXRpbHNTdG9yZSgpO1xuICBjb25zdCB1c2VFZGl0Q29tcG9zZXIgPSB1c2VFZGl0Q29tcG9zZXJTdG9yZSh1c2VNZXNzYWdlUnVudGltZSk7XG4gIGNvbnN0IFtjb250ZXh0XSA9IHVzZVN0YXRlPE1lc3NhZ2VDb250ZXh0VmFsdWU+KCgpID0+IHtcbiAgICByZXR1cm4geyB1c2VNZXNzYWdlUnVudGltZSwgdXNlTWVzc2FnZSwgdXNlTWVzc2FnZVV0aWxzLCB1c2VFZGl0Q29tcG9zZXIgfTtcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8TWVzc2FnZUNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e2NvbnRleHR9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvTWVzc2FnZUNvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuIiwiaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSBcInp1c3RhbmRcIjtcblxuZXhwb3J0IHR5cGUgTWVzc2FnZVV0aWxzU3RhdGUgPSBSZWFkb25seTx7XG4gIGlzQ29waWVkOiBib29sZWFuO1xuICBzZXRJc0NvcGllZDogKHZhbHVlOiBib29sZWFuKSA9PiB2b2lkO1xuXG4gIGlzSG92ZXJpbmc6IGJvb2xlYW47XG4gIHNldElzSG92ZXJpbmc6ICh2YWx1ZTogYm9vbGVhbikgPT4gdm9pZDtcbn0+O1xuXG5leHBvcnQgY29uc3QgbWFrZU1lc3NhZ2VVdGlsc1N0b3JlID0gKCkgPT5cbiAgY3JlYXRlPE1lc3NhZ2VVdGlsc1N0YXRlPigoc2V0KSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzQ29waWVkOiBmYWxzZSxcbiAgICAgIHNldElzQ29waWVkOiAodmFsdWUpID0+IHtcbiAgICAgICAgc2V0KHsgaXNDb3BpZWQ6IHZhbHVlIH0pO1xuICAgICAgfSxcbiAgICAgIGlzSG92ZXJpbmc6IGZhbHNlLFxuICAgICAgc2V0SXNIb3ZlcmluZzogKHZhbHVlKSA9PiB7XG4gICAgICAgIHNldCh7IGlzSG92ZXJpbmc6IHZhbHVlIH0pO1xuICAgICAgfSxcbiAgICB9O1xuICB9KTtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQge1xuICBBY3Rpb25CdXR0b25FbGVtZW50LFxuICBBY3Rpb25CdXR0b25Qcm9wcyxcbiAgY3JlYXRlQWN0aW9uQnV0dG9uLFxufSBmcm9tIFwiLi4vLi4vdXRpbHMvY3JlYXRlQWN0aW9uQnV0dG9uXCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRTY3JvbGxUb0JvdHRvbSB9IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3MvdGhyZWFkL3VzZVRocmVhZFNjcm9sbFRvQm90dG9tXCI7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBUaHJlYWRQcmltaXRpdmUuU2Nyb2xsVG9Cb3R0b20uUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgVGhyZWFkUHJpbWl0aXZlU2Nyb2xsVG9Cb3R0b21Qcm9wcyA9XG4gIFRocmVhZFByaW1pdGl2ZVNjcm9sbFRvQm90dG9tLlByb3BzO1xuXG5leHBvcnQgbmFtZXNwYWNlIFRocmVhZFByaW1pdGl2ZVNjcm9sbFRvQm90dG9tIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEFjdGlvbkJ1dHRvbkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gQWN0aW9uQnV0dG9uUHJvcHM8dHlwZW9mIHVzZVRocmVhZFNjcm9sbFRvQm90dG9tPjtcbn1cblxuZXhwb3J0IGNvbnN0IFRocmVhZFByaW1pdGl2ZVNjcm9sbFRvQm90dG9tID0gY3JlYXRlQWN0aW9uQnV0dG9uKFxuICBcIlRocmVhZFByaW1pdGl2ZS5TY3JvbGxUb0JvdHRvbVwiLFxuICB1c2VUaHJlYWRTY3JvbGxUb0JvdHRvbSxcbik7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHtcbiAgQWN0aW9uQnV0dG9uRWxlbWVudCxcbiAgQWN0aW9uQnV0dG9uUHJvcHMsXG4gIGNyZWF0ZUFjdGlvbkJ1dHRvbixcbn0gZnJvbSBcIi4uLy4uL3V0aWxzL2NyZWF0ZUFjdGlvbkJ1dHRvblwiO1xuaW1wb3J0IHsgdXNlVGhyZWFkU3VnZ2VzdGlvbiB9IGZyb20gXCIuLi8uLi9wcmltaXRpdmUtaG9va3MvdGhyZWFkL3VzZVRocmVhZFN1Z2dlc3Rpb25cIjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYFRocmVhZFByaW1pdGl2ZS5TdWdnZXN0aW9uLlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIFRocmVhZFByaW1pdGl2ZVN1Z2dlc3Rpb25Qcm9wcyA9IFRocmVhZFByaW1pdGl2ZVN1Z2dlc3Rpb24uUHJvcHM7XG5cbmV4cG9ydCBuYW1lc3BhY2UgVGhyZWFkUHJpbWl0aXZlU3VnZ2VzdGlvbiB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBBY3Rpb25CdXR0b25FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IEFjdGlvbkJ1dHRvblByb3BzPHR5cGVvZiB1c2VUaHJlYWRTdWdnZXN0aW9uPjtcbn1cblxuZXhwb3J0IGNvbnN0IFRocmVhZFByaW1pdGl2ZVN1Z2dlc3Rpb24gPSBjcmVhdGVBY3Rpb25CdXR0b24oXG4gIFwiVGhyZWFkUHJpbWl0aXZlLlN1Z2dlc3Rpb25cIixcbiAgdXNlVGhyZWFkU3VnZ2VzdGlvbixcbiAgW1wicHJvbXB0XCIsIFwiYXV0b1NlbmRcIiwgXCJtZXRob2RcIl0sXG4pO1xuIiwiaW1wb3J0IHsgVW5zdWJzY3JpYmUgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcbmltcG9ydCB7IEFzc2lzdGFudFJ1bnRpbWVDb3JlIH0gZnJvbSBcIi4vQXNzaXN0YW50UnVudGltZUNvcmVcIjtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYHJ1bnRpbWUudGhyZWFkLnN1YnNjcmliZWAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gKi9cbmV4cG9ydCBjb25zdCBzdWJzY3JpYmVUb01haW5UaHJlYWQgPSAoXG4gIHJ1bnRpbWU6IEFzc2lzdGFudFJ1bnRpbWVDb3JlLFxuICBjYWxsYmFjazogKCkgPT4gdm9pZCxcbikgPT4ge1xuICBsZXQgZmlyc3QgPSB0cnVlO1xuICBsZXQgY2xlYW51cDogVW5zdWJzY3JpYmUgfCB1bmRlZmluZWQ7XG4gIGNvbnN0IGlubmVyID0gKCkgPT4ge1xuICAgIGNsZWFudXA/LigpO1xuICAgIGNsZWFudXAgPSBydW50aW1lLnRocmVhZC5zdWJzY3JpYmUoY2FsbGJhY2spO1xuXG4gICAgaWYgKCFmaXJzdCkge1xuICAgICAgY2FsbGJhY2soKTtcbiAgICB9XG4gICAgZmlyc3QgPSBmYWxzZTtcbiAgfTtcblxuICBjb25zdCB1bnN1YnNjcmliZSA9IHJ1bnRpbWUuc3Vic2NyaWJlKGlubmVyKTtcbiAgaW5uZXIoKTtcblxuICByZXR1cm4gKCkgPT4ge1xuICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgY2xlYW51cD8uKCk7XG4gIH07XG59O1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZUluc2VydGlvbkVmZmVjdCwgdXNlTWVtbywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0eXBlIHsgQ2hhdE1vZGVsQWRhcHRlciB9IGZyb20gXCIuL0NoYXRNb2RlbEFkYXB0ZXJcIjtcbmltcG9ydCB7IExvY2FsUnVudGltZUNvcmUgfSBmcm9tIFwiLi9Mb2NhbFJ1bnRpbWVDb3JlXCI7XG5pbXBvcnQgeyBMb2NhbFJ1bnRpbWVPcHRpb25zIH0gZnJvbSBcIi4vTG9jYWxSdW50aW1lT3B0aW9uc1wiO1xuaW1wb3J0IHtcbiAgQXNzaXN0YW50UnVudGltZSxcbiAgQXNzaXN0YW50UnVudGltZUltcGwsXG59IGZyb20gXCIuLi8uLi9hcGkvQXNzaXN0YW50UnVudGltZVwiO1xuaW1wb3J0IHsgVGhyZWFkUnVudGltZUltcGwgfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWxcIjtcbmltcG9ydCB7IFRocmVhZFJ1bnRpbWUgfSBmcm9tIFwiLi4vLi4vYXBpXCI7XG5cbmV4cG9ydCB0eXBlIExvY2FsUnVudGltZSA9IEFzc2lzdGFudFJ1bnRpbWUgJiB7XG4gIHJlc2V0OiAob3B0aW9ucz86IFBhcmFtZXRlcnM8TG9jYWxSdW50aW1lQ29yZVtcInJlc2V0XCJdPlswXSkgPT4gdm9pZDtcbn07XG5cbmNsYXNzIExvY2FsUnVudGltZUltcGwgZXh0ZW5kcyBBc3Npc3RhbnRSdW50aW1lSW1wbCBpbXBsZW1lbnRzIExvY2FsUnVudGltZSB7XG4gIHByaXZhdGUgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBjb3JlOiBMb2NhbFJ1bnRpbWVDb3JlLFxuICAgIHRocmVhZDogVGhyZWFkUnVudGltZSxcbiAgKSB7XG4gICAgc3VwZXIoY29yZSwgdGhyZWFkKTtcbiAgfVxuXG4gIHB1YmxpYyByZXNldChvcHRpb25zPzogUGFyYW1ldGVyczxMb2NhbFJ1bnRpbWVDb3JlW1wicmVzZXRcIl0+WzBdKSB7XG4gICAgdGhpcy5jb3JlLnJlc2V0KG9wdGlvbnMpO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBvdmVycmlkZSBjcmVhdGUoX2NvcmU6IExvY2FsUnVudGltZUNvcmUpIHtcbiAgICByZXR1cm4gbmV3IExvY2FsUnVudGltZUltcGwoXG4gICAgICBfY29yZSxcbiAgICAgIEFzc2lzdGFudFJ1bnRpbWVJbXBsLmNyZWF0ZU1haW5UaHJlYWRSdW50aW1lKF9jb3JlLCBUaHJlYWRSdW50aW1lSW1wbCksXG4gICAgKSBhcyBMb2NhbFJ1bnRpbWU7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHVzZUxvY2FsUnVudGltZSA9IChcbiAgYWRhcHRlcjogQ2hhdE1vZGVsQWRhcHRlcixcbiAgb3B0aW9uczogTG9jYWxSdW50aW1lT3B0aW9ucyA9IHt9LFxuKSA9PiB7XG4gIGNvbnN0IFtydW50aW1lXSA9IHVzZVN0YXRlKCgpID0+IG5ldyBMb2NhbFJ1bnRpbWVDb3JlKGFkYXB0ZXIsIG9wdGlvbnMpKTtcblxuICB1c2VJbnNlcnRpb25FZmZlY3QoKCkgPT4ge1xuICAgIHJ1bnRpbWUudGhyZWFkLmFkYXB0ZXIgPSBhZGFwdGVyO1xuICAgIHJ1bnRpbWUudGhyZWFkLm9wdGlvbnMgPSBvcHRpb25zO1xuICB9KTtcblxuICByZXR1cm4gdXNlTWVtbygoKSA9PiBMb2NhbFJ1bnRpbWVJbXBsLmNyZWF0ZShydW50aW1lKSwgW3J1bnRpbWVdKTtcbn07XG4iLCJpbXBvcnQgeyB0eXBlIE1vZGVsQ29uZmlnUHJvdmlkZXIgfSBmcm9tIFwiLi4vLi4vdHlwZXMvTW9kZWxDb25maWdUeXBlc1wiO1xuaW1wb3J0IHR5cGUgeyBVbnN1YnNjcmliZSB9IGZyb20gXCIuLi8uLi90eXBlcy9VbnN1YnNjcmliZVwiO1xuaW1wb3J0IHR5cGUgeyBBc3Npc3RhbnRSdW50aW1lQ29yZSB9IGZyb20gXCIuL0Fzc2lzdGFudFJ1bnRpbWVDb3JlXCI7XG5pbXBvcnQgeyBUaHJlYWRSdW50aW1lQ29yZSB9IGZyb20gXCIuL1RocmVhZFJ1bnRpbWVDb3JlXCI7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBCYXNlQXNzaXN0YW50UnVudGltZUNvcmU8XG4gIFRUaHJlYWRSdW50aW1lIGV4dGVuZHMgVGhyZWFkUnVudGltZUNvcmUsXG4+IGltcGxlbWVudHMgQXNzaXN0YW50UnVudGltZUNvcmVcbntcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfdGhyZWFkOiBUVGhyZWFkUnVudGltZSkge1xuICAgIHRoaXMuX3RocmVhZCA9IF90aHJlYWQ7XG4gIH1cblxuICBnZXQgdGhyZWFkKCkge1xuICAgIHJldHVybiB0aGlzLl90aHJlYWQ7XG4gIH1cblxuICBzZXQgdGhyZWFkKHRocmVhZDogVFRocmVhZFJ1bnRpbWUpIHtcbiAgICB0aGlzLl90aHJlYWQgPSB0aHJlYWQ7XG4gICAgdGhpcy5zdWJzY3JpcHRpb25IYW5kbGVyKCk7XG4gIH1cblxuICBwdWJsaWMgYWJzdHJhY3Qgc3dpdGNoVG9OZXdUaHJlYWQoKTogdm9pZDtcblxuICBwdWJsaWMgYWJzdHJhY3QgcmVnaXN0ZXJNb2RlbENvbmZpZ1Byb3ZpZGVyKFxuICAgIHByb3ZpZGVyOiBNb2RlbENvbmZpZ1Byb3ZpZGVyLFxuICApOiBVbnN1YnNjcmliZTtcbiAgcHVibGljIGFic3RyYWN0IHN3aXRjaFRvVGhyZWFkKHRocmVhZElkOiBzdHJpbmcgfCBudWxsKTogdm9pZDtcblxuICBwcml2YXRlIF9zdWJzY3JpcHRpb25zID0gbmV3IFNldDwoKSA9PiB2b2lkPigpO1xuXG4gIHB1YmxpYyBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiBVbnN1YnNjcmliZSB7XG4gICAgdGhpcy5fc3Vic2NyaXB0aW9ucy5hZGQoY2FsbGJhY2spO1xuICAgIHJldHVybiAoKSA9PiB0aGlzLl9zdWJzY3JpcHRpb25zLmRlbGV0ZShjYWxsYmFjayk7XG4gIH1cblxuICBwcml2YXRlIHN1YnNjcmlwdGlvbkhhbmRsZXIgPSAoKSA9PiB7XG4gICAgZm9yIChjb25zdCBjYWxsYmFjayBvZiB0aGlzLl9zdWJzY3JpcHRpb25zKSBjYWxsYmFjaygpO1xuICB9O1xufVxuIiwiZXhwb3J0IHR5cGUgeyBUaHJlYWRSdW50aW1lQ29yZSB9IGZyb20gXCIuL3J1bnRpbWVzL2NvcmUvVGhyZWFkUnVudGltZUNvcmVcIjtcbmV4cG9ydCB7IERlZmF1bHRUaHJlYWRDb21wb3NlclJ1bnRpbWVDb3JlIH0gZnJvbSBcIi4vcnVudGltZXMvY29tcG9zZXIvRGVmYXVsdFRocmVhZENvbXBvc2VyUnVudGltZUNvcmVcIjtcbmV4cG9ydCB7IFByb3h5Q29uZmlnUHJvdmlkZXIgfSBmcm9tIFwiLi91dGlscy9Qcm94eUNvbmZpZ1Byb3ZpZGVyXCI7XG5leHBvcnQgeyBNZXNzYWdlUmVwb3NpdG9yeSB9IGZyb20gXCIuL3J1bnRpbWVzL3V0aWxzL01lc3NhZ2VSZXBvc2l0b3J5XCI7XG5leHBvcnQgeyBCYXNlQXNzaXN0YW50UnVudGltZUNvcmUgfSBmcm9tIFwiLi9ydW50aW1lcy9jb3JlL0Jhc2VBc3Npc3RhbnRSdW50aW1lQ29yZVwiO1xuZXhwb3J0IHsgVG9vbHRpcEljb25CdXR0b24gfSBmcm9tIFwiLi91aS9iYXNlL3Rvb2x0aXAtaWNvbi1idXR0b25cIjtcbmV4cG9ydCB7IGdlbmVyYXRlSWQgfSBmcm9tIFwiLi91dGlscy9pZFV0aWxzXCI7XG5leHBvcnQgeyBBc3Npc3RhbnRSdW50aW1lSW1wbCB9IGZyb20gXCIuL2FwaS9Bc3Npc3RhbnRSdW50aW1lXCI7XG5leHBvcnQge1xuICBUaHJlYWRSdW50aW1lSW1wbCxcbiAgdHlwZSBUaHJlYWRSdW50aW1lQ29yZUJpbmRpbmcsXG59IGZyb20gXCIuL2FwaS9UaHJlYWRSdW50aW1lXCI7XG5cbmV4cG9ydCAqIGZyb20gXCIuL3V0aWxzL3Ntb290aFwiO1xuIiwiaW1wb3J0IHtcbiAgQXR0YWNobWVudCxcbiAgQ29tcGxldGVBdHRhY2htZW50LFxuICBQZW5kaW5nQXR0YWNobWVudCxcbn0gZnJvbSBcIi4uLy4uL3R5cGVzL0F0dGFjaG1lbnRUeXBlc1wiO1xuaW1wb3J0IHsgQXBwZW5kTWVzc2FnZSwgVW5zdWJzY3JpYmUgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcbmltcG9ydCB7IEF0dGFjaG1lbnRBZGFwdGVyIH0gZnJvbSBcIi4uL2F0dGFjaG1lbnRcIjtcbmltcG9ydCB7IENvbXBvc2VyUnVudGltZUNvcmUgfSBmcm9tIFwiLi4vY29yZS9Db21wb3NlclJ1bnRpbWVDb3JlXCI7XG5cbmNvbnN0IGlzQXR0YWNobWVudENvbXBsZXRlID0gKGE6IEF0dGFjaG1lbnQpOiBhIGlzIENvbXBsZXRlQXR0YWNobWVudCA9PlxuICBhLnN0YXR1cy50eXBlID09PSBcImNvbXBsZXRlXCI7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBCYXNlQ29tcG9zZXJSdW50aW1lQ29yZSBpbXBsZW1lbnRzIENvbXBvc2VyUnVudGltZUNvcmUge1xuICBwdWJsaWMgcmVhZG9ubHkgaXNFZGl0aW5nID0gdHJ1ZTtcblxuICBwcm90ZWN0ZWQgYWJzdHJhY3QgZ2V0QXR0YWNobWVudEFkYXB0ZXIoKTogQXR0YWNobWVudEFkYXB0ZXIgfCB1bmRlZmluZWQ7XG5cbiAgcHVibGljIGdldEF0dGFjaG1lbnRBY2NlcHQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5nZXRBdHRhY2htZW50QWRhcHRlcigpPy5hY2NlcHQgPz8gXCIqXCI7XG4gIH1cblxuICBwcml2YXRlIF9hdHRhY2htZW50czogcmVhZG9ubHkgQXR0YWNobWVudFtdID0gW107XG4gIHByb3RlY3RlZCBzZXQgYXR0YWNobWVudHModmFsdWU6IHJlYWRvbmx5IEF0dGFjaG1lbnRbXSkge1xuICAgIHRoaXMuX2F0dGFjaG1lbnRzID0gdmFsdWU7XG4gICAgdGhpcy5ub3RpZnlTdWJzY3JpYmVycygpO1xuICB9XG4gIHB1YmxpYyBnZXQgYXR0YWNobWVudHMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2F0dGFjaG1lbnRzO1xuICB9XG5cbiAgcHVibGljIGFic3RyYWN0IGdldCBjYW5DYW5jZWwoKTogYm9vbGVhbjtcblxuICBwdWJsaWMgZ2V0IGlzRW1wdHkoKSB7XG4gICAgcmV0dXJuICF0aGlzLnRleHQudHJpbSgpICYmICF0aGlzLmF0dGFjaG1lbnRzLmxlbmd0aDtcbiAgfVxuXG4gIHByaXZhdGUgX3RleHQgPSBcIlwiO1xuXG4gIGdldCB0ZXh0KCkge1xuICAgIHJldHVybiB0aGlzLl90ZXh0O1xuICB9XG5cbiAgc2V0VGV4dCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fdGV4dCA9IHZhbHVlO1xuICAgIHRoaXMubm90aWZ5U3Vic2NyaWJlcnMoKTtcbiAgfVxuXG4gIHJlc2V0KCkge1xuICAgIHRoaXMuX3RleHQgPSBcIlwiO1xuICAgIHRoaXMuX2F0dGFjaG1lbnRzID0gW107XG4gICAgdGhpcy5ub3RpZnlTdWJzY3JpYmVycygpO1xuICB9XG5cbiAgcHVibGljIGFzeW5jIHNlbmQoKSB7XG4gICAgY29uc3QgYWRhcHRlciA9IHRoaXMuZ2V0QXR0YWNobWVudEFkYXB0ZXIoKTtcbiAgICBjb25zdCBhdHRhY2htZW50cyA9XG4gICAgICBhZGFwdGVyICYmIHRoaXMuYXR0YWNobWVudHMubGVuZ3RoID4gMFxuICAgICAgICA/IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgICAgICAgdGhpcy5hdHRhY2htZW50cy5tYXAoYXN5bmMgKGEpID0+IHtcbiAgICAgICAgICAgICAgaWYgKGlzQXR0YWNobWVudENvbXBsZXRlKGEpKSByZXR1cm4gYTtcbiAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYWRhcHRlci5zZW5kKGEpO1xuICAgICAgICAgICAgICAvLyBUT0RPIHJlbW92ZSBhZnRlciAwLjYuMFxuICAgICAgICAgICAgICBpZiAocmVzdWx0LnN0YXR1cz8udHlwZSAhPT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnN0YXR1cyA9IHsgdHlwZTogXCJjb21wbGV0ZVwiIH07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCBhcyBDb21wbGV0ZUF0dGFjaG1lbnQ7XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICApXG4gICAgICAgIDogW107XG5cbiAgICBjb25zdCBtZXNzYWdlOiBPbWl0PEFwcGVuZE1lc3NhZ2UsIFwicGFyZW50SWRcIj4gPSB7XG4gICAgICByb2xlOiBcInVzZXJcIixcbiAgICAgIGNvbnRlbnQ6IHRoaXMudGV4dCA/IFt7IHR5cGU6IFwidGV4dFwiLCB0ZXh0OiB0aGlzLnRleHQgfV0gOiBbXSxcbiAgICAgIGF0dGFjaG1lbnRzLFxuICAgIH07XG4gICAgdGhpcy5yZXNldCgpO1xuXG4gICAgdGhpcy5oYW5kbGVTZW5kKG1lc3NhZ2UpO1xuICB9XG4gIHB1YmxpYyBhYnN0cmFjdCBoYW5kbGVTZW5kKG1lc3NhZ2U6IE9taXQ8QXBwZW5kTWVzc2FnZSwgXCJwYXJlbnRJZFwiPik6IHZvaWQ7XG4gIHB1YmxpYyBhYnN0cmFjdCBjYW5jZWwoKTogdm9pZDtcblxuICBhc3luYyBhZGRBdHRhY2htZW50KGZpbGU6IEZpbGUpIHtcbiAgICBjb25zdCBhZGFwdGVyID0gdGhpcy5nZXRBdHRhY2htZW50QWRhcHRlcigpO1xuICAgIGlmICghYWRhcHRlcikgdGhyb3cgbmV3IEVycm9yKFwiQXR0YWNobWVudHMgYXJlIG5vdCBzdXBwb3J0ZWRcIik7XG5cbiAgICBjb25zdCBhdHRhY2htZW50ID0gYXdhaXQgYWRhcHRlci5hZGQoeyBmaWxlIH0pO1xuICAgIC8vIFRPRE8gcmVtb3ZlIGFmdGVyIDAuNi4wXG4gICAgaWYgKGF0dGFjaG1lbnQuc3RhdHVzID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGF0dGFjaG1lbnQuc3RhdHVzID0geyB0eXBlOiBcInJlcXVpcmVzLWFjdGlvblwiLCByZWFzb246IFwiY29tcG9zZXItc2VuZFwiIH07XG4gICAgfVxuXG4gICAgdGhpcy5fYXR0YWNobWVudHMgPSBbLi4udGhpcy5fYXR0YWNobWVudHMsIGF0dGFjaG1lbnQgYXMgUGVuZGluZ0F0dGFjaG1lbnRdO1xuICAgIHRoaXMubm90aWZ5U3Vic2NyaWJlcnMoKTtcbiAgfVxuXG4gIGFzeW5jIHJlbW92ZUF0dGFjaG1lbnQoYXR0YWNobWVudElkOiBzdHJpbmcpIHtcbiAgICBjb25zdCBhZGFwdGVyID0gdGhpcy5nZXRBdHRhY2htZW50QWRhcHRlcigpO1xuICAgIGlmICghYWRhcHRlcikgdGhyb3cgbmV3IEVycm9yKFwiQXR0YWNobWVudHMgYXJlIG5vdCBzdXBwb3J0ZWRcIik7XG5cbiAgICBjb25zdCBpbmRleCA9IHRoaXMuX2F0dGFjaG1lbnRzLmZpbmRJbmRleCgoYSkgPT4gYS5pZCA9PT0gYXR0YWNobWVudElkKTtcbiAgICBpZiAoaW5kZXggPT09IC0xKSB0aHJvdyBuZXcgRXJyb3IoXCJBdHRhY2htZW50IG5vdCBmb3VuZFwiKTtcbiAgICBjb25zdCBhdHRhY2htZW50ID0gdGhpcy5fYXR0YWNobWVudHNbaW5kZXhdITtcblxuICAgIGF3YWl0IGFkYXB0ZXIucmVtb3ZlKGF0dGFjaG1lbnQpO1xuXG4gICAgdGhpcy5fYXR0YWNobWVudHMgPSB0aGlzLl9hdHRhY2htZW50cy50b1NwbGljZWQoaW5kZXgsIDEpO1xuICAgIHRoaXMubm90aWZ5U3Vic2NyaWJlcnMoKTtcbiAgfVxuXG4gIHByaXZhdGUgX3N1YnNjcmlwdGlvbnMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KCk7XG4gIHByb3RlY3RlZCBub3RpZnlTdWJzY3JpYmVycygpIHtcbiAgICBmb3IgKGNvbnN0IGNhbGxiYWNrIG9mIHRoaXMuX3N1YnNjcmlwdGlvbnMpIGNhbGxiYWNrKCk7XG4gIH1cblxuICBwdWJsaWMgc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogVW5zdWJzY3JpYmUge1xuICAgIHRoaXMuX3N1YnNjcmlwdGlvbnMuYWRkKGNhbGxiYWNrKTtcbiAgICByZXR1cm4gKCkgPT4gdGhpcy5fc3Vic2NyaXB0aW9ucy5kZWxldGUoY2FsbGJhY2spO1xuICB9XG59XG4iLCJpbXBvcnQgeyBBcHBlbmRNZXNzYWdlLCBQZW5kaW5nQXR0YWNobWVudCB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuaW1wb3J0IHsgQXR0YWNobWVudEFkYXB0ZXIgfSBmcm9tIFwiLi4vYXR0YWNobWVudFwiO1xuaW1wb3J0IHsgVGhyZWFkQ29tcG9zZXJSdW50aW1lQ29yZSB9IGZyb20gXCIuLi9jb3JlL0NvbXBvc2VyUnVudGltZUNvcmVcIjtcbmltcG9ydCB7IFRocmVhZFJ1bnRpbWVDb3JlIH0gZnJvbSBcIi4uL2NvcmUvVGhyZWFkUnVudGltZUNvcmVcIjtcbmltcG9ydCB7IEJhc2VDb21wb3NlclJ1bnRpbWVDb3JlIH0gZnJvbSBcIi4vQmFzZUNvbXBvc2VyUnVudGltZUNvcmVcIjtcblxuZXhwb3J0IGNsYXNzIERlZmF1bHRUaHJlYWRDb21wb3NlclJ1bnRpbWVDb3JlXG4gIGV4dGVuZHMgQmFzZUNvbXBvc2VyUnVudGltZUNvcmVcbiAgaW1wbGVtZW50cyBUaHJlYWRDb21wb3NlclJ1bnRpbWVDb3JlXG57XG4gIHByaXZhdGUgX2NhbkNhbmNlbCA9IGZhbHNlO1xuICBwdWJsaWMgZ2V0IGNhbkNhbmNlbCgpIHtcbiAgICByZXR1cm4gdGhpcy5fY2FuQ2FuY2VsO1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldCBhdHRhY2htZW50cygpOiByZWFkb25seSBQZW5kaW5nQXR0YWNobWVudFtdIHtcbiAgICByZXR1cm4gc3VwZXIuYXR0YWNobWVudHMgYXMgcmVhZG9ubHkgUGVuZGluZ0F0dGFjaG1lbnRbXTtcbiAgfVxuXG4gIHByb3RlY3RlZCBnZXRBdHRhY2htZW50QWRhcHRlcigpIHtcbiAgICByZXR1cm4gdGhpcy5ydW50aW1lLmFkYXB0ZXJzPy5hdHRhY2htZW50cztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcnVudGltZTogT21pdDxUaHJlYWRSdW50aW1lQ29yZSwgXCJjb21wb3NlclwiPiAmIHtcbiAgICAgIGFkYXB0ZXJzPzogeyBhdHRhY2htZW50cz86IEF0dGFjaG1lbnRBZGFwdGVyIHwgdW5kZWZpbmVkIH0gfCB1bmRlZmluZWQ7XG4gICAgfSxcbiAgKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmNvbm5lY3QoKTtcbiAgfVxuXG4gIHB1YmxpYyBjb25uZWN0KCkge1xuICAgIHJldHVybiB0aGlzLnJ1bnRpbWUuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIGlmICh0aGlzLmNhbkNhbmNlbCAhPT0gdGhpcy5ydW50aW1lLmNhcGFiaWxpdGllcy5jYW5jZWwpIHtcbiAgICAgICAgdGhpcy5fY2FuQ2FuY2VsID0gdGhpcy5ydW50aW1lLmNhcGFiaWxpdGllcy5jYW5jZWw7XG4gICAgICAgIHRoaXMubm90aWZ5U3Vic2NyaWJlcnMoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBoYW5kbGVTZW5kKG1lc3NhZ2U6IE9taXQ8QXBwZW5kTWVzc2FnZSwgXCJwYXJlbnRJZFwiPikge1xuICAgIHRoaXMucnVudGltZS5hcHBlbmQoe1xuICAgICAgLi4uKG1lc3NhZ2UgYXMgQXBwZW5kTWVzc2FnZSksXG4gICAgICBwYXJlbnRJZDogdGhpcy5ydW50aW1lLm1lc3NhZ2VzLmF0KC0xKT8uaWQgPz8gbnVsbCxcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBjYW5jZWwoKSB7XG4gICAgdGhpcy5ydW50aW1lLmNhbmNlbFJ1bigpO1xuICB9XG59XG4iLCJpbXBvcnQge1xuICB0eXBlIE1vZGVsQ29uZmlnUHJvdmlkZXIsXG4gIG1lcmdlTW9kZWxDb25maWdzLFxufSBmcm9tIFwiLi4vdHlwZXMvTW9kZWxDb25maWdUeXBlc1wiO1xuXG5leHBvcnQgY2xhc3MgUHJveHlDb25maWdQcm92aWRlciBpbXBsZW1lbnRzIE1vZGVsQ29uZmlnUHJvdmlkZXIge1xuICBwcml2YXRlIF9wcm92aWRlcnMgPSBuZXcgU2V0PE1vZGVsQ29uZmlnUHJvdmlkZXI+KCk7XG5cbiAgZ2V0TW9kZWxDb25maWcoKSB7XG4gICAgcmV0dXJuIG1lcmdlTW9kZWxDb25maWdzKHRoaXMuX3Byb3ZpZGVycyk7XG4gIH1cblxuICByZWdpc3Rlck1vZGVsQ29uZmlnUHJvdmlkZXIocHJvdmlkZXI6IE1vZGVsQ29uZmlnUHJvdmlkZXIpIHtcbiAgICB0aGlzLl9wcm92aWRlcnMuYWRkKHByb3ZpZGVyKTtcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9IHByb3ZpZGVyLnN1YnNjcmliZT8uKCgpID0+IHtcbiAgICAgIHRoaXMubm90aWZ5U3Vic2NyaWJlcnMoKTtcbiAgICB9KTtcbiAgICB0aGlzLm5vdGlmeVN1YnNjcmliZXJzKCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMuX3Byb3ZpZGVycy5kZWxldGUocHJvdmlkZXIpO1xuICAgICAgdW5zdWJzY3JpYmU/LigpO1xuICAgICAgdGhpcy5ub3RpZnlTdWJzY3JpYmVycygpO1xuICAgIH07XG4gIH1cblxuICBwcml2YXRlIF9zdWJzY3JpYmVycyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKTtcblxuICBub3RpZnlTdWJzY3JpYmVycygpIHtcbiAgICBmb3IgKGNvbnN0IGNhbGxiYWNrIG9mIHRoaXMuX3N1YnNjcmliZXJzKSBjYWxsYmFjaygpO1xuICB9XG5cbiAgc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgdGhpcy5fc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKTtcbiAgICByZXR1cm4gKCkgPT4gdGhpcy5fc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgY3VzdG9tQWxwaGFiZXQgfSBmcm9tIFwibmFub2lkL25vbi1zZWN1cmVcIjtcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlSWQgPSBjdXN0b21BbHBoYWJldChcbiAgXCIwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5elwiLFxuICA3LFxuKTtcblxuY29uc3Qgb3B0aW1pc3RpY1ByZWZpeCA9IFwiX19vcHRpbWlzdGljX19cIjtcbmV4cG9ydCBjb25zdCBnZW5lcmF0ZU9wdGltaXN0aWNJZCA9ICgpID0+IGAke29wdGltaXN0aWNQcmVmaXh9JHtnZW5lcmF0ZUlkKCl9YDtcbmV4cG9ydCBjb25zdCBpc09wdGltaXN0aWNJZCA9IChpZDogc3RyaW5nKSA9PiBpZC5zdGFydHNXaXRoKG9wdGltaXN0aWNQcmVmaXgpO1xuIiwiaW1wb3J0IHsgZ2VuZXJhdGVJZCB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbFwiO1xuaW1wb3J0IHtcbiAgVGhyZWFkTWVzc2FnZSxcbiAgQ29yZU1lc3NhZ2UsXG4gIFRvb2xDYWxsQ29udGVudFBhcnQsXG4gIE1lc3NhZ2VTdGF0dXMsXG4gIENvbXBsZXRlQXR0YWNobWVudCxcbn0gZnJvbSBcIi4uLy4uLy4uL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBmcm9tQ29yZU1lc3NhZ2VzID0gKFxuICBtZXNzYWdlOiByZWFkb25seSBDb3JlTWVzc2FnZVtdLFxuKTogVGhyZWFkTWVzc2FnZVtdID0+IHtcbiAgcmV0dXJuIG1lc3NhZ2UubWFwKChtZXNzYWdlKSA9PiBmcm9tQ29yZU1lc3NhZ2UobWVzc2FnZSkpO1xufTtcblxuZXhwb3J0IGNvbnN0IGZyb21Db3JlTWVzc2FnZSA9IChcbiAgbWVzc2FnZTogQ29yZU1lc3NhZ2UsXG4gIHtcbiAgICBpZCA9IGdlbmVyYXRlSWQoKSxcbiAgICBzdGF0dXMgPSB7IHR5cGU6IFwiY29tcGxldGVcIiwgcmVhc29uOiBcInVua25vd25cIiB9IGFzIE1lc3NhZ2VTdGF0dXMsXG4gICAgYXR0YWNobWVudHMgPSBbXSBhcyByZWFkb25seSBDb21wbGV0ZUF0dGFjaG1lbnRbXSxcbiAgfSA9IHt9LFxuKTogVGhyZWFkTWVzc2FnZSA9PiB7XG4gIGNvbnN0IGNvbW1vblByb3BzID0ge1xuICAgIGlkLFxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKSxcbiAgfTtcblxuICBjb25zdCByb2xlID0gbWVzc2FnZS5yb2xlO1xuICBzd2l0Y2ggKHJvbGUpIHtcbiAgICBjYXNlIFwiYXNzaXN0YW50XCI6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5jb21tb25Qcm9wcyxcbiAgICAgICAgcm9sZSxcbiAgICAgICAgY29udGVudDogbWVzc2FnZS5jb250ZW50Lm1hcCgocGFydCkgPT4ge1xuICAgICAgICAgIGlmIChwYXJ0LnR5cGUgPT09IFwidG9vbC1jYWxsXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIC4uLnBhcnQsXG4gICAgICAgICAgICAgIGFyZ3NUZXh0OiBKU09OLnN0cmluZ2lmeShwYXJ0LmFyZ3MpLFxuICAgICAgICAgICAgfSBzYXRpc2ZpZXMgVG9vbENhbGxDb250ZW50UGFydDtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHBhcnQ7XG4gICAgICAgIH0pLFxuICAgICAgICBzdGF0dXMsXG4gICAgICB9IHNhdGlzZmllcyBUaHJlYWRNZXNzYWdlO1xuXG4gICAgY2FzZSBcInVzZXJcIjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmNvbW1vblByb3BzLFxuICAgICAgICByb2xlLFxuICAgICAgICBjb250ZW50OiBtZXNzYWdlLmNvbnRlbnQsXG4gICAgICAgIGF0dGFjaG1lbnRzLFxuICAgICAgfSBzYXRpc2ZpZXMgVGhyZWFkTWVzc2FnZTtcblxuICAgIGNhc2UgXCJzeXN0ZW1cIjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmNvbW1vblByb3BzLFxuICAgICAgICByb2xlLFxuICAgICAgICBjb250ZW50OiBtZXNzYWdlLmNvbnRlbnQsXG4gICAgICB9IHNhdGlzZmllcyBUaHJlYWRNZXNzYWdlO1xuXG4gICAgZGVmYXVsdDoge1xuICAgICAgY29uc3QgdW5zdXBwb3J0ZWRSb2xlOiBuZXZlciA9IHJvbGU7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gbWVzc2FnZSByb2xlOiAke3Vuc3VwcG9ydGVkUm9sZX1gKTtcbiAgICB9XG4gIH1cbn07XG4iLCJpbXBvcnQgdHlwZSB7IENvcmVNZXNzYWdlLCBUaHJlYWRNZXNzYWdlIH0gZnJvbSBcIi4uLy4uL3R5cGVzL0Fzc2lzdGFudFR5cGVzXCI7XG5pbXBvcnQgeyBnZW5lcmF0ZU9wdGltaXN0aWNJZCB9IGZyb20gXCIuLi8uLi91dGlscy9pZFV0aWxzXCI7XG5pbXBvcnQgeyBmcm9tQ29yZU1lc3NhZ2UgfSBmcm9tIFwiLi4vZWRnZS9jb252ZXJ0ZXJzL2Zyb21Db3JlTWVzc2FnZVwiO1xuXG50eXBlIFJlcG9zaXRvcnlQYXJlbnQgPSB7XG4gIGNoaWxkcmVuOiBzdHJpbmdbXTtcbiAgbmV4dDogUmVwb3NpdG9yeU1lc3NhZ2UgfCBudWxsO1xufTtcblxudHlwZSBSZXBvc2l0b3J5TWVzc2FnZSA9IFJlcG9zaXRvcnlQYXJlbnQgJiB7XG4gIHByZXY6IFJlcG9zaXRvcnlNZXNzYWdlIHwgbnVsbDtcbiAgY3VycmVudDogVGhyZWFkTWVzc2FnZTtcbiAgbGV2ZWw6IG51bWJlcjtcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXhwb3J0ZWRNZXNzYWdlUmVwb3NpdG9yeSB7XG4gIGhlYWRJZD86IHN0cmluZyB8IG51bGw7XG4gIG1lc3NhZ2VzOiBBcnJheTx7XG4gICAgbWVzc2FnZTogVGhyZWFkTWVzc2FnZTtcbiAgICBwYXJlbnRJZDogc3RyaW5nIHwgbnVsbDtcbiAgfT47XG59XG5cbmNvbnN0IGZpbmRIZWFkID0gKFxuICBtZXNzYWdlOiBSZXBvc2l0b3J5TWVzc2FnZSB8IFJlcG9zaXRvcnlQYXJlbnQsXG4pOiBSZXBvc2l0b3J5TWVzc2FnZSB8IG51bGwgPT4ge1xuICBpZiAobWVzc2FnZS5uZXh0KSByZXR1cm4gZmluZEhlYWQobWVzc2FnZS5uZXh0KTtcbiAgaWYgKFwiY3VycmVudFwiIGluIG1lc3NhZ2UpIHJldHVybiBtZXNzYWdlO1xuICByZXR1cm4gbnVsbDtcbn07XG5cbmV4cG9ydCBjbGFzcyBNZXNzYWdlUmVwb3NpdG9yeSB7XG4gIHByaXZhdGUgbWVzc2FnZXMgPSBuZXcgTWFwPHN0cmluZywgUmVwb3NpdG9yeU1lc3NhZ2U+KCk7IC8vIG1lc3NhZ2VfaWQgLT4gaXRlbVxuICBwcml2YXRlIGhlYWQ6IFJlcG9zaXRvcnlNZXNzYWdlIHwgbnVsbCA9IG51bGw7XG4gIHByaXZhdGUgcm9vdDogUmVwb3NpdG9yeVBhcmVudCA9IHtcbiAgICBjaGlsZHJlbjogW10sXG4gICAgbmV4dDogbnVsbCxcbiAgfTtcblxuICBwcml2YXRlIHBlcmZvcm1PcChcbiAgICBuZXdQYXJlbnQ6IFJlcG9zaXRvcnlNZXNzYWdlIHwgbnVsbCxcbiAgICBjaGlsZDogUmVwb3NpdG9yeU1lc3NhZ2UsXG4gICAgb3BlcmF0aW9uOiBcImN1dFwiIHwgXCJsaW5rXCIgfCBcInJlbGlua1wiLFxuICApIHtcbiAgICBjb25zdCBwYXJlbnRPclJvb3QgPSBjaGlsZC5wcmV2ID8/IHRoaXMucm9vdDtcbiAgICBjb25zdCBuZXdQYXJlbnRPclJvb3QgPSBuZXdQYXJlbnQgPz8gdGhpcy5yb290O1xuXG4gICAgaWYgKG9wZXJhdGlvbiA9PT0gXCJyZWxpbmtcIiAmJiBwYXJlbnRPclJvb3QgPT09IG5ld1BhcmVudE9yUm9vdCkgcmV0dXJuO1xuXG4gICAgLy8gY3V0XG4gICAgaWYgKG9wZXJhdGlvbiAhPT0gXCJsaW5rXCIpIHtcbiAgICAgIC8vIHJlbW92ZSBmcm9tIHBhcmVudE9yUm9vdC5jaGlsZHJlblxuICAgICAgcGFyZW50T3JSb290LmNoaWxkcmVuID0gcGFyZW50T3JSb290LmNoaWxkcmVuLmZpbHRlcihcbiAgICAgICAgKG0pID0+IG0gIT09IGNoaWxkLmN1cnJlbnQuaWQsXG4gICAgICApO1xuXG4gICAgICAvLyB1cGRhdGUgcGFyZW50T3JSb290Lm5leHRcbiAgICAgIGlmIChwYXJlbnRPclJvb3QubmV4dCA9PT0gY2hpbGQpIHtcbiAgICAgICAgY29uc3QgZmFsbGJhY2tJZCA9IHBhcmVudE9yUm9vdC5jaGlsZHJlbi5hdCgtMSk7XG4gICAgICAgIGNvbnN0IGZhbGxiYWNrID0gZmFsbGJhY2tJZCA/IHRoaXMubWVzc2FnZXMuZ2V0KGZhbGxiYWNrSWQpIDogbnVsbDtcbiAgICAgICAgaWYgKGZhbGxiYWNrID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBcIk1lc3NhZ2VSZXBvc2l0b3J5KHBlcmZvcm1PcC9jdXQpOiBGYWxsYmFjayBzaWJsaW5nIG1lc3NhZ2Ugbm90IGZvdW5kLiBUaGlzIGlzIGxpa2VseSBhbiBpbnRlcm5hbCBidWcgaW4gYXNzaXN0YW50LXVpLlwiLFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgcGFyZW50T3JSb290Lm5leHQgPSBmYWxsYmFjaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBsaW5rXG4gICAgaWYgKG9wZXJhdGlvbiAhPT0gXCJjdXRcIikge1xuICAgICAgLy8gZW5zdXJlIHRoZSBjaGlsZCBpcyBub3QgcGFydCBvZiBwYXJlbnQgdHJlZVxuICAgICAgZm9yIChcbiAgICAgICAgbGV0IGN1cnJlbnQ6IFJlcG9zaXRvcnlNZXNzYWdlIHwgbnVsbCA9IG5ld1BhcmVudDtcbiAgICAgICAgY3VycmVudDtcbiAgICAgICAgY3VycmVudCA9IGN1cnJlbnQucHJldlxuICAgICAgKSB7XG4gICAgICAgIGlmIChjdXJyZW50LmN1cnJlbnQuaWQgPT09IGNoaWxkLmN1cnJlbnQuaWQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBcIk1lc3NhZ2VSZXBvc2l0b3J5KHBlcmZvcm1PcC9saW5rKTogQSBtZXNzYWdlIHdpdGggdGhlIHNhbWUgaWQgYWxyZWFkeSBleGlzdHMgaW4gdGhlIHBhcmVudCB0cmVlLiBUaGlzIGVycm9yIG9jY3VycyBpZiB0aGUgc2FtZSBtZXNzYWdlIGlkIGlzIGZvdW5kIG11bHRpcGxlIHRpbWVzLiBUaGlzIGlzIGxpa2VseSBhbiBpbnRlcm5hbCBidWcgaW4gYXNzaXN0YW50LXVpLlwiLFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gYWRkIHRvIHBhcmVudE9yUm9vdC5jaGlsZHJlblxuICAgICAgbmV3UGFyZW50T3JSb290LmNoaWxkcmVuID0gW1xuICAgICAgICAuLi5uZXdQYXJlbnRPclJvb3QuY2hpbGRyZW4sXG4gICAgICAgIGNoaWxkLmN1cnJlbnQuaWQsXG4gICAgICBdO1xuXG4gICAgICAvLyB1cGRhdGUgcGFyZW50T3JSb290Lm5leHRcbiAgICAgIGlmIChmaW5kSGVhZChjaGlsZCkgPT09IHRoaXMuaGVhZCB8fCBuZXdQYXJlbnRPclJvb3QubmV4dCA9PT0gbnVsbCkge1xuICAgICAgICBuZXdQYXJlbnRPclJvb3QubmV4dCA9IGNoaWxkO1xuICAgICAgfVxuXG4gICAgICBjaGlsZC5wcmV2ID0gbmV3UGFyZW50O1xuICAgIH1cbiAgfVxuICBnZXRNZXNzYWdlcygpIHtcbiAgICBjb25zdCBtZXNzYWdlcyA9IG5ldyBBcnJheTxUaHJlYWRNZXNzYWdlPih0aGlzLmhlYWQ/LmxldmVsID8/IDApO1xuICAgIGZvciAobGV0IGN1cnJlbnQgPSB0aGlzLmhlYWQ7IGN1cnJlbnQ7IGN1cnJlbnQgPSBjdXJyZW50LnByZXYpIHtcbiAgICAgIG1lc3NhZ2VzW2N1cnJlbnQubGV2ZWxdID0gY3VycmVudC5jdXJyZW50O1xuICAgIH1cbiAgICByZXR1cm4gbWVzc2FnZXM7XG4gIH1cblxuICBhZGRPclVwZGF0ZU1lc3NhZ2UocGFyZW50SWQ6IHN0cmluZyB8IG51bGwsIG1lc3NhZ2U6IFRocmVhZE1lc3NhZ2UpIHtcbiAgICBjb25zdCBleGlzdGluZ0l0ZW0gPSB0aGlzLm1lc3NhZ2VzLmdldChtZXNzYWdlLmlkKTtcbiAgICBjb25zdCBwcmV2ID0gcGFyZW50SWQgPyB0aGlzLm1lc3NhZ2VzLmdldChwYXJlbnRJZCkgOiBudWxsO1xuICAgIGlmIChwcmV2ID09PSB1bmRlZmluZWQpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiTWVzc2FnZVJlcG9zaXRvcnkoYWRkT3JVcGRhdGVNZXNzYWdlKTogUGFyZW50IG1lc3NhZ2Ugbm90IGZvdW5kLiBUaGlzIGlzIGxpa2VseSBhbiBpbnRlcm5hbCBidWcgaW4gYXNzaXN0YW50LXVpLlwiLFxuICAgICAgKTtcblxuICAgIC8vIHVwZGF0ZSBleGlzdGluZyBtZXNzYWdlXG4gICAgaWYgKGV4aXN0aW5nSXRlbSkge1xuICAgICAgZXhpc3RpbmdJdGVtLmN1cnJlbnQgPSBtZXNzYWdlO1xuICAgICAgdGhpcy5wZXJmb3JtT3AocHJldiwgZXhpc3RpbmdJdGVtLCBcInJlbGlua1wiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBjcmVhdGUgYSBuZXcgbWVzc2FnZVxuICAgIGNvbnN0IG5ld0l0ZW06IFJlcG9zaXRvcnlNZXNzYWdlID0ge1xuICAgICAgcHJldixcbiAgICAgIGN1cnJlbnQ6IG1lc3NhZ2UsXG4gICAgICBuZXh0OiBudWxsLFxuICAgICAgY2hpbGRyZW46IFtdLFxuICAgICAgbGV2ZWw6IHByZXYgPyBwcmV2LmxldmVsICsgMSA6IDAsXG4gICAgfTtcblxuICAgIHRoaXMubWVzc2FnZXMuc2V0KG1lc3NhZ2UuaWQsIG5ld0l0ZW0pO1xuICAgIHRoaXMucGVyZm9ybU9wKHByZXYsIG5ld0l0ZW0sIFwibGlua1wiKTtcblxuICAgIGlmICh0aGlzLmhlYWQgPT09IHByZXYpIHtcbiAgICAgIHRoaXMuaGVhZCA9IG5ld0l0ZW07XG4gICAgfVxuICB9XG5cbiAgZ2V0TWVzc2FnZShtZXNzYWdlSWQ6IHN0cmluZykge1xuICAgIGNvbnN0IG1lc3NhZ2UgPSB0aGlzLm1lc3NhZ2VzLmdldChtZXNzYWdlSWQpO1xuICAgIGlmICghbWVzc2FnZSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJNZXNzYWdlUmVwb3NpdG9yeSh1cGRhdGVNZXNzYWdlKTogTWVzc2FnZSBub3QgZm91bmQuIFRoaXMgaXMgbGlrZWx5IGFuIGludGVybmFsIGJ1ZyBpbiBhc3Npc3RhbnQtdWkuXCIsXG4gICAgICApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHBhcmVudElkOiBtZXNzYWdlLnByZXY/LmN1cnJlbnQuaWQgPz8gbnVsbCxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UuY3VycmVudCxcbiAgICB9O1xuICB9XG5cbiAgYXBwZW5kT3B0aW1pc3RpY01lc3NhZ2UocGFyZW50SWQ6IHN0cmluZyB8IG51bGwsIG1lc3NhZ2U6IENvcmVNZXNzYWdlKSB7XG4gICAgbGV0IG9wdGltaXN0aWNJZDogc3RyaW5nO1xuICAgIGRvIHtcbiAgICAgIG9wdGltaXN0aWNJZCA9IGdlbmVyYXRlT3B0aW1pc3RpY0lkKCk7XG4gICAgfSB3aGlsZSAodGhpcy5tZXNzYWdlcy5oYXMob3B0aW1pc3RpY0lkKSk7XG5cbiAgICB0aGlzLmFkZE9yVXBkYXRlTWVzc2FnZShcbiAgICAgIHBhcmVudElkLFxuICAgICAgZnJvbUNvcmVNZXNzYWdlKG1lc3NhZ2UsIHtcbiAgICAgICAgaWQ6IG9wdGltaXN0aWNJZCxcbiAgICAgICAgc3RhdHVzOiB7IHR5cGU6IFwicnVubmluZ1wiIH0sXG4gICAgICB9KSxcbiAgICApO1xuXG4gICAgcmV0dXJuIG9wdGltaXN0aWNJZDtcbiAgfVxuXG4gIGRlbGV0ZU1lc3NhZ2UobWVzc2FnZUlkOiBzdHJpbmcsIHJlcGxhY2VtZW50SWQ/OiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgbWVzc2FnZSA9IHRoaXMubWVzc2FnZXMuZ2V0KG1lc3NhZ2VJZCk7XG5cbiAgICBpZiAoIW1lc3NhZ2UpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiTWVzc2FnZVJlcG9zaXRvcnkoZGVsZXRlTWVzc2FnZSk6IE9wdGltaXN0aWMgbWVzc2FnZSBub3QgZm91bmQuIFRoaXMgaXMgbGlrZWx5IGFuIGludGVybmFsIGJ1ZyBpbiBhc3Npc3RhbnQtdWkuXCIsXG4gICAgICApO1xuXG4gICAgY29uc3QgcmVwbGFjZW1lbnQgPVxuICAgICAgcmVwbGFjZW1lbnRJZCA9PT0gdW5kZWZpbmVkXG4gICAgICAgID8gbWVzc2FnZS5wcmV2IC8vIGlmIG5vIHJlcGxhY2VtZW50SWQgaXMgcHJvdmlkZWQsIHVzZSB0aGUgcGFyZW50XG4gICAgICAgIDogcmVwbGFjZW1lbnRJZCA9PT0gbnVsbFxuICAgICAgICAgID8gbnVsbFxuICAgICAgICAgIDogdGhpcy5tZXNzYWdlcy5nZXQocmVwbGFjZW1lbnRJZCk7XG4gICAgaWYgKHJlcGxhY2VtZW50ID09PSB1bmRlZmluZWQpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiTWVzc2FnZVJlcG9zaXRvcnkoZGVsZXRlTWVzc2FnZSk6IFJlcGxhY2VtZW50IG5vdCBmb3VuZC4gVGhpcyBpcyBsaWtlbHkgYW4gaW50ZXJuYWwgYnVnIGluIGFzc2lzdGFudC11aS5cIixcbiAgICAgICk7XG5cbiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIG1lc3NhZ2UuY2hpbGRyZW4pIHtcbiAgICAgIGNvbnN0IGNoaWxkTWVzc2FnZSA9IHRoaXMubWVzc2FnZXMuZ2V0KGNoaWxkKTtcbiAgICAgIGlmICghY2hpbGRNZXNzYWdlKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgXCJNZXNzYWdlUmVwb3NpdG9yeShkZWxldGVNZXNzYWdlKTogQ2hpbGQgbWVzc2FnZSBub3QgZm91bmQuIFRoaXMgaXMgbGlrZWx5IGFuIGludGVybmFsIGJ1ZyBpbiBhc3Npc3RhbnQtdWkuXCIsXG4gICAgICAgICk7XG4gICAgICB0aGlzLnBlcmZvcm1PcChyZXBsYWNlbWVudCwgY2hpbGRNZXNzYWdlLCBcInJlbGlua1wiKTtcbiAgICB9XG5cbiAgICB0aGlzLnBlcmZvcm1PcChudWxsLCBtZXNzYWdlLCBcImN1dFwiKTtcbiAgICB0aGlzLm1lc3NhZ2VzLmRlbGV0ZShtZXNzYWdlSWQpO1xuXG4gICAgaWYgKHRoaXMuaGVhZCA9PT0gbWVzc2FnZSkge1xuICAgICAgdGhpcy5oZWFkID0gZmluZEhlYWQocmVwbGFjZW1lbnQgPz8gdGhpcy5yb290KTtcbiAgICB9XG4gIH1cblxuICBnZXRCcmFuY2hlcyhtZXNzYWdlSWQ6IHN0cmluZykge1xuICAgIGNvbnN0IG1lc3NhZ2UgPSB0aGlzLm1lc3NhZ2VzLmdldChtZXNzYWdlSWQpO1xuICAgIGlmICghbWVzc2FnZSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJNZXNzYWdlUmVwb3NpdG9yeShnZXRCcmFuY2hlcyk6IE1lc3NhZ2Ugbm90IGZvdW5kLiBUaGlzIGlzIGxpa2VseSBhbiBpbnRlcm5hbCBidWcgaW4gYXNzaXN0YW50LXVpLlwiLFxuICAgICAgKTtcblxuICAgIGNvbnN0IHsgY2hpbGRyZW4gfSA9IG1lc3NhZ2UucHJldiA/PyB0aGlzLnJvb3Q7XG4gICAgcmV0dXJuIGNoaWxkcmVuO1xuICB9XG5cbiAgc3dpdGNoVG9CcmFuY2gobWVzc2FnZUlkOiBzdHJpbmcpIHtcbiAgICBjb25zdCBtZXNzYWdlID0gdGhpcy5tZXNzYWdlcy5nZXQobWVzc2FnZUlkKTtcbiAgICBpZiAoIW1lc3NhZ2UpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiTWVzc2FnZVJlcG9zaXRvcnkoc3dpdGNoVG9CcmFuY2gpOiBCcmFuY2ggbm90IGZvdW5kLiBUaGlzIGlzIGxpa2VseSBhbiBpbnRlcm5hbCBidWcgaW4gYXNzaXN0YW50LXVpLlwiLFxuICAgICAgKTtcblxuICAgIGNvbnN0IHByZXZPclJvb3QgPSBtZXNzYWdlLnByZXYgPz8gdGhpcy5yb290O1xuICAgIHByZXZPclJvb3QubmV4dCA9IG1lc3NhZ2U7XG5cbiAgICB0aGlzLmhlYWQgPSBmaW5kSGVhZChtZXNzYWdlKTtcbiAgfVxuXG4gIHJlc2V0SGVhZChtZXNzYWdlSWQ6IHN0cmluZyB8IG51bGwpIHtcbiAgICBpZiAobWVzc2FnZUlkID09PSBudWxsKSB7XG4gICAgICB0aGlzLmhlYWQgPSBudWxsO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG1lc3NhZ2UgPSB0aGlzLm1lc3NhZ2VzLmdldChtZXNzYWdlSWQpO1xuICAgIGlmICghbWVzc2FnZSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJNZXNzYWdlUmVwb3NpdG9yeShyZXNldEhlYWQpOiBCcmFuY2ggbm90IGZvdW5kLiBUaGlzIGlzIGxpa2VseSBhbiBpbnRlcm5hbCBidWcgaW4gYXNzaXN0YW50LXVpLlwiLFxuICAgICAgKTtcblxuICAgIHRoaXMuaGVhZCA9IG1lc3NhZ2U7XG4gICAgZm9yIChcbiAgICAgIGxldCBjdXJyZW50OiBSZXBvc2l0b3J5TWVzc2FnZSB8IG51bGwgPSBtZXNzYWdlO1xuICAgICAgY3VycmVudDtcbiAgICAgIGN1cnJlbnQgPSBjdXJyZW50LnByZXZcbiAgICApIHtcbiAgICAgIGlmIChjdXJyZW50LnByZXYpIHtcbiAgICAgICAgY3VycmVudC5wcmV2Lm5leHQgPSBjdXJyZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGV4cG9ydCgpOiBFeHBvcnRlZE1lc3NhZ2VSZXBvc2l0b3J5IHtcbiAgICBjb25zdCBleHBvcnRJdGVtczogRXhwb3J0ZWRNZXNzYWdlUmVwb3NpdG9yeVtcIm1lc3NhZ2VzXCJdID0gW107XG5cbiAgICAvLyBoaW50OiB3ZSBhcmUgcmVseWluZyBvbiB0aGUgaW5zZXJ0aW9uIG9yZGVyIG9mIHRoZSBtZXNzYWdlc1xuICAgIC8vIHRoaXMgaXMgaW1wb3J0YW50IGZvciB0aGUgaW1wb3J0IGZ1bmN0aW9uIHRvIHByb3Blcmx5IGxpbmsgdGhlIG1lc3NhZ2VzXG4gICAgZm9yIChjb25zdCBbLCBtZXNzYWdlXSBvZiB0aGlzLm1lc3NhZ2VzKSB7XG4gICAgICBleHBvcnRJdGVtcy5wdXNoKHtcbiAgICAgICAgbWVzc2FnZTogbWVzc2FnZS5jdXJyZW50LFxuICAgICAgICBwYXJlbnRJZDogbWVzc2FnZS5wcmV2Py5jdXJyZW50LmlkID8/IG51bGwsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgaGVhZElkOiB0aGlzLmhlYWQ/LmN1cnJlbnQuaWQgPz8gbnVsbCxcbiAgICAgIG1lc3NhZ2VzOiBleHBvcnRJdGVtcyxcbiAgICB9O1xuICB9XG5cbiAgaW1wb3J0KHsgaGVhZElkLCBtZXNzYWdlcyB9OiBFeHBvcnRlZE1lc3NhZ2VSZXBvc2l0b3J5KSB7XG4gICAgZm9yIChjb25zdCB7IG1lc3NhZ2UsIHBhcmVudElkIH0gb2YgbWVzc2FnZXMpIHtcbiAgICAgIHRoaXMuYWRkT3JVcGRhdGVNZXNzYWdlKHBhcmVudElkLCBtZXNzYWdlKTtcbiAgICB9XG5cbiAgICAvLyBzd2l0Y2ggdG8gdGhlIHNhdmVkIGhlYWQgaWQgaWYgaXQgaXMgbm90IHRoZSBtb3N0IHJlY2VudCBtZXNzYWdlXG4gICAgdGhpcy5yZXNldEhlYWQoaGVhZElkID8/IG1lc3NhZ2VzLmF0KC0xKT8ubWVzc2FnZS5pZCA/PyBudWxsKTtcbiAgfVxufVxuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IGZvcndhcmRSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFRvb2x0aXAsIFRvb2x0aXBDb250ZW50LCBUb29sdGlwVHJpZ2dlciB9IGZyb20gXCIuL3Rvb2x0aXBcIjtcbmltcG9ydCB7IEJ1dHRvbiwgQnV0dG9uUHJvcHMgfSBmcm9tIFwiLi9idXR0b25cIjtcblxuZXhwb3J0IHR5cGUgVG9vbHRpcEljb25CdXR0b25Qcm9wcyA9IEJ1dHRvblByb3BzICYge1xuICB0b29sdGlwOiBzdHJpbmc7XG4gIHNpZGU/OiBcInRvcFwiIHwgXCJib3R0b21cIiB8IFwibGVmdFwiIHwgXCJyaWdodFwiO1xufTtcblxuZXhwb3J0IGNvbnN0IFRvb2x0aXBJY29uQnV0dG9uID0gZm9yd2FyZFJlZjxcbiAgSFRNTEJ1dHRvbkVsZW1lbnQsXG4gIFRvb2x0aXBJY29uQnV0dG9uUHJvcHNcbj4oKHsgY2hpbGRyZW4sIHRvb2x0aXAsIHNpZGUgPSBcImJvdHRvbVwiLCAuLi5yZXN0IH0sIHJlZikgPT4ge1xuICByZXR1cm4gKFxuICAgIDxUb29sdGlwPlxuICAgICAgPFRvb2x0aXBUcmlnZ2VyIGFzQ2hpbGQ+XG4gICAgICAgIDxCdXR0b24gdmFyaWFudD1cImdob3N0XCIgc2l6ZT1cImljb25cIiB7Li4ucmVzdH0gcmVmPXtyZWZ9PlxuICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJhdWktc3Itb25seVwiPnt0b29sdGlwfTwvc3Bhbj5cbiAgICAgICAgPC9CdXR0b24+XG4gICAgICA8L1Rvb2x0aXBUcmlnZ2VyPlxuICAgICAgPFRvb2x0aXBDb250ZW50IHNpZGU9e3NpZGV9Pnt0b29sdGlwfTwvVG9vbHRpcENvbnRlbnQ+XG4gICAgPC9Ub29sdGlwPlxuICApO1xufSk7XG5cblRvb2x0aXBJY29uQnV0dG9uLmRpc3BsYXlOYW1lID0gXCJUb29sdGlwSWNvbkJ1dHRvblwiO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCAqIGFzIFRvb2x0aXBQcmltaXRpdmUgZnJvbSBcIkByYWRpeC11aS9yZWFjdC10b29sdGlwXCI7XG5pbXBvcnQgeyB3aXRoRGVmYXVsdHMgfSBmcm9tIFwiLi4vdXRpbHMvd2l0aERlZmF1bHRzXCI7XG5pbXBvcnQgeyBGQyB9IGZyb20gXCJyZWFjdFwiO1xuXG5leHBvcnQgY29uc3QgVG9vbHRpcDogRkM8VG9vbHRpcFByaW1pdGl2ZS5Ub29sdGlwUHJvcHM+ID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFRvb2x0aXBQcmltaXRpdmUuUHJvdmlkZXI+XG4gICAgICA8VG9vbHRpcFByaW1pdGl2ZS5Sb290IHsuLi5wcm9wc30gLz5cbiAgICA8L1Rvb2x0aXBQcmltaXRpdmUuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5Ub29sdGlwLmRpc3BsYXlOYW1lID0gXCJUb29sdGlwXCI7XG5cbmV4cG9ydCBjb25zdCBUb29sdGlwVHJpZ2dlciA9IFRvb2x0aXBQcmltaXRpdmUuVHJpZ2dlcjtcblxuZXhwb3J0IGNvbnN0IFRvb2x0aXBDb250ZW50ID0gd2l0aERlZmF1bHRzKFRvb2x0aXBQcmltaXRpdmUuQ29udGVudCwge1xuICBzaWRlT2Zmc2V0OiA0LFxuICBjbGFzc05hbWU6IFwiYXVpLXRvb2x0aXAtY29udGVudFwiLFxufSk7XG5cblRvb2x0aXBDb250ZW50LmRpc3BsYXlOYW1lID0gXCJUb29sdGlwQ29udGVudFwiO1xuIiwiaW1wb3J0IHtcbiAgQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmLFxuICBFbGVtZW50UmVmLFxuICBFbGVtZW50VHlwZSxcbiAgZm9yd2FyZFJlZixcbn0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tIFwiY2xhc3NuYW1lc1wiO1xuXG5leHBvcnQgY29uc3Qgd2l0aERlZmF1bHRQcm9wcyA9XG4gIDxUUHJvcHMgZXh0ZW5kcyB7IGNsYXNzTmFtZT86IHN0cmluZyB9Pih7XG4gICAgY2xhc3NOYW1lLFxuICAgIC4uLmRlZmF1bHRQcm9wc1xuICB9OiBQYXJ0aWFsPFRQcm9wcz4pID0+XG4gICh7IGNsYXNzTmFtZTogY2xhc3NOYW1lUHJvcCwgLi4ucHJvcHMgfTogVFByb3BzKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcyhjbGFzc05hbWUsIGNsYXNzTmFtZVByb3ApLFxuICAgICAgLi4uZGVmYXVsdFByb3BzLFxuICAgICAgLi4ucHJvcHMsXG4gICAgfSBhcyBUUHJvcHM7XG4gIH07XG5cbmV4cG9ydCBjb25zdCB3aXRoRGVmYXVsdHMgPSA8VENvbXBvbmVudCBleHRlbmRzIEVsZW1lbnRUeXBlPihcbiAgQ29tcG9uZW50OiBUQ29tcG9uZW50LFxuICBkZWZhdWx0UHJvcHM6IFBhcnRpYWw8Q29tcG9uZW50UHJvcHNXaXRob3V0UmVmPFRDb21wb25lbnQ+PixcbikgPT4ge1xuICB0eXBlIFRDb21wb25lbnRQcm9wcyA9IHR5cGVvZiBkZWZhdWx0UHJvcHM7XG4gIGNvbnN0IGdldFByb3BzID0gd2l0aERlZmF1bHRQcm9wczxUQ29tcG9uZW50UHJvcHM+KGRlZmF1bHRQcm9wcyk7XG4gIGNvbnN0IFdpdGhEZWZhdWx0cyA9IGZvcndhcmRSZWY8RWxlbWVudFJlZjxUQ29tcG9uZW50PiwgVENvbXBvbmVudFByb3BzPihcbiAgICAocHJvcHMsIHJlZikgPT4ge1xuICAgICAgY29uc3QgQ29tcG9uZW50QXNBbnkgPSBDb21wb25lbnQgYXMgYW55O1xuICAgICAgcmV0dXJuIDxDb21wb25lbnRBc0FueSB7Li4uZ2V0UHJvcHMocHJvcHMgYXMgYW55KX0gcmVmPXtyZWZ9IC8+O1xuICAgIH0sXG4gICk7XG4gIFdpdGhEZWZhdWx0cy5kaXNwbGF5TmFtZSA9XG4gICAgXCJ3aXRoRGVmYXVsdHMoXCIgK1xuICAgICh0eXBlb2YgQ29tcG9uZW50ID09PSBcInN0cmluZ1wiID8gQ29tcG9uZW50IDogQ29tcG9uZW50LmRpc3BsYXlOYW1lKSArXG4gICAgXCIpXCI7XG4gIHJldHVybiBXaXRoRGVmYXVsdHM7XG59O1xuIiwiaW1wb3J0IHsgY3ZhLCB0eXBlIFZhcmlhbnRQcm9wcyB9IGZyb20gXCJjbGFzcy12YXJpYW5jZS1hdXRob3JpdHlcIjtcbmltcG9ydCB7IFByaW1pdGl2ZSB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlXCI7XG5pbXBvcnQgeyBFbGVtZW50UmVmLCBmb3J3YXJkUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5cbmNvbnN0IGJ1dHRvblZhcmlhbnRzID0gY3ZhKFwiYXVpLWJ1dHRvblwiLCB7XG4gIHZhcmlhbnRzOiB7XG4gICAgdmFyaWFudDoge1xuICAgICAgZGVmYXVsdDogXCJhdWktYnV0dG9uLXByaW1hcnlcIixcbiAgICAgIG91dGxpbmU6IFwiYXVpLWJ1dHRvbi1vdXRsaW5lXCIsXG4gICAgICBnaG9zdDogXCJhdWktYnV0dG9uLWdob3N0XCIsXG4gICAgfSxcbiAgICBzaXplOiB7XG4gICAgICBkZWZhdWx0OiBcImF1aS1idXR0b24tbWVkaXVtXCIsXG4gICAgICBpY29uOiBcImF1aS1idXR0b24taWNvblwiLFxuICAgIH0sXG4gIH0sXG4gIGRlZmF1bHRWYXJpYW50czoge1xuICAgIHZhcmlhbnQ6IFwiZGVmYXVsdFwiLFxuICAgIHNpemU6IFwiZGVmYXVsdFwiLFxuICB9LFxufSk7XG5cbnR5cGUgQnV0dG9uRWxlbWVudCA9IEVsZW1lbnRSZWY8dHlwZW9mIFByaW1pdGl2ZS5idXR0b24+O1xuXG5leHBvcnQgdHlwZSBCdXR0b25Qcm9wcyA9IFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjxcbiAgdHlwZW9mIFByaW1pdGl2ZS5idXR0b25cbj4gJlxuICBWYXJpYW50UHJvcHM8dHlwZW9mIGJ1dHRvblZhcmlhbnRzPjtcblxuY29uc3QgQnV0dG9uID0gZm9yd2FyZFJlZjxCdXR0b25FbGVtZW50LCBCdXR0b25Qcm9wcz4oXG4gICh7IGNsYXNzTmFtZSwgdmFyaWFudCwgc2l6ZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxQcmltaXRpdmUuYnV0dG9uXG4gICAgICAgIGNsYXNzTmFtZT17YnV0dG9uVmFyaWFudHMoeyB2YXJpYW50LCBzaXplLCBjbGFzc05hbWUgfSl9XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAvPlxuICAgICk7XG4gIH0sXG4pO1xuXG5CdXR0b24uZGlzcGxheU5hbWUgPSBcIkJ1dHRvblwiO1xuXG5leHBvcnQgeyBCdXR0b24sIGJ1dHRvblZhcmlhbnRzIH07XG4iLCJpbXBvcnQge1xuICBBZGRUb29sUmVzdWx0T3B0aW9ucyxcbiAgVGhyZWFkU3VnZ2VzdGlvbixcbiAgUnVudGltZUNhcGFiaWxpdGllcyxcbiAgU3VibWl0RmVlZGJhY2tPcHRpb25zLFxuICBUaHJlYWRSdW50aW1lQ29yZSxcbiAgU3BlZWNoU3RhdGUsXG4gIFN1Ym1pdHRlZEZlZWRiYWNrLFxuICBUaHJlYWRSdW50aW1lRXZlbnRUeXBlLFxufSBmcm9tIFwiLi4vcnVudGltZXMvY29yZS9UaHJlYWRSdW50aW1lQ29yZVwiO1xuaW1wb3J0IHsgRXhwb3J0ZWRNZXNzYWdlUmVwb3NpdG9yeSB9IGZyb20gXCIuLi9ydW50aW1lcy91dGlscy9NZXNzYWdlUmVwb3NpdG9yeVwiO1xuaW1wb3J0IHtcbiAgQXBwZW5kTWVzc2FnZSxcbiAgTW9kZWxDb25maWcsXG4gIFRocmVhZE1lc3NhZ2UsXG4gIFVuc3Vic2NyaWJlLFxufSBmcm9tIFwiLi4vdHlwZXNcIjtcbmltcG9ydCB7XG4gIE1lc3NhZ2VSdW50aW1lLFxuICBNZXNzYWdlUnVudGltZUltcGwsXG4gIE1lc3NhZ2VTdGF0ZSxcbn0gZnJvbSBcIi4vTWVzc2FnZVJ1bnRpbWVcIjtcbmltcG9ydCB7IE5lc3RlZFN1YnNjcmlwdGlvblN1YmplY3QgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUvTmVzdGVkU3Vic2NyaXB0aW9uU3ViamVjdFwiO1xuaW1wb3J0IHsgU2hhbGxvd01lbW9pemVTdWJqZWN0IH0gZnJvbSBcIi4vc3Vic2NyaWJhYmxlL1NoYWxsb3dNZW1vaXplU3ViamVjdFwiO1xuaW1wb3J0IHtcbiAgU3Vic2NyaWJhYmxlLFxuICBTdWJzY3JpYmFibGVXaXRoU3RhdGUsXG59IGZyb20gXCIuL3N1YnNjcmliYWJsZS9TdWJzY3JpYmFibGVcIjtcbmltcG9ydCB7XG4gIFRocmVhZENvbXBvc2VyUnVudGltZSxcbiAgVGhyZWFkQ29tcG9zZXJSdW50aW1lSW1wbCxcbn0gZnJvbSBcIi4vQ29tcG9zZXJSdW50aW1lXCI7XG5pbXBvcnQgeyBMYXp5TWVtb2l6ZVN1YmplY3QgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUvTGF6eU1lbW9pemVTdWJqZWN0XCI7XG5pbXBvcnQgeyBTS0lQX1VQREFURSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS9TS0lQX1VQREFURVwiO1xuaW1wb3J0IHsgQ29tcG9zZXJSdW50aW1lQ29yZSB9IGZyb20gXCIuLi9ydW50aW1lcy9jb3JlL0NvbXBvc2VyUnVudGltZUNvcmVcIjtcbmltcG9ydCB7IE1lc3NhZ2VSdW50aW1lUGF0aCwgVGhyZWFkUnVudGltZVBhdGggfSBmcm9tIFwiLi9QYXRoVHlwZXNcIjtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlQXBwZW5kTWVzc2FnZSA9XG4gIHwgc3RyaW5nXG4gIHwge1xuICAgICAgcGFyZW50SWQ/OiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkO1xuICAgICAgcm9sZT86IEFwcGVuZE1lc3NhZ2VbXCJyb2xlXCJdIHwgdW5kZWZpbmVkO1xuICAgICAgY29udGVudDogQXBwZW5kTWVzc2FnZVtcImNvbnRlbnRcIl07XG4gICAgICBhdHRhY2htZW50cz86IEFwcGVuZE1lc3NhZ2VbXCJhdHRhY2htZW50c1wiXSB8IHVuZGVmaW5lZDtcbiAgICB9O1xuXG5jb25zdCB0b0FwcGVuZE1lc3NhZ2UgPSAoXG4gIG1lc3NhZ2VzOiByZWFkb25seSBUaHJlYWRNZXNzYWdlW10sXG4gIG1lc3NhZ2U6IENyZWF0ZUFwcGVuZE1lc3NhZ2UsXG4pOiBBcHBlbmRNZXNzYWdlID0+IHtcbiAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhcmVudElkOiBtZXNzYWdlcy5hdCgtMSk/LmlkID8/IG51bGwsXG4gICAgICByb2xlOiBcInVzZXJcIixcbiAgICAgIGNvbnRlbnQ6IFt7IHR5cGU6IFwidGV4dFwiLCB0ZXh0OiBtZXNzYWdlIH1dLFxuICAgICAgYXR0YWNobWVudHM6IFtdLFxuICAgIH07XG4gIH1cblxuICBpZiAobWVzc2FnZS5yb2xlICYmIG1lc3NhZ2UucGFyZW50SWQgJiYgbWVzc2FnZS5hdHRhY2htZW50cykge1xuICAgIHJldHVybiBtZXNzYWdlIGFzIEFwcGVuZE1lc3NhZ2U7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhcmVudElkOiBtZXNzYWdlLnBhcmVudElkID8/IG1lc3NhZ2VzLmF0KC0xKT8uaWQgPz8gbnVsbCxcbiAgICByb2xlOiBtZXNzYWdlLnJvbGUgPz8gXCJ1c2VyXCIsXG4gICAgY29udGVudDogbWVzc2FnZS5jb250ZW50LFxuICAgIGF0dGFjaG1lbnRzOiBtZXNzYWdlLmF0dGFjaG1lbnRzID8/IFtdLFxuICB9IGFzIEFwcGVuZE1lc3NhZ2U7XG59O1xuXG5leHBvcnQgdHlwZSBUaHJlYWRSdW50aW1lQ29yZUJpbmRpbmcgPSBTdWJzY3JpYmFibGVXaXRoU3RhdGU8XG4gIFRocmVhZFJ1bnRpbWVDb3JlLFxuICBUaHJlYWRSdW50aW1lUGF0aFxuPiAmIHtcbiAgb3V0ZXJTdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiBVbnN1YnNjcmliZTtcbn07XG5cbmV4cG9ydCB0eXBlIFRocmVhZFN0YXRlID0gUmVhZG9ubHk8e1xuICB0aHJlYWRJZDogc3RyaW5nO1xuICBpc0Rpc2FibGVkOiBib29sZWFuO1xuICBpc1J1bm5pbmc6IGJvb2xlYW47XG4gIGNhcGFiaWxpdGllczogUnVudGltZUNhcGFiaWxpdGllcztcbiAgbWVzc2FnZXM6IHJlYWRvbmx5IFRocmVhZE1lc3NhZ2VbXTtcbiAgc3VnZ2VzdGlvbnM6IHJlYWRvbmx5IFRocmVhZFN1Z2dlc3Rpb25bXTtcbiAgZXh0cmFzOiB1bmtub3duO1xuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBUaGlzIEFQSSBpcyBzdGlsbCB1bmRlciBhY3RpdmUgZGV2ZWxvcG1lbnQgYW5kIG1pZ2h0IGNoYW5nZSB3aXRob3V0IG5vdGljZS5cbiAgICovXG4gIHNwZWVjaDogU3BlZWNoU3RhdGUgfCB1bmRlZmluZWQ7XG59PjtcblxuZXhwb3J0IGNvbnN0IGdldFRocmVhZFN0YXRlID0gKHJ1bnRpbWU6IFRocmVhZFJ1bnRpbWVDb3JlKTogVGhyZWFkU3RhdGUgPT4ge1xuICBjb25zdCBsYXN0TWVzc2FnZSA9IHJ1bnRpbWUubWVzc2FnZXMuYXQoLTEpO1xuICByZXR1cm4gT2JqZWN0LmZyZWV6ZSh7XG4gICAgdGhyZWFkSWQ6IHJ1bnRpbWUudGhyZWFkSWQsXG4gICAgY2FwYWJpbGl0aWVzOiBydW50aW1lLmNhcGFiaWxpdGllcyxcbiAgICBpc0Rpc2FibGVkOiBydW50aW1lLmlzRGlzYWJsZWQsXG4gICAgaXNSdW5uaW5nOlxuICAgICAgbGFzdE1lc3NhZ2U/LnJvbGUgIT09IFwiYXNzaXN0YW50XCJcbiAgICAgICAgPyBmYWxzZVxuICAgICAgICA6IGxhc3RNZXNzYWdlLnN0YXR1cy50eXBlID09PSBcInJ1bm5pbmdcIixcbiAgICBtZXNzYWdlczogcnVudGltZS5tZXNzYWdlcyxcbiAgICBzdWdnZXN0aW9uczogcnVudGltZS5zdWdnZXN0aW9ucyxcbiAgICBleHRyYXM6IHJ1bnRpbWUuZXh0cmFzLFxuICAgIHNwZWVjaDogcnVudGltZS5zcGVlY2gsXG4gIH0pO1xufTtcblxuZXhwb3J0IHR5cGUgVGhyZWFkUnVudGltZSA9IHtcbiAgcmVhZG9ubHkgcGF0aDogVGhyZWFkUnVudGltZVBhdGg7XG5cbiAgcmVhZG9ubHkgY29tcG9zZXI6IFRocmVhZENvbXBvc2VyUnVudGltZTtcbiAgZ2V0U3RhdGUoKTogVGhyZWFkU3RhdGU7XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFRoaXMgbWV0aG9kIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC4gU3VibWl0IGZlZWRiYWNrIGlmIHlvdSBuZWVkIHRoaXMgZnVuY3Rpb25hbGl0eS5cbiAgICovXG4gIHVuc3RhYmxlX2dldENvcmUoKTogVGhyZWFkUnVudGltZUNvcmU7XG5cbiAgYXBwZW5kKG1lc3NhZ2U6IENyZWF0ZUFwcGVuZE1lc3NhZ2UpOiB2b2lkO1xuICBzdGFydFJ1bihwYXJlbnRJZDogc3RyaW5nIHwgbnVsbCk6IHZvaWQ7XG4gIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCk6IFVuc3Vic2NyaWJlO1xuICBjYW5jZWxSdW4oKTogdm9pZDtcbiAgZ2V0TW9kZWxDb25maWcoKTogTW9kZWxDb25maWc7XG4gIGV4cG9ydCgpOiBFeHBvcnRlZE1lc3NhZ2VSZXBvc2l0b3J5O1xuICBpbXBvcnQocmVwb3NpdG9yeTogRXhwb3J0ZWRNZXNzYWdlUmVwb3NpdG9yeSk6IHZvaWQ7XG4gIGdldE1lc3NzYWdlQnlJbmRleChpZHg6IG51bWJlcik6IE1lc3NhZ2VSdW50aW1lO1xuICBnZXRNZXNzc2FnZUJ5SWQobWVzc2FnZUlkOiBzdHJpbmcpOiBNZXNzYWdlUnVudGltZTtcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVGhpcyBBUEkgaXMgc3RpbGwgdW5kZXIgYWN0aXZlIGRldmVsb3BtZW50IGFuZCBtaWdodCBjaGFuZ2Ugd2l0aG91dCBub3RpY2UuXG4gICAqL1xuICBzdG9wU3BlYWtpbmc6ICgpID0+IHZvaWQ7XG5cbiAgdW5zdGFibGVfb24oZXZlbnQ6IFRocmVhZFJ1bnRpbWVFdmVudFR5cGUsIGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogVW5zdWJzY3JpYmU7XG5cbiAgLy8gTGVnYWN5IG1ldGhvZHMgd2l0aCBkZXByZWNhdGlvbnNcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLmNhcGFiaWxpdGllc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBjYXBhYmlsaXRpZXM6IFJlYWRvbmx5PFJ1bnRpbWVDYXBhYmlsaXRpZXM+O1xuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldFN0YXRlKCkudGhyZWFkSWRgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgdGhyZWFkSWQ6IHN0cmluZztcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLmlzRGlzYWJsZWRgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgaXNEaXNhYmxlZDogYm9vbGVhbjtcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLmlzUnVubmluZ2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBpc1J1bm5pbmc6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0U3RhdGUoKS5tZXNzYWdlc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBtZXNzYWdlczogcmVhZG9ubHkgVGhyZWFkTWVzc2FnZVtdO1xuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldFN0YXRlKCkuZm9sbG93dXBTdWdnZXN0aW9uc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBzdWdnZXN0aW9uczogcmVhZG9ubHkgVGhyZWFkU3VnZ2VzdGlvbltdO1xuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldFN0YXRlKCkuc3BlZWNoU3RhdGVgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgc3BlZWNoOiBTcGVlY2hTdGF0ZSB8IHVuZGVmaW5lZDtcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLmV4dHJhc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBleHRyYXM6IHVua25vd247XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0TWVzc3NhZ2VCeUlkKGlkKS5nZXRTdGF0ZSgpLmJyYW5jaE51bWJlcmAgLyBgZ2V0TWVzc3NhZ2VCeUlkKGlkKS5nZXRTdGF0ZSgpLmJyYW5jaENvdW50YCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIGdldEJyYW5jaGVzOiAobWVzc2FnZUlkOiBzdHJpbmcpID0+IHJlYWRvbmx5IHN0cmluZ1tdO1xuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldE1lc3NzYWdlQnlJZChpZCkuc3dpdGNoVG9CcmFuY2goeyBvcHRpb25zIH0pYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHN3aXRjaFRvQnJhbmNoOiAoYnJhbmNoSWQ6IHN0cmluZykgPT4gdm9pZDtcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRNZXNzc2FnZUJ5SWQoaWQpLmdldENvbnRlbnRQYXJ0QnlUb29sQ2FsbElkKHRvb2xDYWxsSWQpLmFkZFRvb2xSZXN1bHQoeyByZXN1bHQgfSlgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgYWRkVG9vbFJlc3VsdDogKG9wdGlvbnM6IEFkZFRvb2xSZXN1bHRPcHRpb25zKSA9PiB2b2lkO1xuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldE1lc3NzYWdlQnlJZChpZCkuc3BlYWsoKWAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBzcGVhazogKG1lc3NhZ2VJZDogc3RyaW5nKSA9PiB2b2lkO1xuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldE1lc3NzYWdlQnlJZChpZCkuZ2V0U3RhdGUoKS5zdWJtaXR0ZWRGZWVkYmFja2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBnZXRTdWJtaXR0ZWRGZWVkYmFjazogKG1lc3NhZ2VJZDogc3RyaW5nKSA9PiBTdWJtaXR0ZWRGZWVkYmFjayB8IHVuZGVmaW5lZDtcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRNZXNzc2FnZUJ5SWQoaWQpLnN1Ym1pdEZlZWRiYWNrKHsgdHlwZSB9KWAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBzdWJtaXRGZWVkYmFjazogKGZlZWRiYWNrOiBTdWJtaXRGZWVkYmFja09wdGlvbnMpID0+IHZvaWQ7XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0TWVzc3NhZ2VCeUlkKGlkKS5jb21wb3NlcmAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBnZXRFZGl0Q29tcG9zZXI6IChtZXNzYWdlSWQ6IHN0cmluZykgPT4gQ29tcG9zZXJSdW50aW1lQ29yZSB8IHVuZGVmaW5lZDtcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRNZXNzc2FnZUJ5SWQoaWQpLmNvbXBvc2VyLmJlZ2luRWRpdCgpYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIGJlZ2luRWRpdDogKG1lc3NhZ2VJZDogc3RyaW5nKSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGNsYXNzIFRocmVhZFJ1bnRpbWVJbXBsXG4gIGltcGxlbWVudHMgT21pdDxUaHJlYWRSdW50aW1lQ29yZSwgXCJnZXRNZXNzYWdlQnlJZFwiPiwgVGhyZWFkUnVudGltZVxue1xuICBwdWJsaWMgZ2V0IHBhdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3RocmVhZEJpbmRpbmcucGF0aDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldFN0YXRlKCkudGhyZWFkSWRgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgcHVibGljIGdldCB0aHJlYWRJZCgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRTdGF0ZSgpLnRocmVhZElkO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0U3RhdGUoKS5pc0Rpc2FibGVkYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHB1YmxpYyBnZXQgaXNEaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRTdGF0ZSgpLmlzRGlzYWJsZWQ7XG4gIH1cblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLmlzUnVubmluZ2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBwdWJsaWMgZ2V0IGlzUnVubmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRTdGF0ZSgpLmlzUnVubmluZztcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldFN0YXRlKCkuY2FwYWJpbGl0aWVzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHB1YmxpYyBnZXQgY2FwYWJpbGl0aWVzKCkge1xuICAgIHJldHVybiB0aGlzLmdldFN0YXRlKCkuY2FwYWJpbGl0aWVzO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0U3RhdGUoKS5leHRyYXNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgcHVibGljIGdldCBleHRyYXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3RocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKS5leHRyYXM7XG4gIH1cblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLmZvbGxvd3VwU3VnZ2VzdGlvbnNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgcHVibGljIGdldCBzdWdnZXN0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLnN1Z2dlc3Rpb25zO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0U3RhdGUoKS5tZXNzYWdlc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBwdWJsaWMgZ2V0IG1lc3NhZ2VzKCkge1xuICAgIHJldHVybiB0aGlzLl90aHJlYWRCaW5kaW5nLmdldFN0YXRlKCkubWVzc2FnZXM7XG4gIH1cblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRTdGF0ZSgpLnNwZWVjaFN0YXRlYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHB1YmxpYyBnZXQgc3BlZWNoKCkge1xuICAgIHJldHVybiB0aGlzLl90aHJlYWRCaW5kaW5nLmdldFN0YXRlKCkuc3BlZWNoO1xuICB9XG5cbiAgcHVibGljIHVuc3RhYmxlX2dldENvcmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3RocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKTtcbiAgfVxuXG4gIHByaXZhdGUgX3RocmVhZEJpbmRpbmc6IFRocmVhZFJ1bnRpbWVDb3JlQmluZGluZyAmIHtcbiAgICBnZXRTdGF0ZVN0YXRlKCk6IFRocmVhZFN0YXRlO1xuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHRocmVhZEJpbmRpbmc6IFRocmVhZFJ1bnRpbWVDb3JlQmluZGluZykge1xuICAgIGNvbnN0IHN0YXRlQmluZGluZyA9IG5ldyBMYXp5TWVtb2l6ZVN1YmplY3Qoe1xuICAgICAgcGF0aDogdGhyZWFkQmluZGluZy5wYXRoLFxuICAgICAgZ2V0U3RhdGU6ICgpID0+IGdldFRocmVhZFN0YXRlKHRocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKSksXG4gICAgICBzdWJzY3JpYmU6IChjYWxsYmFjaykgPT4gdGhyZWFkQmluZGluZy5zdWJzY3JpYmUoY2FsbGJhY2spLFxuICAgIH0pO1xuXG4gICAgdGhpcy5fdGhyZWFkQmluZGluZyA9IHtcbiAgICAgIHBhdGg6IHRocmVhZEJpbmRpbmcucGF0aCxcbiAgICAgIGdldFN0YXRlOiAoKSA9PiB0aHJlYWRCaW5kaW5nLmdldFN0YXRlKCksXG4gICAgICBnZXRTdGF0ZVN0YXRlOiAoKSA9PiBzdGF0ZUJpbmRpbmcuZ2V0U3RhdGUoKSxcbiAgICAgIG91dGVyU3Vic2NyaWJlOiAoY2FsbGJhY2spID0+IHRocmVhZEJpbmRpbmcub3V0ZXJTdWJzY3JpYmUoY2FsbGJhY2spLFxuICAgICAgc3Vic2NyaWJlOiAoY2FsbGJhY2spID0+IHRocmVhZEJpbmRpbmcuc3Vic2NyaWJlKGNhbGxiYWNrKSxcbiAgICB9O1xuXG4gICAgdGhpcy5jb21wb3NlciA9IG5ldyBUaHJlYWRDb21wb3NlclJ1bnRpbWVJbXBsKFxuICAgICAgbmV3IE5lc3RlZFN1YnNjcmlwdGlvblN1YmplY3Qoe1xuICAgICAgICBwYXRoOiB7XG4gICAgICAgICAgLi4udGhpcy5wYXRoLFxuICAgICAgICAgIHJlZjogdGhpcy5wYXRoLnJlZiArIGAke3RoaXMucGF0aC5yZWZ9LmNvbXBvc2VyYCxcbiAgICAgICAgICBjb21wb3NlclNvdXJjZTogXCJ0aHJlYWRcIixcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0U3RhdGU6ICgpID0+IHRoaXMuX3RocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKS5jb21wb3NlcixcbiAgICAgICAgc3Vic2NyaWJlOiAoY2FsbGJhY2spID0+IHRoaXMuX3RocmVhZEJpbmRpbmcuc3Vic2NyaWJlKGNhbGxiYWNrKSxcbiAgICAgIH0pLFxuICAgICk7XG4gIH1cblxuICBwdWJsaWMgcmVhZG9ubHkgY29tcG9zZXI7XG5cbiAgcHVibGljIGdldFN0YXRlKCkge1xuICAgIHJldHVybiB0aGlzLl90aHJlYWRCaW5kaW5nLmdldFN0YXRlU3RhdGUoKTtcbiAgfVxuXG4gIHB1YmxpYyBhcHBlbmQobWVzc2FnZTogQ3JlYXRlQXBwZW5kTWVzc2FnZSkge1xuICAgIHRoaXMuX3RocmVhZEJpbmRpbmdcbiAgICAgIC5nZXRTdGF0ZSgpXG4gICAgICAuYXBwZW5kKFxuICAgICAgICB0b0FwcGVuZE1lc3NhZ2UodGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLm1lc3NhZ2VzLCBtZXNzYWdlKSxcbiAgICAgICk7XG4gIH1cblxuICBwdWJsaWMgc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIHRoaXMuX3RocmVhZEJpbmRpbmcuc3Vic2NyaWJlKGNhbGxiYWNrKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVycHJlY2F0ZWQgVXNlIGBnZXRNZXNzc2FnZUJ5SWQoaWQpLmdldFN0YXRlKCkuYnJhbmNoTnVtYmVyYCAvIGBnZXRNZXNzc2FnZUJ5SWQoaWQpLmdldFN0YXRlKCkuYnJhbmNoQ291bnRgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgcHVibGljIGdldEJyYW5jaGVzKG1lc3NhZ2VJZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMuX3RocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKS5nZXRCcmFuY2hlcyhtZXNzYWdlSWQpO1xuICB9XG5cbiAgcHVibGljIGdldE1vZGVsQ29uZmlnKCkge1xuICAgIHJldHVybiB0aGlzLl90aHJlYWRCaW5kaW5nLmdldFN0YXRlKCkuZ2V0TW9kZWxDb25maWcoKTtcbiAgfVxuXG4gIC8vIFRPRE8gc29tZXRpbWVzIHlvdSB3YW50IHRvIGNvbnRpbnVlIHdoZW4gdGhlcmUgaXMgbm8gY2hpbGQgbWVzc2FnZVxuICBwdWJsaWMgc3RhcnRSdW4ocGFyZW50SWQ6IHN0cmluZyB8IG51bGwpIHtcbiAgICByZXR1cm4gdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLnN0YXJ0UnVuKHBhcmVudElkKTtcbiAgfVxuXG4gIHB1YmxpYyBjYW5jZWxSdW4oKSB7XG4gICAgdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLmNhbmNlbFJ1bigpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0TWVzc3NhZ2VCeUlkKGlkKS5nZXRDb250ZW50UGFydEJ5VG9vbENhbGxJZCh0b29sQ2FsbElkKS5hZGRUb29sUmVzdWx0KHsgcmVzdWx0IH0pYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHB1YmxpYyBhZGRUb29sUmVzdWx0KG9wdGlvbnM6IEFkZFRvb2xSZXN1bHRPcHRpb25zKSB7XG4gICAgdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLmFkZFRvb2xSZXN1bHQob3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBnZXRNZXNzc2FnZUJ5SWQoaWQpLnN3aXRjaFRvQnJhbmNoKHsgb3B0aW9ucyB9KWAgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBwdWJsaWMgc3dpdGNoVG9CcmFuY2goYnJhbmNoSWQ6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLl90aHJlYWRCaW5kaW5nLmdldFN0YXRlKCkuc3dpdGNoVG9CcmFuY2goYnJhbmNoSWQpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0TWVzc3NhZ2VCeUlkKGlkKS5zcGVhaygpYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHB1YmxpYyBzcGVhayhtZXNzYWdlSWQ6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLl90aHJlYWRCaW5kaW5nLmdldFN0YXRlKCkuc3BlYWsobWVzc2FnZUlkKTtcbiAgfVxuXG4gIHB1YmxpYyBzdG9wU3BlYWtpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3RocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKS5zdG9wU3BlYWtpbmcoKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTdWJtaXR0ZWRGZWVkYmFjayhtZXNzYWdlSWQ6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLl90aHJlYWRCaW5kaW5nLmdldFN0YXRlKCkuZ2V0U3VibWl0dGVkRmVlZGJhY2sobWVzc2FnZUlkKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYGdldE1lc3NzYWdlQnlJZChpZCkuc3VibWl0RmVlZGJhY2soeyB0eXBlIH0pYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHB1YmxpYyBzdWJtaXRGZWVkYmFjayhvcHRpb25zOiBTdWJtaXRGZWVkYmFja09wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLnN1Ym1pdEZlZWRiYWNrKG9wdGlvbnMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0TWVzc3NhZ2VCeUlkKGlkKS5nZXRNZXNzYWdlQnlJbmRleChpZHgpLmNvbXBvc2VyYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHB1YmxpYyBnZXRFZGl0Q29tcG9zZXIobWVzc2FnZUlkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLmdldEVkaXRDb21wb3NlcihtZXNzYWdlSWQpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0TWVzc3NhZ2VCeUlkKGlkKS5nZXRNZXNzYWdlQnlJbmRleChpZHgpLmNvbXBvc2VyLmJlZ2luRWRpdCgpYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHB1YmxpYyBiZWdpbkVkaXQobWVzc2FnZUlkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLmJlZ2luRWRpdChtZXNzYWdlSWQpO1xuICB9XG5cbiAgcHVibGljIGV4cG9ydCgpIHtcbiAgICByZXR1cm4gdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLmV4cG9ydCgpO1xuICB9XG5cbiAgcHVibGljIGltcG9ydChkYXRhOiBFeHBvcnRlZE1lc3NhZ2VSZXBvc2l0b3J5KSB7XG4gICAgdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLmltcG9ydChkYXRhKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRNZXNzc2FnZUJ5SW5kZXgoaWR4OiBudW1iZXIpIHtcbiAgICBpZiAoaWR4IDwgMCkgdGhyb3cgbmV3IEVycm9yKFwiTWVzc2FnZSBpbmRleCBtdXN0IGJlID49IDBcIik7XG5cbiAgICByZXR1cm4gdGhpcy5fZ2V0TWVzc2FnZVJ1bnRpbWUoXG4gICAgICB7XG4gICAgICAgIC4uLnRoaXMucGF0aCxcbiAgICAgICAgcmVmOiB0aGlzLnBhdGgucmVmICsgYCR7dGhpcy5wYXRoLnJlZn0ubWVzc2FnZXNbJHtpZHh9XWAsXG4gICAgICAgIG1lc3NhZ2VTZWxlY3RvcjogeyB0eXBlOiBcImluZGV4XCIsIGluZGV4OiBpZHggfSxcbiAgICAgIH0sXG4gICAgICAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2VzID0gdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLm1lc3NhZ2VzO1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gbWVzc2FnZXNbaWR4XTtcbiAgICAgICAgaWYgKCFtZXNzYWdlKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIG1lc3NhZ2UsXG4gICAgICAgICAgcGFyZW50SWQ6IG1lc3NhZ2VzW2lkeCAtIDFdPy5pZCA/PyBudWxsLFxuICAgICAgICB9O1xuICAgICAgfSxcbiAgICApO1xuICB9XG5cbiAgcHVibGljIGdldE1lc3NzYWdlQnlJZChtZXNzYWdlSWQ6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLl9nZXRNZXNzYWdlUnVudGltZShcbiAgICAgIHtcbiAgICAgICAgLi4udGhpcy5wYXRoLFxuICAgICAgICByZWY6XG4gICAgICAgICAgdGhpcy5wYXRoLnJlZiArXG4gICAgICAgICAgYCR7dGhpcy5wYXRoLnJlZn0ubWVzc2FnZXNbbWVzc2FnZUlkPSR7SlNPTi5zdHJpbmdpZnkobWVzc2FnZUlkKX1dYCxcbiAgICAgICAgbWVzc2FnZVNlbGVjdG9yOiB7IHR5cGU6IFwibWVzc2FnZUlkXCIsIG1lc3NhZ2VJZDogbWVzc2FnZUlkIH0sXG4gICAgICB9LFxuICAgICAgKCkgPT4gdGhpcy5fdGhyZWFkQmluZGluZy5nZXRTdGF0ZSgpLmdldE1lc3NhZ2VCeUlkKG1lc3NhZ2VJZCksXG4gICAgKTtcbiAgfVxuXG4gIHByaXZhdGUgX2dldE1lc3NhZ2VSdW50aW1lKFxuICAgIHBhdGg6IE1lc3NhZ2VSdW50aW1lUGF0aCxcbiAgICBjYWxsYmFjazogKCkgPT5cbiAgICAgIHwgeyBwYXJlbnRJZDogc3RyaW5nIHwgbnVsbDsgbWVzc2FnZTogVGhyZWFkTWVzc2FnZSB9XG4gICAgICB8IHVuZGVmaW5lZCxcbiAgKSB7XG4gICAgcmV0dXJuIG5ldyBNZXNzYWdlUnVudGltZUltcGwoXG4gICAgICBuZXcgU2hhbGxvd01lbW9pemVTdWJqZWN0KHtcbiAgICAgICAgcGF0aCxcbiAgICAgICAgZ2V0U3RhdGU6ICgpID0+IHtcbiAgICAgICAgICBjb25zdCB7IG1lc3NhZ2UsIHBhcmVudElkIH0gPSBjYWxsYmFjaygpID8/IHt9O1xuXG4gICAgICAgICAgY29uc3QgeyBtZXNzYWdlcywgc3BlZWNoOiBzcGVlY2hTdGF0ZSB9ID1cbiAgICAgICAgICAgIHRoaXMuX3RocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKTtcblxuICAgICAgICAgIGlmICghbWVzc2FnZSB8fCBwYXJlbnRJZCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gU0tJUF9VUERBVEU7XG5cbiAgICAgICAgICBjb25zdCB0aHJlYWQgPSB0aGlzLl90aHJlYWRCaW5kaW5nLmdldFN0YXRlKCk7XG5cbiAgICAgICAgICBjb25zdCBicmFuY2hlcyA9IHRocmVhZC5nZXRCcmFuY2hlcyhtZXNzYWdlLmlkKTtcbiAgICAgICAgICBjb25zdCBzdWJtaXR0ZWRGZWVkYmFjayA9IHRocmVhZC5nZXRTdWJtaXR0ZWRGZWVkYmFjayhtZXNzYWdlLmlkKTtcblxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5tZXNzYWdlLFxuXG4gICAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgICAgaXNMYXN0OiBtZXNzYWdlcy5hdCgtMSk/LmlkID09PSBtZXNzYWdlLmlkLFxuICAgICAgICAgICAgcGFyZW50SWQsXG5cbiAgICAgICAgICAgIGJyYW5jaGVzLFxuICAgICAgICAgICAgYnJhbmNoTnVtYmVyOiBicmFuY2hlcy5pbmRleE9mKG1lc3NhZ2UuaWQpICsgMSxcbiAgICAgICAgICAgIGJyYW5jaENvdW50OiBicmFuY2hlcy5sZW5ndGgsXG5cbiAgICAgICAgICAgIHNwZWVjaDpcbiAgICAgICAgICAgICAgc3BlZWNoU3RhdGU/Lm1lc3NhZ2VJZCA9PT0gbWVzc2FnZS5pZCA/IHNwZWVjaFN0YXRlIDogdW5kZWZpbmVkLFxuXG4gICAgICAgICAgICBzdWJtaXR0ZWRGZWVkYmFjayxcbiAgICAgICAgICB9IHNhdGlzZmllcyBNZXNzYWdlU3RhdGU7XG4gICAgICAgIH0sXG4gICAgICAgIHN1YnNjcmliZTogKGNhbGxiYWNrKSA9PiB0aGlzLl90aHJlYWRCaW5kaW5nLnN1YnNjcmliZShjYWxsYmFjayksXG4gICAgICB9KSxcbiAgICAgIHRoaXMuX3RocmVhZEJpbmRpbmcsXG4gICAgKTtcbiAgfVxuXG4gIHByaXZhdGUgX2V2ZW50TGlzdGVuZXJOZXN0ZWRTdWJzY3JpcHRpb25zID0gbmV3IE1hcDxcbiAgICBzdHJpbmcsXG4gICAgTmVzdGVkU3Vic2NyaXB0aW9uU3ViamVjdDxTdWJzY3JpYmFibGUsIFRocmVhZFJ1bnRpbWVQYXRoPlxuICA+KCk7XG5cbiAgcHVibGljIHVuc3RhYmxlX29uKFxuICAgIGV2ZW50OiBUaHJlYWRSdW50aW1lRXZlbnRUeXBlLFxuICAgIGNhbGxiYWNrOiAoKSA9PiB2b2lkLFxuICApOiBVbnN1YnNjcmliZSB7XG4gICAgbGV0IHN1YmplY3QgPSB0aGlzLl9ldmVudExpc3RlbmVyTmVzdGVkU3Vic2NyaXB0aW9ucy5nZXQoZXZlbnQpO1xuICAgIGlmICghc3ViamVjdCkge1xuICAgICAgc3ViamVjdCA9IG5ldyBOZXN0ZWRTdWJzY3JpcHRpb25TdWJqZWN0KHtcbiAgICAgICAgcGF0aDogdGhpcy5wYXRoLFxuICAgICAgICBnZXRTdGF0ZTogKCkgPT4gKHtcbiAgICAgICAgICBzdWJzY3JpYmU6IChjYWxsYmFjaykgPT5cbiAgICAgICAgICAgIHRoaXMuX3RocmVhZEJpbmRpbmcuZ2V0U3RhdGUoKS51bnN0YWJsZV9vbihldmVudCwgY2FsbGJhY2spLFxuICAgICAgICB9KSxcbiAgICAgICAgc3Vic2NyaWJlOiAoY2FsbGJhY2spID0+IHRoaXMuX3RocmVhZEJpbmRpbmcub3V0ZXJTdWJzY3JpYmUoY2FsbGJhY2spLFxuICAgICAgfSk7XG4gICAgICB0aGlzLl9ldmVudExpc3RlbmVyTmVzdGVkU3Vic2NyaXB0aW9ucy5zZXQoZXZlbnQsIHN1YmplY3QpO1xuICAgIH1cbiAgICByZXR1cm4gc3ViamVjdC5zdWJzY3JpYmUoY2FsbGJhY2spO1xuICB9XG59XG4iLCJpbXBvcnQgeyBBc3Npc3RhbnRSdW50aW1lQ29yZSB9IGZyb20gXCIuLi9ydW50aW1lcy9jb3JlL0Fzc2lzdGFudFJ1bnRpbWVDb3JlXCI7XG5pbXBvcnQgeyBOZXN0ZWRTdWJzY3JpcHRpb25TdWJqZWN0IH0gZnJvbSBcIi4vc3Vic2NyaWJhYmxlL05lc3RlZFN1YnNjcmlwdGlvblN1YmplY3RcIjtcbmltcG9ydCB7IE1vZGVsQ29uZmlnUHJvdmlkZXIgfSBmcm9tIFwiLi4vdHlwZXMvTW9kZWxDb25maWdUeXBlc1wiO1xuaW1wb3J0IHtcbiAgVGhyZWFkUnVudGltZSxcbiAgVGhyZWFkUnVudGltZUNvcmVCaW5kaW5nLFxuICBUaHJlYWRSdW50aW1lSW1wbCxcbn0gZnJvbSBcIi4vVGhyZWFkUnVudGltZVwiO1xuaW1wb3J0IHsgVW5zdWJzY3JpYmUgfSBmcm9tIFwiLi4vdHlwZXNcIjtcblxuZXhwb3J0IHR5cGUgQXNzaXN0YW50UnVudGltZSA9IHtcbiAgdGhyZWFkOiBUaHJlYWRSdW50aW1lO1xuXG4gIHN3aXRjaFRvTmV3VGhyZWFkKCk6IHZvaWQ7XG5cbiAgc3dpdGNoVG9UaHJlYWQodGhyZWFkSWQ6IHN0cmluZyk6IHZvaWQ7XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYHN3aXRjaFRvTmV3VGhyZWFkYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHN3aXRjaFRvVGhyZWFkKHRocmVhZElkOiBzdHJpbmcgfCBudWxsKTogdm9pZDtcblxuICByZWdpc3Rlck1vZGVsQ29uZmlnUHJvdmlkZXIocHJvdmlkZXI6IE1vZGVsQ29uZmlnUHJvdmlkZXIpOiBVbnN1YnNjcmliZTtcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVGhyZWFkIGlzIG5vdyBzdGF0aWMgYW5kIG5ldmVyIGdldHMgdXBkYXRlZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LjAuXG4gICAqL1xuICBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiBVbnN1YnNjcmliZTtcbn07XG5cbmV4cG9ydCBjbGFzcyBBc3Npc3RhbnRSdW50aW1lSW1wbFxuICBpbXBsZW1lbnRzIE9taXQ8QXNzaXN0YW50UnVudGltZUNvcmUsIFwidGhyZWFkXCI+LCBBc3Npc3RhbnRSdW50aW1lXG57XG4gIHByb3RlY3RlZCBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9jb3JlOiBBc3Npc3RhbnRSdW50aW1lQ29yZSxcbiAgICBwcml2YXRlIHJlYWRvbmx5IF90aHJlYWQ6IFRocmVhZFJ1bnRpbWUsXG4gICkge31cblxuICBwdWJsaWMgZ2V0IHRocmVhZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fdGhyZWFkO1xuICB9XG5cbiAgcHVibGljIHN3aXRjaFRvTmV3VGhyZWFkKCkge1xuICAgIHJldHVybiB0aGlzLl9jb3JlLnN3aXRjaFRvTmV3VGhyZWFkKCk7XG4gIH1cblxuICBwdWJsaWMgc3dpdGNoVG9UaHJlYWQodGhyZWFkSWQ6IHN0cmluZyk6IHZvaWQ7XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYHN3aXRjaFRvTmV3VGhyZWFkYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuMC5cbiAgICovXG4gIHB1YmxpYyBzd2l0Y2hUb1RocmVhZCh0aHJlYWRJZDogc3RyaW5nIHwgbnVsbCk6IHZvaWQ7XG4gIHB1YmxpYyBzd2l0Y2hUb1RocmVhZCh0aHJlYWRJZDogc3RyaW5nIHwgbnVsbCkge1xuICAgIHJldHVybiB0aGlzLl9jb3JlLnN3aXRjaFRvVGhyZWFkKHRocmVhZElkKTtcbiAgfVxuXG4gIHB1YmxpYyByZWdpc3Rlck1vZGVsQ29uZmlnUHJvdmlkZXIocHJvdmlkZXI6IE1vZGVsQ29uZmlnUHJvdmlkZXIpIHtcbiAgICByZXR1cm4gdGhpcy5fY29yZS5yZWdpc3Rlck1vZGVsQ29uZmlnUHJvdmlkZXIocHJvdmlkZXIpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFRocmVhZCBpcyBub3cgc3RhdGljIGFuZCBuZXZlciBnZXRzIHVwZGF0ZWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi4wLlxuICAgKi9cbiAgcHVibGljIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiB0aGlzLl9jb3JlLnN1YnNjcmliZShjYWxsYmFjayk7XG4gIH1cblxuICBwcm90ZWN0ZWQgc3RhdGljIGNyZWF0ZU1haW5UaHJlYWRSdW50aW1lKFxuICAgIF9jb3JlOiBBc3Npc3RhbnRSdW50aW1lQ29yZSxcbiAgICBDdXN0b21UaHJlYWRSdW50aW1lOiBuZXcgKFxuICAgICAgYmluZGluZzogVGhyZWFkUnVudGltZUNvcmVCaW5kaW5nLFxuICAgICkgPT4gVGhyZWFkUnVudGltZSA9IFRocmVhZFJ1bnRpbWVJbXBsLFxuICApIHtcbiAgICByZXR1cm4gbmV3IEN1c3RvbVRocmVhZFJ1bnRpbWUoXG4gICAgICBuZXcgTmVzdGVkU3Vic2NyaXB0aW9uU3ViamVjdCh7XG4gICAgICAgIHBhdGg6IHtcbiAgICAgICAgICByZWY6IFwidGhyZWFkcy5tYWluXCIsXG4gICAgICAgICAgdGhyZWFkU2VsZWN0b3I6IHsgdHlwZTogXCJtYWluXCIgfSxcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0U3RhdGU6ICgpID0+IF9jb3JlLnRocmVhZCxcbiAgICAgICAgc3Vic2NyaWJlOiAoY2FsbGJhY2spID0+IF9jb3JlLnN1YnNjcmliZShjYWxsYmFjayksXG4gICAgICB9KSxcbiAgICApO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBjcmVhdGUoXG4gICAgX2NvcmU6IEFzc2lzdGFudFJ1bnRpbWVDb3JlLFxuICAgIEN1c3RvbVRocmVhZFJ1bnRpbWU6IG5ldyAoXG4gICAgICBiaW5kaW5nOiBUaHJlYWRSdW50aW1lQ29yZUJpbmRpbmcsXG4gICAgKSA9PiBUaHJlYWRSdW50aW1lID0gVGhyZWFkUnVudGltZUltcGwsXG4gICkge1xuICAgIHJldHVybiBuZXcgQXNzaXN0YW50UnVudGltZUltcGwoXG4gICAgICBfY29yZSxcbiAgICAgIEFzc2lzdGFudFJ1bnRpbWVJbXBsLmNyZWF0ZU1haW5UaHJlYWRSdW50aW1lKF9jb3JlLCBDdXN0b21UaHJlYWRSdW50aW1lKSxcbiAgICApIGFzIEFzc2lzdGFudFJ1bnRpbWU7XG4gIH1cbn1cbiIsImltcG9ydCB7IExhbmd1YWdlTW9kZWxWMU1lc3NhZ2UgfSBmcm9tIFwiQGFpLXNkay9wcm92aWRlclwiO1xuaW1wb3J0IHsgQ29yZU1lc3NhZ2UsIFRvb2xDYWxsQ29udGVudFBhcnQgfSBmcm9tIFwiLi4vLi4vLi4vdHlwZXNcIjtcblxudHlwZSBmcm9tTGFuZ3VhZ2VNb2RlbE1lc3NhZ2VzT3B0aW9ucyA9IHtcbiAgbWVyZ2VTdGVwczogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCBjb25zdCBmcm9tTGFuZ3VhZ2VNb2RlbE1lc3NhZ2VzID0gKFxuICBsbTogTGFuZ3VhZ2VNb2RlbFYxTWVzc2FnZVtdLFxuICB7IG1lcmdlU3RlcHMgfTogZnJvbUxhbmd1YWdlTW9kZWxNZXNzYWdlc09wdGlvbnMsXG4pOiBDb3JlTWVzc2FnZVtdID0+IHtcbiAgY29uc3QgbWVzc2FnZXM6IENvcmVNZXNzYWdlW10gPSBbXTtcblxuICBmb3IgKGNvbnN0IGxtTWVzc2FnZSBvZiBsbSkge1xuICAgIGNvbnN0IHJvbGUgPSBsbU1lc3NhZ2Uucm9sZTtcbiAgICBzd2l0Y2ggKHJvbGUpIHtcbiAgICAgIGNhc2UgXCJzeXN0ZW1cIjoge1xuICAgICAgICBtZXNzYWdlcy5wdXNoKHtcbiAgICAgICAgICByb2xlOiBcInN5c3RlbVwiLFxuICAgICAgICAgIGNvbnRlbnQ6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgICAgICAgIHRleHQ6IGxtTWVzc2FnZS5jb250ZW50LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICBdLFxuICAgICAgICB9KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIFwidXNlclwiOiB7XG4gICAgICAgIG1lc3NhZ2VzLnB1c2goe1xuICAgICAgICAgIHJvbGU6IFwidXNlclwiLFxuICAgICAgICAgIGNvbnRlbnQ6IGxtTWVzc2FnZS5jb250ZW50Lm1hcCgocGFydCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdHlwZSA9IHBhcnQudHlwZTtcbiAgICAgICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgICAgICBjYXNlIFwidGV4dFwiOiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICAgICAgICAgICAgdGV4dDogcGFydC50ZXh0LFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgY2FzZSBcImltYWdlXCI6IHtcbiAgICAgICAgICAgICAgICBpZiAocGFydC5pbWFnZSBpbnN0YW5jZW9mIFVSTCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJpbWFnZVwiLFxuICAgICAgICAgICAgICAgICAgICBpbWFnZTogcGFydC5pbWFnZS5ocmVmLFxuICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiT25seSBpbWFnZXMgd2l0aCBVUkwgZGF0YSBhcmUgc3VwcG9ydGVkXCIpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGNhc2UgXCJmaWxlXCI6IHtcbiAgICAgICAgICAgICAgICAvLyBUT0RPXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmlsZSBjb250ZW50IHBhcnRzIGFyZSBub3Qgc3VwcG9ydGVkXCIpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICBjb25zdCB1bmhhbmRsZWRUeXBlOiBuZXZlciA9IHR5cGU7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGNvbnRlbnQgcGFydCB0eXBlOiAke3VuaGFuZGxlZFR5cGV9YCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSxcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSBcImFzc2lzdGFudFwiOiB7XG4gICAgICAgIGNvbnN0IG5ld0NvbnRlbnQgPSBsbU1lc3NhZ2UuY29udGVudC5tYXAoKHBhcnQpID0+IHtcbiAgICAgICAgICBpZiAocGFydC50eXBlID09PSBcInRvb2wtY2FsbFwiKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICB0eXBlOiBcInRvb2wtY2FsbFwiLFxuICAgICAgICAgICAgICB0b29sQ2FsbElkOiBwYXJ0LnRvb2xDYWxsSWQsXG4gICAgICAgICAgICAgIHRvb2xOYW1lOiBwYXJ0LnRvb2xOYW1lLFxuICAgICAgICAgICAgICBhcmdzVGV4dDogSlNPTi5zdHJpbmdpZnkocGFydC5hcmdzKSxcbiAgICAgICAgICAgICAgYXJnczogcGFydC5hcmdzIGFzIFJlY29yZDxzdHJpbmcsIHVua25vd24+LFxuICAgICAgICAgICAgfSBzYXRpc2ZpZXMgVG9vbENhbGxDb250ZW50UGFydDtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHBhcnQ7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChtZXJnZVN0ZXBzKSB7XG4gICAgICAgICAgY29uc3QgcHJldmlvdXNNZXNzYWdlID0gbWVzc2FnZXNbbWVzc2FnZXMubGVuZ3RoIC0gMV07XG4gICAgICAgICAgaWYgKHByZXZpb3VzTWVzc2FnZT8ucm9sZSA9PT0gXCJhc3Npc3RhbnRcIikge1xuICAgICAgICAgICAgcHJldmlvdXNNZXNzYWdlLmNvbnRlbnQucHVzaCguLi5uZXdDb250ZW50KTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIG1lc3NhZ2VzLnB1c2goe1xuICAgICAgICAgIHJvbGU6IFwiYXNzaXN0YW50XCIsXG4gICAgICAgICAgY29udGVudDogbmV3Q29udGVudCxcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSBcInRvb2xcIjoge1xuICAgICAgICBjb25zdCBwcmV2aW91c01lc3NhZ2UgPSBtZXNzYWdlc1ttZXNzYWdlcy5sZW5ndGggLSAxXTtcbiAgICAgICAgaWYgKHByZXZpb3VzTWVzc2FnZT8ucm9sZSAhPT0gXCJhc3Npc3RhbnRcIilcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBcIkEgdG9vbCBtZXNzYWdlIG11c3QgYmUgcHJlY2VkZWQgYnkgYW4gYXNzaXN0YW50IG1lc3NhZ2UuXCIsXG4gICAgICAgICAgKTtcblxuICAgICAgICBmb3IgKGNvbnN0IHRvb2wgb2YgbG1NZXNzYWdlLmNvbnRlbnQpIHtcbiAgICAgICAgICBjb25zdCB0b29sQ2FsbCA9IHByZXZpb3VzTWVzc2FnZS5jb250ZW50LmZpbmQoXG4gICAgICAgICAgICAoYyk6IGMgaXMgVG9vbENhbGxDb250ZW50UGFydCA9PlxuICAgICAgICAgICAgICBjLnR5cGUgPT09IFwidG9vbC1jYWxsXCIgJiYgYy50b29sQ2FsbElkID09PSB0b29sLnRvb2xDYWxsSWQsXG4gICAgICAgICAgKTtcbiAgICAgICAgICBpZiAoIXRvb2xDYWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmVjZWl2ZWQgdG9vbCByZXN1bHQgZm9yIGFuIHVua25vd24gdG9vbCBjYWxsLlwiKTtcbiAgICAgICAgICBpZiAodG9vbENhbGwudG9vbE5hbWUgIT09IHRvb2wudG9vbE5hbWUpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUb29sIGNhbGwgbmFtZSBtaXNtYXRjaC5cIik7XG5cbiAgICAgICAgICB0b29sQ2FsbC5yZXN1bHQgPSB0b29sLnJlc3VsdDtcbiAgICAgICAgICBpZiAodG9vbC5pc0Vycm9yKSB7XG4gICAgICAgICAgICB0b29sQ2FsbC5pc0Vycm9yID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgZGVmYXVsdDoge1xuICAgICAgICBjb25zdCB1bmhhbmRsZWRSb2xlOiBuZXZlciA9IHJvbGU7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBtZXNzYWdlIHJvbGU6ICR7dW5oYW5kbGVkUm9sZX1gKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVzc2FnZXM7XG59O1xuIiwiaW1wb3J0IHsgTGFuZ3VhZ2VNb2RlbFYxRnVuY3Rpb25Ub29sIH0gZnJvbSBcIkBhaS1zZGsvcHJvdmlkZXJcIjtcbmltcG9ydCB7IFRvb2wgfSBmcm9tIFwiLi4vLi4vLi4vdHlwZXMvTW9kZWxDb25maWdUeXBlc1wiO1xuXG5leHBvcnQgY29uc3QgZnJvbUxhbmd1YWdlTW9kZWxUb29scyA9IChcbiAgdG9vbHM6IExhbmd1YWdlTW9kZWxWMUZ1bmN0aW9uVG9vbFtdLFxuKTogUmVjb3JkPHN0cmluZywgVG9vbDxhbnksIGFueT4+ID0+IHtcbiAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhcbiAgICB0b29scy5tYXAoKHRvb2wpID0+IFtcbiAgICAgIHRvb2wubmFtZSxcbiAgICAgIHtcbiAgICAgICAgZGVzY3JpcHRpb246IHRvb2wuZGVzY3JpcHRpb24sXG4gICAgICAgIHBhcmFtZXRlcnM6IHRvb2wucGFyYW1ldGVycyxcbiAgICAgIH0sXG4gICAgXSksXG4gICk7XG59O1xuIiwiZXhwb3J0IGZ1bmN0aW9uIGNodW5rQnlMaW5lU3RyZWFtKCkge1xuICBsZXQgYnVmZmVyID0gXCJcIjtcblxuICByZXR1cm4gbmV3IFRyYW5zZm9ybVN0cmVhbSh7XG4gICAgdHJhbnNmb3JtKGNodW5rLCBjb250cm9sbGVyKSB7XG4gICAgICBidWZmZXIgKz0gY2h1bms7XG4gICAgICBjb25zdCBsaW5lcyA9IGJ1ZmZlci5zcGxpdChcIlxcblwiKTtcblxuICAgICAgLy8gUHJvY2VzcyBhbGwgY29tcGxldGUgbGluZXNcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShsaW5lc1tpXSk7XG4gICAgICB9XG5cbiAgICAgIC8vIEtlZXAgdGhlIGxhc3QgaW5jb21wbGV0ZSBsaW5lIGluIHRoZSBidWZmZXJcbiAgICAgIGJ1ZmZlciA9IGxpbmVzW2xpbmVzLmxlbmd0aCAtIDFdITtcbiAgICB9LFxuICAgIGZsdXNoKGNvbnRyb2xsZXIpIHtcbiAgICAgIC8vIGZsdXNoIGFueSByZW1haW5pbmcgY29udGVudCBpbiB0aGUgYnVmZmVyXG4gICAgICBpZiAoYnVmZmVyKSB7XG4gICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShidWZmZXIpO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xufVxuIiwiaW1wb3J0IHsgY2h1bmtCeUxpbmVTdHJlYW0gfSBmcm9tIFwiLi9jaHVua0J5TGluZVN0cmVhbVwiO1xuaW1wb3J0IHsgUGlwZWFibGVUcmFuc2Zvcm1TdHJlYW0gfSBmcm9tIFwiLi9QaXBlYWJsZVRyYW5zZm9ybVN0cmVhbVwiO1xuaW1wb3J0IHsgU3RyZWFtUGFydCB9IGZyb20gXCIuL1N0cmVhbVBhcnRcIjtcblxuY29uc3QgZGVjb2RlU3RyZWFtUGFydCA9IDxUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4+KFxuICBwYXJ0OiBzdHJpbmcsXG4pOiBTdHJlYW1QYXJ0PFQ+ID0+IHtcbiAgY29uc3QgaW5kZXggPSBwYXJ0LmluZGV4T2YoXCI6XCIpO1xuICBpZiAoaW5kZXggPT09IC0xKSB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHN0cmVhbSBwYXJ0XCIpO1xuICByZXR1cm4ge1xuICAgIHR5cGU6IHBhcnQuc2xpY2UoMCwgaW5kZXgpLFxuICAgIHZhbHVlOiBKU09OLnBhcnNlKHBhcnQuc2xpY2UoaW5kZXggKyAxKSksXG4gIH07XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gc3RyZWFtUGFydERlY29kZXJTdHJlYW08VCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHVua25vd24+PigpIHtcbiAgY29uc3QgZGVjb2RlU3RyZWFtID0gbmV3IFRyYW5zZm9ybVN0cmVhbTxzdHJpbmcsIFN0cmVhbVBhcnQ8VD4+KHtcbiAgICB0cmFuc2Zvcm0oY2h1bmssIGNvbnRyb2xsZXIpIHtcbiAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShkZWNvZGVTdHJlYW1QYXJ0PFQ+KGNodW5rKSk7XG4gICAgfSxcbiAgfSk7XG5cbiAgcmV0dXJuIG5ldyBQaXBlYWJsZVRyYW5zZm9ybVN0cmVhbSgocmVhZGFibGUpID0+IHtcbiAgICByZXR1cm4gcmVhZGFibGVcbiAgICAgIC5waXBlVGhyb3VnaChuZXcgVGV4dERlY29kZXJTdHJlYW0oKSlcbiAgICAgIC5waXBlVGhyb3VnaChjaHVua0J5TGluZVN0cmVhbSgpKVxuICAgICAgLnBpcGVUaHJvdWdoKGRlY29kZVN0cmVhbSk7XG4gIH0pO1xufVxuIiwiaW1wb3J0IHsgc3RyZWFtUGFydERlY29kZXJTdHJlYW0gfSBmcm9tIFwiLi9zdHJlYW1QYXJ0RGVjb2RlclN0cmVhbVwiO1xuaW1wb3J0IHsgc3RyZWFtUGFydEVuY29kZXJTdHJlYW0gfSBmcm9tIFwiLi9zdHJlYW1QYXJ0RW5jb2RlclN0cmVhbVwiO1xuaW1wb3J0IHsgU3RyZWFtUGFydCB9IGZyb20gXCIuL1N0cmVhbVBhcnRcIjtcblxuZXhwb3J0IGRlY2xhcmUgbmFtZXNwYWNlIFN0cmVhbVV0aWxzIHtcbiAgZXhwb3J0IHsgU3RyZWFtUGFydCB9O1xufVxuXG4vKipcbiAqIEBkZXByZWNhdGVkIGBzdHJlYW1VdGlsc2Agd2lsbCBiZSByZXBsYWNlZCB3aXRoIGBhc3Npc3RhbnQtc3RyZWFtYCBvbmNlIGl0IGlzIHJlYWR5LlxuICovXG5leHBvcnQgY29uc3Qgc3RyZWFtVXRpbHMgPSB7XG4gIHN0cmVhbVBhcnRFbmNvZGVyU3RyZWFtLFxuICBzdHJlYW1QYXJ0RGVjb2RlclN0cmVhbSxcbn07XG4iLCJpbXBvcnQgeyBMb2NhbFJ1bnRpbWVPcHRpb25zLCB1c2VMb2NhbFJ1bnRpbWUgfSBmcm9tIFwiLi5cIjtcbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBFZGdlQ2hhdEFkYXB0ZXJPcHRpb25zLCBFZGdlQ2hhdEFkYXB0ZXIgfSBmcm9tIFwiLi9FZGdlQ2hhdEFkYXB0ZXJcIjtcbmltcG9ydCB7IHNwbGl0TG9jYWxSdW50aW1lT3B0aW9ucyB9IGZyb20gXCIuLi9sb2NhbC9Mb2NhbFJ1bnRpbWVPcHRpb25zXCI7XG5cbmV4cG9ydCB0eXBlIEVkZ2VSdW50aW1lT3B0aW9ucyA9IEVkZ2VDaGF0QWRhcHRlck9wdGlvbnMgJiBMb2NhbFJ1bnRpbWVPcHRpb25zO1xuXG5leHBvcnQgY29uc3QgdXNlRWRnZVJ1bnRpbWUgPSAob3B0aW9uczogRWRnZVJ1bnRpbWVPcHRpb25zKSA9PiB7XG4gIGNvbnN0IHsgbG9jYWxSdW50aW1lT3B0aW9ucywgb3RoZXJPcHRpb25zIH0gPVxuICAgIHNwbGl0TG9jYWxSdW50aW1lT3B0aW9ucyhvcHRpb25zKTtcbiAgY29uc3QgW2FkYXB0ZXJdID0gdXNlU3RhdGUoKCkgPT4gbmV3IEVkZ2VDaGF0QWRhcHRlcihvdGhlck9wdGlvbnMpKTtcbiAgcmV0dXJuIHVzZUxvY2FsUnVudGltZShhZGFwdGVyLCBsb2NhbFJ1bnRpbWVPcHRpb25zKTtcbn07XG4iLCJpbXBvcnQge1xuICBBc3Npc3RhbnRTdHJlYW1DaHVuayxcbiAgQXNzaXN0YW50U3RyZWFtQ2h1bmtUeXBlLFxufSBmcm9tIFwiLi9Bc3Npc3RhbnRTdHJlYW1DaHVua1R5cGVcIjtcbmltcG9ydCB7IFN0cmVhbVBhcnQgfSBmcm9tIFwiLi91dGlscy9TdHJlYW1QYXJ0XCI7XG5pbXBvcnQgeyBUb29sUmVzdWx0U3RyZWFtUGFydCB9IGZyb20gXCIuL3Rvb2xSZXN1bHRTdHJlYW1cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2lzdGFudERlY29kZXJTdHJlYW0oKSB7XG4gIGNvbnN0IHRvb2xDYWxsTmFtZXMgPSBuZXcgTWFwPHN0cmluZywgc3RyaW5nPigpO1xuICBsZXQgY3VycmVudFRvb2xDYWxsOlxuICAgIHwgeyBpZDogc3RyaW5nOyBuYW1lOiBzdHJpbmc7IGFyZ3NUZXh0OiBzdHJpbmcgfVxuICAgIHwgdW5kZWZpbmVkO1xuXG4gIHJldHVybiBuZXcgVHJhbnNmb3JtU3RyZWFtPFxuICAgIFN0cmVhbVBhcnQ8QXNzaXN0YW50U3RyZWFtQ2h1bms+LFxuICAgIFRvb2xSZXN1bHRTdHJlYW1QYXJ0XG4gID4oe1xuICAgIHRyYW5zZm9ybSh7IHR5cGUsIHZhbHVlIH0sIGNvbnRyb2xsZXIpIHtcbiAgICAgIGlmIChcbiAgICAgICAgY3VycmVudFRvb2xDYWxsICYmXG4gICAgICAgIHR5cGUgIT09IEFzc2lzdGFudFN0cmVhbUNodW5rVHlwZS5Ub29sQ2FsbERlbHRhICYmXG4gICAgICAgIHR5cGUgIT09IEFzc2lzdGFudFN0cmVhbUNodW5rVHlwZS5FcnJvclxuICAgICAgKSB7XG4gICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZSh7XG4gICAgICAgICAgdHlwZTogXCJ0b29sLWNhbGxcIixcbiAgICAgICAgICB0b29sQ2FsbFR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICAgICAgICB0b29sQ2FsbElkOiBjdXJyZW50VG9vbENhbGwuaWQsXG4gICAgICAgICAgdG9vbE5hbWU6IGN1cnJlbnRUb29sQ2FsbC5uYW1lLFxuICAgICAgICAgIGFyZ3M6IGN1cnJlbnRUb29sQ2FsbC5hcmdzVGV4dCxcbiAgICAgICAgfSk7XG4gICAgICAgIGN1cnJlbnRUb29sQ2FsbCA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgQXNzaXN0YW50U3RyZWFtQ2h1bmtUeXBlLlRleHREZWx0YToge1xuICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZSh7XG4gICAgICAgICAgICB0eXBlOiBcInRleHQtZGVsdGFcIixcbiAgICAgICAgICAgIHRleHREZWx0YTogdmFsdWUsXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBBc3Npc3RhbnRTdHJlYW1DaHVua1R5cGUuVG9vbENhbGxCZWdpbjoge1xuICAgICAgICAgIGNvbnN0IHsgdG9vbENhbGxJZDogaWQsIHRvb2xOYW1lOiBuYW1lIH0gPSB2YWx1ZTtcbiAgICAgICAgICB0b29sQ2FsbE5hbWVzLnNldChpZCwgbmFtZSk7XG4gICAgICAgICAgY3VycmVudFRvb2xDYWxsID0geyBpZCwgbmFtZSwgYXJnc1RleHQ6IFwiXCIgfTtcblxuICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZSh7XG4gICAgICAgICAgICB0eXBlOiBcInRvb2wtY2FsbC1kZWx0YVwiLFxuICAgICAgICAgICAgdG9vbENhbGxUeXBlOiBcImZ1bmN0aW9uXCIsXG4gICAgICAgICAgICB0b29sQ2FsbElkOiBpZCxcbiAgICAgICAgICAgIHRvb2xOYW1lOiBuYW1lLFxuICAgICAgICAgICAgYXJnc1RleHREZWx0YTogXCJcIixcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIEFzc2lzdGFudFN0cmVhbUNodW5rVHlwZS5Ub29sQ2FsbERlbHRhOiB7XG4gICAgICAgICAgY29uc3QgeyB0b29sQ2FsbElkLCBhcmdzVGV4dERlbHRhIH0gPSB2YWx1ZTtcblxuICAgICAgICAgIGNvbnN0IHRvb2xOYW1lID0gdG9vbENhbGxOYW1lcy5nZXQodG9vbENhbGxJZCkhO1xuICAgICAgICAgIGlmIChjdXJyZW50VG9vbENhbGw/LmlkID09PSB0b29sQ2FsbElkKSB7XG4gICAgICAgICAgICBjdXJyZW50VG9vbENhbGwuYXJnc1RleHQgKz0gYXJnc1RleHREZWx0YTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKHtcbiAgICAgICAgICAgIHR5cGU6IFwidG9vbC1jYWxsLWRlbHRhXCIsXG4gICAgICAgICAgICB0b29sQ2FsbFR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICAgICAgICAgIHRvb2xDYWxsSWQsXG4gICAgICAgICAgICB0b29sTmFtZSxcbiAgICAgICAgICAgIGFyZ3NUZXh0RGVsdGE6IGFyZ3NUZXh0RGVsdGEsXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBBc3Npc3RhbnRTdHJlYW1DaHVua1R5cGUuVG9vbENhbGxSZXN1bHQ6IHtcbiAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoe1xuICAgICAgICAgICAgdHlwZTogXCJ0b29sLXJlc3VsdFwiLFxuICAgICAgICAgICAgdG9vbENhbGxUeXBlOiBcImZ1bmN0aW9uXCIsXG4gICAgICAgICAgICB0b29sQ2FsbElkOiB2YWx1ZS50b29sQ2FsbElkLFxuICAgICAgICAgICAgdG9vbE5hbWU6IHRvb2xDYWxsTmFtZXMuZ2V0KHZhbHVlLnRvb2xDYWxsSWQpISxcbiAgICAgICAgICAgIHJlc3VsdDogdmFsdWUucmVzdWx0LFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgQXNzaXN0YW50U3RyZWFtQ2h1bmtUeXBlLkZpbmlzaDoge1xuICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZSh7XG4gICAgICAgICAgICB0eXBlOiBcImZpbmlzaFwiLFxuICAgICAgICAgICAgLi4udmFsdWUsXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBBc3Npc3RhbnRTdHJlYW1DaHVua1R5cGUuRXJyb3I6IHtcbiAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoe1xuICAgICAgICAgICAgdHlwZTogXCJlcnJvclwiLFxuICAgICAgICAgICAgZXJyb3I6IHZhbHVlLFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgY2FzZSBBc3Npc3RhbnRTdHJlYW1DaHVua1R5cGUuVG9vbENhbGw6IHtcbiAgICAgICAgICBjb25zdCB7IHRvb2xDYWxsSWQsIHRvb2xOYW1lLCBhcmdzIH0gPSB2YWx1ZTtcbiAgICAgICAgICBjb25zdCBhcmdzVGV4dCA9IEpTT04uc3RyaW5naWZ5KGFyZ3MpO1xuICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZSh7XG4gICAgICAgICAgICB0eXBlOiBcInRvb2wtY2FsbC1kZWx0YVwiLFxuICAgICAgICAgICAgdG9vbENhbGxUeXBlOiBcImZ1bmN0aW9uXCIsXG4gICAgICAgICAgICB0b29sQ2FsbElkLFxuICAgICAgICAgICAgdG9vbE5hbWUsXG4gICAgICAgICAgICBhcmdzVGV4dERlbHRhOiBhcmdzVGV4dCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoe1xuICAgICAgICAgICAgdHlwZTogXCJ0b29sLWNhbGxcIixcbiAgICAgICAgICAgIHRvb2xDYWxsVHlwZTogXCJmdW5jdGlvblwiLFxuICAgICAgICAgICAgdG9vbENhbGxJZDogdG9vbENhbGxJZCxcbiAgICAgICAgICAgIHRvb2xOYW1lOiB0b29sTmFtZSxcbiAgICAgICAgICAgIGFyZ3M6IGFyZ3NUZXh0LFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgY2FzZSBBc3Npc3RhbnRTdHJlYW1DaHVua1R5cGUuU3RlcEZpbmlzaDoge1xuICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZSh7XG4gICAgICAgICAgICB0eXBlOiBcInN0ZXAtZmluaXNoXCIsXG4gICAgICAgICAgICAuLi52YWx1ZSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRPRE9cbiAgICAgICAgY2FzZSBBc3Npc3RhbnRTdHJlYW1DaHVua1R5cGUuRGF0YTpcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgY29uc3QgdW5oYW5kbGVkVHlwZTogbmV2ZXIgPSB0eXBlO1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5oYW5kbGVkIGNodW5rIHR5cGU6ICR7dW5oYW5kbGVkVHlwZX1gKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gIH0pO1xufVxuIiwiaW1wb3J0IHsgQ2hhdE1vZGVsQWRhcHRlciwgQ2hhdE1vZGVsUnVuT3B0aW9ucyB9IGZyb20gXCIuLi9sb2NhbFwiO1xuaW1wb3J0IHsgQ2hhdE1vZGVsUnVuUmVzdWx0IH0gZnJvbSBcIi4uL2xvY2FsL0NoYXRNb2RlbEFkYXB0ZXJcIjtcbmltcG9ydCB7IHRvQ29yZU1lc3NhZ2VzIH0gZnJvbSBcIi4vY29udmVydGVycy90b0NvcmVNZXNzYWdlc1wiO1xuaW1wb3J0IHsgdG9MYW5ndWFnZU1vZGVsVG9vbHMgfSBmcm9tIFwiLi9jb252ZXJ0ZXJzL3RvTGFuZ3VhZ2VNb2RlbFRvb2xzXCI7XG5pbXBvcnQgeyBFZGdlUnVudGltZVJlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4vRWRnZVJ1bnRpbWVSZXF1ZXN0T3B0aW9uc1wiO1xuaW1wb3J0IHsgYXNzaXN0YW50RGVjb2RlclN0cmVhbSB9IGZyb20gXCIuL3N0cmVhbXMvYXNzaXN0YW50RGVjb2RlclN0cmVhbVwiO1xuaW1wb3J0IHsgc3RyZWFtUGFydERlY29kZXJTdHJlYW0gfSBmcm9tIFwiLi9zdHJlYW1zL3V0aWxzL3N0cmVhbVBhcnREZWNvZGVyU3RyZWFtXCI7XG5pbXBvcnQgeyBydW5SZXN1bHRTdHJlYW0gfSBmcm9tIFwiLi9zdHJlYW1zL3J1blJlc3VsdFN0cmVhbVwiO1xuaW1wb3J0IHsgdG9vbFJlc3VsdFN0cmVhbSB9IGZyb20gXCIuL3N0cmVhbXMvdG9vbFJlc3VsdFN0cmVhbVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gYXNBc3luY0l0ZXJhYmxlPFQ+KFxuICBzb3VyY2U6IFJlYWRhYmxlU3RyZWFtPFQ+LFxuKTogQXN5bmNJdGVyYWJsZTxUPiB7XG4gIHJldHVybiB7XG4gICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXTogKCkgPT4ge1xuICAgICAgY29uc3QgcmVhZGVyID0gc291cmNlLmdldFJlYWRlcigpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYXN5bmMgbmV4dCgpOiBQcm9taXNlPEl0ZXJhdG9yUmVzdWx0PFQsIHVuZGVmaW5lZD4+IHtcbiAgICAgICAgICBjb25zdCB7IGRvbmUsIHZhbHVlIH0gPSBhd2FpdCByZWFkZXIucmVhZCgpO1xuICAgICAgICAgIHJldHVybiBkb25lXG4gICAgICAgICAgICA/IHsgZG9uZTogdHJ1ZSwgdmFsdWU6IHVuZGVmaW5lZCB9XG4gICAgICAgICAgICA6IHsgZG9uZTogZmFsc2UsIHZhbHVlIH07XG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgIH0sXG4gIH07XG59XG5leHBvcnQgdHlwZSBFZGdlQ2hhdEFkYXB0ZXJPcHRpb25zID0ge1xuICBhcGk6IHN0cmluZztcblxuICBjcmVkZW50aWFscz86IFJlcXVlc3RDcmVkZW50aWFscztcbiAgaGVhZGVycz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gfCBIZWFkZXJzO1xuICBib2R5Pzogb2JqZWN0O1xufTtcblxuZXhwb3J0IGNsYXNzIEVkZ2VDaGF0QWRhcHRlciBpbXBsZW1lbnRzIENoYXRNb2RlbEFkYXB0ZXIge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG9wdGlvbnM6IEVkZ2VDaGF0QWRhcHRlck9wdGlvbnMpIHt9XG5cbiAgYXN5bmMgKnJ1bih7IG1lc3NhZ2VzLCBhYm9ydFNpZ25hbCwgY29uZmlnIH06IENoYXRNb2RlbFJ1bk9wdGlvbnMpIHtcbiAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnModGhpcy5vcHRpb25zLmhlYWRlcnMpO1xuICAgIGhlYWRlcnMuc2V0KFwiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24vanNvblwiKTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGZldGNoKHRoaXMub3B0aW9ucy5hcGksIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzLFxuICAgICAgY3JlZGVudGlhbHM6IHRoaXMub3B0aW9ucy5jcmVkZW50aWFscyA/PyBcInNhbWUtb3JpZ2luXCIsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIHN5c3RlbTogY29uZmlnLnN5c3RlbSxcbiAgICAgICAgbWVzc2FnZXM6IHRvQ29yZU1lc3NhZ2VzKG1lc3NhZ2VzKSxcbiAgICAgICAgdG9vbHM6IGNvbmZpZy50b29scyA/IHRvTGFuZ3VhZ2VNb2RlbFRvb2xzKGNvbmZpZy50b29scykgOiBbXSxcbiAgICAgICAgLi4uY29uZmlnLmNhbGxTZXR0aW5ncyxcbiAgICAgICAgLi4uY29uZmlnLmNvbmZpZyxcblxuICAgICAgICAuLi50aGlzLm9wdGlvbnMuYm9keSxcbiAgICAgIH0gc2F0aXNmaWVzIEVkZ2VSdW50aW1lUmVxdWVzdE9wdGlvbnMpLFxuICAgICAgc2lnbmFsOiBhYm9ydFNpZ25hbCxcbiAgICB9KTtcblxuICAgIGlmICghcmVzdWx0Lm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFN0YXR1cyAke3Jlc3VsdC5zdGF0dXN9OiAke2F3YWl0IHJlc3VsdC50ZXh0KCl9YCk7XG4gICAgfVxuXG4gICAgY29uc3Qgc3RyZWFtID0gcmVzdWx0XG4gICAgICAuYm9keSEucGlwZVRocm91Z2goc3RyZWFtUGFydERlY29kZXJTdHJlYW0oKSlcbiAgICAgIC5waXBlVGhyb3VnaChhc3Npc3RhbnREZWNvZGVyU3RyZWFtKCkpXG4gICAgICAucGlwZVRocm91Z2godG9vbFJlc3VsdFN0cmVhbShjb25maWcudG9vbHMsIGFib3J0U2lnbmFsKSlcbiAgICAgIC5waXBlVGhyb3VnaChydW5SZXN1bHRTdHJlYW0oKSk7XG5cbiAgICBsZXQgdXBkYXRlOiBDaGF0TW9kZWxSdW5SZXN1bHQgfCB1bmRlZmluZWQ7XG4gICAgZm9yIGF3YWl0ICh1cGRhdGUgb2YgYXNBc3luY0l0ZXJhYmxlKHN0cmVhbSkpIHtcbiAgICAgIHlpZWxkIHVwZGF0ZTtcbiAgICB9XG5cbiAgICBpZiAodXBkYXRlID09PSB1bmRlZmluZWQpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBkYXRhIHJlY2VpdmVkIGZyb20gRWRnZSBSdW50aW1lXCIpO1xuICB9XG59XG4iLCJpbXBvcnQgdHlwZSB7IENvcmVNZXNzYWdlIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5pbXBvcnQgeyBBdHRhY2htZW50QWRhcHRlciB9IGZyb20gXCIuLi9hdHRhY2htZW50L0F0dGFjaG1lbnRBZGFwdGVyXCI7XG5pbXBvcnQgeyBGZWVkYmFja0FkYXB0ZXIgfSBmcm9tIFwiLi4vZmVlZGJhY2svRmVlZGJhY2tBZGFwdGVyXCI7XG5pbXBvcnQgeyBTcGVlY2hTeW50aGVzaXNBZGFwdGVyIH0gZnJvbSBcIi4uL3NwZWVjaC9TcGVlY2hBZGFwdGVyVHlwZXNcIjtcblxuZXhwb3J0IHR5cGUgTG9jYWxSdW50aW1lT3B0aW9ucyA9IHtcbiAgaW5pdGlhbE1lc3NhZ2VzPzogcmVhZG9ubHkgQ29yZU1lc3NhZ2VbXSB8IHVuZGVmaW5lZDtcbiAgbWF4U3RlcHM/OiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYG1heFN0ZXBzYCAod2hpY2ggaXMgYG1heFRvb2xSb3VuZHRyaXBzYCArIDE7IGlmIHlvdSBzZXQgYG1heFRvb2xSb3VuZHRyaXBzYCB0byAyLCBzZXQgYG1heFN0ZXBzYCB0byAzKSBpbnN0ZWFkLiBUaGlzIGZpZWxkIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MC42LlxuICAgKi9cbiAgbWF4VG9vbFJvdW5kdHJpcHM/OiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIGFkYXB0ZXJzPzpcbiAgICB8IHtcbiAgICAgICAgYXR0YWNobWVudHM/OiBBdHRhY2htZW50QWRhcHRlciB8IHVuZGVmaW5lZDtcbiAgICAgICAgc3BlZWNoPzogU3BlZWNoU3ludGhlc2lzQWRhcHRlciB8IHVuZGVmaW5lZDtcbiAgICAgICAgZmVlZGJhY2s/OiBGZWVkYmFja0FkYXB0ZXIgfCB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgfCB1bmRlZmluZWQ7XG59O1xuXG5leHBvcnQgY29uc3Qgc3BsaXRMb2NhbFJ1bnRpbWVPcHRpb25zID0gPFQgZXh0ZW5kcyBMb2NhbFJ1bnRpbWVPcHRpb25zPihcbiAgb3B0aW9uczogVCxcbikgPT4ge1xuICBjb25zdCB7IGluaXRpYWxNZXNzYWdlcywgbWF4VG9vbFJvdW5kdHJpcHMsIG1heFN0ZXBzLCBhZGFwdGVycywgLi4ucmVzdCB9ID1cbiAgICBvcHRpb25zO1xuXG4gIHJldHVybiB7XG4gICAgbG9jYWxSdW50aW1lT3B0aW9uczoge1xuICAgICAgaW5pdGlhbE1lc3NhZ2VzLFxuICAgICAgbWF4VG9vbFJvdW5kdHJpcHMsXG4gICAgICBtYXhTdGVwcyxcbiAgICAgIGFkYXB0ZXJzLFxuICAgIH0sXG4gICAgb3RoZXJPcHRpb25zOiByZXN0LFxuICB9O1xufTtcbiIsImltcG9ydCB0eXBlIHsgVGhyZWFkQXNzaXN0YW50TWVzc2FnZSB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuXG5leHBvcnQgY29uc3Qgc2hvdWxkQ29udGludWUgPSAocmVzdWx0OiBUaHJlYWRBc3Npc3RhbnRNZXNzYWdlKSA9PlxuICByZXN1bHQuc3RhdHVzPy50eXBlID09PSBcInJlcXVpcmVzLWFjdGlvblwiICYmXG4gIHJlc3VsdC5zdGF0dXMucmVhc29uID09PSBcInRvb2wtY2FsbHNcIiAmJlxuICByZXN1bHQuY29udGVudC5ldmVyeSgoYykgPT4gYy50eXBlICE9PSBcInRvb2wtY2FsbFwiIHx8ICEhYy5yZXN1bHQpO1xuIiwiaW1wb3J0IHsgQXBwZW5kTWVzc2FnZSwgVGhyZWFkTWVzc2FnZSB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuaW1wb3J0IHsgZ2V0VGhyZWFkTWVzc2FnZVRleHQgfSBmcm9tIFwiLi4vLi4vdXRpbHMvZ2V0VGhyZWFkTWVzc2FnZVRleHRcIjtcbmltcG9ydCB7IEF0dGFjaG1lbnRBZGFwdGVyIH0gZnJvbSBcIi4uL2F0dGFjaG1lbnRcIjtcbmltcG9ydCB7IFRocmVhZFJ1bnRpbWVDb3JlIH0gZnJvbSBcIi4uL2NvcmUvVGhyZWFkUnVudGltZUNvcmVcIjtcbmltcG9ydCB7IEJhc2VDb21wb3NlclJ1bnRpbWVDb3JlIH0gZnJvbSBcIi4vQmFzZUNvbXBvc2VyUnVudGltZUNvcmVcIjtcblxuZXhwb3J0IGNsYXNzIERlZmF1bHRFZGl0Q29tcG9zZXJSdW50aW1lQ29yZSBleHRlbmRzIEJhc2VDb21wb3NlclJ1bnRpbWVDb3JlIHtcbiAgcHVibGljIGdldCBjYW5DYW5jZWwoKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBwcm90ZWN0ZWQgZ2V0QXR0YWNobWVudEFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMucnVudGltZS5hZGFwdGVycz8uYXR0YWNobWVudHM7XG4gIH1cblxuICBwcml2YXRlIF9ub25UZXh0UGFydHM7XG4gIHByaXZhdGUgX3ByZXZpb3VzVGV4dDtcbiAgcHJpdmF0ZSBfcGFyZW50SWQ7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcnVudGltZTogT21pdDxUaHJlYWRSdW50aW1lQ29yZSwgXCJjb21wb3NlclwiPiAmIHtcbiAgICAgIGFkYXB0ZXJzPzogeyBhdHRhY2htZW50cz86IEF0dGFjaG1lbnRBZGFwdGVyIHwgdW5kZWZpbmVkIH0gfCB1bmRlZmluZWQ7XG4gICAgfSxcbiAgICBwcml2YXRlIGVuZEVkaXRDYWxsYmFjazogKCkgPT4gdm9pZCxcbiAgICB7IHBhcmVudElkLCBtZXNzYWdlIH06IHsgcGFyZW50SWQ6IHN0cmluZyB8IG51bGw7IG1lc3NhZ2U6IFRocmVhZE1lc3NhZ2UgfSxcbiAgKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9wYXJlbnRJZCA9IHBhcmVudElkO1xuICAgIHRoaXMuX3ByZXZpb3VzVGV4dCA9IGdldFRocmVhZE1lc3NhZ2VUZXh0KG1lc3NhZ2UpO1xuICAgIHRoaXMuc2V0VGV4dCh0aGlzLl9wcmV2aW91c1RleHQpO1xuXG4gICAgdGhpcy5fbm9uVGV4dFBhcnRzID0gbWVzc2FnZS5jb250ZW50LmZpbHRlcihcbiAgICAgIChwYXJ0KSA9PiBwYXJ0LnR5cGUgIT09IFwidGV4dFwiICYmIHBhcnQudHlwZSAhPT0gXCJ1aVwiLFxuICAgICk7XG5cbiAgICB0aGlzLmF0dGFjaG1lbnRzID0gbWVzc2FnZS5hdHRhY2htZW50cyA/PyBbXTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBoYW5kbGVTZW5kKG1lc3NhZ2U6IE9taXQ8QXBwZW5kTWVzc2FnZSwgXCJwYXJlbnRJZFwiPikge1xuICAgIGNvbnN0IHRleHQgPSBnZXRUaHJlYWRNZXNzYWdlVGV4dChtZXNzYWdlIGFzIEFwcGVuZE1lc3NhZ2UpO1xuICAgIGlmICh0ZXh0ICE9PSB0aGlzLl9wcmV2aW91c1RleHQpIHtcbiAgICAgIHRoaXMucnVudGltZS5hcHBlbmQoe1xuICAgICAgICAuLi4obWVzc2FnZSBhcyBBcHBlbmRNZXNzYWdlKSxcbiAgICAgICAgY29udGVudDogWy4uLm1lc3NhZ2UuY29udGVudCwgLi4udGhpcy5fbm9uVGV4dFBhcnRzXSBhcyBhbnksXG4gICAgICAgIHBhcmVudElkOiB0aGlzLl9wYXJlbnRJZCxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRoaXMuZW5kRWRpdENhbGxiYWNrKCk7XG4gICAgdGhpcy5ub3RpZnlTdWJzY3JpYmVycygpO1xuICB9XG5cbiAgcHVibGljIGFzeW5jIGNhbmNlbCgpIHtcbiAgICB0aGlzLmVuZEVkaXRDYWxsYmFjaygpO1xuICAgIHRoaXMubm90aWZ5U3Vic2NyaWJlcnMoKTtcbiAgfVxufVxuIiwiaW1wb3J0IHR5cGUge1xuICBNb2RlbENvbmZpZ1Byb3ZpZGVyLFxuICBBcHBlbmRNZXNzYWdlLFxuICBVbnN1YnNjcmliZSxcbn0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5pbXBvcnQge1xuICBFeHBvcnRlZE1lc3NhZ2VSZXBvc2l0b3J5LFxuICBNZXNzYWdlUmVwb3NpdG9yeSxcbn0gZnJvbSBcIi4uL3V0aWxzL01lc3NhZ2VSZXBvc2l0b3J5XCI7XG5pbXBvcnQgeyBEZWZhdWx0VGhyZWFkQ29tcG9zZXJSdW50aW1lQ29yZSB9IGZyb20gXCIuLi9jb21wb3Nlci9EZWZhdWx0VGhyZWFkQ29tcG9zZXJSdW50aW1lQ29yZVwiO1xuaW1wb3J0IHtcbiAgQWRkVG9vbFJlc3VsdE9wdGlvbnMsXG4gIFRocmVhZFN1Z2dlc3Rpb24sXG4gIFN1Ym1pdEZlZWRiYWNrT3B0aW9ucyxcbiAgVGhyZWFkUnVudGltZUNvcmUsXG4gIFNwZWVjaFN0YXRlLFxuICBSdW50aW1lQ2FwYWJpbGl0aWVzLFxuICBTdWJtaXR0ZWRGZWVkYmFjayxcbiAgVGhyZWFkUnVudGltZUV2ZW50VHlwZSxcbn0gZnJvbSBcIi4uL2NvcmUvVGhyZWFkUnVudGltZUNvcmVcIjtcbmltcG9ydCB7IERlZmF1bHRFZGl0Q29tcG9zZXJSdW50aW1lQ29yZSB9IGZyb20gXCIuLi9jb21wb3Nlci9EZWZhdWx0RWRpdENvbXBvc2VyUnVudGltZUNvcmVcIjtcbmltcG9ydCB7IFNwZWVjaFN5bnRoZXNpc0FkYXB0ZXIgfSBmcm9tIFwiLi4vc3BlZWNoXCI7XG5pbXBvcnQgeyBGZWVkYmFja0FkYXB0ZXIgfSBmcm9tIFwiLi4vZmVlZGJhY2svRmVlZGJhY2tBZGFwdGVyXCI7XG5pbXBvcnQgeyBBdHRhY2htZW50QWRhcHRlciB9IGZyb20gXCIuLi9hdHRhY2htZW50XCI7XG5pbXBvcnQgeyBnZXRUaHJlYWRNZXNzYWdlVGV4dCB9IGZyb20gXCIuLi8uLi91dGlscy9nZXRUaHJlYWRNZXNzYWdlVGV4dFwiO1xuXG50eXBlIEJhc2VUaHJlYWRBZGFwdGVycyA9IHtcbiAgc3BlZWNoPzogU3BlZWNoU3ludGhlc2lzQWRhcHRlciB8IHVuZGVmaW5lZDtcbiAgZmVlZGJhY2s/OiBGZWVkYmFja0FkYXB0ZXIgfCB1bmRlZmluZWQ7XG4gIGF0dGFjaG1lbnRzPzogQXR0YWNobWVudEFkYXB0ZXIgfCB1bmRlZmluZWQ7XG59O1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQmFzZVRocmVhZFJ1bnRpbWVDb3JlIGltcGxlbWVudHMgVGhyZWFkUnVudGltZUNvcmUge1xuICBwcml2YXRlIF9zdWJzY3JpcHRpb25zID0gbmV3IFNldDwoKSA9PiB2b2lkPigpO1xuXG4gIHByb3RlY3RlZCByZWFkb25seSByZXBvc2l0b3J5ID0gbmV3IE1lc3NhZ2VSZXBvc2l0b3J5KCk7XG4gIHB1YmxpYyBhYnN0cmFjdCBnZXQgYWRhcHRlcnMoKTogQmFzZVRocmVhZEFkYXB0ZXJzIHwgdW5kZWZpbmVkO1xuXG4gIHB1YmxpYyBhYnN0cmFjdCBnZXQgdGhyZWFkSWQoKTogc3RyaW5nO1xuICBwdWJsaWMgYWJzdHJhY3QgZ2V0IGlzRGlzYWJsZWQoKTogYm9vbGVhbjtcbiAgcHVibGljIGFic3RyYWN0IGdldCBzdWdnZXN0aW9ucygpOiByZWFkb25seSBUaHJlYWRTdWdnZXN0aW9uW107XG4gIHB1YmxpYyBhYnN0cmFjdCBnZXQgZXh0cmFzKCk6IHVua25vd247XG5cbiAgcHVibGljIGFic3RyYWN0IGdldCBjYXBhYmlsaXRpZXMoKTogUnVudGltZUNhcGFiaWxpdGllcztcbiAgcHVibGljIGFic3RyYWN0IGFwcGVuZChtZXNzYWdlOiBBcHBlbmRNZXNzYWdlKTogdm9pZDtcbiAgcHVibGljIGFic3RyYWN0IHN0YXJ0UnVuKHBhcmVudElkOiBzdHJpbmcgfCBudWxsKTogdm9pZDtcbiAgcHVibGljIGFic3RyYWN0IGFkZFRvb2xSZXN1bHQob3B0aW9uczogQWRkVG9vbFJlc3VsdE9wdGlvbnMpOiB2b2lkO1xuICBwdWJsaWMgYWJzdHJhY3QgY2FuY2VsUnVuKCk6IHZvaWQ7XG5cbiAgcHVibGljIGdldCBtZXNzYWdlcygpIHtcbiAgICByZXR1cm4gdGhpcy5yZXBvc2l0b3J5LmdldE1lc3NhZ2VzKCk7XG4gIH1cblxuICBwdWJsaWMgcmVhZG9ubHkgY29tcG9zZXIgPSBuZXcgRGVmYXVsdFRocmVhZENvbXBvc2VyUnVudGltZUNvcmUodGhpcyk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb25maWdQcm92aWRlcjogTW9kZWxDb25maWdQcm92aWRlcikge1xuICAgIHRoaXMuY29uZmlnUHJvdmlkZXIuc3Vic2NyaWJlPy4oKCkgPT4ge1xuICAgICAgdGhpcy5fbm90aWZ5RXZlbnRTdWJzY3JpYmVycyhcIm1vZGVsLWNvbmZpZy11cGRhdGVcIik7XG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgZ2V0TW9kZWxDb25maWcoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29uZmlnUHJvdmlkZXIuZ2V0TW9kZWxDb25maWcoKTtcbiAgfVxuXG4gIHByaXZhdGUgX2VkaXRDb21wb3NlcnMgPSBuZXcgTWFwPHN0cmluZywgRGVmYXVsdEVkaXRDb21wb3NlclJ1bnRpbWVDb3JlPigpO1xuICBwdWJsaWMgZ2V0RWRpdENvbXBvc2VyKG1lc3NhZ2VJZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMuX2VkaXRDb21wb3NlcnMuZ2V0KG1lc3NhZ2VJZCk7XG4gIH1cbiAgcHVibGljIGJlZ2luRWRpdChtZXNzYWdlSWQ6IHN0cmluZykge1xuICAgIGlmICh0aGlzLl9lZGl0Q29tcG9zZXJzLmhhcyhtZXNzYWdlSWQpKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRWRpdCBhbHJlYWR5IGluIHByb2dyZXNzXCIpO1xuXG4gICAgdGhpcy5fZWRpdENvbXBvc2Vycy5zZXQoXG4gICAgICBtZXNzYWdlSWQsXG4gICAgICBuZXcgRGVmYXVsdEVkaXRDb21wb3NlclJ1bnRpbWVDb3JlKFxuICAgICAgICB0aGlzLFxuICAgICAgICAoKSA9PiB0aGlzLl9lZGl0Q29tcG9zZXJzLmRlbGV0ZShtZXNzYWdlSWQpLFxuICAgICAgICB0aGlzLnJlcG9zaXRvcnkuZ2V0TWVzc2FnZShtZXNzYWdlSWQpLFxuICAgICAgKSxcbiAgICApO1xuICAgIHRoaXMuX25vdGlmeVN1YnNjcmliZXJzKCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0TWVzc2FnZUJ5SWQobWVzc2FnZUlkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXBvc2l0b3J5LmdldE1lc3NhZ2UobWVzc2FnZUlkKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRCcmFuY2hlcyhtZXNzYWdlSWQ6IHN0cmluZyk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gdGhpcy5yZXBvc2l0b3J5LmdldEJyYW5jaGVzKG1lc3NhZ2VJZCk7XG4gIH1cblxuICBwdWJsaWMgc3dpdGNoVG9CcmFuY2goYnJhbmNoSWQ6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMucmVwb3NpdG9yeS5zd2l0Y2hUb0JyYW5jaChicmFuY2hJZCk7XG4gICAgdGhpcy5fbm90aWZ5U3Vic2NyaWJlcnMoKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBfbm90aWZ5U3Vic2NyaWJlcnMoKSB7XG4gICAgZm9yIChjb25zdCBjYWxsYmFjayBvZiB0aGlzLl9zdWJzY3JpcHRpb25zKSBjYWxsYmFjaygpO1xuICB9XG5cbiAgcHVibGljIF9ub3RpZnlFdmVudFN1YnNjcmliZXJzKGV2ZW50OiBUaHJlYWRSdW50aW1lRXZlbnRUeXBlKSB7XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSB0aGlzLl9ldmVudFN1YnNjcmliZXJzLmdldChldmVudCk7XG4gICAgaWYgKCFzdWJzY3JpYmVycykgcmV0dXJuO1xuXG4gICAgZm9yIChjb25zdCBjYWxsYmFjayBvZiBzdWJzY3JpYmVycykgY2FsbGJhY2soKTtcbiAgfVxuXG4gIHB1YmxpYyBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiBVbnN1YnNjcmliZSB7XG4gICAgdGhpcy5fc3Vic2NyaXB0aW9ucy5hZGQoY2FsbGJhY2spO1xuICAgIHJldHVybiAoKSA9PiB0aGlzLl9zdWJzY3JpcHRpb25zLmRlbGV0ZShjYWxsYmFjayk7XG4gIH1cblxuICBwcml2YXRlIF9zdWJtaXR0ZWRGZWVkYmFjazogUmVjb3JkPHN0cmluZywgU3VibWl0dGVkRmVlZGJhY2s+ID0ge307XG5cbiAgcHVibGljIGdldFN1Ym1pdHRlZEZlZWRiYWNrKG1lc3NhZ2VJZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMuX3N1Ym1pdHRlZEZlZWRiYWNrW21lc3NhZ2VJZF07XG4gIH1cblxuICBwdWJsaWMgc3VibWl0RmVlZGJhY2soeyBtZXNzYWdlSWQsIHR5cGUgfTogU3VibWl0RmVlZGJhY2tPcHRpb25zKSB7XG4gICAgY29uc3QgYWRhcHRlciA9IHRoaXMuYWRhcHRlcnM/LmZlZWRiYWNrO1xuICAgIGlmICghYWRhcHRlcikgdGhyb3cgbmV3IEVycm9yKFwiRmVlZGJhY2sgYWRhcHRlciBub3QgY29uZmlndXJlZFwiKTtcblxuICAgIGNvbnN0IHsgbWVzc2FnZSB9ID0gdGhpcy5yZXBvc2l0b3J5LmdldE1lc3NhZ2UobWVzc2FnZUlkKTtcbiAgICBhZGFwdGVyLnN1Ym1pdCh7IG1lc3NhZ2UsIHR5cGUgfSk7XG5cbiAgICB0aGlzLl9zdWJtaXR0ZWRGZWVkYmFja1ttZXNzYWdlSWRdID0geyB0eXBlIH07XG4gICAgdGhpcy5fbm90aWZ5U3Vic2NyaWJlcnMoKTtcbiAgfVxuXG4gIHByaXZhdGUgX3N0b3BTcGVha2luZzogVW5zdWJzY3JpYmUgfCB1bmRlZmluZWQ7XG4gIHB1YmxpYyBzcGVlY2g6IFNwZWVjaFN0YXRlIHwgdW5kZWZpbmVkO1xuXG4gIHB1YmxpYyBzcGVhayhtZXNzYWdlSWQ6IHN0cmluZykge1xuICAgIGNvbnN0IGFkYXB0ZXIgPSB0aGlzLmFkYXB0ZXJzPy5zcGVlY2g7XG4gICAgaWYgKCFhZGFwdGVyKSB0aHJvdyBuZXcgRXJyb3IoXCJTcGVlY2ggYWRhcHRlciBub3QgY29uZmlndXJlZFwiKTtcblxuICAgIGNvbnN0IHsgbWVzc2FnZSB9ID0gdGhpcy5yZXBvc2l0b3J5LmdldE1lc3NhZ2UobWVzc2FnZUlkKTtcblxuICAgIHRoaXMuX3N0b3BTcGVha2luZz8uKCk7XG5cbiAgICBjb25zdCB1dHRlcmFuY2UgPSBhZGFwdGVyLnNwZWFrKGdldFRocmVhZE1lc3NhZ2VUZXh0KG1lc3NhZ2UpKTtcbiAgICBjb25zdCB1bnN1YiA9IHV0dGVyYW5jZS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgaWYgKHV0dGVyYW5jZS5zdGF0dXMudHlwZSA9PT0gXCJlbmRlZFwiKSB7XG4gICAgICAgIHRoaXMuX3N0b3BTcGVha2luZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5zcGVlY2ggPSB1bmRlZmluZWQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnNwZWVjaCA9IHsgbWVzc2FnZUlkLCBzdGF0dXM6IHV0dGVyYW5jZS5zdGF0dXMgfTtcbiAgICAgIH1cbiAgICAgIHRoaXMuX25vdGlmeVN1YnNjcmliZXJzKCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLnNwZWVjaCA9IHsgbWVzc2FnZUlkLCBzdGF0dXM6IHV0dGVyYW5jZS5zdGF0dXMgfTtcbiAgICB0aGlzLl9ub3RpZnlTdWJzY3JpYmVycygpO1xuXG4gICAgdGhpcy5fc3RvcFNwZWFraW5nID0gKCkgPT4ge1xuICAgICAgdXR0ZXJhbmNlLmNhbmNlbCgpO1xuICAgICAgdW5zdWIoKTtcbiAgICAgIHRoaXMuc3BlZWNoID0gdW5kZWZpbmVkO1xuICAgICAgdGhpcy5fc3RvcFNwZWFraW5nID0gdW5kZWZpbmVkO1xuICAgIH07XG4gIH1cblxuICBwdWJsaWMgc3RvcFNwZWFraW5nKCkge1xuICAgIGlmICghdGhpcy5fc3RvcFNwZWFraW5nKSB0aHJvdyBuZXcgRXJyb3IoXCJObyBtZXNzYWdlIGlzIGJlaW5nIHNwb2tlblwiKTtcbiAgICB0aGlzLl9zdG9wU3BlYWtpbmcoKTtcbiAgICB0aGlzLl9ub3RpZnlTdWJzY3JpYmVycygpO1xuICB9XG5cbiAgcHVibGljIGV4cG9ydCgpIHtcbiAgICByZXR1cm4gdGhpcy5yZXBvc2l0b3J5LmV4cG9ydCgpO1xuICB9XG5cbiAgcHVibGljIGltcG9ydChkYXRhOiBFeHBvcnRlZE1lc3NhZ2VSZXBvc2l0b3J5KSB7XG4gICAgdGhpcy5yZXBvc2l0b3J5LmltcG9ydChkYXRhKTtcbiAgICB0aGlzLl9ub3RpZnlTdWJzY3JpYmVycygpO1xuICB9XG5cbiAgcHJpdmF0ZSBfZXZlbnRTdWJzY3JpYmVycyA9IG5ldyBNYXA8c3RyaW5nLCBTZXQ8KCkgPT4gdm9pZD4+KCk7XG5cbiAgcHVibGljIHVuc3RhYmxlX29uKGV2ZW50OiBUaHJlYWRSdW50aW1lRXZlbnRUeXBlLCBjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gdGhpcy5fZXZlbnRTdWJzY3JpYmVycy5nZXQoZXZlbnQpO1xuICAgIGlmICghc3Vic2NyaWJlcnMpIHtcbiAgICAgIHRoaXMuX2V2ZW50U3Vic2NyaWJlcnMuc2V0KGV2ZW50LCBuZXcgU2V0KFtjYWxsYmFja10pKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKTtcbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY29uc3Qgc3Vic2NyaWJlcnMgPSB0aGlzLl9ldmVudFN1YnNjcmliZXJzLmdldChldmVudCkhO1xuICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKTtcbiAgICB9O1xuICB9XG59XG4iLCJpbXBvcnQgeyBnZW5lcmF0ZUlkIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsXCI7XG5pbXBvcnQgdHlwZSB7XG4gIE1vZGVsQ29uZmlnUHJvdmlkZXIsXG4gIEFwcGVuZE1lc3NhZ2UsXG4gIFRocmVhZEFzc2lzdGFudE1lc3NhZ2UsXG59IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuaW1wb3J0IHsgZnJvbUNvcmVNZXNzYWdlLCBmcm9tQ29yZU1lc3NhZ2VzIH0gZnJvbSBcIi4uL2VkZ2VcIjtcbmltcG9ydCB0eXBlIHsgQ2hhdE1vZGVsQWRhcHRlciwgQ2hhdE1vZGVsUnVuUmVzdWx0IH0gZnJvbSBcIi4vQ2hhdE1vZGVsQWRhcHRlclwiO1xuaW1wb3J0IHsgc2hvdWxkQ29udGludWUgfSBmcm9tIFwiLi9zaG91bGRDb250aW51ZVwiO1xuaW1wb3J0IHsgTG9jYWxSdW50aW1lT3B0aW9ucyB9IGZyb20gXCIuL0xvY2FsUnVudGltZU9wdGlvbnNcIjtcbmltcG9ydCB7XG4gIEFkZFRvb2xSZXN1bHRPcHRpb25zLFxuICBUaHJlYWRTdWdnZXN0aW9uLFxuICBUaHJlYWRSdW50aW1lQ29yZSxcbn0gZnJvbSBcIi4uL2NvcmUvVGhyZWFkUnVudGltZUNvcmVcIjtcbmltcG9ydCB7IEJhc2VUaHJlYWRSdW50aW1lQ29yZSB9IGZyb20gXCIuLi9jb3JlL0Jhc2VUaHJlYWRSdW50aW1lQ29yZVwiO1xuXG5leHBvcnQgY2xhc3MgTG9jYWxUaHJlYWRSdW50aW1lQ29yZVxuICBleHRlbmRzIEJhc2VUaHJlYWRSdW50aW1lQ29yZVxuICBpbXBsZW1lbnRzIFRocmVhZFJ1bnRpbWVDb3JlXG57XG4gIHB1YmxpYyByZWFkb25seSBjYXBhYmlsaXRpZXMgPSB7XG4gICAgc3dpdGNoVG9CcmFuY2g6IHRydWUsXG4gICAgZWRpdDogdHJ1ZSxcbiAgICByZWxvYWQ6IHRydWUsXG4gICAgY2FuY2VsOiB0cnVlLFxuICAgIHVuc3RhYmxlX2NvcHk6IHRydWUsXG4gICAgc3BlZWNoOiBmYWxzZSxcbiAgICBhdHRhY2htZW50czogZmFsc2UsXG4gICAgZmVlZGJhY2s6IGZhbHNlLFxuICB9O1xuXG4gIHByaXZhdGUgYWJvcnRDb250cm9sbGVyOiBBYm9ydENvbnRyb2xsZXIgfCBudWxsID0gbnVsbDtcblxuICBwdWJsaWMgcmVhZG9ubHkgdGhyZWFkSWQ6IHN0cmluZztcbiAgcHVibGljIHJlYWRvbmx5IGlzRGlzYWJsZWQgPSBmYWxzZTtcbiAgcHVibGljIHJlYWRvbmx5IHN1Z2dlc3Rpb25zOiByZWFkb25seSBUaHJlYWRTdWdnZXN0aW9uW10gPSBbXTtcblxuICBwdWJsaWMgZ2V0IGFkYXB0ZXJzKCkge1xuICAgIHJldHVybiB0aGlzLm9wdGlvbnMuYWRhcHRlcnM7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihcbiAgICBjb25maWdQcm92aWRlcjogTW9kZWxDb25maWdQcm92aWRlcixcbiAgICBwdWJsaWMgYWRhcHRlcjogQ2hhdE1vZGVsQWRhcHRlcixcbiAgICB7IGluaXRpYWxNZXNzYWdlcywgLi4ub3B0aW9ucyB9OiBMb2NhbFJ1bnRpbWVPcHRpb25zLFxuICApIHtcbiAgICBzdXBlcihjb25maWdQcm92aWRlcik7XG5cbiAgICB0aGlzLnRocmVhZElkID0gZ2VuZXJhdGVJZCgpO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgaWYgKGluaXRpYWxNZXNzYWdlcykge1xuICAgICAgbGV0IHBhcmVudElkOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcbiAgICAgIGNvbnN0IG1lc3NhZ2VzID0gZnJvbUNvcmVNZXNzYWdlcyhpbml0aWFsTWVzc2FnZXMpO1xuICAgICAgZm9yIChjb25zdCBtZXNzYWdlIG9mIG1lc3NhZ2VzKSB7XG4gICAgICAgIHRoaXMucmVwb3NpdG9yeS5hZGRPclVwZGF0ZU1lc3NhZ2UocGFyZW50SWQsIG1lc3NhZ2UpO1xuICAgICAgICBwYXJlbnRJZCA9IG1lc3NhZ2UuaWQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBfb3B0aW9ucyE6IExvY2FsUnVudGltZU9wdGlvbnM7XG5cbiAgcHVibGljIGdldCBvcHRpb25zKCkge1xuICAgIHJldHVybiB0aGlzLl9vcHRpb25zO1xuICB9XG5cbiAgcHVibGljIGdldCBleHRyYXMoKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIHB1YmxpYyBzZXQgb3B0aW9ucyh7IGluaXRpYWxNZXNzYWdlcywgLi4ub3B0aW9ucyB9OiBMb2NhbFJ1bnRpbWVPcHRpb25zKSB7XG4gICAgdGhpcy5fb3B0aW9ucyA9IG9wdGlvbnM7XG5cbiAgICBsZXQgaGFzVXBkYXRlcyA9IGZhbHNlO1xuXG4gICAgY29uc3QgY2FuU3BlYWsgPSBvcHRpb25zLmFkYXB0ZXJzPy5zcGVlY2ggIT09IHVuZGVmaW5lZDtcbiAgICBpZiAodGhpcy5jYXBhYmlsaXRpZXMuc3BlZWNoICE9PSBjYW5TcGVhaykge1xuICAgICAgdGhpcy5jYXBhYmlsaXRpZXMuc3BlZWNoID0gY2FuU3BlYWs7XG4gICAgICBoYXNVcGRhdGVzID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBjb25zdCBjYW5BdHRhY2ggPSBvcHRpb25zLmFkYXB0ZXJzPy5hdHRhY2htZW50cyAhPT0gdW5kZWZpbmVkO1xuICAgIGlmICh0aGlzLmNhcGFiaWxpdGllcy5hdHRhY2htZW50cyAhPT0gY2FuQXR0YWNoKSB7XG4gICAgICB0aGlzLmNhcGFiaWxpdGllcy5hdHRhY2htZW50cyA9IGNhbkF0dGFjaDtcbiAgICAgIGhhc1VwZGF0ZXMgPSB0cnVlO1xuICAgIH1cblxuICAgIGNvbnN0IGNhbkZlZWRiYWNrID0gb3B0aW9ucy5hZGFwdGVycz8uZmVlZGJhY2sgIT09IHVuZGVmaW5lZDtcbiAgICBpZiAodGhpcy5jYXBhYmlsaXRpZXMuZmVlZGJhY2sgIT09IGNhbkZlZWRiYWNrKSB7XG4gICAgICB0aGlzLmNhcGFiaWxpdGllcy5mZWVkYmFjayA9IGNhbkZlZWRiYWNrO1xuICAgICAgaGFzVXBkYXRlcyA9IHRydWU7XG4gICAgfVxuXG4gICAgaWYgKGhhc1VwZGF0ZXMpIHRoaXMuX25vdGlmeVN1YnNjcmliZXJzKCk7XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgYXBwZW5kKG1lc3NhZ2U6IEFwcGVuZE1lc3NhZ2UpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBjb25zdCBuZXdNZXNzYWdlID0gZnJvbUNvcmVNZXNzYWdlKG1lc3NhZ2UsIHtcbiAgICAgIGF0dGFjaG1lbnRzOiBtZXNzYWdlLmF0dGFjaG1lbnRzLFxuICAgIH0pO1xuICAgIHRoaXMucmVwb3NpdG9yeS5hZGRPclVwZGF0ZU1lc3NhZ2UobWVzc2FnZS5wYXJlbnRJZCwgbmV3TWVzc2FnZSk7XG5cbiAgICBpZiAobWVzc2FnZS5yb2xlID09PSBcInVzZXJcIikge1xuICAgICAgYXdhaXQgdGhpcy5zdGFydFJ1bihuZXdNZXNzYWdlLmlkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZXBvc2l0b3J5LnJlc2V0SGVhZChuZXdNZXNzYWdlLmlkKTtcbiAgICAgIHRoaXMuX25vdGlmeVN1YnNjcmliZXJzKCk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGFzeW5jIHN0YXJ0UnVuKHBhcmVudElkOiBzdHJpbmcgfCBudWxsKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgdGhpcy5yZXBvc2l0b3J5LnJlc2V0SGVhZChwYXJlbnRJZCk7XG5cbiAgICAvLyBhZGQgYXNzaXN0YW50IG1lc3NhZ2VcbiAgICBjb25zdCBpZCA9IGdlbmVyYXRlSWQoKTtcbiAgICBsZXQgbWVzc2FnZTogVGhyZWFkQXNzaXN0YW50TWVzc2FnZSA9IHtcbiAgICAgIGlkLFxuICAgICAgcm9sZTogXCJhc3Npc3RhbnRcIixcbiAgICAgIHN0YXR1czogeyB0eXBlOiBcInJ1bm5pbmdcIiB9LFxuICAgICAgY29udGVudDogW10sXG4gICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCksXG4gICAgfTtcblxuICAgIHRoaXMuX25vdGlmeUV2ZW50U3Vic2NyaWJlcnMoXCJydW4tc3RhcnRcIik7XG5cbiAgICBkbyB7XG4gICAgICBtZXNzYWdlID0gYXdhaXQgdGhpcy5wZXJmb3JtUm91bmR0cmlwKHBhcmVudElkLCBtZXNzYWdlKTtcbiAgICB9IHdoaWxlIChzaG91bGRDb250aW51ZShtZXNzYWdlKSk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIHBlcmZvcm1Sb3VuZHRyaXAoXG4gICAgcGFyZW50SWQ6IHN0cmluZyB8IG51bGwsXG4gICAgbWVzc2FnZTogVGhyZWFkQXNzaXN0YW50TWVzc2FnZSxcbiAgKSB7XG4gICAgY29uc3QgbWVzc2FnZXMgPSB0aGlzLnJlcG9zaXRvcnkuZ2V0TWVzc2FnZXMoKTtcblxuICAgIC8vIGFib3J0IGV4aXN0aW5nIHJ1blxuICAgIHRoaXMuYWJvcnRDb250cm9sbGVyPy5hYm9ydCgpO1xuICAgIHRoaXMuYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuXG4gICAgY29uc3QgaW5pdGlhbENvbnRlbnQgPSBtZXNzYWdlLmNvbnRlbnQ7XG4gICAgY29uc3QgaW5pdGlhbFN0ZXBzID0gbWVzc2FnZS5tZXRhZGF0YT8uc3RlcHM7XG4gICAgY29uc3QgaW5pdGFsQ3VzdG9tID0gbWVzc2FnZS5tZXRhZGF0YT8uY3VzdG9tO1xuICAgIGNvbnN0IHVwZGF0ZU1lc3NhZ2UgPSAobTogUGFydGlhbDxDaGF0TW9kZWxSdW5SZXN1bHQ+KSA9PiB7XG4gICAgICBjb25zdCBuZXdTdGVwcyA9IG0ubWV0YWRhdGE/LnN0ZXBzIHx8IG0ubWV0YWRhdGE/LnJvdW5kdHJpcHM7XG4gICAgICBjb25zdCBzdGVwcyA9IG5ld1N0ZXBzXG4gICAgICAgID8gWy4uLihpbml0aWFsU3RlcHMgPz8gW10pLCAuLi5uZXdTdGVwc11cbiAgICAgICAgOiB1bmRlZmluZWQ7XG5cbiAgICAgIG1lc3NhZ2UgPSB7XG4gICAgICAgIC4uLm1lc3NhZ2UsXG4gICAgICAgIC4uLihtLmNvbnRlbnRcbiAgICAgICAgICA/IHsgY29udGVudDogWy4uLmluaXRpYWxDb250ZW50LCAuLi4obS5jb250ZW50ID8/IFtdKV0gfVxuICAgICAgICAgIDogdW5kZWZpbmVkKSxcbiAgICAgICAgc3RhdHVzOiBtLnN0YXR1cyA/PyBtZXNzYWdlLnN0YXR1cyxcbiAgICAgICAgLy8gVE9ETyBkZXByZWNhdGVkLCByZW1vdmUgaW4gdjAuNlxuICAgICAgICAuLi4oc3RlcHMgPyB7IHJvdW5kdHJpcHM6IHN0ZXBzIH0gOiB1bmRlZmluZWQpLFxuICAgICAgICAuLi4obS5tZXRhZGF0YVxuICAgICAgICAgID8ge1xuICAgICAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgICAgIC4uLm1lc3NhZ2UubWV0YWRhdGEsXG4gICAgICAgICAgICAgICAgLi4uKHN0ZXBzID8geyByb3VuZHRyaXBzOiBzdGVwcywgc3RlcHMgfSA6IHVuZGVmaW5lZCksXG4gICAgICAgICAgICAgICAgLi4uKG0ubWV0YWRhdGE/LmN1c3RvbVxuICAgICAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAgICAgY3VzdG9tOiB7IC4uLihpbml0YWxDdXN0b20gPz8ge30pLCAuLi5tLm1ldGFkYXRhLmN1c3RvbSB9LFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZCksXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9XG4gICAgICAgICAgOiB1bmRlZmluZWQpLFxuICAgICAgfTtcbiAgICAgIHRoaXMucmVwb3NpdG9yeS5hZGRPclVwZGF0ZU1lc3NhZ2UocGFyZW50SWQsIG1lc3NhZ2UpO1xuICAgICAgdGhpcy5fbm90aWZ5U3Vic2NyaWJlcnMoKTtcbiAgICB9O1xuXG4gICAgY29uc3QgbWF4U3RlcHMgPSB0aGlzLm9wdGlvbnMubWF4U3RlcHNcbiAgICAgID8gdGhpcy5vcHRpb25zLm1heFN0ZXBzXG4gICAgICA6ICh0aGlzLm9wdGlvbnMubWF4VG9vbFJvdW5kdHJpcHMgPz8gMSkgKyAxO1xuXG4gICAgY29uc3Qgc3RlcHMgPSBtZXNzYWdlLm1ldGFkYXRhPy5zdGVwcz8ubGVuZ3RoID8/IDA7XG4gICAgaWYgKHN0ZXBzID49IG1heFN0ZXBzKSB7XG4gICAgICAvLyByZWFjaGVkIG1heCB0b29sIHN0ZXBzXG4gICAgICB1cGRhdGVNZXNzYWdlKHtcbiAgICAgICAgc3RhdHVzOiB7XG4gICAgICAgICAgdHlwZTogXCJpbmNvbXBsZXRlXCIsXG4gICAgICAgICAgcmVhc29uOiBcInRvb2wtY2FsbHNcIixcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHVwZGF0ZU1lc3NhZ2Uoe1xuICAgICAgICBzdGF0dXM6IHtcbiAgICAgICAgICB0eXBlOiBcInJ1bm5pbmdcIixcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBwcm9taXNlT3JHZW5lcmF0b3IgPSB0aGlzLmFkYXB0ZXIucnVuKHtcbiAgICAgICAgbWVzc2FnZXMsXG4gICAgICAgIGFib3J0U2lnbmFsOiB0aGlzLmFib3J0Q29udHJvbGxlci5zaWduYWwsXG4gICAgICAgIGNvbmZpZzogdGhpcy5nZXRNb2RlbENvbmZpZygpLFxuICAgICAgICBvblVwZGF0ZTogdXBkYXRlTWVzc2FnZSxcbiAgICAgIH0pO1xuXG4gICAgICAvLyBoYW5kbGUgYXN5bmMgaXRlcmF0b3IgZm9yIHN0cmVhbWluZyByZXN1bHRzXG4gICAgICBpZiAoU3ltYm9sLmFzeW5jSXRlcmF0b3IgaW4gcHJvbWlzZU9yR2VuZXJhdG9yKSB7XG4gICAgICAgIGZvciBhd2FpdCAoY29uc3QgciBvZiBwcm9taXNlT3JHZW5lcmF0b3IpIHtcbiAgICAgICAgICB1cGRhdGVNZXNzYWdlKHIpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1cGRhdGVNZXNzYWdlKGF3YWl0IHByb21pc2VPckdlbmVyYXRvcik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYWJvcnRDb250cm9sbGVyID0gbnVsbDtcblxuICAgICAgaWYgKG1lc3NhZ2Uuc3RhdHVzLnR5cGUgPT09IFwicnVubmluZ1wiKSB7XG4gICAgICAgIHVwZGF0ZU1lc3NhZ2Uoe1xuICAgICAgICAgIHN0YXR1czogeyB0eXBlOiBcImNvbXBsZXRlXCIsIHJlYXNvbjogXCJ1bmtub3duXCIgfSxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5hYm9ydENvbnRyb2xsZXIgPSBudWxsO1xuXG4gICAgICAvLyBUT0RPIHRoaXMgc2hvdWxkIGJlIGhhbmRsZWQgYnkgdGhlIHJ1biByZXN1bHQgc3RyZWFtXG4gICAgICBpZiAoZSBpbnN0YW5jZW9mIEVycm9yICYmIGUubmFtZSA9PT0gXCJBYm9ydEVycm9yXCIpIHtcbiAgICAgICAgdXBkYXRlTWVzc2FnZSh7XG4gICAgICAgICAgc3RhdHVzOiB7IHR5cGU6IFwiaW5jb21wbGV0ZVwiLCByZWFzb246IFwiY2FuY2VsbGVkXCIgfSxcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1cGRhdGVNZXNzYWdlKHtcbiAgICAgICAgICBzdGF0dXM6IHsgdHlwZTogXCJpbmNvbXBsZXRlXCIsIHJlYXNvbjogXCJlcnJvclwiLCBlcnJvcjogZSB9LFxuICAgICAgICB9KTtcblxuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWVzc2FnZTtcbiAgfVxuXG4gIHB1YmxpYyBjYW5jZWxSdW4oKSB7XG4gICAgdGhpcy5hYm9ydENvbnRyb2xsZXI/LmFib3J0KCk7XG4gICAgdGhpcy5hYm9ydENvbnRyb2xsZXIgPSBudWxsO1xuICB9XG5cbiAgcHVibGljIGFkZFRvb2xSZXN1bHQoe1xuICAgIG1lc3NhZ2VJZCxcbiAgICB0b29sQ2FsbElkLFxuICAgIHJlc3VsdCxcbiAgfTogQWRkVG9vbFJlc3VsdE9wdGlvbnMpIHtcbiAgICBjb25zdCBtZXNzYWdlRGF0YSA9IHRoaXMucmVwb3NpdG9yeS5nZXRNZXNzYWdlKG1lc3NhZ2VJZCk7XG4gICAgY29uc3QgeyBwYXJlbnRJZCB9ID0gbWVzc2FnZURhdGE7XG4gICAgbGV0IHsgbWVzc2FnZSB9ID0gbWVzc2FnZURhdGE7XG5cbiAgICBpZiAobWVzc2FnZS5yb2xlICE9PSBcImFzc2lzdGFudFwiKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHJpZWQgdG8gYWRkIHRvb2wgcmVzdWx0IHRvIG5vbi1hc3Npc3RhbnQgbWVzc2FnZVwiKTtcblxuICAgIGxldCBhZGRlZCA9IGZhbHNlO1xuICAgIGxldCBmb3VuZCA9IGZhbHNlO1xuICAgIGNvbnN0IG5ld0NvbnRlbnQgPSBtZXNzYWdlLmNvbnRlbnQubWFwKChjKSA9PiB7XG4gICAgICBpZiAoYy50eXBlICE9PSBcInRvb2wtY2FsbFwiKSByZXR1cm4gYztcbiAgICAgIGlmIChjLnRvb2xDYWxsSWQgIT09IHRvb2xDYWxsSWQpIHJldHVybiBjO1xuICAgICAgZm91bmQgPSB0cnVlO1xuICAgICAgaWYgKCFjLnJlc3VsdCkgYWRkZWQgPSB0cnVlO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uYyxcbiAgICAgICAgcmVzdWx0LFxuICAgICAgfTtcbiAgICB9KTtcblxuICAgIGlmICghZm91bmQpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUcmllZCB0byBhZGQgdG9vbCByZXN1bHQgdG8gbm9uLWV4aXN0aW5nIHRvb2wgY2FsbFwiKTtcblxuICAgIG1lc3NhZ2UgPSB7XG4gICAgICAuLi5tZXNzYWdlLFxuICAgICAgY29udGVudDogbmV3Q29udGVudCxcbiAgICB9O1xuICAgIHRoaXMucmVwb3NpdG9yeS5hZGRPclVwZGF0ZU1lc3NhZ2UocGFyZW50SWQsIG1lc3NhZ2UpO1xuXG4gICAgaWYgKGFkZGVkICYmIHNob3VsZENvbnRpbnVlKG1lc3NhZ2UpKSB7XG4gICAgICB0aGlzLnBlcmZvcm1Sb3VuZHRyaXAocGFyZW50SWQsIG1lc3NhZ2UpO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IHsgdHlwZSBNb2RlbENvbmZpZ1Byb3ZpZGVyIH0gZnJvbSBcIi4uLy4uL3R5cGVzL01vZGVsQ29uZmlnVHlwZXNcIjtcbmltcG9ydCB0eXBlIHsgQ29yZU1lc3NhZ2UgfSBmcm9tIFwiLi4vLi4vdHlwZXMvQXNzaXN0YW50VHlwZXNcIjtcbmltcG9ydCB7IEJhc2VBc3Npc3RhbnRSdW50aW1lQ29yZSB9IGZyb20gXCIuLi9jb3JlL0Jhc2VBc3Npc3RhbnRSdW50aW1lQ29yZVwiO1xuaW1wb3J0IHR5cGUgeyBDaGF0TW9kZWxBZGFwdGVyIH0gZnJvbSBcIi4vQ2hhdE1vZGVsQWRhcHRlclwiO1xuaW1wb3J0IHsgUHJveHlDb25maWdQcm92aWRlciB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbFwiO1xuaW1wb3J0IHsgTG9jYWxUaHJlYWRSdW50aW1lQ29yZSB9IGZyb20gXCIuL0xvY2FsVGhyZWFkUnVudGltZUNvcmVcIjtcbmltcG9ydCB7IExvY2FsUnVudGltZU9wdGlvbnMgfSBmcm9tIFwiLi9Mb2NhbFJ1bnRpbWVPcHRpb25zXCI7XG5pbXBvcnQgeyBmcm9tQ29yZU1lc3NhZ2VzIH0gZnJvbSBcIi4uL2VkZ2UvY29udmVydGVycy9mcm9tQ29yZU1lc3NhZ2VcIjtcblxuZXhwb3J0IGNsYXNzIExvY2FsUnVudGltZUNvcmUgZXh0ZW5kcyBCYXNlQXNzaXN0YW50UnVudGltZUNvcmU8TG9jYWxUaHJlYWRSdW50aW1lQ29yZT4ge1xuICBwcml2YXRlIHJlYWRvbmx5IF9wcm94eUNvbmZpZ1Byb3ZpZGVyOiBQcm94eUNvbmZpZ1Byb3ZpZGVyO1xuXG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXI6IENoYXRNb2RlbEFkYXB0ZXIsIG9wdGlvbnM6IExvY2FsUnVudGltZU9wdGlvbnMpIHtcbiAgICBjb25zdCBwcm94eUNvbmZpZ1Byb3ZpZGVyID0gbmV3IFByb3h5Q29uZmlnUHJvdmlkZXIoKTtcbiAgICBzdXBlcihuZXcgTG9jYWxUaHJlYWRSdW50aW1lQ29yZShwcm94eUNvbmZpZ1Byb3ZpZGVyLCBhZGFwdGVyLCBvcHRpb25zKSk7XG4gICAgdGhpcy5fcHJveHlDb25maWdQcm92aWRlciA9IHByb3h5Q29uZmlnUHJvdmlkZXI7XG4gIH1cbiAgcHVibGljIHJlZ2lzdGVyTW9kZWxDb25maWdQcm92aWRlcihwcm92aWRlcjogTW9kZWxDb25maWdQcm92aWRlcikge1xuICAgIHJldHVybiB0aGlzLl9wcm94eUNvbmZpZ1Byb3ZpZGVyLnJlZ2lzdGVyTW9kZWxDb25maWdQcm92aWRlcihwcm92aWRlcik7XG4gIH1cblxuICBwdWJsaWMgc3dpdGNoVG9OZXdUaHJlYWQoKSB7XG4gICAgY29uc3QgeyBpbml0aWFsTWVzc2FnZXMsIC4uLm9wdGlvbnMgfSA9IHRoaXMudGhyZWFkLm9wdGlvbnM7XG5cbiAgICB0aGlzLnRocmVhZCA9IG5ldyBMb2NhbFRocmVhZFJ1bnRpbWVDb3JlKFxuICAgICAgdGhpcy5fcHJveHlDb25maWdQcm92aWRlcixcbiAgICAgIHRoaXMudGhyZWFkLmFkYXB0ZXIsXG4gICAgICBvcHRpb25zLFxuICAgICk7XG4gICAgdGhpcy50aHJlYWQuX25vdGlmeUV2ZW50U3Vic2NyaWJlcnMoXCJzd2l0Y2hlZC10b1wiKTtcbiAgfVxuXG4gIHB1YmxpYyBzd2l0Y2hUb1RocmVhZCh0aHJlYWRJZDogc3RyaW5nIHwgbnVsbCkge1xuICAgIGlmICh0aHJlYWRJZCAhPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTG9jYWxSdW50aW1lIGRvZXMgbm90IHlldCBzdXBwb3J0IHN3aXRjaGluZyB0aHJlYWRzXCIpO1xuICAgIH1cblxuICAgIHRoaXMuc3dpdGNoVG9OZXdUaHJlYWQoKTtcbiAgfVxuXG4gIHB1YmxpYyByZXNldCh7XG4gICAgaW5pdGlhbE1lc3NhZ2VzLFxuICB9OiB7XG4gICAgaW5pdGlhbE1lc3NhZ2VzPzogcmVhZG9ubHkgQ29yZU1lc3NhZ2VbXSB8IHVuZGVmaW5lZDtcbiAgfSA9IHt9KSB7XG4gICAgdGhpcy5zd2l0Y2hUb1RocmVhZChudWxsKTtcbiAgICBpZiAoIWluaXRpYWxNZXNzYWdlcykgcmV0dXJuO1xuXG4gICAgY29uc3QgbWVzc2FnZXMgPSBmcm9tQ29yZU1lc3NhZ2VzKGluaXRpYWxNZXNzYWdlcyk7XG4gICAgdGhpcy50aHJlYWQuaW1wb3J0KHtcbiAgICAgIG1lc3NhZ2VzOiBtZXNzYWdlcy5tYXAoKG0sIGlkeCkgPT4gKHtcbiAgICAgICAgcGFyZW50SWQ6IG1lc3NhZ2VzW2lkeCAtIDFdPy5pZCA/PyBudWxsLFxuICAgICAgICBtZXNzYWdlOiBtLFxuICAgICAgfSkpLFxuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBFeHRlcm5hbFN0b3JlUnVudGltZUNvcmUgfSBmcm9tIFwiLi9FeHRlcm5hbFN0b3JlUnVudGltZUNvcmVcIjtcbmltcG9ydCB7IEV4dGVybmFsU3RvcmVBZGFwdGVyIH0gZnJvbSBcIi4vRXh0ZXJuYWxTdG9yZUFkYXB0ZXJcIjtcbmltcG9ydCB7IEFzc2lzdGFudFJ1bnRpbWVJbXBsIH0gZnJvbSBcIi4uLy4uL2FwaS9Bc3Npc3RhbnRSdW50aW1lXCI7XG5pbXBvcnQgeyBUaHJlYWRSdW50aW1lSW1wbCB9IGZyb20gXCIuLi8uLi9hcGkvVGhyZWFkUnVudGltZVwiO1xuXG5leHBvcnQgY29uc3QgdXNlRXh0ZXJuYWxTdG9yZVJ1bnRpbWUgPSA8VCw+KHN0b3JlOiBFeHRlcm5hbFN0b3JlQWRhcHRlcjxUPikgPT4ge1xuICBjb25zdCBbcnVudGltZV0gPSB1c2VTdGF0ZSgoKSA9PiBuZXcgRXh0ZXJuYWxTdG9yZVJ1bnRpbWVDb3JlKHN0b3JlKSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBydW50aW1lLnRocmVhZC5zdG9yZSA9IHN0b3JlO1xuICB9KTtcblxuICByZXR1cm4gdXNlTWVtbyhcbiAgICAoKSA9PiBBc3Npc3RhbnRSdW50aW1lSW1wbC5jcmVhdGUocnVudGltZSwgVGhyZWFkUnVudGltZUltcGwpLFxuICAgIFtydW50aW1lXSxcbiAgKTtcbn07XG4iLCJpbXBvcnQgeyBUaHJlYWRNZXNzYWdlIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBzeW1ib2xJbm5lck1lc3NhZ2UgPSBTeW1ib2woXCJpbm5lck1lc3NhZ2VcIik7XG5cbmV4cG9ydCB0eXBlIEV4dGVybmFsU3RvcmVUaHJlYWRNZXNzYWdlPFQ+ID0gVGhyZWFkTWVzc2FnZSAmIHtcbiAgW3N5bWJvbElubmVyTWVzc2FnZV0/OiBUO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEV4dGVybmFsU3RvcmVNZXNzYWdlID0gPFQsPihtZXNzYWdlOiBUaHJlYWRNZXNzYWdlKSA9PiB7XG4gIHJldHVybiAobWVzc2FnZSBhcyBFeHRlcm5hbFN0b3JlVGhyZWFkTWVzc2FnZTxUPilbc3ltYm9sSW5uZXJNZXNzYWdlXTtcbn07XG4iLCJpbXBvcnQgeyBUaHJlYWRNZXNzYWdlIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5cbmV4cG9ydCB0eXBlIENvbnZlcnRlckNhbGxiYWNrPFRJbj4gPSAoXG4gIGNhY2hlOiBUaHJlYWRNZXNzYWdlIHwgdW5kZWZpbmVkLFxuICBtZXNzYWdlOiBUSW4sXG4gIGlkeDogbnVtYmVyLFxuKSA9PiBUaHJlYWRNZXNzYWdlO1xuXG5leHBvcnQgY2xhc3MgVGhyZWFkTWVzc2FnZUNvbnZlcnRlciB7XG4gIHByaXZhdGUgcmVhZG9ubHkgY2FjaGUgPSBuZXcgV2Vha01hcDxXZWFrS2V5LCBUaHJlYWRNZXNzYWdlPigpO1xuXG4gIGNvbnZlcnRNZXNzYWdlczxUSW4gZXh0ZW5kcyBXZWFrS2V5PihcbiAgICBtZXNzYWdlczogVEluW10sXG4gICAgY29udmVydGVyOiBDb252ZXJ0ZXJDYWxsYmFjazxUSW4+LFxuICApOiBUaHJlYWRNZXNzYWdlW10ge1xuICAgIHJldHVybiBtZXNzYWdlcy5tYXAoKG0sIGlkeCkgPT4ge1xuICAgICAgY29uc3QgY2FjaGVkID0gdGhpcy5jYWNoZS5nZXQobSk7XG4gICAgICBjb25zdCBuZXdNZXNzYWdlID0gY29udmVydGVyKGNhY2hlZCwgbSwgaWR4KTtcbiAgICAgIHRoaXMuY2FjaGUuc2V0KG0sIG5ld01lc3NhZ2UpO1xuICAgICAgcmV0dXJuIG5ld01lc3NhZ2U7XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCB7IE1lc3NhZ2VTdGF0dXMgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcblxuY29uc3QgQVVUT19TVEFUVVNfUlVOTklORyA9IE9iamVjdC5mcmVlemUoeyB0eXBlOiBcInJ1bm5pbmdcIiB9KTtcbmNvbnN0IEFVVE9fU1RBVFVTX0NPTVBMRVRFID0gT2JqZWN0LmZyZWV6ZSh7XG4gIHR5cGU6IFwiY29tcGxldGVcIixcbiAgcmVhc29uOiBcInVua25vd25cIixcbn0pO1xuXG5leHBvcnQgY29uc3QgaXNBdXRvU3RhdHVzID0gKHN0YXR1czogTWVzc2FnZVN0YXR1cykgPT5cbiAgc3RhdHVzID09PSBBVVRPX1NUQVRVU19SVU5OSU5HIHx8IHN0YXR1cyA9PT0gQVVUT19TVEFUVVNfQ09NUExFVEU7XG5cbmV4cG9ydCBjb25zdCBnZXRBdXRvU3RhdHVzID0gKGlzTGFzdDogYm9vbGVhbiwgaXNSdW5uaW5nOiBib29sZWFuKSA9PlxuICBpc0xhc3QgJiYgaXNSdW5uaW5nID8gQVVUT19TVEFUVVNfUlVOTklORyA6IEFVVE9fU1RBVFVTX0NPTVBMRVRFO1xuIiwiaW1wb3J0IHtcbiAgTWVzc2FnZVN0YXR1cyxcbiAgVGV4dENvbnRlbnRQYXJ0LFxuICBJbWFnZUNvbnRlbnRQYXJ0LFxuICBUb29sQ2FsbENvbnRlbnRQYXJ0LFxuICBVSUNvbnRlbnRQYXJ0LFxuICBUaHJlYWRNZXNzYWdlLFxuICBUaHJlYWRBc3Npc3RhbnRDb250ZW50UGFydCxcbiAgVGhyZWFkQXNzaXN0YW50TWVzc2FnZSxcbiAgVGhyZWFkVXNlckNvbnRlbnRQYXJ0LFxuICBUaHJlYWRVc2VyTWVzc2FnZSxcbiAgVGhyZWFkU3lzdGVtTWVzc2FnZSxcbiAgQ29tcGxldGVBdHRhY2htZW50LFxufSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcbmltcG9ydCB7IENvcmVUb29sQ2FsbENvbnRlbnRQYXJ0IH0gZnJvbSBcIi4uLy4uL3R5cGVzL0Fzc2lzdGFudFR5cGVzXCI7XG5cbmV4cG9ydCB0eXBlIFRocmVhZE1lc3NhZ2VMaWtlID0ge1xuICByb2xlOiBcImFzc2lzdGFudFwiIHwgXCJ1c2VyXCIgfCBcInN5c3RlbVwiO1xuICBjb250ZW50OlxuICAgIHwgc3RyaW5nXG4gICAgfCAoXG4gICAgICAgIHwgVGV4dENvbnRlbnRQYXJ0XG4gICAgICAgIHwgSW1hZ2VDb250ZW50UGFydFxuICAgICAgICB8IFRvb2xDYWxsQ29udGVudFBhcnQ8YW55LCBhbnk+XG4gICAgICAgIHwgQ29yZVRvb2xDYWxsQ29udGVudFBhcnQ8YW55LCBhbnk+XG4gICAgICAgIHwgVUlDb250ZW50UGFydFxuICAgICAgKVtdO1xuICBpZD86IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgY3JlYXRlZEF0PzogRGF0ZSB8IHVuZGVmaW5lZDtcbiAgc3RhdHVzPzogTWVzc2FnZVN0YXR1cyB8IHVuZGVmaW5lZDtcbiAgYXR0YWNobWVudHM/OiBDb21wbGV0ZUF0dGFjaG1lbnRbXSB8IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBmcm9tVGhyZWFkTWVzc2FnZUxpa2UgPSAoXG4gIGxpa2U6IFRocmVhZE1lc3NhZ2VMaWtlLFxuICBmYWxsYmFja0lkOiBzdHJpbmcsXG4gIGZhbGxiYWNrU3RhdHVzOiBNZXNzYWdlU3RhdHVzLFxuKTogVGhyZWFkTWVzc2FnZSA9PiB7XG4gIGNvbnN0IHsgcm9sZSwgaWQsIGNyZWF0ZWRBdCwgYXR0YWNobWVudHMsIHN0YXR1cyB9ID0gbGlrZTtcbiAgY29uc3QgY29tbW9uID0ge1xuICAgIGlkOiBpZCA/PyBmYWxsYmFja0lkLFxuICAgIGNyZWF0ZWRBdDogY3JlYXRlZEF0ID8/IG5ldyBEYXRlKCksXG4gIH07XG5cbiAgY29uc3QgY29udGVudCA9XG4gICAgdHlwZW9mIGxpa2UuY29udGVudCA9PT0gXCJzdHJpbmdcIlxuICAgICAgPyBbeyB0eXBlOiBcInRleHRcIiBhcyBjb25zdCwgdGV4dDogbGlrZS5jb250ZW50IH1dXG4gICAgICA6IGxpa2UuY29udGVudDtcblxuICBpZiAocm9sZSAhPT0gXCJ1c2VyXCIgJiYgYXR0YWNobWVudHMpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQXR0YWNobWVudHMgYXJlIG9ubHkgc3VwcG9ydGVkIGZvciB1c2VyIG1lc3NhZ2VzXCIpO1xuICAvLyBUT0RPIGFkZCBpbiAwLjZcbiAgLy8gaWYgKHJvbGUgIT09IFwiYXNzaXN0YW50XCIgJiYgc3RhdHVzKVxuICAvLyAgIHRocm93IG5ldyBFcnJvcihcIlN0YXR1cyBpcyBvbmx5IHN1cHBvcnRlZCBmb3IgYXNzaXN0YW50IG1lc3NhZ2VzXCIpO1xuXG4gIHN3aXRjaCAocm9sZSkge1xuICAgIGNhc2UgXCJhc3Npc3RhbnRcIjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmNvbW1vbixcbiAgICAgICAgcm9sZSxcbiAgICAgICAgY29udGVudDogY29udGVudFxuICAgICAgICAgIC5tYXAoKHBhcnQpOiBUaHJlYWRBc3Npc3RhbnRDb250ZW50UGFydCB8IG51bGwgPT4ge1xuICAgICAgICAgICAgY29uc3QgdHlwZSA9IHBhcnQudHlwZTtcbiAgICAgICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgICAgICBjYXNlIFwidGV4dFwiOlxuICAgICAgICAgICAgICAgIGlmIChwYXJ0LnRleHQudHJpbSgpLmxlbmd0aCA9PT0gMCkgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcnQ7XG5cbiAgICAgICAgICAgICAgY2FzZSBcInVpXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcnQ7XG5cbiAgICAgICAgICAgICAgY2FzZSBcInRvb2wtY2FsbFwiOiB7XG4gICAgICAgICAgICAgICAgaWYgKFwiYXJnc1RleHRcIiBpbiBwYXJ0KSByZXR1cm4gcGFydDtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgLi4ucGFydCxcbiAgICAgICAgICAgICAgICAgIGFyZ3NUZXh0OiBKU09OLnN0cmluZ2lmeShwYXJ0LmFyZ3MpLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdW5oYW5kbGVkVHlwZTogXCJpbWFnZVwiID0gdHlwZTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY29udGVudCBwYXJ0IHR5cGU6ICR7dW5oYW5kbGVkVHlwZX1gKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgICAgLmZpbHRlcigoYykgPT4gISFjKSxcbiAgICAgICAgc3RhdHVzOiBzdGF0dXMgPz8gZmFsbGJhY2tTdGF0dXMsXG4gICAgICB9IHNhdGlzZmllcyBUaHJlYWRBc3Npc3RhbnRNZXNzYWdlO1xuXG4gICAgY2FzZSBcInVzZXJcIjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmNvbW1vbixcbiAgICAgICAgcm9sZSxcbiAgICAgICAgY29udGVudDogY29udGVudC5tYXAoKHBhcnQpOiBUaHJlYWRVc2VyQ29udGVudFBhcnQgPT4ge1xuICAgICAgICAgIGNvbnN0IHR5cGUgPSBwYXJ0LnR5cGU7XG4gICAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICBjYXNlIFwidGV4dFwiOlxuICAgICAgICAgICAgY2FzZSBcInVpXCI6XG4gICAgICAgICAgICBjYXNlIFwiaW1hZ2VcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIHBhcnQ7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgY29uc3QgdW5oYW5kbGVkVHlwZTogXCJ0b29sLWNhbGxcIiA9IHR5cGU7XG4gICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBjb250ZW50IHBhcnQgdHlwZTogJHt1bmhhbmRsZWRUeXBlfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSksXG4gICAgICAgIGF0dGFjaG1lbnRzOiBhdHRhY2htZW50cyA/PyBbXSxcbiAgICAgIH0gc2F0aXNmaWVzIFRocmVhZFVzZXJNZXNzYWdlO1xuXG4gICAgY2FzZSBcInN5c3RlbVwiOlxuICAgICAgaWYgKGNvbnRlbnQubGVuZ3RoICE9PSAxIHx8IGNvbnRlbnRbMF0hLnR5cGUgIT09IFwidGV4dFwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgXCJTeXN0ZW0gbWVzc2FnZXMgbXVzdCBoYXZlIGV4YWN0bHkgb25lIHRleHQgY29udGVudCBwYXJ0LlwiLFxuICAgICAgICApO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5jb21tb24sXG4gICAgICAgIHJvbGUsXG4gICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQgYXMgW1RleHRDb250ZW50UGFydF0sXG4gICAgICB9IHNhdGlzZmllcyBUaHJlYWRTeXN0ZW1NZXNzYWdlO1xuXG4gICAgZGVmYXVsdDoge1xuICAgICAgY29uc3QgdW5zdXBwb3J0ZWRSb2xlOiBuZXZlciA9IHJvbGU7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gbWVzc2FnZSByb2xlOiAke3Vuc3VwcG9ydGVkUm9sZX1gKTtcbiAgICB9XG4gIH1cbn07XG4iLCJpbXBvcnQgeyBBZGRUb29sUmVzdWx0T3B0aW9ucywgVGhyZWFkU3VnZ2VzdGlvbiB9IGZyb20gXCIuLi9jb3JlXCI7XG5cbmltcG9ydCB7IEFwcGVuZE1lc3NhZ2UsIE1vZGVsQ29uZmlnUHJvdmlkZXIsIFRocmVhZE1lc3NhZ2UgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcbmltcG9ydCB7IEV4dGVybmFsU3RvcmVBZGFwdGVyIH0gZnJvbSBcIi4vRXh0ZXJuYWxTdG9yZUFkYXB0ZXJcIjtcbmltcG9ydCB7XG4gIGdldEV4dGVybmFsU3RvcmVNZXNzYWdlLFxuICBzeW1ib2xJbm5lck1lc3NhZ2UsXG59IGZyb20gXCIuL2dldEV4dGVybmFsU3RvcmVNZXNzYWdlXCI7XG5pbXBvcnQgeyBUaHJlYWRNZXNzYWdlQ29udmVydGVyIH0gZnJvbSBcIi4vVGhyZWFkTWVzc2FnZUNvbnZlcnRlclwiO1xuaW1wb3J0IHsgZ2V0QXV0b1N0YXR1cywgaXNBdXRvU3RhdHVzIH0gZnJvbSBcIi4vYXV0by1zdGF0dXNcIjtcbmltcG9ydCB7IGZyb21UaHJlYWRNZXNzYWdlTGlrZSB9IGZyb20gXCIuL1RocmVhZE1lc3NhZ2VMaWtlXCI7XG5pbXBvcnQgeyBnZXRUaHJlYWRNZXNzYWdlVGV4dCB9IGZyb20gXCIuLi8uLi91dGlscy9nZXRUaHJlYWRNZXNzYWdlVGV4dFwiO1xuaW1wb3J0IHsgZ2VuZXJhdGVJZCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbFwiO1xuaW1wb3J0IHtcbiAgUnVudGltZUNhcGFiaWxpdGllcyxcbiAgVGhyZWFkUnVudGltZUNvcmUsXG59IGZyb20gXCIuLi9jb3JlL1RocmVhZFJ1bnRpbWVDb3JlXCI7XG5pbXBvcnQgeyBCYXNlVGhyZWFkUnVudGltZUNvcmUgfSBmcm9tIFwiLi4vY29yZS9CYXNlVGhyZWFkUnVudGltZUNvcmVcIjtcblxuY29uc3QgRU1QVFlfQVJSQVkgPSBPYmplY3QuZnJlZXplKFtdKTtcblxuZXhwb3J0IGNvbnN0IGhhc1VwY29taW5nTWVzc2FnZSA9IChcbiAgaXNSdW5uaW5nOiBib29sZWFuLFxuICBtZXNzYWdlczogVGhyZWFkTWVzc2FnZVtdLFxuKSA9PiB7XG4gIHJldHVybiBpc1J1bm5pbmcgJiYgbWVzc2FnZXNbbWVzc2FnZXMubGVuZ3RoIC0gMV0/LnJvbGUgIT09IFwiYXNzaXN0YW50XCI7XG59O1xuXG5leHBvcnQgY2xhc3MgRXh0ZXJuYWxTdG9yZVRocmVhZFJ1bnRpbWVDb3JlXG4gIGV4dGVuZHMgQmFzZVRocmVhZFJ1bnRpbWVDb3JlXG4gIGltcGxlbWVudHMgVGhyZWFkUnVudGltZUNvcmVcbntcbiAgcHJpdmF0ZSBhc3Npc3RhbnRPcHRpbWlzdGljSWQ6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gIHByaXZhdGUgX2NhcGFiaWxpdGllczogUnVudGltZUNhcGFiaWxpdGllcyA9IHtcbiAgICBzd2l0Y2hUb0JyYW5jaDogZmFsc2UsXG4gICAgZWRpdDogZmFsc2UsXG4gICAgcmVsb2FkOiBmYWxzZSxcbiAgICBjYW5jZWw6IGZhbHNlLFxuICAgIHVuc3RhYmxlX2NvcHk6IGZhbHNlLFxuICAgIHNwZWVjaDogZmFsc2UsXG4gICAgYXR0YWNobWVudHM6IGZhbHNlLFxuICAgIGZlZWRiYWNrOiBmYWxzZSxcbiAgfTtcblxuICBwdWJsaWMgZ2V0IGNhcGFiaWxpdGllcygpIHtcbiAgICByZXR1cm4gdGhpcy5fY2FwYWJpbGl0aWVzO1xuICB9XG5cbiAgcHVibGljIHRocmVhZElkITogc3RyaW5nO1xuICBwcml2YXRlIF9tZXNzYWdlcyE6IFRocmVhZE1lc3NhZ2VbXTtcbiAgcHVibGljIGlzRGlzYWJsZWQhOiBib29sZWFuO1xuXG4gIHB1YmxpYyBvdmVycmlkZSBnZXQgbWVzc2FnZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21lc3NhZ2VzO1xuICB9XG5cbiAgcHVibGljIGdldCBhZGFwdGVycygpIHtcbiAgICByZXR1cm4gdGhpcy5fc3RvcmUuYWRhcHRlcnM7XG4gIH1cblxuICBwdWJsaWMgc3VnZ2VzdGlvbnM6IHJlYWRvbmx5IFRocmVhZFN1Z2dlc3Rpb25bXSA9IFtdO1xuICBwdWJsaWMgZXh0cmFzOiB1bmtub3duID0gdW5kZWZpbmVkO1xuXG4gIHByaXZhdGUgX2NvbnZlcnRlciA9IG5ldyBUaHJlYWRNZXNzYWdlQ29udmVydGVyKCk7XG5cbiAgcHJpdmF0ZSBfc3RvcmUhOiBFeHRlcm5hbFN0b3JlQWRhcHRlcjxhbnk+O1xuXG4gIHB1YmxpYyBvdmVycmlkZSBiZWdpbkVkaXQobWVzc2FnZUlkOiBzdHJpbmcpIHtcbiAgICBpZiAoIXRoaXMuc3RvcmUub25FZGl0KVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUnVudGltZSBkb2VzIG5vdCBzdXBwb3J0IGVkaXRpbmcuXCIpO1xuXG4gICAgc3VwZXIuYmVnaW5FZGl0KG1lc3NhZ2VJZCk7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihcbiAgICBjb25maWdQcm92aWRlcjogTW9kZWxDb25maWdQcm92aWRlcixcbiAgICBzdG9yZTogRXh0ZXJuYWxTdG9yZUFkYXB0ZXI8YW55PixcbiAgKSB7XG4gICAgc3VwZXIoY29uZmlnUHJvdmlkZXIpO1xuICAgIHRoaXMuc3RvcmUgPSBzdG9yZTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgc3RvcmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3N0b3JlO1xuICB9XG5cbiAgcHVibGljIHNldCBzdG9yZShzdG9yZTogRXh0ZXJuYWxTdG9yZUFkYXB0ZXI8YW55Pikge1xuICAgIGlmICh0aGlzLl9zdG9yZSA9PT0gc3RvcmUpIHJldHVybjtcblxuICAgIHRoaXMudGhyZWFkSWQgPSBzdG9yZS50aHJlYWRJZCA/PyB0aGlzLnRocmVhZElkID8/IGdlbmVyYXRlSWQoKTtcbiAgICBjb25zdCBpc1J1bm5pbmcgPSBzdG9yZS5pc1J1bm5pbmcgPz8gZmFsc2U7XG4gICAgdGhpcy5pc0Rpc2FibGVkID0gc3RvcmUuaXNEaXNhYmxlZCA/PyBmYWxzZTtcblxuICAgIGNvbnN0IG9sZFN0b3JlID0gdGhpcy5fc3RvcmUgYXMgRXh0ZXJuYWxTdG9yZUFkYXB0ZXI8YW55PiB8IHVuZGVmaW5lZDtcbiAgICB0aGlzLl9zdG9yZSA9IHN0b3JlO1xuICAgIHRoaXMuZXh0cmFzID0gc3RvcmUuZXh0cmFzO1xuICAgIHRoaXMuc3VnZ2VzdGlvbnMgPSBzdG9yZS5zdWdnZXN0aW9ucyA/PyBFTVBUWV9BUlJBWTtcbiAgICB0aGlzLl9jYXBhYmlsaXRpZXMgPSB7XG4gICAgICBzd2l0Y2hUb0JyYW5jaDogdGhpcy5fc3RvcmUuc2V0TWVzc2FnZXMgIT09IHVuZGVmaW5lZCxcbiAgICAgIGVkaXQ6IHRoaXMuX3N0b3JlLm9uRWRpdCAhPT0gdW5kZWZpbmVkLFxuICAgICAgcmVsb2FkOiB0aGlzLl9zdG9yZS5vblJlbG9hZCAhPT0gdW5kZWZpbmVkLFxuICAgICAgY2FuY2VsOiB0aGlzLl9zdG9yZS5vbkNhbmNlbCAhPT0gdW5kZWZpbmVkLFxuICAgICAgc3BlZWNoOiB0aGlzLl9zdG9yZS5hZGFwdGVycz8uc3BlZWNoICE9PSB1bmRlZmluZWQsXG4gICAgICB1bnN0YWJsZV9jb3B5OiB0aGlzLl9zdG9yZS51bnN0YWJsZV9jYXBhYmlsaXRpZXM/LmNvcHkgIT09IGZhbHNlLCAvLyBkZWZhdWx0IHRydWVcbiAgICAgIGF0dGFjaG1lbnRzOiAhIXRoaXMuc3RvcmUuYWRhcHRlcnM/LmF0dGFjaG1lbnRzLFxuICAgICAgZmVlZGJhY2s6ICEhdGhpcy5zdG9yZS5hZGFwdGVycz8uZmVlZGJhY2ssXG4gICAgfTtcblxuICAgIGlmIChvbGRTdG9yZSkge1xuICAgICAgLy8gZmx1c2ggdGhlIGNvbnZlcnRlciBjYWNoZSB3aGVuIHRoZSBjb252ZXJ0TWVzc2FnZSBwcm9wIGNoYW5nZXNcbiAgICAgIGlmIChvbGRTdG9yZS5jb252ZXJ0TWVzc2FnZSAhPT0gc3RvcmUuY29udmVydE1lc3NhZ2UpIHtcbiAgICAgICAgdGhpcy5fY29udmVydGVyID0gbmV3IFRocmVhZE1lc3NhZ2VDb252ZXJ0ZXIoKTtcbiAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgIG9sZFN0b3JlLmlzUnVubmluZyA9PT0gc3RvcmUuaXNSdW5uaW5nICYmXG4gICAgICAgIG9sZFN0b3JlLm1lc3NhZ2VzID09PSBzdG9yZS5tZXNzYWdlc1xuICAgICAgKSB7XG4gICAgICAgIHRoaXMuX25vdGlmeVN1YnNjcmliZXJzKCk7XG4gICAgICAgIC8vIG5vIGNvbnZlcnNpb24gdXBkYXRlXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBtZXNzYWdlcyA9ICFzdG9yZS5jb252ZXJ0TWVzc2FnZVxuICAgICAgPyBzdG9yZS5tZXNzYWdlc1xuICAgICAgOiB0aGlzLl9jb252ZXJ0ZXIuY29udmVydE1lc3NhZ2VzKHN0b3JlLm1lc3NhZ2VzLCAoY2FjaGUsIG0sIGlkeCkgPT4ge1xuICAgICAgICAgIGlmICghc3RvcmUuY29udmVydE1lc3NhZ2UpIHJldHVybiBtO1xuXG4gICAgICAgICAgY29uc3QgaXNMYXN0ID0gaWR4ID09PSBzdG9yZS5tZXNzYWdlcy5sZW5ndGggLSAxO1xuICAgICAgICAgIGNvbnN0IGF1dG9TdGF0dXMgPSBnZXRBdXRvU3RhdHVzKGlzTGFzdCwgaXNSdW5uaW5nKTtcblxuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIGNhY2hlICYmXG4gICAgICAgICAgICAoY2FjaGUucm9sZSAhPT0gXCJhc3Npc3RhbnRcIiB8fFxuICAgICAgICAgICAgICAhaXNBdXRvU3RhdHVzKGNhY2hlLnN0YXR1cykgfHxcbiAgICAgICAgICAgICAgY2FjaGUuc3RhdHVzID09PSBhdXRvU3RhdHVzKVxuICAgICAgICAgIClcbiAgICAgICAgICAgIHJldHVybiBjYWNoZTtcblxuICAgICAgICAgIGNvbnN0IG5ld01lc3NhZ2UgPSBmcm9tVGhyZWFkTWVzc2FnZUxpa2UoXG4gICAgICAgICAgICBzdG9yZS5jb252ZXJ0TWVzc2FnZShtLCBpZHgpLFxuICAgICAgICAgICAgaWR4LnRvU3RyaW5nKCksXG4gICAgICAgICAgICBhdXRvU3RhdHVzLFxuICAgICAgICAgICk7XG4gICAgICAgICAgKG5ld01lc3NhZ2UgYXMgYW55KVtzeW1ib2xJbm5lck1lc3NhZ2VdID0gbTtcbiAgICAgICAgICByZXR1cm4gbmV3TWVzc2FnZTtcbiAgICAgICAgfSk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1lc3NhZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBtZXNzYWdlID0gbWVzc2FnZXNbaV0hO1xuICAgICAgY29uc3QgcGFyZW50ID0gbWVzc2FnZXNbaSAtIDFdO1xuICAgICAgdGhpcy5yZXBvc2l0b3J5LmFkZE9yVXBkYXRlTWVzc2FnZShwYXJlbnQ/LmlkID8/IG51bGwsIG1lc3NhZ2UpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmFzc2lzdGFudE9wdGltaXN0aWNJZCkge1xuICAgICAgdGhpcy5yZXBvc2l0b3J5LmRlbGV0ZU1lc3NhZ2UodGhpcy5hc3Npc3RhbnRPcHRpbWlzdGljSWQpO1xuICAgICAgdGhpcy5hc3Npc3RhbnRPcHRpbWlzdGljSWQgPSBudWxsO1xuICAgIH1cblxuICAgIGlmIChoYXNVcGNvbWluZ01lc3NhZ2UoaXNSdW5uaW5nLCBtZXNzYWdlcykpIHtcbiAgICAgIHRoaXMuYXNzaXN0YW50T3B0aW1pc3RpY0lkID0gdGhpcy5yZXBvc2l0b3J5LmFwcGVuZE9wdGltaXN0aWNNZXNzYWdlKFxuICAgICAgICBtZXNzYWdlcy5hdCgtMSk/LmlkID8/IG51bGwsXG4gICAgICAgIHtcbiAgICAgICAgICByb2xlOiBcImFzc2lzdGFudFwiLFxuICAgICAgICAgIGNvbnRlbnQ6IFtdLFxuICAgICAgICB9LFxuICAgICAgKTtcbiAgICB9XG5cbiAgICB0aGlzLnJlcG9zaXRvcnkucmVzZXRIZWFkKFxuICAgICAgdGhpcy5hc3Npc3RhbnRPcHRpbWlzdGljSWQgPz8gbWVzc2FnZXMuYXQoLTEpPy5pZCA/PyBudWxsLFxuICAgICk7XG5cbiAgICB0aGlzLl9tZXNzYWdlcyA9IHRoaXMucmVwb3NpdG9yeS5nZXRNZXNzYWdlcygpO1xuICAgIHRoaXMuX25vdGlmeVN1YnNjcmliZXJzKCk7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgc3dpdGNoVG9CcmFuY2goYnJhbmNoSWQ6IHN0cmluZyk6IHZvaWQge1xuICAgIGlmICghdGhpcy5fc3RvcmUuc2V0TWVzc2FnZXMpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSdW50aW1lIGRvZXMgbm90IHN1cHBvcnQgc3dpdGNoaW5nIGJyYW5jaGVzLlwiKTtcblxuICAgIHRoaXMucmVwb3NpdG9yeS5zd2l0Y2hUb0JyYW5jaChicmFuY2hJZCk7XG4gICAgdGhpcy51cGRhdGVNZXNzYWdlcyh0aGlzLnJlcG9zaXRvcnkuZ2V0TWVzc2FnZXMoKSk7XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgYXBwZW5kKG1lc3NhZ2U6IEFwcGVuZE1lc3NhZ2UpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBpZiAobWVzc2FnZS5wYXJlbnRJZCAhPT0gKHRoaXMubWVzc2FnZXMuYXQoLTEpPy5pZCA/PyBudWxsKSkge1xuICAgICAgaWYgKCF0aGlzLl9zdG9yZS5vbkVkaXQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlJ1bnRpbWUgZG9lcyBub3Qgc3VwcG9ydCBlZGl0aW5nIG1lc3NhZ2VzLlwiKTtcbiAgICAgIGF3YWl0IHRoaXMuX3N0b3JlLm9uRWRpdChtZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXdhaXQgdGhpcy5fc3RvcmUub25OZXcobWVzc2FnZSk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGFzeW5jIHN0YXJ0UnVuKHBhcmVudElkOiBzdHJpbmcgfCBudWxsKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgaWYgKCF0aGlzLl9zdG9yZS5vblJlbG9hZClcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlJ1bnRpbWUgZG9lcyBub3Qgc3VwcG9ydCByZWxvYWRpbmcgbWVzc2FnZXMuXCIpO1xuXG4gICAgYXdhaXQgdGhpcy5fc3RvcmUub25SZWxvYWQocGFyZW50SWQpO1xuICB9XG5cbiAgcHVibGljIGNhbmNlbFJ1bigpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMuX3N0b3JlLm9uQ2FuY2VsKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUnVudGltZSBkb2VzIG5vdCBzdXBwb3J0IGNhbmNlbGxpbmcgcnVucy5cIik7XG5cbiAgICB0aGlzLl9zdG9yZS5vbkNhbmNlbCgpO1xuXG4gICAgaWYgKHRoaXMuYXNzaXN0YW50T3B0aW1pc3RpY0lkKSB7XG4gICAgICB0aGlzLnJlcG9zaXRvcnkuZGVsZXRlTWVzc2FnZSh0aGlzLmFzc2lzdGFudE9wdGltaXN0aWNJZCk7XG4gICAgICB0aGlzLmFzc2lzdGFudE9wdGltaXN0aWNJZCA9IG51bGw7XG4gICAgfVxuXG4gICAgbGV0IG1lc3NhZ2VzID0gdGhpcy5yZXBvc2l0b3J5LmdldE1lc3NhZ2VzKCk7XG4gICAgY29uc3QgcHJldmlvdXNNZXNzYWdlID0gbWVzc2FnZXNbbWVzc2FnZXMubGVuZ3RoIC0gMV07XG4gICAgaWYgKFxuICAgICAgcHJldmlvdXNNZXNzYWdlPy5yb2xlID09PSBcInVzZXJcIiAmJlxuICAgICAgcHJldmlvdXNNZXNzYWdlLmlkID09PSBtZXNzYWdlcy5hdCgtMSk/LmlkIC8vIGVuc3VyZSB0aGUgcHJldmlvdXMgbWVzc2FnZSBpcyBhIGxlYWYgbm9kZVxuICAgICkge1xuICAgICAgdGhpcy5yZXBvc2l0b3J5LmRlbGV0ZU1lc3NhZ2UocHJldmlvdXNNZXNzYWdlLmlkKTtcbiAgICAgIGlmICghdGhpcy5jb21wb3Nlci50ZXh0LnRyaW0oKSkge1xuICAgICAgICB0aGlzLmNvbXBvc2VyLnNldFRleHQoZ2V0VGhyZWFkTWVzc2FnZVRleHQocHJldmlvdXNNZXNzYWdlKSk7XG4gICAgICB9XG5cbiAgICAgIG1lc3NhZ2VzID0gdGhpcy5yZXBvc2l0b3J5LmdldE1lc3NhZ2VzKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX25vdGlmeVN1YnNjcmliZXJzKCk7XG4gICAgfVxuXG4gICAgLy8gcmVzeW5jIG1lc3NhZ2VzIChmb3IgcmVsb2FkaW5nLCB0byByZXN0b3JlIHRoZSBwcmV2aW91cyBicmFuY2gpXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLnVwZGF0ZU1lc3NhZ2VzKG1lc3NhZ2VzKTtcbiAgICB9LCAwKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRUb29sUmVzdWx0KG9wdGlvbnM6IEFkZFRvb2xSZXN1bHRPcHRpb25zKSB7XG4gICAgaWYgKCF0aGlzLl9zdG9yZS5vbkFkZFRvb2xSZXN1bHQpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSdW50aW1lIGRvZXMgbm90IHN1cHBvcnQgdG9vbCByZXN1bHRzLlwiKTtcbiAgICB0aGlzLl9zdG9yZS5vbkFkZFRvb2xSZXN1bHQob3B0aW9ucyk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZU1lc3NhZ2VzID0gKG1lc3NhZ2VzOiBUaHJlYWRNZXNzYWdlW10pID0+IHtcbiAgICB0aGlzLl9zdG9yZS5zZXRNZXNzYWdlcz8uKFxuICAgICAgbWVzc2FnZXMuZmxhdE1hcChnZXRFeHRlcm5hbFN0b3JlTWVzc2FnZSkuZmlsdGVyKChtKSA9PiBtICE9IG51bGwpLFxuICAgICk7XG4gIH07XG59XG4iLCJpbXBvcnQgeyBCYXNlQXNzaXN0YW50UnVudGltZUNvcmUsIFByb3h5Q29uZmlnUHJvdmlkZXIgfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWxcIjtcbmltcG9ydCB7IE1vZGVsQ29uZmlnUHJvdmlkZXIgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcbmltcG9ydCB7IEV4dGVybmFsU3RvcmVBZGFwdGVyIH0gZnJvbSBcIi4vRXh0ZXJuYWxTdG9yZUFkYXB0ZXJcIjtcbmltcG9ydCB7IEV4dGVybmFsU3RvcmVUaHJlYWRSdW50aW1lQ29yZSB9IGZyb20gXCIuL0V4dGVybmFsU3RvcmVUaHJlYWRSdW50aW1lQ29yZVwiO1xuXG5leHBvcnQgY2xhc3MgRXh0ZXJuYWxTdG9yZVJ1bnRpbWVDb3JlIGV4dGVuZHMgQmFzZUFzc2lzdGFudFJ1bnRpbWVDb3JlPEV4dGVybmFsU3RvcmVUaHJlYWRSdW50aW1lQ29yZT4ge1xuICBwcml2YXRlIHJlYWRvbmx5IF9wcm94eUNvbmZpZ1Byb3ZpZGVyO1xuXG4gIGNvbnN0cnVjdG9yKHN0b3JlOiBFeHRlcm5hbFN0b3JlQWRhcHRlcjxhbnk+KSB7XG4gICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgUHJveHlDb25maWdQcm92aWRlcigpO1xuICAgIHN1cGVyKG5ldyBFeHRlcm5hbFN0b3JlVGhyZWFkUnVudGltZUNvcmUocHJvdmlkZXIsIHN0b3JlKSk7XG4gICAgdGhpcy5fcHJveHlDb25maWdQcm92aWRlciA9IHByb3ZpZGVyO1xuICB9XG5cbiAgcHVibGljIGdldE1vZGVsQ29uZmlnKCkge1xuICAgIHJldHVybiB0aGlzLl9wcm94eUNvbmZpZ1Byb3ZpZGVyLmdldE1vZGVsQ29uZmlnKCk7XG4gIH1cblxuICBwdWJsaWMgcmVnaXN0ZXJNb2RlbENvbmZpZ1Byb3ZpZGVyKHByb3ZpZGVyOiBNb2RlbENvbmZpZ1Byb3ZpZGVyKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Byb3h5Q29uZmlnUHJvdmlkZXIucmVnaXN0ZXJNb2RlbENvbmZpZ1Byb3ZpZGVyKHByb3ZpZGVyKTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBzd2l0Y2hUb05ld1RocmVhZCgpIHtcbiAgICBpZiAoIXRoaXMudGhyZWFkLnN0b3JlLm9uU3dpdGNoVG9OZXdUaHJlYWQpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSdW50aW1lIGRvZXMgbm90IHN1cHBvcnQgc3dpdGNoaW5nIHRvIG5ldyB0aHJlYWRzLlwiKTtcblxuICAgIHRoaXMudGhyZWFkID0gbmV3IEV4dGVybmFsU3RvcmVUaHJlYWRSdW50aW1lQ29yZShcbiAgICAgIHRoaXMuX3Byb3h5Q29uZmlnUHJvdmlkZXIsXG4gICAgICB7XG4gICAgICAgIC4uLnRoaXMudGhyZWFkLnN0b3JlLFxuICAgICAgICBtZXNzYWdlczogW10sXG4gICAgICB9LFxuICAgICk7XG4gICAgYXdhaXQgdGhpcy50aHJlYWQuc3RvcmUub25Td2l0Y2hUb05ld1RocmVhZCEoKTtcbiAgICB0aGlzLnRocmVhZC5fbm90aWZ5RXZlbnRTdWJzY3JpYmVycyhcInN3aXRjaGVkLXRvXCIpO1xuICB9XG5cbiAgcHVibGljIGFzeW5jIHN3aXRjaFRvVGhyZWFkKHRocmVhZElkOiBzdHJpbmcgfCBudWxsKSB7XG4gICAgaWYgKHRocmVhZElkICE9PSBudWxsKSB7XG4gICAgICBpZiAoIXRoaXMudGhyZWFkLnN0b3JlLm9uU3dpdGNoVG9UaHJlYWQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlJ1bnRpbWUgZG9lcyBub3Qgc3VwcG9ydCBzd2l0Y2hpbmcgdGhyZWFkcy5cIik7XG5cbiAgICAgIHRoaXMudGhyZWFkID0gbmV3IEV4dGVybmFsU3RvcmVUaHJlYWRSdW50aW1lQ29yZShcbiAgICAgICAgdGhpcy5fcHJveHlDb25maWdQcm92aWRlcixcbiAgICAgICAge1xuICAgICAgICAgIC4uLnRoaXMudGhyZWFkLnN0b3JlLFxuICAgICAgICAgIG1lc3NhZ2VzOiBbXSwgLy8gaWdub3JlIG1lc3NhZ2VzIHVudGlsIHJlcmVuZGVyXG4gICAgICAgIH0sXG4gICAgICApO1xuICAgICAgYXdhaXQgdGhpcy50aHJlYWQuc3RvcmUub25Td2l0Y2hUb1RocmVhZCEodGhyZWFkSWQpO1xuICAgICAgdGhpcy50aHJlYWQuX25vdGlmeUV2ZW50U3Vic2NyaWJlcnMoXCJzd2l0Y2hlZC10b1wiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zd2l0Y2hUb05ld1RocmVhZCgpO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgVGhyZWFkTWVzc2FnZUNvbnZlcnRlciB9IGZyb20gXCIuL1RocmVhZE1lc3NhZ2VDb252ZXJ0ZXJcIjtcbmltcG9ydCB7XG4gIGdldEV4dGVybmFsU3RvcmVNZXNzYWdlLFxuICBzeW1ib2xJbm5lck1lc3NhZ2UsXG59IGZyb20gXCIuL2dldEV4dGVybmFsU3RvcmVNZXNzYWdlXCI7XG5pbXBvcnQgeyBmcm9tVGhyZWFkTWVzc2FnZUxpa2UsIFRocmVhZE1lc3NhZ2VMaWtlIH0gZnJvbSBcIi4vVGhyZWFkTWVzc2FnZUxpa2VcIjtcbmltcG9ydCB7IGdldEF1dG9TdGF0dXMsIGlzQXV0b1N0YXR1cyB9IGZyb20gXCIuL2F1dG8tc3RhdHVzXCI7XG5pbXBvcnQgeyBUb29sQ2FsbENvbnRlbnRQYXJ0IH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgdXNlRXh0ZXJuYWxNZXNzYWdlQ29udmVydGVyIHtcbiAgZXhwb3J0IHR5cGUgTWVzc2FnZSA9XG4gICAgfCBUaHJlYWRNZXNzYWdlTGlrZVxuICAgIHwge1xuICAgICAgICByb2xlOiBcInRvb2xcIjtcbiAgICAgICAgdG9vbENhbGxJZDogc3RyaW5nO1xuICAgICAgICB0b29sTmFtZT86IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgICAgICAgcmVzdWx0OiBhbnk7XG4gICAgICB9O1xuXG4gIGV4cG9ydCB0eXBlIENhbGxiYWNrPFQ+ID0gKG1lc3NhZ2U6IFQpID0+IE1lc3NhZ2UgfCBNZXNzYWdlW107XG59XG5cbnR5cGUgQ2FsbGJhY2tSZXN1bHQ8VD4gPSB7XG4gIGlucHV0OiBUO1xuICBvdXRwdXRzOiB1c2VFeHRlcm5hbE1lc3NhZ2VDb252ZXJ0ZXIuTWVzc2FnZVtdO1xufTtcblxudHlwZSBDaHVua1Jlc3VsdDxUPiA9IHtcbiAgaW5wdXRzOiBUW107XG4gIG91dHB1dHM6IHVzZUV4dGVybmFsTWVzc2FnZUNvbnZlcnRlci5NZXNzYWdlW107XG59O1xuXG5jb25zdCBqb2luRXh0ZXJuYWxNZXNzYWdlcyA9IChcbiAgbWVzc2FnZXM6IHVzZUV4dGVybmFsTWVzc2FnZUNvbnZlcnRlci5NZXNzYWdlW10sXG4pOiBUaHJlYWRNZXNzYWdlTGlrZSA9PiB7XG4gIGNvbnN0IGFzc2lzdGFudE1lc3NhZ2U6IFRocmVhZE1lc3NhZ2VMaWtlICYgeyBjb250ZW50OiBhbnlbXSB9ID0ge1xuICAgIHJvbGU6IFwiYXNzaXN0YW50XCIsXG4gICAgY29udGVudDogW10sXG4gIH07XG4gIGZvciAoY29uc3Qgb3V0cHV0IG9mIG1lc3NhZ2VzKSB7XG4gICAgaWYgKG91dHB1dC5yb2xlID09PSBcInRvb2xcIikge1xuICAgICAgY29uc3QgdG9vbENhbGxJZHggPSBhc3Npc3RhbnRNZXNzYWdlLmNvbnRlbnQuZmluZEluZGV4KFxuICAgICAgICAoYykgPT4gYy50eXBlID09PSBcInRvb2wtY2FsbFwiICYmIGMudG9vbENhbGxJZCA9PT0gb3V0cHV0LnRvb2xDYWxsSWQsXG4gICAgICApO1xuICAgICAgaWYgKHRvb2xDYWxsSWR4ICE9PSAtMSkge1xuICAgICAgICBjb25zdCB0b29sQ2FsbCA9IGFzc2lzdGFudE1lc3NhZ2UuY29udGVudFtcbiAgICAgICAgICB0b29sQ2FsbElkeFxuICAgICAgICBdISBhcyBUb29sQ2FsbENvbnRlbnRQYXJ0O1xuICAgICAgICBpZiAob3V0cHV0LnRvb2xOYW1lKSB7XG4gICAgICAgICAgaWYgKHRvb2xDYWxsLnRvb2xOYW1lICE9PSBvdXRwdXQudG9vbE5hbWUpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgIGBUb29sIGNhbGwgbmFtZSAke291dHB1dC50b29sQ2FsbElkfSAke291dHB1dC50b29sTmFtZX0gZG9lcyBub3QgbWF0Y2ggZXhpc3RpbmcgdG9vbCBjYWxsICR7dG9vbENhbGwudG9vbE5hbWV9YCxcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgYXNzaXN0YW50TWVzc2FnZS5jb250ZW50W3Rvb2xDYWxsSWR4XSA9IHtcbiAgICAgICAgICAuLi50b29sQ2FsbCxcbiAgICAgICAgICByZXN1bHQ6IG91dHB1dC5yZXN1bHQsXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgYFRvb2wgY2FsbCAke291dHB1dC50b29sQ2FsbElkfSAke291dHB1dC50b29sTmFtZX0gbm90IGZvdW5kIGluIGFzc2lzdGFudCBtZXNzYWdlYCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3Qgcm9sZSA9IG91dHB1dC5yb2xlO1xuICAgICAgc3dpdGNoIChyb2xlKSB7XG4gICAgICAgIGNhc2UgXCJzeXN0ZW1cIjpcbiAgICAgICAgY2FzZSBcInVzZXJcIjpcbiAgICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgICAgICBjYXNlIFwiYXNzaXN0YW50XCI6XG4gICAgICAgICAgaWYgKGFzc2lzdGFudE1lc3NhZ2UuY29udGVudC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGFzc2lzdGFudE1lc3NhZ2UuaWQgPSBvdXRwdXQuaWQ7XG4gICAgICAgICAgICBhc3Npc3RhbnRNZXNzYWdlLmNyZWF0ZWRBdCA/Pz0gb3V0cHV0LmNyZWF0ZWRBdDtcbiAgICAgICAgICAgIGFzc2lzdGFudE1lc3NhZ2Uuc3RhdHVzID8/PSBvdXRwdXQuc3RhdHVzO1xuICAgICAgICAgICAgLy8gVE9ETyBrZWVwIHRoaXMgaW4gc3luY1xuICAgICAgICAgIH1cbiAgICAgICAgICBhc3Npc3RhbnRNZXNzYWdlLmNvbnRlbnQucHVzaCguLi5vdXRwdXQuY29udGVudCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICBjb25zdCB1bnN1cHBvcnRlZFJvbGU6IG5ldmVyID0gcm9sZTtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gbWVzc2FnZSByb2xlOiAke3Vuc3VwcG9ydGVkUm9sZX1gKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gYXNzaXN0YW50TWVzc2FnZTtcbn07XG5cbmNvbnN0IGNodW5rRXh0ZXJuYWxNZXNzYWdlcyA9IDxULD4oY2FsbGJhY2tSZXN1bHRzOiBDYWxsYmFja1Jlc3VsdDxUPltdKSA9PiB7XG4gIGNvbnN0IHJlc3VsdHM6IENodW5rUmVzdWx0PFQ+W10gPSBbXTtcbiAgbGV0IGlzQXNzaXN0YW50ID0gZmFsc2U7XG4gIGxldCBpbnB1dHM6IFRbXSA9IFtdO1xuICBsZXQgb3V0cHV0czogdXNlRXh0ZXJuYWxNZXNzYWdlQ29udmVydGVyLk1lc3NhZ2VbXSA9IFtdO1xuXG4gIGNvbnN0IGZsdXNoID0gKCkgPT4ge1xuICAgIGlmIChvdXRwdXRzLmxlbmd0aCkge1xuICAgICAgcmVzdWx0cy5wdXNoKHtcbiAgICAgICAgaW5wdXRzLFxuICAgICAgICBvdXRwdXRzLFxuICAgICAgfSk7XG4gICAgfVxuICAgIGlucHV0cyA9IFtdO1xuICAgIG91dHB1dHMgPSBbXTtcbiAgfTtcblxuICBmb3IgKGNvbnN0IGNhbGxiYWNrUmVzdWx0IG9mIGNhbGxiYWNrUmVzdWx0cykge1xuICAgIGZvciAoY29uc3Qgb3V0cHV0IG9mIGNhbGxiYWNrUmVzdWx0Lm91dHB1dHMpIHtcbiAgICAgIGlmICghaXNBc3Npc3RhbnQgfHwgb3V0cHV0LnJvbGUgPT09IFwidXNlclwiIHx8IG91dHB1dC5yb2xlID09PSBcInN5c3RlbVwiKSB7XG4gICAgICAgIGZsdXNoKCk7XG4gICAgICB9XG4gICAgICBpc0Fzc2lzdGFudCA9IG91dHB1dC5yb2xlID09PSBcImFzc2lzdGFudFwiIHx8IG91dHB1dC5yb2xlID09PSBcInRvb2xcIjtcblxuICAgICAgaWYgKGlucHV0cy5hdCgtMSkgIT09IGNhbGxiYWNrUmVzdWx0LmlucHV0KSB7XG4gICAgICAgIGlucHV0cy5wdXNoKGNhbGxiYWNrUmVzdWx0LmlucHV0KTtcbiAgICAgIH1cbiAgICAgIG91dHB1dHMucHVzaChvdXRwdXQpO1xuICAgIH1cbiAgfVxuICBmbHVzaCgpO1xuICByZXR1cm4gcmVzdWx0cztcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VFeHRlcm5hbE1lc3NhZ2VDb252ZXJ0ZXIgPSA8VCBleHRlbmRzIFdlYWtLZXk+KHtcbiAgY2FsbGJhY2ssXG4gIG1lc3NhZ2VzLFxuICBpc1J1bm5pbmcsXG59OiB7XG4gIGNhbGxiYWNrOiB1c2VFeHRlcm5hbE1lc3NhZ2VDb252ZXJ0ZXIuQ2FsbGJhY2s8VD47XG4gIG1lc3NhZ2VzOiBUW107XG4gIGlzUnVubmluZzogYm9vbGVhbjtcbn0pID0+IHtcbiAgY29uc3Qgc3RhdGUgPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICBjYWxsYmFjayxcbiAgICAgIGNhbGxiYWNrQ2FjaGU6IG5ldyBXZWFrTWFwPFQsIENhbGxiYWNrUmVzdWx0PFQ+PigpLFxuICAgICAgY2h1bmtDYWNoZTogbmV3IFdlYWtNYXA8XG4gICAgICAgIHVzZUV4dGVybmFsTWVzc2FnZUNvbnZlcnRlci5NZXNzYWdlLFxuICAgICAgICBDaHVua1Jlc3VsdDxUPlxuICAgICAgPigpLFxuICAgICAgY29udmVydGVyQ2FjaGU6IG5ldyBUaHJlYWRNZXNzYWdlQ29udmVydGVyKCksXG4gICAgfSksXG4gICAgW2NhbGxiYWNrXSxcbiAgKTtcblxuICByZXR1cm4gdXNlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgY2FsbGJhY2tSZXN1bHRzOiBDYWxsYmFja1Jlc3VsdDxUPltdID0gW107XG4gICAgZm9yIChjb25zdCBtZXNzYWdlIG9mIG1lc3NhZ2VzKSB7XG4gICAgICBsZXQgcmVzdWx0ID0gc3RhdGUuY2FsbGJhY2tDYWNoZS5nZXQobWVzc2FnZSk7XG4gICAgICBpZiAoIXJlc3VsdCkge1xuICAgICAgICBjb25zdCBvdXRwdXQgPSBzdGF0ZS5jYWxsYmFjayhtZXNzYWdlKTtcbiAgICAgICAgY29uc3Qgb3V0cHV0cyA9IEFycmF5LmlzQXJyYXkob3V0cHV0KSA/IG91dHB1dCA6IFtvdXRwdXRdO1xuICAgICAgICByZXN1bHQgPSB7IGlucHV0OiBtZXNzYWdlLCBvdXRwdXRzIH07XG4gICAgICAgIHN0YXRlLmNhbGxiYWNrQ2FjaGUuc2V0KG1lc3NhZ2UsIHJlc3VsdCk7XG4gICAgICB9XG4gICAgICBjYWxsYmFja1Jlc3VsdHMucHVzaChyZXN1bHQpO1xuICAgIH1cblxuICAgIGNvbnN0IGNodW5rcyA9IGNodW5rRXh0ZXJuYWxNZXNzYWdlcyhjYWxsYmFja1Jlc3VsdHMpLm1hcCgobSkgPT4ge1xuICAgICAgY29uc3Qga2V5ID0gbS5vdXRwdXRzWzBdO1xuICAgICAgaWYgKCFrZXkpIHJldHVybiBtO1xuXG4gICAgICBjb25zdCBjYWNoZWQgPSBzdGF0ZS5jaHVua0NhY2hlLmdldChrZXkpO1xuICAgICAgaWYgKGNhY2hlZCAmJiBzaGFsbG93QXJyYXlFcXVhbChjYWNoZWQub3V0cHV0cywgbS5vdXRwdXRzKSkgcmV0dXJuIGNhY2hlZDtcbiAgICAgIHN0YXRlLmNodW5rQ2FjaGUuc2V0KGtleSwgbSk7XG4gICAgICByZXR1cm4gbTtcbiAgICB9KTtcblxuICAgIHJldHVybiBzdGF0ZS5jb252ZXJ0ZXJDYWNoZS5jb252ZXJ0TWVzc2FnZXMoXG4gICAgICBjaHVua3MsXG4gICAgICAoY2FjaGUsIG1lc3NhZ2UsIGlkeCkgPT4ge1xuICAgICAgICBjb25zdCBpc0xhc3QgPSBpZHggPT09IGNodW5rcy5sZW5ndGggLSAxO1xuICAgICAgICBjb25zdCBhdXRvU3RhdHVzID0gZ2V0QXV0b1N0YXR1cyhpc0xhc3QsIGlzUnVubmluZyk7XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgIGNhY2hlICYmXG4gICAgICAgICAgKGNhY2hlLnJvbGUgIT09IFwiYXNzaXN0YW50XCIgfHxcbiAgICAgICAgICAgICFpc0F1dG9TdGF0dXMoY2FjaGUuc3RhdHVzKSB8fFxuICAgICAgICAgICAgY2FjaGUuc3RhdHVzID09PSBhdXRvU3RhdHVzKVxuICAgICAgICApIHtcbiAgICAgICAgICBjb25zdCBpbnB1dHMgPSBnZXRFeHRlcm5hbFN0b3JlTWVzc2FnZShjYWNoZSkgYXMgVFtdO1xuICAgICAgICAgIGlmIChzaGFsbG93QXJyYXlFcXVhbChpbnB1dHMsIG1lc3NhZ2UuaW5wdXRzKSkge1xuICAgICAgICAgICAgcmV0dXJuIGNhY2hlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld01lc3NhZ2UgPSBmcm9tVGhyZWFkTWVzc2FnZUxpa2UoXG4gICAgICAgICAgam9pbkV4dGVybmFsTWVzc2FnZXMobWVzc2FnZS5vdXRwdXRzKSxcbiAgICAgICAgICBpZHgudG9TdHJpbmcoKSxcbiAgICAgICAgICBhdXRvU3RhdHVzLFxuICAgICAgICApO1xuICAgICAgICAobmV3TWVzc2FnZSBhcyBhbnkpW3N5bWJvbElubmVyTWVzc2FnZV0gPSBtZXNzYWdlLmlucHV0cztcbiAgICAgICAgcmV0dXJuIG5ld01lc3NhZ2U7XG4gICAgICB9LFxuICAgICk7XG4gIH0sIFtzdGF0ZSwgbWVzc2FnZXMsIGlzUnVubmluZ10pO1xufTtcblxuY29uc3Qgc2hhbGxvd0FycmF5RXF1YWwgPSAoYTogdW5rbm93bltdLCBiOiB1bmtub3duW10pID0+IHtcbiAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoYVtpXSAhPT0gYltpXSkgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufTtcbiIsImltcG9ydCB7IExvY2FsUnVudGltZU9wdGlvbnMsIHVzZUxvY2FsUnVudGltZSB9IGZyb20gXCIuLlwiO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7XG4gIERhbmdlcm91c0luQnJvd3NlckFkYXB0ZXIsXG4gIERhbmdlcm91c0luQnJvd3NlckFkYXB0ZXJPcHRpb25zLFxufSBmcm9tIFwiLi9EYW5nZXJvdXNJbkJyb3dzZXJBZGFwdGVyXCI7XG5pbXBvcnQgeyBzcGxpdExvY2FsUnVudGltZU9wdGlvbnMgfSBmcm9tIFwiLi4vbG9jYWwvTG9jYWxSdW50aW1lT3B0aW9uc1wiO1xuXG5leHBvcnQgdHlwZSBEYW5nZXJvdXNJbkJyb3dzZXJSdW50aW1lT3B0aW9ucyA9XG4gIERhbmdlcm91c0luQnJvd3NlckFkYXB0ZXJPcHRpb25zICYgTG9jYWxSdW50aW1lT3B0aW9ucztcblxuZXhwb3J0IGNvbnN0IHVzZURhbmdlcm91c0luQnJvd3NlclJ1bnRpbWUgPSAoXG4gIG9wdGlvbnM6IERhbmdlcm91c0luQnJvd3NlclJ1bnRpbWVPcHRpb25zLFxuKSA9PiB7XG4gIGNvbnN0IHsgbG9jYWxSdW50aW1lT3B0aW9ucywgb3RoZXJPcHRpb25zIH0gPVxuICAgIHNwbGl0TG9jYWxSdW50aW1lT3B0aW9ucyhvcHRpb25zKTtcbiAgY29uc3QgW2FkYXB0ZXJdID0gdXNlU3RhdGUoKCkgPT4gbmV3IERhbmdlcm91c0luQnJvd3NlckFkYXB0ZXIob3RoZXJPcHRpb25zKSk7XG4gIHJldHVybiB1c2VMb2NhbFJ1bnRpbWUoYWRhcHRlciwgbG9jYWxSdW50aW1lT3B0aW9ucyk7XG59O1xuIiwiaW1wb3J0IHsgQ2hhdE1vZGVsQWRhcHRlciwgQ2hhdE1vZGVsUnVuT3B0aW9ucyB9IGZyb20gXCIuLi9sb2NhbFwiO1xuaW1wb3J0IHsgdG9Db3JlTWVzc2FnZXMgfSBmcm9tIFwiLi4vZWRnZS9jb252ZXJ0ZXJzL3RvQ29yZU1lc3NhZ2VzXCI7XG5pbXBvcnQgeyB0b0xhbmd1YWdlTW9kZWxUb29scyB9IGZyb20gXCIuLi9lZGdlL2NvbnZlcnRlcnMvdG9MYW5ndWFnZU1vZGVsVG9vbHNcIjtcbmltcG9ydCB7IEVkZ2VSdW50aW1lUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vZWRnZS9FZGdlUnVudGltZVJlcXVlc3RPcHRpb25zXCI7XG5pbXBvcnQgeyBydW5SZXN1bHRTdHJlYW0gfSBmcm9tIFwiLi4vZWRnZS9zdHJlYW1zL3J1blJlc3VsdFN0cmVhbVwiO1xuaW1wb3J0IHsgdG9vbFJlc3VsdFN0cmVhbSB9IGZyb20gXCIuLi9lZGdlL3N0cmVhbXMvdG9vbFJlc3VsdFN0cmVhbVwiO1xuaW1wb3J0IHsgYXNBc3luY0l0ZXJhYmxlIH0gZnJvbSBcIi4uL2VkZ2UvRWRnZUNoYXRBZGFwdGVyXCI7XG5pbXBvcnQge1xuICBDcmVhdGVFZGdlUnVudGltZUFQSU9wdGlvbnMsXG4gIGdldEVkZ2VSdW50aW1lU3RyZWFtLFxufSBmcm9tIFwiLi4vZWRnZS9jcmVhdGVFZGdlUnVudGltZUFQSVwiO1xuXG5leHBvcnQgdHlwZSBEYW5nZXJvdXNJbkJyb3dzZXJBZGFwdGVyT3B0aW9ucyA9IENyZWF0ZUVkZ2VSdW50aW1lQVBJT3B0aW9ucztcblxuZXhwb3J0IGNsYXNzIERhbmdlcm91c0luQnJvd3NlckFkYXB0ZXIgaW1wbGVtZW50cyBDaGF0TW9kZWxBZGFwdGVyIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBvcHRpb25zOiBEYW5nZXJvdXNJbkJyb3dzZXJBZGFwdGVyT3B0aW9ucykge31cblxuICBhc3luYyAqcnVuKHsgbWVzc2FnZXMsIGFib3J0U2lnbmFsLCBjb25maWcgfTogQ2hhdE1vZGVsUnVuT3B0aW9ucykge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGdldEVkZ2VSdW50aW1lU3RyZWFtKHtcbiAgICAgIG9wdGlvbnM6IHRoaXMub3B0aW9ucyxcbiAgICAgIGFib3J0U2lnbmFsLFxuICAgICAgcmVxdWVzdERhdGE6IHtcbiAgICAgICAgc3lzdGVtOiBjb25maWcuc3lzdGVtLFxuICAgICAgICBtZXNzYWdlczogdG9Db3JlTWVzc2FnZXMobWVzc2FnZXMpLFxuICAgICAgICB0b29sczogY29uZmlnLnRvb2xzID8gdG9MYW5ndWFnZU1vZGVsVG9vbHMoY29uZmlnLnRvb2xzKSA6IFtdLFxuICAgICAgICAuLi5jb25maWcuY2FsbFNldHRpbmdzLFxuICAgICAgICAuLi5jb25maWcuY29uZmlnLFxuICAgICAgfSBzYXRpc2ZpZXMgRWRnZVJ1bnRpbWVSZXF1ZXN0T3B0aW9ucyxcbiAgICB9KTtcblxuICAgIGNvbnN0IHN0cmVhbSA9IHJlc1xuICAgICAgLnBpcGVUaHJvdWdoKHRvb2xSZXN1bHRTdHJlYW0oY29uZmlnLnRvb2xzLCBhYm9ydFNpZ25hbCkpXG4gICAgICAucGlwZVRocm91Z2gocnVuUmVzdWx0U3RyZWFtKCkpO1xuXG4gICAgZm9yIGF3YWl0IChjb25zdCB1cGRhdGUgb2YgYXNBc3luY0l0ZXJhYmxlKHN0cmVhbSkpIHtcbiAgICAgIHlpZWxkIHVwZGF0ZTtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCB7IFNwZWVjaFN5bnRoZXNpc0FkYXB0ZXIgfSBmcm9tIFwiLi9TcGVlY2hBZGFwdGVyVHlwZXNcIjtcblxuZXhwb3J0IGNsYXNzIFdlYlNwZWVjaFN5bnRoZXNpc0FkYXB0ZXIgaW1wbGVtZW50cyBTcGVlY2hTeW50aGVzaXNBZGFwdGVyIHtcbiAgc3BlYWsodGV4dDogc3RyaW5nKTogU3BlZWNoU3ludGhlc2lzQWRhcHRlci5VdHRlcmFuY2Uge1xuICAgIGNvbnN0IHV0dGVyYW5jZSA9IG5ldyBTcGVlY2hTeW50aGVzaXNVdHRlcmFuY2UodGV4dCk7XG5cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKTtcbiAgICBjb25zdCBoYW5kbGVFbmQgPSAoXG4gICAgICByZWFzb246IFwiZmluaXNoZWRcIiB8IFwiZXJyb3JcIiB8IFwiY2FuY2VsbGVkXCIsXG4gICAgICBlcnJvcj86IHVua25vd24sXG4gICAgKSA9PiB7XG4gICAgICBpZiAocmVzLnN0YXR1cy50eXBlID09PSBcImVuZGVkXCIpIHJldHVybjtcblxuICAgICAgcmVzLnN0YXR1cyA9IHsgdHlwZTogXCJlbmRlZFwiLCByZWFzb24sIGVycm9yIH07XG4gICAgICBzdWJzY3JpYmVycy5mb3JFYWNoKChoYW5kbGVyKSA9PiBoYW5kbGVyKCkpO1xuICAgIH07XG5cbiAgICB1dHRlcmFuY2UuYWRkRXZlbnRMaXN0ZW5lcihcImVuZFwiLCAoKSA9PiBoYW5kbGVFbmQoXCJmaW5pc2hlZFwiKSk7XG4gICAgdXR0ZXJhbmNlLmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLCAoZSkgPT4gaGFuZGxlRW5kKFwiZXJyb3JcIiwgZS5lcnJvcikpO1xuXG4gICAgd2luZG93LnNwZWVjaFN5bnRoZXNpcy5zcGVhayh1dHRlcmFuY2UpO1xuXG4gICAgY29uc3QgcmVzOiBTcGVlY2hTeW50aGVzaXNBZGFwdGVyLlV0dGVyYW5jZSA9IHtcbiAgICAgIHN0YXR1czogeyB0eXBlOiBcInJ1bm5pbmdcIiB9LFxuICAgICAgY2FuY2VsOiAoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5zcGVlY2hTeW50aGVzaXMuY2FuY2VsKCk7XG4gICAgICAgIGhhbmRsZUVuZChcImNhbmNlbGxlZFwiKTtcbiAgICAgIH0sXG4gICAgICBzdWJzY3JpYmU6IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAocmVzLnN0YXR1cy50eXBlID09PSBcImVuZGVkXCIpIHtcbiAgICAgICAgICBsZXQgY2FuY2VsbGVkID0gZmFsc2U7XG4gICAgICAgICAgcXVldWVNaWNyb3Rhc2soKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFjYW5jZWxsZWQpIGNhbGxiYWNrKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGNhbmNlbGxlZCA9IHRydWU7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spO1xuICAgICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfTtcbiAgICByZXR1cm4gcmVzO1xuICB9XG59XG4iLCJpbXBvcnQge1xuICBQZW5kaW5nQXR0YWNobWVudCxcbiAgQ29tcGxldGVBdHRhY2htZW50LFxufSBmcm9tIFwiLi4vLi4vdHlwZXMvQXR0YWNobWVudFR5cGVzXCI7XG5pbXBvcnQgeyBBdHRhY2htZW50QWRhcHRlciB9IGZyb20gXCIuL0F0dGFjaG1lbnRBZGFwdGVyXCI7XG5cbmV4cG9ydCBjbGFzcyBTaW1wbGVJbWFnZUF0dGFjaG1lbnRBZGFwdGVyIGltcGxlbWVudHMgQXR0YWNobWVudEFkYXB0ZXIge1xuICBwdWJsaWMgYWNjZXB0ID0gXCJpbWFnZS8qXCI7XG5cbiAgcHVibGljIGFzeW5jIGFkZChzdGF0ZTogeyBmaWxlOiBGaWxlIH0pOiBQcm9taXNlPFBlbmRpbmdBdHRhY2htZW50PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiBzdGF0ZS5maWxlLm5hbWUsXG4gICAgICB0eXBlOiBcImltYWdlXCIsXG4gICAgICBuYW1lOiBzdGF0ZS5maWxlLm5hbWUsXG4gICAgICBjb250ZW50VHlwZTogc3RhdGUuZmlsZS50eXBlLFxuICAgICAgZmlsZTogc3RhdGUuZmlsZSxcbiAgICAgIHN0YXR1czogeyB0eXBlOiBcInJlcXVpcmVzLWFjdGlvblwiLCByZWFzb246IFwiY29tcG9zZXItc2VuZFwiIH0sXG4gICAgfTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBzZW5kKFxuICAgIGF0dGFjaG1lbnQ6IFBlbmRpbmdBdHRhY2htZW50LFxuICApOiBQcm9taXNlPENvbXBsZXRlQXR0YWNobWVudD4ge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5hdHRhY2htZW50LFxuICAgICAgc3RhdHVzOiB7IHR5cGU6IFwiY29tcGxldGVcIiB9LFxuICAgICAgY29udGVudDogW1xuICAgICAgICB7XG4gICAgICAgICAgdHlwZTogXCJpbWFnZVwiLFxuICAgICAgICAgIGltYWdlOiBhd2FpdCBnZXRGaWxlRGF0YVVSTChhdHRhY2htZW50LmZpbGUpLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9O1xuICB9XG5cbiAgcHVibGljIGFzeW5jIHJlbW92ZSgpIHtcbiAgICAvLyBub29wXG4gIH1cbn1cblxuY29uc3QgZ2V0RmlsZURhdGFVUkwgPSAoZmlsZTogRmlsZSkgPT5cbiAgbmV3IFByb21pc2U8c3RyaW5nPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcblxuICAgIHJlYWRlci5vbmxvYWQgPSAoKSA9PiByZXNvbHZlKHJlYWRlci5yZXN1bHQgYXMgc3RyaW5nKTtcbiAgICByZWFkZXIub25lcnJvciA9IChlcnJvcikgPT4gcmVqZWN0KGVycm9yKTtcblxuICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xuICB9KTtcbiIsImltcG9ydCB7XG4gIENvbXBsZXRlQXR0YWNobWVudCxcbiAgUGVuZGluZ0F0dGFjaG1lbnQsXG59IGZyb20gXCIuLi8uLi90eXBlcy9BdHRhY2htZW50VHlwZXNcIjtcbmltcG9ydCB7IEF0dGFjaG1lbnRBZGFwdGVyIH0gZnJvbSBcIi4vQXR0YWNobWVudEFkYXB0ZXJcIjtcblxuZXhwb3J0IGNsYXNzIFNpbXBsZVRleHRBdHRhY2htZW50QWRhcHRlciBpbXBsZW1lbnRzIEF0dGFjaG1lbnRBZGFwdGVyIHtcbiAgcHVibGljIGFjY2VwdCA9XG4gICAgXCJ0ZXh0L3BsYWluLHRleHQvaHRtbCx0ZXh0L21hcmtkb3duLHRleHQvY3N2LHRleHQveG1sLHRleHQvanNvbix0ZXh0L2Nzc1wiO1xuXG4gIHB1YmxpYyBhc3luYyBhZGQoc3RhdGU6IHsgZmlsZTogRmlsZSB9KTogUHJvbWlzZTxQZW5kaW5nQXR0YWNobWVudD4ge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogc3RhdGUuZmlsZS5uYW1lLFxuICAgICAgdHlwZTogXCJkb2N1bWVudFwiLFxuICAgICAgbmFtZTogc3RhdGUuZmlsZS5uYW1lLFxuICAgICAgY29udGVudFR5cGU6IHN0YXRlLmZpbGUudHlwZSxcbiAgICAgIGZpbGU6IHN0YXRlLmZpbGUsXG4gICAgICBzdGF0dXM6IHsgdHlwZTogXCJyZXF1aXJlcy1hY3Rpb25cIiwgcmVhc29uOiBcImNvbXBvc2VyLXNlbmRcIiB9LFxuICAgIH07XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgc2VuZChcbiAgICBhdHRhY2htZW50OiBQZW5kaW5nQXR0YWNobWVudCxcbiAgKTogUHJvbWlzZTxDb21wbGV0ZUF0dGFjaG1lbnQ+IHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uYXR0YWNobWVudCxcbiAgICAgIHN0YXR1czogeyB0eXBlOiBcImNvbXBsZXRlXCIgfSxcbiAgICAgIGNvbnRlbnQ6IFtcbiAgICAgICAge1xuICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICAgIHRleHQ6IGA8YXR0YWNobWVudCBuYW1lPSR7YXR0YWNobWVudC5uYW1lfT5cXG4ke2F3YWl0IGdldEZpbGVUZXh0KGF0dGFjaG1lbnQuZmlsZSl9XFxuPC9hdHRhY2htZW50PmAsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH07XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgcmVtb3ZlKCkge1xuICAgIC8vIG5vb3BcbiAgfVxufVxuXG5jb25zdCBnZXRGaWxlVGV4dCA9IChmaWxlOiBGaWxlKSA9PlxuICBuZXcgUHJvbWlzZTxzdHJpbmc+KChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuXG4gICAgcmVhZGVyLm9ubG9hZCA9ICgpID0+IHJlc29sdmUocmVhZGVyLnJlc3VsdCBhcyBzdHJpbmcpO1xuICAgIHJlYWRlci5vbmVycm9yID0gKGVycm9yKSA9PiByZWplY3QoZXJyb3IpO1xuXG4gICAgcmVhZGVyLnJlYWRBc1RleHQoZmlsZSk7XG4gIH0pO1xuIiwiaW1wb3J0IHsgQXR0YWNobWVudCwgUGVuZGluZ0F0dGFjaG1lbnQgfSBmcm9tIFwiLi4vLi4vdHlwZXMvQXR0YWNobWVudFR5cGVzXCI7XG5pbXBvcnQgeyBBdHRhY2htZW50QWRhcHRlciB9IGZyb20gXCIuL0F0dGFjaG1lbnRBZGFwdGVyXCI7XG5cbmZ1bmN0aW9uIGZpbGVNYXRjaGVzQWNjZXB0KFxuICBmaWxlOiB7IG5hbWU6IHN0cmluZzsgdHlwZTogc3RyaW5nIH0sXG4gIGFjY2VwdFN0cmluZzogc3RyaW5nLFxuKSB7XG4gIC8vIENoZWNrIGlmIHRoZSBhY2NlcHQgc3RyaW5nIGlzIFwiKlwiLCB3aGljaCBhbGxvd3MgYW55IGZpbGVcbiAgaWYgKGFjY2VwdFN0cmluZyA9PT0gXCIqXCIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8vIFNwbGl0IHRoZSBhY2NlcHQgc3RyaW5nIGludG8gYW4gYXJyYXkgb2YgYWxsb3dlZCB0eXBlc1xuICBjb25zdCBhbGxvd2VkVHlwZXMgPSBhY2NlcHRTdHJpbmdcbiAgICAuc3BsaXQoXCIsXCIpXG4gICAgLm1hcCgodHlwZSkgPT4gdHlwZS50cmltKCkudG9Mb3dlckNhc2UoKSk7XG5cbiAgLy8gR2V0IHRoZSBmaWxlJ3MgZXh0ZW5zaW9uIGFuZCBNSU1FIHR5cGVcbiAgY29uc3QgZmlsZUV4dGVuc2lvbiA9IFwiLlwiICsgZmlsZS5uYW1lLnNwbGl0KFwiLlwiKS5wb3AoKSEudG9Mb3dlckNhc2UoKTtcbiAgY29uc3QgZmlsZU1pbWVUeXBlID0gZmlsZS50eXBlLnRvTG93ZXJDYXNlKCk7XG5cbiAgZm9yIChjb25zdCB0eXBlIG9mIGFsbG93ZWRUeXBlcykge1xuICAgIC8vIENoZWNrIGZvciBmaWxlIGV4dGVuc2lvbiBtYXRjaFxuICAgIGlmICh0eXBlLnN0YXJ0c1dpdGgoXCIuXCIpICYmIHR5cGUgPT09IGZpbGVFeHRlbnNpb24pIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGZvciBleGFjdCBNSU1FIHR5cGUgbWF0Y2hcbiAgICBpZiAodHlwZS5pbmNsdWRlcyhcIi9cIikgJiYgdHlwZSA9PT0gZmlsZU1pbWVUeXBlKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAodHlwZSA9PT0gXCJpbWFnZS8qXCIgfHwgdHlwZSA9PT0gXCJ2aWRlby8qXCIgfHwgdHlwZSA9PT0gXCJhdWRpby8qXCIpIHtcbiAgICAgIC8vIENoZWNrIGZvciB3aWxkY2FyZCBNSU1FIHR5cGUgbWF0Y2hcbiAgICAgIGlmICh0eXBlLmVuZHNXaXRoKFwiLypcIikpIHtcbiAgICAgICAgY29uc3QgZ2VuZXJhbFR5cGUgPSB0eXBlLnNwbGl0KFwiL1wiKVswXSE7XG4gICAgICAgIGlmIChmaWxlTWltZVR5cGUuc3RhcnRzV2l0aChnZW5lcmFsVHlwZSArIFwiL1wiKSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgY2xhc3MgQ29tcG9zaXRlQXR0YWNobWVudEFkYXB0ZXIgaW1wbGVtZW50cyBBdHRhY2htZW50QWRhcHRlciB7XG4gIHByaXZhdGUgX2FkYXB0ZXJzOiBBdHRhY2htZW50QWRhcHRlcltdO1xuXG4gIHB1YmxpYyBhY2NlcHQ6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihhZGFwdGVyczogQXR0YWNobWVudEFkYXB0ZXJbXSkge1xuICAgIHRoaXMuX2FkYXB0ZXJzID0gYWRhcHRlcnM7XG5cbiAgICBjb25zdCB3aWxkY2FyZElkeCA9IGFkYXB0ZXJzLmZpbmRJbmRleCgoYSkgPT4gYS5hY2NlcHQgPT09IFwiKlwiKTtcbiAgICBpZiAod2lsZGNhcmRJZHggIT09IC0xKSB7XG4gICAgICBpZiAod2lsZGNhcmRJZHggIT09IGFkYXB0ZXJzLmxlbmd0aCAtIDEpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBcIkEgd2lsZGNhcmQgYWRhcHRlciAoaGFuZGxpbmcgYWxsIGZpbGVzKSBjYW4gb25seSBiZSBzcGVjaWZpZWQgYXMgdGhlIGxhc3QgYWRhcHRlci5cIixcbiAgICAgICAgKTtcblxuICAgICAgdGhpcy5hY2NlcHQgPSBcIipcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hY2NlcHQgPSBhZGFwdGVycy5tYXAoKGEpID0+IGEuYWNjZXB0KS5qb2luKFwiLFwiKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgYWRkKHN0YXRlOiB7IGZpbGU6IEZpbGUgfSkge1xuICAgIGZvciAoY29uc3QgYWRhcHRlciBvZiB0aGlzLl9hZGFwdGVycykge1xuICAgICAgaWYgKGZpbGVNYXRjaGVzQWNjZXB0KHN0YXRlLmZpbGUsIGFkYXB0ZXIuYWNjZXB0KSkge1xuICAgICAgICByZXR1cm4gYWRhcHRlci5hZGQoc3RhdGUpO1xuICAgICAgfVxuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBtYXRjaGluZyBhZGFwdGVyIGZvdW5kIGZvciBmaWxlXCIpO1xuICB9XG5cbiAgcHVibGljIGFzeW5jIHNlbmQoYXR0YWNobWVudDogUGVuZGluZ0F0dGFjaG1lbnQpIHtcbiAgICBjb25zdCBhZGFwdGVycyA9IHRoaXMuX2FkYXB0ZXJzLnNsaWNlKCk7XG4gICAgZm9yIChjb25zdCBhZGFwdGVyIG9mIGFkYXB0ZXJzKSB7XG4gICAgICBpZiAoZmlsZU1hdGNoZXNBY2NlcHQoYXR0YWNobWVudC5maWxlLCBhZGFwdGVyLmFjY2VwdCkpIHtcbiAgICAgICAgcmV0dXJuIGFkYXB0ZXIuc2VuZChhdHRhY2htZW50KTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gbWF0Y2hpbmcgYWRhcHRlciBmb3VuZCBmb3IgYXR0YWNobWVudFwiKTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyByZW1vdmUoYXR0YWNobWVudDogQXR0YWNobWVudCkge1xuICAgIGNvbnN0IGFkYXB0ZXJzID0gdGhpcy5fYWRhcHRlcnMuc2xpY2UoKTtcbiAgICBmb3IgKGNvbnN0IGFkYXB0ZXIgb2YgYWRhcHRlcnMpIHtcbiAgICAgIGlmIChcbiAgICAgICAgZmlsZU1hdGNoZXNBY2NlcHQoXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogYXR0YWNobWVudC5uYW1lLFxuICAgICAgICAgICAgdHlwZTogYXR0YWNobWVudC5jb250ZW50VHlwZSA/PyBcInVua25vd24vdW5rbm93blwiLCAvLyBUT0RPIHJlbW92ZSBhZnRlciAwLjYuMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgYWRhcHRlci5hY2NlcHQsXG4gICAgICAgIClcbiAgICAgICkge1xuICAgICAgICByZXR1cm4gYWRhcHRlci5yZW1vdmUoYXR0YWNobWVudCk7XG4gICAgICB9XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihcIk5vIG1hdGNoaW5nIGFkYXB0ZXIgZm91bmQgZm9yIGF0dGFjaG1lbnRcIik7XG4gIH1cbn1cbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQge1xuICBDb21wb25lbnRUeXBlLFxuICBGQyxcbiAgUHJvcHNXaXRoQ2hpbGRyZW4sXG4gIFJlYWN0Tm9kZSxcbiAgY3JlYXRlQ29udGV4dCxcbiAgdXNlQ29udGV4dCxcbn0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCB7IEFzc2lzdGFudFJ1bnRpbWUgfSBmcm9tIFwiLi4vYXBpL0Fzc2lzdGFudFJ1bnRpbWVcIjtcbmltcG9ydCB7IEF2YXRhclByb3BzIH0gZnJvbSBcIi4vYmFzZS9hdmF0YXJcIjtcbmltcG9ydCB7IFRleHRDb250ZW50UGFydENvbXBvbmVudCwgVG9vbENhbGxDb250ZW50UGFydFByb3BzIH0gZnJvbSBcIi4uL3R5cGVzXCI7XG5pbXBvcnQgeyBBc3Npc3RhbnRSdW50aW1lUHJvdmlkZXIgfSBmcm9tIFwiLi4vY29udGV4dFwiO1xuaW1wb3J0IHsgQXNzaXN0YW50VG9vbFVJIH0gZnJvbSBcIi4uL21vZGVsLWNvbmZpZ1wiO1xuaW1wb3J0IHsgdXNlQXNzaXN0YW50UnVudGltZSB9IGZyb20gXCIuLi9jb250ZXh0L3JlYWN0L0Fzc2lzdGFudENvbnRleHRcIjtcblxuZXhwb3J0IHR5cGUgU3VnZ2VzdGlvbkNvbmZpZyA9IHtcbiAgdGV4dD86IFJlYWN0Tm9kZSB8IHVuZGVmaW5lZDtcbiAgcHJvbXB0OiBzdHJpbmc7XG59O1xuXG5leHBvcnQgdHlwZSBUaHJlYWRXZWxjb21lQ29uZmlnID0ge1xuICBtZXNzYWdlPzogc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZDtcbiAgc3VnZ2VzdGlvbnM/OiBTdWdnZXN0aW9uQ29uZmlnW10gfCB1bmRlZmluZWQ7XG59O1xuXG5leHBvcnQgdHlwZSBVc2VyTWVzc2FnZUNvbmZpZyA9IHtcbiAgYWxsb3dFZGl0PzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCB0eXBlIEFzc2lzdGFudE1lc3NhZ2VDb25maWcgPSB7XG4gIGFsbG93UmVsb2FkPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgYWxsb3dDb3B5PzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgYWxsb3dTcGVhaz86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gIGFsbG93RmVlZGJhY2tQb3NpdGl2ZT86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gIGFsbG93RmVlZGJhY2tOZWdhdGl2ZT86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gIGNvbXBvbmVudHM/OlxuICAgIHwge1xuICAgICAgICBUZXh0PzogVGV4dENvbnRlbnRQYXJ0Q29tcG9uZW50IHwgdW5kZWZpbmVkO1xuICAgICAgICBUb29sRmFsbGJhY2s/OiBDb21wb25lbnRUeXBlPFRvb2xDYWxsQ29udGVudFBhcnRQcm9wcz4gfCB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgfCB1bmRlZmluZWQ7XG59O1xuXG5leHBvcnQgdHlwZSBCcmFuY2hQaWNrZXJDb25maWcgPSB7XG4gIGFsbG93QnJhbmNoUGlja2VyPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCB0eXBlIENvbXBvc2VyQ29uZmlnID0ge1xuICBhbGxvd0F0dGFjaG1lbnRzPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCB0eXBlIFN0cmluZ3NDb25maWcgPSB7XG4gIGFzc2lzdGFudE1vZGFsPzoge1xuICAgIG9wZW46IHtcbiAgICAgIGJ1dHRvbjoge1xuICAgICAgICB0b29sdGlwPzogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgICAgfTtcbiAgICB9O1xuICAgIGNsb3NlZDoge1xuICAgICAgYnV0dG9uOiB7XG4gICAgICAgIHRvb2x0aXA/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgICB9O1xuICAgIH07XG4gIH07XG4gIHRocmVhZD86IHtcbiAgICBzY3JvbGxUb0JvdHRvbT86IHtcbiAgICAgIHRvb2x0aXA/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgfTtcbiAgfTtcbiAgdXNlck1lc3NhZ2U/OiB7XG4gICAgZWRpdD86IHtcbiAgICAgIHRvb2x0aXA/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgfTtcbiAgfTtcbiAgYXNzaXN0YW50TWVzc2FnZT86IHtcbiAgICByZWxvYWQ/OiB7XG4gICAgICB0b29sdGlwPzogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgIH07XG4gICAgY29weT86IHtcbiAgICAgIHRvb2x0aXA/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICBzcGVhaz86IHtcbiAgICAgIHRvb2x0aXA/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgICBzdG9wPzoge1xuICAgICAgICB0b29sdGlwPzogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgICAgfTtcbiAgICB9O1xuICAgIGZlZWRiYWNrPzoge1xuICAgICAgcG9zaXRpdmU/OiB7XG4gICAgICAgIHRvb2x0aXA/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgICB9O1xuICAgICAgbmVnYXRpdmU/OiB7XG4gICAgICAgIHRvb2x0aXA/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgICB9O1xuICAgIH07XG4gIH07XG4gIGJyYW5jaFBpY2tlcj86IHtcbiAgICBwcmV2aW91cz86IHtcbiAgICAgIHRvb2x0aXA/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICBuZXh0Pzoge1xuICAgICAgdG9vbHRpcD86IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgICB9O1xuICB9O1xuICBjb21wb3Nlcj86IHtcbiAgICBzZW5kPzpcbiAgICAgIHwge1xuICAgICAgICAgIHRvb2x0aXA/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgIHwgdW5kZWZpbmVkO1xuICAgIGNhbmNlbD86XG4gICAgICB8IHtcbiAgICAgICAgICB0b29sdGlwPzogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICB8IHVuZGVmaW5lZDtcbiAgICBhZGRBdHRhY2htZW50PzpcbiAgICAgIHwge1xuICAgICAgICAgIHRvb2x0aXA/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgIHwgdW5kZWZpbmVkO1xuICAgIHJlbW92ZUF0dGFjaG1lbnQ/OiB7XG4gICAgICB0b29sdGlwPzogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgIH07XG4gICAgaW5wdXQ/OiB7XG4gICAgICBwbGFjZWhvbGRlcj86IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgICB9O1xuICB9O1xuICBlZGl0Q29tcG9zZXI/OiB7XG4gICAgc2VuZD86IHtcbiAgICAgIGxhYmVsPzogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgIH07XG4gICAgY2FuY2VsPzoge1xuICAgICAgbGFiZWw/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgfTtcbiAgfTtcbiAgY29kZT86IHtcbiAgICBoZWFkZXI/OiB7XG4gICAgICBjb3B5Pzoge1xuICAgICAgICB0b29sdGlwPzogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgICAgfTtcbiAgICB9O1xuICB9O1xufTtcblxuY29uc3QgVGhyZWFkQ29uZmlnQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8VGhyZWFkQ29uZmlnPih7fSk7XG5cbmV4cG9ydCB0eXBlIFRocmVhZENvbmZpZyA9IHtcbiAgcnVudGltZT86IEFzc2lzdGFudFJ1bnRpbWUgfCB1bmRlZmluZWQ7XG5cbiAgYXNzaXN0YW50QXZhdGFyPzogQXZhdGFyUHJvcHMgfCB1bmRlZmluZWQ7XG5cbiAgd2VsY29tZT86IFRocmVhZFdlbGNvbWVDb25maWcgfCB1bmRlZmluZWQ7XG4gIGFzc2lzdGFudE1lc3NhZ2U/OiBBc3Npc3RhbnRNZXNzYWdlQ29uZmlnIHwgdW5kZWZpbmVkO1xuICB1c2VyTWVzc2FnZT86IFVzZXJNZXNzYWdlQ29uZmlnIHwgdW5kZWZpbmVkO1xuXG4gIGJyYW5jaFBpY2tlcj86IEJyYW5jaFBpY2tlckNvbmZpZyB8IHVuZGVmaW5lZDtcblxuICBjb21wb3Nlcj86IENvbXBvc2VyQ29uZmlnIHwgdW5kZWZpbmVkO1xuXG4gIHN0cmluZ3M/OiBTdHJpbmdzQ29uZmlnIHwgdW5kZWZpbmVkO1xuXG4gIHRvb2xzPzogQXNzaXN0YW50VG9vbFVJW10gfCB1bmRlZmluZWQ7IC8vIFRPRE8gYWRkIEFzc2lzdGFudFRvb2wgc3VwcG9ydFxuXG4gIGNvbXBvbmVudHM/OlxuICAgIHwge1xuICAgICAgICBDb21wb3Nlcj86IENvbXBvbmVudFR5cGUgfCB1bmRlZmluZWQ7XG4gICAgICAgIFRocmVhZFdlbGNvbWU/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgICAgfVxuICAgIHwgdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZVRocmVhZENvbmZpZyA9ICgpOiBPbWl0PFRocmVhZENvbmZpZywgXCJydW50aW1lXCI+ID0+IHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoVGhyZWFkQ29uZmlnQ29udGV4dCk7XG59O1xuXG5leHBvcnQgdHlwZSBUaHJlYWRDb25maWdQcm92aWRlclByb3BzID0gUHJvcHNXaXRoQ2hpbGRyZW48e1xuICBjb25maWc/OiBUaHJlYWRDb25maWcgfCB1bmRlZmluZWQ7XG59PjtcblxuZXhwb3J0IGNvbnN0IFRocmVhZENvbmZpZ1Byb3ZpZGVyOiBGQzxUaHJlYWRDb25maWdQcm92aWRlclByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICBjb25maWcsXG59KSA9PiB7XG4gIGNvbnN0IGhhc0Fzc2lzdGFudCA9ICEhdXNlQXNzaXN0YW50UnVudGltZSh7IG9wdGlvbmFsOiB0cnVlIH0pO1xuXG4gIGNvbnN0IGNvbmZpZ1Byb3ZpZGVyID1cbiAgICBjb25maWcgJiYgT2JqZWN0LmtleXMoY29uZmlnID8/IHt9KS5sZW5ndGggPiAwID8gKFxuICAgICAgPFRocmVhZENvbmZpZ0NvbnRleHQuUHJvdmlkZXIgdmFsdWU9e2NvbmZpZ30+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvVGhyZWFkQ29uZmlnQ29udGV4dC5Qcm92aWRlcj5cbiAgICApIDogKFxuICAgICAgPD57Y2hpbGRyZW59PC8+XG4gICAgKTtcbiAgaWYgKCFjb25maWc/LnJ1bnRpbWUpIHJldHVybiBjb25maWdQcm92aWRlcjtcblxuICBpZiAoaGFzQXNzaXN0YW50KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJZb3UgcHJvdmlkZWQgYSBydW50aW1lIHRvIDxUaHJlYWQ+IHdoaWxlIHNpbXVsYXRhbmVvdXNseSB1c2luZyA8QXNzaXN0YW50UnVudGltZVByb3ZpZGVyPi4gVGhpcyBpcyBub3QgYWxsb3dlZC5cIixcbiAgICApO1xuICB9XG4gIHJldHVybiAoXG4gICAgPEFzc2lzdGFudFJ1bnRpbWVQcm92aWRlciBydW50aW1lPXtjb25maWcucnVudGltZX0+XG4gICAgICB7Y29uZmlnUHJvdmlkZXJ9XG4gICAgPC9Bc3Npc3RhbnRSdW50aW1lUHJvdmlkZXI+XG4gICk7XG59O1xuXG5UaHJlYWRDb25maWdQcm92aWRlci5kaXNwbGF5TmFtZSA9IFwiVGhyZWFkQ29uZmlnUHJvdmlkZXJcIjtcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBmb3J3YXJkUmVmLCB0eXBlIEZDIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICBBdWRpb0xpbmVzSWNvbixcbiAgQ2hlY2tJY29uLFxuICBDb3B5SWNvbixcbiAgUmVmcmVzaEN3SWNvbixcbiAgU3RvcENpcmNsZUljb24sXG4gIFRodW1ic0Rvd25JY29uLFxuICBUaHVtYnNVcEljb24sXG59IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcbmltcG9ydCB7IEFjdGlvbkJhclByaW1pdGl2ZSwgTWVzc2FnZVByaW1pdGl2ZSB9IGZyb20gXCIuLi9wcmltaXRpdmVzXCI7XG5pbXBvcnQge1xuICBUb29sdGlwSWNvbkJ1dHRvbixcbiAgVG9vbHRpcEljb25CdXR0b25Qcm9wcyxcbn0gZnJvbSBcIi4vYmFzZS90b29sdGlwLWljb24tYnV0dG9uXCI7XG5pbXBvcnQgeyB3aXRoRGVmYXVsdHMgfSBmcm9tIFwiLi91dGlscy93aXRoRGVmYXVsdHNcIjtcbmltcG9ydCB7IHVzZVRocmVhZENvbmZpZyB9IGZyb20gXCIuL3RocmVhZC1jb25maWdcIjtcbmltcG9ydCB7IHVzZVRocmVhZCB9IGZyb20gXCIuLi9jb250ZXh0XCI7XG5cbmNvbnN0IHVzZUFsbG93Q29weSA9IChlbnN1cmVDYXBhYmlsaXR5ID0gZmFsc2UpID0+IHtcbiAgY29uc3QgeyBhc3Npc3RhbnRNZXNzYWdlOiB7IGFsbG93Q29weSA9IHRydWUgfSA9IHt9IH0gPSB1c2VUaHJlYWRDb25maWcoKTtcbiAgY29uc3QgY29weVN1cHBvcnRlZCA9IHVzZVRocmVhZCgodCkgPT4gdC5jYXBhYmlsaXRpZXMudW5zdGFibGVfY29weSk7XG4gIHJldHVybiBhbGxvd0NvcHkgJiYgKCFlbnN1cmVDYXBhYmlsaXR5IHx8IGNvcHlTdXBwb3J0ZWQpO1xufTtcblxuY29uc3QgdXNlQWxsb3dTcGVhayA9IChlbnN1cmVDYXBhYmlsaXR5ID0gZmFsc2UpID0+IHtcbiAgY29uc3QgeyBhc3Npc3RhbnRNZXNzYWdlOiB7IGFsbG93U3BlYWsgPSB0cnVlIH0gPSB7fSB9ID0gdXNlVGhyZWFkQ29uZmlnKCk7XG4gIGNvbnN0IHNwZWVjaFN1cHBvcnRlZCA9IHVzZVRocmVhZCgodCkgPT4gdC5jYXBhYmlsaXRpZXMuc3BlZWNoKTtcbiAgcmV0dXJuIGFsbG93U3BlYWsgJiYgKCFlbnN1cmVDYXBhYmlsaXR5IHx8IHNwZWVjaFN1cHBvcnRlZCk7XG59O1xuXG5jb25zdCB1c2VBbGxvd1JlbG9hZCA9IChlbnN1cmVDYXBhYmlsaXR5ID0gZmFsc2UpID0+IHtcbiAgY29uc3QgeyBhc3Npc3RhbnRNZXNzYWdlOiB7IGFsbG93UmVsb2FkID0gdHJ1ZSB9ID0ge30gfSA9IHVzZVRocmVhZENvbmZpZygpO1xuICBjb25zdCByZWxvYWRTdXBwb3J0ZWQgPSB1c2VUaHJlYWQoKHQpID0+IHQuY2FwYWJpbGl0aWVzLnJlbG9hZCk7XG4gIHJldHVybiBhbGxvd1JlbG9hZCAmJiAoIWVuc3VyZUNhcGFiaWxpdHkgfHwgcmVsb2FkU3VwcG9ydGVkKTtcbn07XG5cbmNvbnN0IHVzZUFsbG93RmVlZGJhY2tQb3NpdGl2ZSA9IChlbnN1cmVDYXBhYmlsaXR5ID0gZmFsc2UpID0+IHtcbiAgY29uc3QgeyBhc3Npc3RhbnRNZXNzYWdlOiB7IGFsbG93RmVlZGJhY2tQb3NpdGl2ZSA9IHRydWUgfSA9IHt9IH0gPVxuICAgIHVzZVRocmVhZENvbmZpZygpO1xuICBjb25zdCBmZWVkYmFja1N1cHBvcnRlZCA9IHVzZVRocmVhZCgodCkgPT4gdC5jYXBhYmlsaXRpZXMuZmVlZGJhY2spO1xuICByZXR1cm4gYWxsb3dGZWVkYmFja1Bvc2l0aXZlICYmICghZW5zdXJlQ2FwYWJpbGl0eSB8fCBmZWVkYmFja1N1cHBvcnRlZCk7XG59O1xuXG5jb25zdCB1c2VBbGxvd0ZlZWRiYWNrTmVnYXRpdmUgPSAoZW5zdXJlQ2FwYWJpbGl0eSA9IGZhbHNlKSA9PiB7XG4gIGNvbnN0IHsgYXNzaXN0YW50TWVzc2FnZTogeyBhbGxvd0ZlZWRiYWNrTmVnYXRpdmUgPSB0cnVlIH0gPSB7fSB9ID1cbiAgICB1c2VUaHJlYWRDb25maWcoKTtcbiAgY29uc3QgZmVlZGJhY2tTdXBwb3J0ZWQgPSB1c2VUaHJlYWQoKHQpID0+IHQuY2FwYWJpbGl0aWVzLmZlZWRiYWNrKTtcbiAgcmV0dXJuIGFsbG93RmVlZGJhY2tOZWdhdGl2ZSAmJiAoIWVuc3VyZUNhcGFiaWxpdHkgfHwgZmVlZGJhY2tTdXBwb3J0ZWQpO1xufTtcblxuY29uc3QgQXNzaXN0YW50QWN0aW9uQmFyOiBGQyA9ICgpID0+IHtcbiAgY29uc3QgYWxsb3dDb3B5ID0gdXNlQWxsb3dDb3B5KHRydWUpO1xuICBjb25zdCBhbGxvd1JlbG9hZCA9IHVzZUFsbG93UmVsb2FkKHRydWUpO1xuICBjb25zdCBhbGxvd1NwZWFrID0gdXNlQWxsb3dTcGVhayh0cnVlKTtcbiAgY29uc3QgYWxsb3dGZWVkYmFja1Bvc2l0aXZlID0gdXNlQWxsb3dGZWVkYmFja1Bvc2l0aXZlKHRydWUpO1xuICBjb25zdCBhbGxvd0ZlZWRiYWNrTmVnYXRpdmUgPSB1c2VBbGxvd0ZlZWRiYWNrTmVnYXRpdmUodHJ1ZSk7XG4gIGlmIChcbiAgICAhYWxsb3dDb3B5ICYmXG4gICAgIWFsbG93UmVsb2FkICYmXG4gICAgIWFsbG93U3BlYWsgJiZcbiAgICAhYWxsb3dGZWVkYmFja1Bvc2l0aXZlICYmXG4gICAgIWFsbG93RmVlZGJhY2tOZWdhdGl2ZVxuICApXG4gICAgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8QXNzaXN0YW50QWN0aW9uQmFyUm9vdFxuICAgICAgaGlkZVdoZW5SdW5uaW5nXG4gICAgICBhdXRvaGlkZT1cIm5vdC1sYXN0XCJcbiAgICAgIGF1dG9oaWRlRmxvYXQ9XCJzaW5nbGUtYnJhbmNoXCJcbiAgICA+XG4gICAgICB7YWxsb3dTcGVhayAmJiA8QXNzaXN0YW50QWN0aW9uQmFyU3BlZWNoQ29udHJvbCAvPn1cbiAgICAgIHthbGxvd0NvcHkgJiYgPEFzc2lzdGFudEFjdGlvbkJhckNvcHkgLz59XG4gICAgICB7YWxsb3dSZWxvYWQgJiYgPEFzc2lzdGFudEFjdGlvbkJhclJlbG9hZCAvPn1cbiAgICAgIHthbGxvd0ZlZWRiYWNrUG9zaXRpdmUgJiYgPEFzc2lzdGFudEFjdGlvbkJhckZlZWRiYWNrUG9zaXRpdmUgLz59XG4gICAgICB7YWxsb3dGZWVkYmFja05lZ2F0aXZlICYmIDxBc3Npc3RhbnRBY3Rpb25CYXJGZWVkYmFja05lZ2F0aXZlIC8+fVxuICAgIDwvQXNzaXN0YW50QWN0aW9uQmFyUm9vdD5cbiAgKTtcbn07XG5cbkFzc2lzdGFudEFjdGlvbkJhci5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50QWN0aW9uQmFyXCI7XG5cbmNvbnN0IEFzc2lzdGFudEFjdGlvbkJhclJvb3QgPSB3aXRoRGVmYXVsdHMoQWN0aW9uQmFyUHJpbWl0aXZlLlJvb3QsIHtcbiAgY2xhc3NOYW1lOiBcImF1aS1hc3Npc3RhbnQtYWN0aW9uLWJhci1yb290XCIsXG59KTtcblxuQXNzaXN0YW50QWN0aW9uQmFyUm9vdC5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50QWN0aW9uQmFyUm9vdFwiO1xuXG5uYW1lc3BhY2UgQXNzaXN0YW50QWN0aW9uQmFyQ29weSB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBBY3Rpb25CYXJQcmltaXRpdmUuQ29weS5FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFBhcnRpYWw8VG9vbHRpcEljb25CdXR0b25Qcm9wcz4gJiB7XG4gICAgY29waWVkRHVyYXRpb24/OiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIH07XG59XG5cbmNvbnN0IEFzc2lzdGFudEFjdGlvbkJhckNvcHkgPSBmb3J3YXJkUmVmPFxuICBBc3Npc3RhbnRBY3Rpb25CYXJDb3B5LkVsZW1lbnQsXG4gIEFzc2lzdGFudEFjdGlvbkJhckNvcHkuUHJvcHNcbj4oKHsgY29waWVkRHVyYXRpb24sIC4uLnByb3BzIH0sIHJlZikgPT4ge1xuICBjb25zdCB7XG4gICAgc3RyaW5nczoge1xuICAgICAgYXNzaXN0YW50TWVzc2FnZTogeyBjb3B5OiB7IHRvb2x0aXAgPSBcIkNvcHlcIiB9ID0ge30gfSA9IHt9LFxuICAgIH0gPSB7fSxcbiAgfSA9IHVzZVRocmVhZENvbmZpZygpO1xuXG4gIHJldHVybiAoXG4gICAgPEFjdGlvbkJhclByaW1pdGl2ZS5Db3B5IGNvcGllZER1cmF0aW9uPXtjb3BpZWREdXJhdGlvbn0gYXNDaGlsZD5cbiAgICAgIDxUb29sdGlwSWNvbkJ1dHRvbiB0b29sdGlwPXt0b29sdGlwfSB7Li4ucHJvcHN9IHJlZj17cmVmfT5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVuID8/IChcbiAgICAgICAgICA8PlxuICAgICAgICAgICAgPE1lc3NhZ2VQcmltaXRpdmUuSWYgY29waWVkPlxuICAgICAgICAgICAgICA8Q2hlY2tJY29uIC8+XG4gICAgICAgICAgICA8L01lc3NhZ2VQcmltaXRpdmUuSWY+XG4gICAgICAgICAgICA8TWVzc2FnZVByaW1pdGl2ZS5JZiBjb3BpZWQ9e2ZhbHNlfT5cbiAgICAgICAgICAgICAgPENvcHlJY29uIC8+XG4gICAgICAgICAgICA8L01lc3NhZ2VQcmltaXRpdmUuSWY+XG4gICAgICAgICAgPC8+XG4gICAgICAgICl9XG4gICAgICA8L1Rvb2x0aXBJY29uQnV0dG9uPlxuICAgIDwvQWN0aW9uQmFyUHJpbWl0aXZlLkNvcHk+XG4gICk7XG59KTtcblxuQXNzaXN0YW50QWN0aW9uQmFyQ29weS5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50QWN0aW9uQmFyQ29weVwiO1xuXG5jb25zdCBBc3Npc3RhbnRBY3Rpb25CYXJTcGVlY2hDb250cm9sOiBGQyA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPE1lc3NhZ2VQcmltaXRpdmUuSWYgc3BlYWtpbmc9e2ZhbHNlfT5cbiAgICAgICAgPEFzc2lzdGFudEFjdGlvbkJhclNwZWFrIC8+XG4gICAgICA8L01lc3NhZ2VQcmltaXRpdmUuSWY+XG4gICAgICA8TWVzc2FnZVByaW1pdGl2ZS5JZiBzcGVha2luZz5cbiAgICAgICAgPEFzc2lzdGFudEFjdGlvbkJhclN0b3BTcGVha2luZyAvPlxuICAgICAgPC9NZXNzYWdlUHJpbWl0aXZlLklmPlxuICAgIDwvPlxuICApO1xufTtcblxubmFtZXNwYWNlIEFzc2lzdGFudEFjdGlvbkJhclNwZWFrIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEFjdGlvbkJhclByaW1pdGl2ZS5TcGVhay5FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFBhcnRpYWw8VG9vbHRpcEljb25CdXR0b25Qcm9wcz47XG59XG5cbmNvbnN0IEFzc2lzdGFudEFjdGlvbkJhclNwZWFrID0gZm9yd2FyZFJlZjxcbiAgQXNzaXN0YW50QWN0aW9uQmFyU3BlYWsuRWxlbWVudCxcbiAgQXNzaXN0YW50QWN0aW9uQmFyU3BlYWsuUHJvcHNcbj4oKHByb3BzLCByZWYpID0+IHtcbiAgY29uc3Qge1xuICAgIHN0cmluZ3M6IHtcbiAgICAgIGFzc2lzdGFudE1lc3NhZ2U6IHsgc3BlYWs6IHsgdG9vbHRpcCA9IFwiUmVhZCBhbG91ZFwiIH0gPSB7fSB9ID0ge30sXG4gICAgfSA9IHt9LFxuICB9ID0gdXNlVGhyZWFkQ29uZmlnKCk7XG4gIGNvbnN0IGFsbG93U3BlYWsgPSB1c2VBbGxvd1NwZWFrKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8QWN0aW9uQmFyUHJpbWl0aXZlLlNwZWFrIGRpc2FibGVkPXshYWxsb3dTcGVha30gYXNDaGlsZD5cbiAgICAgIDxUb29sdGlwSWNvbkJ1dHRvbiB0b29sdGlwPXt0b29sdGlwfSB7Li4ucHJvcHN9IHJlZj17cmVmfT5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVuID8/IDxBdWRpb0xpbmVzSWNvbiAvPn1cbiAgICAgIDwvVG9vbHRpcEljb25CdXR0b24+XG4gICAgPC9BY3Rpb25CYXJQcmltaXRpdmUuU3BlYWs+XG4gICk7XG59KTtcblxuQXNzaXN0YW50QWN0aW9uQmFyU3BlYWsuZGlzcGxheU5hbWUgPSBcIkFzc2lzdGFudEFjdGlvbkJhclNwZWFrXCI7XG5cbm5hbWVzcGFjZSBBc3Npc3RhbnRBY3Rpb25CYXJTdG9wU3BlYWtpbmcge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gQWN0aW9uQmFyUHJpbWl0aXZlLlN0b3BTcGVha2luZy5FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFBhcnRpYWw8VG9vbHRpcEljb25CdXR0b25Qcm9wcz47XG59XG5cbmNvbnN0IEFzc2lzdGFudEFjdGlvbkJhclN0b3BTcGVha2luZyA9IGZvcndhcmRSZWY8XG4gIEFzc2lzdGFudEFjdGlvbkJhclN0b3BTcGVha2luZy5FbGVtZW50LFxuICBBc3Npc3RhbnRBY3Rpb25CYXJTdG9wU3BlYWtpbmcuUHJvcHNcbj4oKHByb3BzLCByZWYpID0+IHtcbiAgY29uc3Qge1xuICAgIHN0cmluZ3M6IHtcbiAgICAgIGFzc2lzdGFudE1lc3NhZ2U6IHtcbiAgICAgICAgc3BlYWs6IHsgc3RvcDogeyB0b29sdGlwOiBzdG9wVG9vbHRpcCA9IFwiU3RvcFwiIH0gPSB7fSB9ID0ge30sXG4gICAgICB9ID0ge30sXG4gICAgfSA9IHt9LFxuICB9ID0gdXNlVGhyZWFkQ29uZmlnKCk7XG4gIGNvbnN0IGFsbG93U3BlYWsgPSB1c2VBbGxvd1NwZWFrKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8QWN0aW9uQmFyUHJpbWl0aXZlLlN0b3BTcGVha2luZyBkaXNhYmxlZD17IWFsbG93U3BlYWt9IGFzQ2hpbGQ+XG4gICAgICA8VG9vbHRpcEljb25CdXR0b24gdG9vbHRpcD17c3RvcFRvb2x0aXB9IHsuLi5wcm9wc30gcmVmPXtyZWZ9PlxuICAgICAgICB7cHJvcHMuY2hpbGRyZW4gPz8gPFN0b3BDaXJjbGVJY29uIC8+fVxuICAgICAgPC9Ub29sdGlwSWNvbkJ1dHRvbj5cbiAgICA8L0FjdGlvbkJhclByaW1pdGl2ZS5TdG9wU3BlYWtpbmc+XG4gICk7XG59KTtcblxuQXNzaXN0YW50QWN0aW9uQmFyU3RvcFNwZWFraW5nLmRpc3BsYXlOYW1lID0gXCJBc3Npc3RhbnRBY3Rpb25CYXJTdG9wU3BlYWtpbmdcIjtcblxubmFtZXNwYWNlIEFzc2lzdGFudEFjdGlvbkJhclJlbG9hZCB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBBY3Rpb25CYXJQcmltaXRpdmUuUmVsb2FkLkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUGFydGlhbDxUb29sdGlwSWNvbkJ1dHRvblByb3BzPjtcbn1cblxuY29uc3QgQXNzaXN0YW50QWN0aW9uQmFyUmVsb2FkID0gZm9yd2FyZFJlZjxcbiAgQXNzaXN0YW50QWN0aW9uQmFyUmVsb2FkLkVsZW1lbnQsXG4gIEFzc2lzdGFudEFjdGlvbkJhclJlbG9hZC5Qcm9wc1xuPigocHJvcHMsIHJlZikgPT4ge1xuICBjb25zdCB7XG4gICAgc3RyaW5nczoge1xuICAgICAgYXNzaXN0YW50TWVzc2FnZTogeyByZWxvYWQ6IHsgdG9vbHRpcCA9IFwiUmVmcmVzaFwiIH0gPSB7fSB9ID0ge30sXG4gICAgfSA9IHt9LFxuICB9ID0gdXNlVGhyZWFkQ29uZmlnKCk7XG4gIGNvbnN0IGFsbG93UmVsb2FkID0gdXNlQWxsb3dSZWxvYWQoKTtcbiAgcmV0dXJuIChcbiAgICA8QWN0aW9uQmFyUHJpbWl0aXZlLlJlbG9hZCBkaXNhYmxlZD17IWFsbG93UmVsb2FkfSBhc0NoaWxkPlxuICAgICAgPFRvb2x0aXBJY29uQnV0dG9uIHRvb2x0aXA9e3Rvb2x0aXB9IHsuLi5wcm9wc30gcmVmPXtyZWZ9PlxuICAgICAgICB7cHJvcHMuY2hpbGRyZW4gPz8gPFJlZnJlc2hDd0ljb24gLz59XG4gICAgICA8L1Rvb2x0aXBJY29uQnV0dG9uPlxuICAgIDwvQWN0aW9uQmFyUHJpbWl0aXZlLlJlbG9hZD5cbiAgKTtcbn0pO1xuXG5Bc3Npc3RhbnRBY3Rpb25CYXJSZWxvYWQuZGlzcGxheU5hbWUgPSBcIkFzc2lzdGFudEFjdGlvbkJhclJlbG9hZFwiO1xuXG5uYW1lc3BhY2UgQXNzaXN0YW50QWN0aW9uQmFyRmVlZGJhY2tQb3NpdGl2ZSB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBBY3Rpb25CYXJQcmltaXRpdmUuRmVlZGJhY2tQb3NpdGl2ZS5FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFBhcnRpYWw8VG9vbHRpcEljb25CdXR0b25Qcm9wcz47XG59XG5cbmNvbnN0IEFzc2lzdGFudEFjdGlvbkJhckZlZWRiYWNrUG9zaXRpdmUgPSBmb3J3YXJkUmVmPFxuICBBc3Npc3RhbnRBY3Rpb25CYXJGZWVkYmFja1Bvc2l0aXZlLkVsZW1lbnQsXG4gIEFzc2lzdGFudEFjdGlvbkJhckZlZWRiYWNrUG9zaXRpdmUuUHJvcHNcbj4oKHByb3BzLCByZWYpID0+IHtcbiAgY29uc3Qge1xuICAgIHN0cmluZ3M6IHtcbiAgICAgIGFzc2lzdGFudE1lc3NhZ2U6IHtcbiAgICAgICAgZmVlZGJhY2s6IHsgcG9zaXRpdmU6IHsgdG9vbHRpcCA9IFwiR29vZCByZXNwb25zZVwiIH0gPSB7fSB9ID0ge30sXG4gICAgICB9ID0ge30sXG4gICAgfSA9IHt9LFxuICB9ID0gdXNlVGhyZWFkQ29uZmlnKCk7XG4gIGNvbnN0IGFsbG93RmVlZGJhY2tQb3NpdGl2ZSA9IHVzZUFsbG93RmVlZGJhY2tQb3NpdGl2ZSgpO1xuICByZXR1cm4gKFxuICAgIDxBY3Rpb25CYXJQcmltaXRpdmUuRmVlZGJhY2tQb3NpdGl2ZVxuICAgICAgZGlzYWJsZWQ9eyFhbGxvd0ZlZWRiYWNrUG9zaXRpdmV9XG4gICAgICBjbGFzc05hbWU9XCJhdWktYXNzaXN0YW50LWFjdGlvbi1iYXItZmVlZGJhY2stcG9zaXRpdmVcIlxuICAgICAgYXNDaGlsZFxuICAgID5cbiAgICAgIDxUb29sdGlwSWNvbkJ1dHRvbiB0b29sdGlwPXt0b29sdGlwfSB7Li4ucHJvcHN9IHJlZj17cmVmfT5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVuID8/IDxUaHVtYnNVcEljb24gLz59XG4gICAgICA8L1Rvb2x0aXBJY29uQnV0dG9uPlxuICAgIDwvQWN0aW9uQmFyUHJpbWl0aXZlLkZlZWRiYWNrUG9zaXRpdmU+XG4gICk7XG59KTtcblxuQXNzaXN0YW50QWN0aW9uQmFyRmVlZGJhY2tQb3NpdGl2ZS5kaXNwbGF5TmFtZSA9XG4gIFwiQXNzaXN0YW50QWN0aW9uQmFyRmVlZGJhY2tQb3NpdGl2ZVwiO1xuXG5uYW1lc3BhY2UgQXNzaXN0YW50QWN0aW9uQmFyRmVlZGJhY2tOZWdhdGl2ZSB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBBY3Rpb25CYXJQcmltaXRpdmUuRmVlZGJhY2tOZWdhdGl2ZS5FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFBhcnRpYWw8VG9vbHRpcEljb25CdXR0b25Qcm9wcz47XG59XG5cbmNvbnN0IEFzc2lzdGFudEFjdGlvbkJhckZlZWRiYWNrTmVnYXRpdmUgPSBmb3J3YXJkUmVmPFxuICBBc3Npc3RhbnRBY3Rpb25CYXJGZWVkYmFja05lZ2F0aXZlLkVsZW1lbnQsXG4gIEFzc2lzdGFudEFjdGlvbkJhckZlZWRiYWNrTmVnYXRpdmUuUHJvcHNcbj4oKHByb3BzLCByZWYpID0+IHtcbiAgY29uc3Qge1xuICAgIHN0cmluZ3M6IHtcbiAgICAgIGFzc2lzdGFudE1lc3NhZ2U6IHtcbiAgICAgICAgZmVlZGJhY2s6IHsgbmVnYXRpdmU6IHsgdG9vbHRpcCA9IFwiQmFkIHJlc3BvbnNlXCIgfSA9IHt9IH0gPSB7fSxcbiAgICAgIH0gPSB7fSxcbiAgICB9ID0ge30sXG4gIH0gPSB1c2VUaHJlYWRDb25maWcoKTtcbiAgY29uc3QgYWxsb3dGZWVkYmFja05lZ2F0aXZlID0gdXNlQWxsb3dGZWVkYmFja05lZ2F0aXZlKCk7XG4gIHJldHVybiAoXG4gICAgPEFjdGlvbkJhclByaW1pdGl2ZS5GZWVkYmFja05lZ2F0aXZlXG4gICAgICBkaXNhYmxlZD17IWFsbG93RmVlZGJhY2tOZWdhdGl2ZX1cbiAgICAgIGNsYXNzTmFtZT1cImF1aS1hc3Npc3RhbnQtYWN0aW9uLWJhci1mZWVkYmFjay1uZWdhdGl2ZVwiXG4gICAgICBhc0NoaWxkXG4gICAgPlxuICAgICAgPFRvb2x0aXBJY29uQnV0dG9uIHRvb2x0aXA9e3Rvb2x0aXB9IHsuLi5wcm9wc30gcmVmPXtyZWZ9PlxuICAgICAgICB7cHJvcHMuY2hpbGRyZW4gPz8gPFRodW1ic0Rvd25JY29uIC8+fVxuICAgICAgPC9Ub29sdGlwSWNvbkJ1dHRvbj5cbiAgICA8L0FjdGlvbkJhclByaW1pdGl2ZS5GZWVkYmFja05lZ2F0aXZlPlxuICApO1xufSk7XG5cbkFzc2lzdGFudEFjdGlvbkJhckZlZWRiYWNrTmVnYXRpdmUuZGlzcGxheU5hbWUgPVxuICBcIkFzc2lzdGFudEFjdGlvbkJhckZlZWRiYWNrTmVnYXRpdmVcIjtcblxuY29uc3QgZXhwb3J0cyA9IHtcbiAgUm9vdDogQXNzaXN0YW50QWN0aW9uQmFyUm9vdCxcbiAgUmVsb2FkOiBBc3Npc3RhbnRBY3Rpb25CYXJSZWxvYWQsXG4gIENvcHk6IEFzc2lzdGFudEFjdGlvbkJhckNvcHksXG4gIFNwZWFrOiBBc3Npc3RhbnRBY3Rpb25CYXJTcGVhayxcbiAgU3RvcFNwZWFraW5nOiBBc3Npc3RhbnRBY3Rpb25CYXJTdG9wU3BlYWtpbmcsXG4gIFNwZWVjaENvbnRyb2w6IEFzc2lzdGFudEFjdGlvbkJhclNwZWVjaENvbnRyb2wsXG4gIEZlZWRiYWNrUG9zaXRpdmU6IEFzc2lzdGFudEFjdGlvbkJhckZlZWRiYWNrUG9zaXRpdmUsXG4gIEZlZWRiYWNrTmVnYXRpdmU6IEFzc2lzdGFudEFjdGlvbkJhckZlZWRiYWNrTmVnYXRpdmUsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBPYmplY3QuYXNzaWduKFxuICBBc3Npc3RhbnRBY3Rpb25CYXIsXG4gIGV4cG9ydHMsXG4pIGFzIHR5cGVvZiBBc3Npc3RhbnRBY3Rpb25CYXIgJiB0eXBlb2YgZXhwb3J0cztcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYsIGZvcndhcmRSZWYsIHVzZU1lbW8sIHR5cGUgRkMgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IE1lc3NhZ2VQcmltaXRpdmUgfSBmcm9tIFwiLi4vcHJpbWl0aXZlc1wiO1xuaW1wb3J0IEJyYW5jaFBpY2tlciBmcm9tIFwiLi9icmFuY2gtcGlja2VyXCI7XG5pbXBvcnQgeyBBdmF0YXIgfSBmcm9tIFwiLi9iYXNlL2F2YXRhclwiO1xuaW1wb3J0IHsgd2l0aERlZmF1bHRzIH0gZnJvbSBcIi4vdXRpbHMvd2l0aERlZmF1bHRzXCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRDb25maWcgfSBmcm9tIFwiLi90aHJlYWQtY29uZmlnXCI7XG5pbXBvcnQgQXNzaXN0YW50QWN0aW9uQmFyIGZyb20gXCIuL2Fzc2lzdGFudC1hY3Rpb24tYmFyXCI7XG5pbXBvcnQgQ29udGVudFBhcnQgZnJvbSBcIi4vY29udGVudC1wYXJ0XCI7XG5cbmNvbnN0IEFzc2lzdGFudE1lc3NhZ2U6IEZDID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxBc3Npc3RhbnRNZXNzYWdlUm9vdD5cbiAgICAgIDxBc3Npc3RhbnRNZXNzYWdlQXZhdGFyIC8+XG4gICAgICA8QXNzaXN0YW50TWVzc2FnZUNvbnRlbnQgLz5cbiAgICAgIDxCcmFuY2hQaWNrZXIgLz5cbiAgICAgIDxBc3Npc3RhbnRBY3Rpb25CYXIgLz5cbiAgICA8L0Fzc2lzdGFudE1lc3NhZ2VSb290PlxuICApO1xufTtcblxuQXNzaXN0YW50TWVzc2FnZS5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50TWVzc2FnZVwiO1xuXG5jb25zdCBBc3Npc3RhbnRNZXNzYWdlQXZhdGFyOiBGQyA9ICgpID0+IHtcbiAgY29uc3QgeyBhc3Npc3RhbnRBdmF0YXI6IGF2YXRhciA9IHsgZmFsbGJhY2s6IFwiQVwiIH0gfSA9IHVzZVRocmVhZENvbmZpZygpO1xuICByZXR1cm4gPEF2YXRhciB7Li4uYXZhdGFyfSAvPjtcbn07XG5cbmNvbnN0IEFzc2lzdGFudE1lc3NhZ2VSb290ID0gd2l0aERlZmF1bHRzKE1lc3NhZ2VQcmltaXRpdmUuUm9vdCwge1xuICBjbGFzc05hbWU6IFwiYXVpLWFzc2lzdGFudC1tZXNzYWdlLXJvb3RcIixcbn0pO1xuXG5Bc3Npc3RhbnRNZXNzYWdlUm9vdC5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50TWVzc2FnZVJvb3RcIjtcblxuY29uc3QgQXNzaXN0YW50TWVzc2FnZUNvbnRlbnRXcmFwcGVyID0gd2l0aERlZmF1bHRzKFwiZGl2XCIsIHtcbiAgY2xhc3NOYW1lOiBcImF1aS1hc3Npc3RhbnQtbWVzc2FnZS1jb250ZW50XCIsXG59KTtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYEFzc2lzdGFudE1lc3NhZ2UuQ29udGVudC5Qcm9wc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBBc3Npc3RhbnRNZXNzYWdlQ29udGVudFByb3BzID0gQXNzaXN0YW50TWVzc2FnZUNvbnRlbnQuUHJvcHM7XG5cbm5hbWVzcGFjZSBBc3Npc3RhbnRNZXNzYWdlQ29udGVudCB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBIVE1MRGl2RWxlbWVudDtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBNZXNzYWdlUHJpbWl0aXZlLkNvbnRlbnQuUHJvcHMgJlxuICAgIENvbXBvbmVudFByb3BzV2l0aG91dFJlZjxcImRpdlwiPjtcbn1cblxuY29uc3QgQXNzaXN0YW50TWVzc2FnZUNvbnRlbnQgPSBmb3J3YXJkUmVmPFxuICBBc3Npc3RhbnRNZXNzYWdlQ29udGVudC5FbGVtZW50LFxuICBBc3Npc3RhbnRNZXNzYWdlQ29udGVudC5Qcm9wc1xuPigoeyBjb21wb25lbnRzOiBjb21wb25lbnRzUHJvcCwgLi4ucmVzdCB9LCByZWYpID0+IHtcbiAgY29uc3QgeyB0b29scywgYXNzaXN0YW50TWVzc2FnZTogeyBjb21wb25lbnRzID0ge30gfSA9IHt9IH0gPVxuICAgIHVzZVRocmVhZENvbmZpZygpO1xuXG4gIGNvbnN0IHRvb2xzQ29tcG9uZW50cyA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGJ5X25hbWU6ICF0b29sc1xuICAgICAgICA/IHVuZGVmaW5lZFxuICAgICAgICA6IE9iamVjdC5mcm9tRW50cmllcyhcbiAgICAgICAgICAgIHRvb2xzLm1hcCgodCkgPT4gW1xuICAgICAgICAgICAgICB0LnVuc3RhYmxlX3Rvb2wudG9vbE5hbWUsXG4gICAgICAgICAgICAgIHQudW5zdGFibGVfdG9vbC5yZW5kZXIsXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICApLFxuICAgICAgRmFsbGJhY2s6IGNvbXBvbmVudHMuVG9vbEZhbGxiYWNrLFxuICAgIH0pLFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgICBbLi4uKHRvb2xzID8/IFtdKSwgY29tcG9uZW50cy5Ub29sRmFsbGJhY2tdLFxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPEFzc2lzdGFudE1lc3NhZ2VDb250ZW50V3JhcHBlciB7Li4ucmVzdH0gcmVmPXtyZWZ9PlxuICAgICAgPE1lc3NhZ2VQcmltaXRpdmUuQ29udGVudFxuICAgICAgICBjb21wb25lbnRzPXt7XG4gICAgICAgICAgLi4uY29tcG9uZW50c1Byb3AsXG4gICAgICAgICAgVGV4dDogY29tcG9uZW50c1Byb3A/LlRleHQgPz8gY29tcG9uZW50cy5UZXh0ID8/IENvbnRlbnRQYXJ0LlRleHQsXG4gICAgICAgICAgdG9vbHM6IHRvb2xzQ29tcG9uZW50cyxcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgPC9Bc3Npc3RhbnRNZXNzYWdlQ29udGVudFdyYXBwZXI+XG4gICk7XG59KTtcblxuQXNzaXN0YW50TWVzc2FnZUNvbnRlbnQuZGlzcGxheU5hbWUgPSBcIkFzc2lzdGFudE1lc3NhZ2VDb250ZW50XCI7XG5cbmNvbnN0IGV4cG9ydHMgPSB7XG4gIFJvb3Q6IEFzc2lzdGFudE1lc3NhZ2VSb290LFxuICBBdmF0YXI6IEFzc2lzdGFudE1lc3NhZ2VBdmF0YXIsXG4gIENvbnRlbnQ6IEFzc2lzdGFudE1lc3NhZ2VDb250ZW50LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmFzc2lnbihcbiAgQXNzaXN0YW50TWVzc2FnZSxcbiAgZXhwb3J0cyxcbikgYXMgdHlwZW9mIEFzc2lzdGFudE1lc3NhZ2UgJiB0eXBlb2YgZXhwb3J0cztcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYsIGZvcndhcmRSZWYsIHR5cGUgRkMgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IENoZXZyb25MZWZ0SWNvbiwgQ2hldnJvblJpZ2h0SWNvbiB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcblxuaW1wb3J0IHtcbiAgVG9vbHRpcEljb25CdXR0b24sXG4gIFRvb2x0aXBJY29uQnV0dG9uUHJvcHMsXG59IGZyb20gXCIuL2Jhc2UvdG9vbHRpcC1pY29uLWJ1dHRvblwiO1xuaW1wb3J0IHsgd2l0aERlZmF1bHRzIH0gZnJvbSBcIi4vdXRpbHMvd2l0aERlZmF1bHRzXCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRDb25maWcgfSBmcm9tIFwiLi90aHJlYWQtY29uZmlnXCI7XG5pbXBvcnQgeyBCcmFuY2hQaWNrZXJQcmltaXRpdmUgfSBmcm9tIFwiLi4vcHJpbWl0aXZlc1wiO1xuaW1wb3J0IHsgdXNlVGhyZWFkIH0gZnJvbSBcIi4uL2NvbnRleHRcIjtcblxuY29uc3QgdXNlQWxsb3dCcmFuY2hQaWNrZXIgPSAoZW5zdXJlQ2FwYWJpbGl0eSA9IGZhbHNlKSA9PiB7XG4gIGNvbnN0IHsgYnJhbmNoUGlja2VyOiB7IGFsbG93QnJhbmNoUGlja2VyID0gdHJ1ZSB9ID0ge30gfSA9IHVzZVRocmVhZENvbmZpZygpO1xuICBjb25zdCBicmFuY2hQaWNrZXJTdXBwb3J0ZWQgPSB1c2VUaHJlYWQoKHQpID0+IHQuY2FwYWJpbGl0aWVzLmVkaXQpO1xuICByZXR1cm4gYWxsb3dCcmFuY2hQaWNrZXIgJiYgKCFlbnN1cmVDYXBhYmlsaXR5IHx8IGJyYW5jaFBpY2tlclN1cHBvcnRlZCk7XG59O1xuXG5jb25zdCBCcmFuY2hQaWNrZXI6IEZDID0gKCkgPT4ge1xuICBjb25zdCBhbGxvd0JyYW5jaFBpY2tlciA9IHVzZUFsbG93QnJhbmNoUGlja2VyKHRydWUpO1xuICBpZiAoIWFsbG93QnJhbmNoUGlja2VyKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIChcbiAgICA8QnJhbmNoUGlja2VyUm9vdCBoaWRlV2hlblNpbmdsZUJyYW5jaD5cbiAgICAgIDxCcmFuY2hQaWNrZXJQcmV2aW91cyAvPlxuICAgICAgPEJyYW5jaFBpY2tlclN0YXRlIC8+XG4gICAgICA8QnJhbmNoUGlja2VyTmV4dCAvPlxuICAgIDwvQnJhbmNoUGlja2VyUm9vdD5cbiAgKTtcbn07XG5cbkJyYW5jaFBpY2tlci5kaXNwbGF5TmFtZSA9IFwiQnJhbmNoUGlja2VyXCI7XG5cbmNvbnN0IEJyYW5jaFBpY2tlclJvb3QgPSB3aXRoRGVmYXVsdHMoQnJhbmNoUGlja2VyUHJpbWl0aXZlLlJvb3QsIHtcbiAgY2xhc3NOYW1lOiBcImF1aS1icmFuY2gtcGlja2VyLXJvb3RcIixcbn0pO1xuXG5CcmFuY2hQaWNrZXJSb290LmRpc3BsYXlOYW1lID0gXCJCcmFuY2hQaWNrZXJSb290XCI7XG5cbm5hbWVzcGFjZSBCcmFuY2hQaWNrZXJQcmV2aW91cyB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBCcmFuY2hQaWNrZXJQcmltaXRpdmUuUHJldmlvdXMuRWxlbWVudDtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBQYXJ0aWFsPFRvb2x0aXBJY29uQnV0dG9uUHJvcHM+O1xufVxuXG5jb25zdCBCcmFuY2hQaWNrZXJQcmV2aW91cyA9IGZvcndhcmRSZWY8XG4gIEJyYW5jaFBpY2tlclByZXZpb3VzLkVsZW1lbnQsXG4gIEJyYW5jaFBpY2tlclByZXZpb3VzLlByb3BzXG4+KChwcm9wcywgcmVmKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBzdHJpbmdzOiB7XG4gICAgICBicmFuY2hQaWNrZXI6IHsgcHJldmlvdXM6IHsgdG9vbHRpcCA9IFwiUHJldmlvdXNcIiB9ID0ge30gfSA9IHt9LFxuICAgIH0gPSB7fSxcbiAgfSA9IHVzZVRocmVhZENvbmZpZygpO1xuICBjb25zdCBhbGxvd0JyYW5jaFBpY2tlciA9IHVzZUFsbG93QnJhbmNoUGlja2VyKCk7XG4gIHJldHVybiAoXG4gICAgPEJyYW5jaFBpY2tlclByaW1pdGl2ZS5QcmV2aW91cyBkaXNhYmxlZD17IWFsbG93QnJhbmNoUGlja2VyfSBhc0NoaWxkPlxuICAgICAgPFRvb2x0aXBJY29uQnV0dG9uIHRvb2x0aXA9e3Rvb2x0aXB9IHsuLi5wcm9wc30gcmVmPXtyZWZ9PlxuICAgICAgICB7cHJvcHMuY2hpbGRyZW4gPz8gPENoZXZyb25MZWZ0SWNvbiAvPn1cbiAgICAgIDwvVG9vbHRpcEljb25CdXR0b24+XG4gICAgPC9CcmFuY2hQaWNrZXJQcmltaXRpdmUuUHJldmlvdXM+XG4gICk7XG59KTtcblxuQnJhbmNoUGlja2VyUHJldmlvdXMuZGlzcGxheU5hbWUgPSBcIkJyYW5jaFBpY2tlclByZXZpb3VzXCI7XG5cbmNvbnN0IEJyYW5jaFBpY2tlclN0YXRlV3JhcHBlciA9IHdpdGhEZWZhdWx0cyhcInNwYW5cIiwge1xuICBjbGFzc05hbWU6IFwiYXVpLWJyYW5jaC1waWNrZXItc3RhdGVcIixcbn0pO1xuXG5uYW1lc3BhY2UgQnJhbmNoUGlja2VyU3RhdGUge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gSFRNTFNwYW5FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IENvbXBvbmVudFByb3BzV2l0aG91dFJlZjxcInNwYW5cIj47XG59XG5cbmNvbnN0IEJyYW5jaFBpY2tlclN0YXRlID0gZm9yd2FyZFJlZjxcbiAgQnJhbmNoUGlja2VyU3RhdGUuRWxlbWVudCxcbiAgQnJhbmNoUGlja2VyU3RhdGUuUHJvcHNcbj4oKHByb3BzLCByZWYpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8QnJhbmNoUGlja2VyU3RhdGVXcmFwcGVyIHsuLi5wcm9wc30gcmVmPXtyZWZ9PlxuICAgICAgPEJyYW5jaFBpY2tlclByaW1pdGl2ZS5OdW1iZXIgLz4gLyA8QnJhbmNoUGlja2VyUHJpbWl0aXZlLkNvdW50IC8+XG4gICAgPC9CcmFuY2hQaWNrZXJTdGF0ZVdyYXBwZXI+XG4gICk7XG59KTtcblxuQnJhbmNoUGlja2VyU3RhdGUuZGlzcGxheU5hbWUgPSBcIkJyYW5jaFBpY2tlclN0YXRlXCI7XG5cbm5hbWVzcGFjZSBCcmFuY2hQaWNrZXJOZXh0IHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEJyYW5jaFBpY2tlclByaW1pdGl2ZS5OZXh0LkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUGFydGlhbDxUb29sdGlwSWNvbkJ1dHRvblByb3BzPjtcbn1cblxuY29uc3QgQnJhbmNoUGlja2VyTmV4dCA9IGZvcndhcmRSZWY8XG4gIEJyYW5jaFBpY2tlck5leHQuRWxlbWVudCxcbiAgQnJhbmNoUGlja2VyTmV4dC5Qcm9wc1xuPigocHJvcHMsIHJlZikgPT4ge1xuICBjb25zdCB7XG4gICAgc3RyaW5nczogeyBicmFuY2hQaWNrZXI6IHsgbmV4dDogeyB0b29sdGlwID0gXCJOZXh0XCIgfSA9IHt9IH0gPSB7fSB9ID0ge30sXG4gIH0gPSB1c2VUaHJlYWRDb25maWcoKTtcbiAgY29uc3QgYWxsb3dCcmFuY2hQaWNrZXIgPSB1c2VBbGxvd0JyYW5jaFBpY2tlcigpO1xuICByZXR1cm4gKFxuICAgIDxCcmFuY2hQaWNrZXJQcmltaXRpdmUuTmV4dCBkaXNhYmxlZD17IWFsbG93QnJhbmNoUGlja2VyfSBhc0NoaWxkPlxuICAgICAgPFRvb2x0aXBJY29uQnV0dG9uIHRvb2x0aXA9e3Rvb2x0aXB9IHsuLi5wcm9wc30gcmVmPXtyZWZ9PlxuICAgICAgICB7cHJvcHMuY2hpbGRyZW4gPz8gPENoZXZyb25SaWdodEljb24gLz59XG4gICAgICA8L1Rvb2x0aXBJY29uQnV0dG9uPlxuICAgIDwvQnJhbmNoUGlja2VyUHJpbWl0aXZlLk5leHQ+XG4gICk7XG59KTtcblxuQnJhbmNoUGlja2VyTmV4dC5kaXNwbGF5TmFtZSA9IFwiQnJhbmNoUGlja2VyTmV4dFwiO1xuXG5jb25zdCBleHBvcnRzID0ge1xuICBSb290OiBCcmFuY2hQaWNrZXJSb290LFxuICBQcmV2aW91czogQnJhbmNoUGlja2VyUHJldmlvdXMsXG4gIE5leHQ6IEJyYW5jaFBpY2tlck5leHQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBPYmplY3QuYXNzaWduKEJyYW5jaFBpY2tlciwgZXhwb3J0cykgYXMgdHlwZW9mIEJyYW5jaFBpY2tlciAmXG4gIHR5cGVvZiBleHBvcnRzO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB0eXBlIHsgRkMgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIEF2YXRhclByaW1pdGl2ZSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LWF2YXRhclwiO1xuXG5pbXBvcnQgeyB3aXRoRGVmYXVsdHMgfSBmcm9tIFwiLi4vdXRpbHMvd2l0aERlZmF1bHRzXCI7XG5cbmV4cG9ydCB0eXBlIEF2YXRhclByb3BzID0ge1xuICBzcmM/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIGFsdD86IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgZmFsbGJhY2s/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG59O1xuXG5leHBvcnQgY29uc3QgQXZhdGFyOiBGQzxBdmF0YXJQcm9wcz4gPSAoeyBzcmMsIGFsdCwgZmFsbGJhY2sgfSkgPT4ge1xuICBpZiAoc3JjID09IG51bGwgJiYgZmFsbGJhY2sgPT0gbnVsbCkgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8QXZhdGFyUm9vdD5cbiAgICAgIHtzcmMgIT0gbnVsbCAmJiA8QXZhdGFySW1hZ2Ugc3JjPXtzcmN9IGFsdD17YWx0fSAvPn1cbiAgICAgIHtmYWxsYmFjayAhPSBudWxsICYmIDxBdmF0YXJGYWxsYmFjaz57ZmFsbGJhY2t9PC9BdmF0YXJGYWxsYmFjaz59XG4gICAgPC9BdmF0YXJSb290PlxuICApO1xufTtcblxuQXZhdGFyLmRpc3BsYXlOYW1lID0gXCJBdmF0YXJcIjtcblxuZXhwb3J0IGNvbnN0IEF2YXRhclJvb3QgPSB3aXRoRGVmYXVsdHMoQXZhdGFyUHJpbWl0aXZlLlJvb3QsIHtcbiAgY2xhc3NOYW1lOiBcImF1aS1hdmF0YXItcm9vdFwiLFxufSk7XG5cbkF2YXRhclJvb3QuZGlzcGxheU5hbWUgPSBcIkF2YXRhclJvb3RcIjtcblxuZXhwb3J0IGNvbnN0IEF2YXRhckltYWdlID0gd2l0aERlZmF1bHRzKEF2YXRhclByaW1pdGl2ZS5JbWFnZSwge1xuICBjbGFzc05hbWU6IFwiYXVpLWF2YXRhci1pbWFnZVwiLFxufSk7XG5cbkF2YXRhckltYWdlLmRpc3BsYXlOYW1lID0gXCJBdmF0YXJJbWFnZVwiO1xuXG5leHBvcnQgY29uc3QgQXZhdGFyRmFsbGJhY2sgPSB3aXRoRGVmYXVsdHMoQXZhdGFyUHJpbWl0aXZlLkZhbGxiYWNrLCB7XG4gIGNsYXNzTmFtZTogXCJhdWktYXZhdGFyLWZhbGxiYWNrXCIsXG59KTtcblxuQXZhdGFyRmFsbGJhY2suZGlzcGxheU5hbWUgPSBcIkF2YXRhckZhbGxiYWNrXCI7XG4iLCJpbXBvcnQgeyBGQyB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQ29udGVudFBhcnRQcmltaXRpdmUgfSBmcm9tIFwiLi4vcHJpbWl0aXZlc1wiO1xuaW1wb3J0IHsgdXNlU21vb3RoU3RhdHVzLCB3aXRoU21vb3RoQ29udGV4dFByb3ZpZGVyIH0gZnJvbSBcIi4uL3V0aWxzL3Ntb290aFwiO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSBcImNsYXNzbmFtZXNcIjtcblxuZXhwb3J0IGNvbnN0IFRleHQ6IEZDID0gKCkgPT4ge1xuICBjb25zdCBzdGF0dXMgPSB1c2VTbW9vdGhTdGF0dXMoKTtcbiAgcmV0dXJuIChcbiAgICA8Q29udGVudFBhcnRQcmltaXRpdmUuVGV4dFxuICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICBcImF1aS10ZXh0XCIsXG4gICAgICAgIHN0YXR1cy50eXBlID09PSBcInJ1bm5pbmdcIiAmJiBcImF1aS10ZXh0LXJ1bm5pbmdcIixcbiAgICAgICl9XG4gICAgICBjb21wb25lbnQ9XCJwXCJcbiAgICAvPlxuICApO1xufTtcblxuY29uc3QgZXhwb3J0cyA9IHsgVGV4dDogd2l0aFNtb290aENvbnRleHRQcm92aWRlcihUZXh0KSB9O1xuXG5leHBvcnQgZGVmYXVsdCBleHBvcnRzO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHR5cGUgRkMsIGZvcndhcmRSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IEJvdEljb24sIENoZXZyb25Eb3duSWNvbiB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcblxuaW1wb3J0IHsgQXNzaXN0YW50TW9kYWxQcmltaXRpdmUgfSBmcm9tIFwiLi4vcHJpbWl0aXZlc1wiO1xuaW1wb3J0IFRocmVhZCBmcm9tIFwiLi90aHJlYWRcIjtcbmltcG9ydCB7IHdpdGhEZWZhdWx0cyB9IGZyb20gXCIuL3V0aWxzL3dpdGhEZWZhdWx0c1wiO1xuaW1wb3J0IHtcbiAgVG9vbHRpcEljb25CdXR0b24sXG4gIFRvb2x0aXBJY29uQnV0dG9uUHJvcHMsXG59IGZyb20gXCIuL2Jhc2UvdG9vbHRpcC1pY29uLWJ1dHRvblwiO1xuaW1wb3J0IHtcbiAgVGhyZWFkQ29uZmlnLFxuICBUaHJlYWRDb25maWdQcm92aWRlcixcbiAgVGhyZWFkQ29uZmlnUHJvdmlkZXJQcm9wcyxcbiAgdXNlVGhyZWFkQ29uZmlnLFxufSBmcm9tIFwiLi90aHJlYWQtY29uZmlnXCI7XG5cbmNvbnN0IEFzc2lzdGFudE1vZGFsOiBGQzxUaHJlYWRDb25maWc+ID0gKGNvbmZpZykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxBc3Npc3RhbnRNb2RhbFJvb3QgY29uZmlnPXtjb25maWd9PlxuICAgICAgPEFzc2lzdGFudE1vZGFsVHJpZ2dlciAvPlxuICAgICAgPEFzc2lzdGFudE1vZGFsQ29udGVudD5cbiAgICAgICAgPFRocmVhZCAvPlxuICAgICAgPC9Bc3Npc3RhbnRNb2RhbENvbnRlbnQ+XG4gICAgPC9Bc3Npc3RhbnRNb2RhbFJvb3Q+XG4gICk7XG59O1xuXG5Bc3Npc3RhbnRNb2RhbC5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50TW9kYWxcIjtcblxubmFtZXNwYWNlIEFzc2lzdGFudE1vZGFsUm9vdCB7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gQXNzaXN0YW50TW9kYWxQcmltaXRpdmUuUm9vdC5Qcm9wcyAmXG4gICAgVGhyZWFkQ29uZmlnUHJvdmlkZXJQcm9wcztcbn1cblxuY29uc3QgQXNzaXN0YW50TW9kYWxSb290OiBGQzxBc3Npc3RhbnRNb2RhbFJvb3QuUHJvcHM+ID0gKHtcbiAgY29uZmlnLFxuICAuLi5wcm9wc1xufSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxUaHJlYWRDb25maWdQcm92aWRlciBjb25maWc9e2NvbmZpZ30+XG4gICAgICA8QXNzaXN0YW50TW9kYWxQcmltaXRpdmUuUm9vdCB7Li4ucHJvcHN9IC8+XG4gICAgPC9UaHJlYWRDb25maWdQcm92aWRlcj5cbiAgKTtcbn07XG5cbkFzc2lzdGFudE1vZGFsUm9vdC5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50TW9kYWxSb290XCI7XG5cbm5hbWVzcGFjZSBBc3Npc3RhbnRNb2RhbFRyaWdnZXIge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gSFRNTEJ1dHRvbkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUGFydGlhbDxUb29sdGlwSWNvbkJ1dHRvblByb3BzPjtcbn1cblxuY29uc3QgQXNzaXN0YW50TW9kYWxUcmlnZ2VyID0gZm9yd2FyZFJlZjxcbiAgQXNzaXN0YW50TW9kYWxUcmlnZ2VyLkVsZW1lbnQsXG4gIEFzc2lzdGFudE1vZGFsVHJpZ2dlci5Qcm9wc1xuPigocHJvcHMsIHJlZikgPT4ge1xuICByZXR1cm4gKFxuICAgIDxBc3Npc3RhbnRNb2RhbEFuY2hvcj5cbiAgICAgIDxBc3Npc3RhbnRNb2RhbFByaW1pdGl2ZS5UcmlnZ2VyIGFzQ2hpbGQ+XG4gICAgICAgIDxBc3Npc3RhbnRNb2RhbEJ1dHRvbiB7Li4ucHJvcHN9IHJlZj17cmVmfSAvPlxuICAgICAgPC9Bc3Npc3RhbnRNb2RhbFByaW1pdGl2ZS5UcmlnZ2VyPlxuICAgIDwvQXNzaXN0YW50TW9kYWxBbmNob3I+XG4gICk7XG59KTtcblxuQXNzaXN0YW50TW9kYWxUcmlnZ2VyLmRpc3BsYXlOYW1lID0gXCJBc3Npc3RhbnRNb2RhbFRyaWdnZXJcIjtcblxuY29uc3QgQXNzaXN0YW50TW9kYWxBbmNob3IgPSB3aXRoRGVmYXVsdHMoQXNzaXN0YW50TW9kYWxQcmltaXRpdmUuQW5jaG9yLCB7XG4gIGNsYXNzTmFtZTogXCJhdWktcm9vdCBhdWktbW9kYWwtYW5jaG9yXCIsXG59KTtcblxuQXNzaXN0YW50TW9kYWxBbmNob3IuZGlzcGxheU5hbWUgPSBcIkFzc2lzdGFudE1vZGFsQW5jaG9yXCI7XG5cbmNvbnN0IE1vZGFsQnV0dG9uU3R5bGVkID0gd2l0aERlZmF1bHRzKFRvb2x0aXBJY29uQnV0dG9uLCB7XG4gIHZhcmlhbnQ6IFwiZGVmYXVsdFwiLFxuICBjbGFzc05hbWU6IFwiYXVpLW1vZGFsLWJ1dHRvblwiLFxufSk7XG5cbm5hbWVzcGFjZSBBc3Npc3RhbnRNb2RhbEJ1dHRvbiB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBIVE1MQnV0dG9uRWxlbWVudDtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBQYXJ0aWFsPFRvb2x0aXBJY29uQnV0dG9uUHJvcHM+ICYge1xuICAgIFwiZGF0YS1zdGF0ZVwiPzogXCJvcGVuXCIgfCBcImNsb3NlZFwiO1xuICB9O1xufVxuXG5jb25zdCBBc3Npc3RhbnRNb2RhbEJ1dHRvbiA9IGZvcndhcmRSZWY8XG4gIEFzc2lzdGFudE1vZGFsQnV0dG9uLkVsZW1lbnQsXG4gIEFzc2lzdGFudE1vZGFsQnV0dG9uLlByb3BzXG4+KCh7IFwiZGF0YS1zdGF0ZVwiOiBzdGF0ZSwgLi4ucmVzdCB9LCByZWYpID0+IHtcbiAgY29uc3Qge1xuICAgIHN0cmluZ3M6IHtcbiAgICAgIGFzc2lzdGFudE1vZGFsOiB7XG4gICAgICAgIG9wZW46IHtcbiAgICAgICAgICBidXR0b246IHsgdG9vbHRpcDogb3BlblRvb2x0aXAgPSBcIkNsb3NlIEFzc2lzdGFudFwiIH0gPSB7fSxcbiAgICAgICAgfSA9IHt9LFxuICAgICAgICBjbG9zZWQ6IHtcbiAgICAgICAgICBidXR0b246IHsgdG9vbHRpcDogY2xvc2VkVG9vbHRpcCA9IFwiT3BlbiBBc3Npc3RhbnRcIiB9ID0ge30sXG4gICAgICAgIH0gPSB7fSxcbiAgICAgIH0gPSB7fSxcbiAgICB9ID0ge30sXG4gIH0gPSB1c2VUaHJlYWRDb25maWcoKTtcbiAgY29uc3QgdG9vbHRpcCA9IHN0YXRlID09PSBcIm9wZW5cIiA/IG9wZW5Ub29sdGlwIDogY2xvc2VkVG9vbHRpcDtcblxuICByZXR1cm4gKFxuICAgIDxNb2RhbEJ1dHRvblN0eWxlZFxuICAgICAgc2lkZT1cImxlZnRcIlxuICAgICAgdG9vbHRpcD17dG9vbHRpcH1cbiAgICAgIGRhdGEtc3RhdGU9e3N0YXRlfVxuICAgICAgey4uLnJlc3R9XG4gICAgICByZWY9e3JlZn1cbiAgICA+XG4gICAgICB7cmVzdC5jaGlsZHJlbiA/PyAoXG4gICAgICAgIDw+XG4gICAgICAgICAgPEJvdEljb25cbiAgICAgICAgICAgIGRhdGEtc3RhdGU9e3N0YXRlfVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYXVpLW1vZGFsLWJ1dHRvbi1jbG9zZWQtaWNvblwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8Q2hldnJvbkRvd25JY29uXG4gICAgICAgICAgICBkYXRhLXN0YXRlPXtzdGF0ZX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImF1aS1tb2RhbC1idXR0b24tb3Blbi1pY29uXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgPC9Nb2RhbEJ1dHRvblN0eWxlZD5cbiAgKTtcbn0pO1xuXG5Bc3Npc3RhbnRNb2RhbEJ1dHRvbi5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50TW9kYWxCdXR0b25cIjtcblxuY29uc3QgQXNzaXN0YW50TW9kYWxDb250ZW50ID0gd2l0aERlZmF1bHRzKEFzc2lzdGFudE1vZGFsUHJpbWl0aXZlLkNvbnRlbnQsIHtcbiAgY2xhc3NOYW1lOiBcImF1aS1yb290IGF1aS1tb2RhbC1jb250ZW50XCIsXG4gIHNpZGVPZmZzZXQ6IDE2LFxufSk7XG5cbkFzc2lzdGFudE1vZGFsQ29udGVudC5kaXNwbGF5TmFtZSA9IFwiQXNzaXN0YW50TW9kYWxDb250ZW50XCI7XG5cbmNvbnN0IGV4cG9ydHMgPSB7XG4gIFJvb3Q6IEFzc2lzdGFudE1vZGFsUm9vdCxcbiAgVHJpZ2dlcjogQXNzaXN0YW50TW9kYWxUcmlnZ2VyLFxuICBDb250ZW50OiBBc3Npc3RhbnRNb2RhbENvbnRlbnQsXG4gIEJ1dHRvbjogQXNzaXN0YW50TW9kYWxCdXR0b24sXG4gIEFuY2hvcjogQXNzaXN0YW50TW9kYWxBbmNob3IsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBPYmplY3QuYXNzaWduKEFzc2lzdGFudE1vZGFsLCBleHBvcnRzKSBhcyB0eXBlb2YgQXNzaXN0YW50TW9kYWwgJlxuICB0eXBlb2YgZXhwb3J0cztcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBDb21wb25lbnRUeXBlLCBmb3J3YXJkUmVmLCB0eXBlIEZDIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBBcnJvd0Rvd25JY29uIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuXG5pbXBvcnQgeyB3aXRoRGVmYXVsdHMgfSBmcm9tIFwiLi91dGlscy93aXRoRGVmYXVsdHNcIjtcbmltcG9ydCBDb21wb3NlciBmcm9tIFwiLi9jb21wb3NlclwiO1xuaW1wb3J0IFRocmVhZFdlbGNvbWUgZnJvbSBcIi4vdGhyZWFkLXdlbGNvbWVcIjtcbmltcG9ydCB7XG4gIFRvb2x0aXBJY29uQnV0dG9uLFxuICBUb29sdGlwSWNvbkJ1dHRvblByb3BzLFxufSBmcm9tIFwiLi9iYXNlL3Rvb2x0aXAtaWNvbi1idXR0b25cIjtcbmltcG9ydCBBc3Npc3RhbnRNZXNzYWdlIGZyb20gXCIuL2Fzc2lzdGFudC1tZXNzYWdlXCI7XG5pbXBvcnQgVXNlck1lc3NhZ2UgZnJvbSBcIi4vdXNlci1tZXNzYWdlXCI7XG5pbXBvcnQgRWRpdENvbXBvc2VyIGZyb20gXCIuL2VkaXQtY29tcG9zZXJcIjtcbmltcG9ydCB7XG4gIFRocmVhZENvbmZpZyxcbiAgVGhyZWFkQ29uZmlnUHJvdmlkZXIsXG4gIFRocmVhZENvbmZpZ1Byb3ZpZGVyUHJvcHMsXG4gIHVzZVRocmVhZENvbmZpZyxcbn0gZnJvbSBcIi4vdGhyZWFkLWNvbmZpZ1wiO1xuaW1wb3J0IHsgVGhyZWFkUHJpbWl0aXZlIH0gZnJvbSBcIi4uL3ByaW1pdGl2ZXNcIjtcbmltcG9ydCB7IHVzZVRocmVhZCB9IGZyb20gXCIuLi9jb250ZXh0XCI7XG5cbmNvbnN0IFRocmVhZDogRkM8VGhyZWFkQ29uZmlnPiA9IChjb25maWcpID0+IHtcbiAgY29uc3Qge1xuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgIENvbXBvc2VyOiBDb21wb3NlckNvbXBvbmVudCA9IENvbXBvc2VyLFxuICAgICAgVGhyZWFkV2VsY29tZTogVGhyZWFkV2VsY29tZUNvbXBvbmVudCA9IFRocmVhZFdlbGNvbWUsXG4gICAgfSA9IHt9LFxuICB9ID0gY29uZmlnO1xuICByZXR1cm4gKFxuICAgIDxUaHJlYWRSb290IGNvbmZpZz17Y29uZmlnfT5cbiAgICAgIDxUaHJlYWRWaWV3cG9ydD5cbiAgICAgICAgPFRocmVhZFdlbGNvbWVDb21wb25lbnQgLz5cbiAgICAgICAgPFRocmVhZE1lc3NhZ2VzIC8+XG4gICAgICAgIDxUaHJlYWRGb2xsb3d1cFN1Z2dlc3Rpb25zIC8+XG4gICAgICAgIDxUaHJlYWRWaWV3cG9ydEZvb3Rlcj5cbiAgICAgICAgICA8VGhyZWFkU2Nyb2xsVG9Cb3R0b20gLz5cbiAgICAgICAgICA8Q29tcG9zZXJDb21wb25lbnQgLz5cbiAgICAgICAgPC9UaHJlYWRWaWV3cG9ydEZvb3Rlcj5cbiAgICAgIDwvVGhyZWFkVmlld3BvcnQ+XG4gICAgPC9UaHJlYWRSb290PlxuICApO1xufTtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYFRocmVhZC5Sb290LlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIFRocmVhZFJvb3RQcm9wcyA9IFRocmVhZFJvb3QuUHJvcHM7XG5cbm5hbWVzcGFjZSBUaHJlYWRSb290IHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEhUTUxEaXZFbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFRocmVhZFByaW1pdGl2ZS5Sb290LlByb3BzICYgVGhyZWFkQ29uZmlnUHJvdmlkZXJQcm9wcztcbn1cblxuY29uc3QgVGhyZWFkUm9vdFN0eWxlZCA9IHdpdGhEZWZhdWx0cyhUaHJlYWRQcmltaXRpdmUuUm9vdCwge1xuICBjbGFzc05hbWU6IFwiYXVpLXJvb3QgYXVpLXRocmVhZC1yb290XCIsXG59KTtcblxuY29uc3QgVGhyZWFkUm9vdCA9IGZvcndhcmRSZWY8VGhyZWFkUm9vdC5FbGVtZW50LCBUaHJlYWRSb290LlByb3BzPihcbiAgKHsgY29uZmlnLCAuLi5wcm9wcyB9LCByZWYpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPFRocmVhZENvbmZpZ1Byb3ZpZGVyIGNvbmZpZz17Y29uZmlnfT5cbiAgICAgICAgPFRocmVhZFJvb3RTdHlsZWQgey4uLnByb3BzfSByZWY9e3JlZn0gLz5cbiAgICAgIDwvVGhyZWFkQ29uZmlnUHJvdmlkZXI+XG4gICAgKTtcbiAgfSxcbik7XG5cblRocmVhZFJvb3QuZGlzcGxheU5hbWUgPSBcIlRocmVhZFJvb3RcIjtcblxuY29uc3QgVGhyZWFkVmlld3BvcnQgPSB3aXRoRGVmYXVsdHMoVGhyZWFkUHJpbWl0aXZlLlZpZXdwb3J0LCB7XG4gIGNsYXNzTmFtZTogXCJhdWktdGhyZWFkLXZpZXdwb3J0XCIsXG59KTtcblxuVGhyZWFkVmlld3BvcnQuZGlzcGxheU5hbWUgPSBcIlRocmVhZFZpZXdwb3J0XCI7XG5cbmNvbnN0IFRocmVhZFZpZXdwb3J0Rm9vdGVyID0gd2l0aERlZmF1bHRzKFwiZGl2XCIsIHtcbiAgY2xhc3NOYW1lOiBcImF1aS10aHJlYWQtdmlld3BvcnQtZm9vdGVyXCIsXG59KTtcblxuVGhyZWFkVmlld3BvcnRGb290ZXIuZGlzcGxheU5hbWUgPSBcIlRocmVhZFZpZXdwb3J0Rm9vdGVyXCI7XG5cbmNvbnN0IFN5c3RlbU1lc3NhZ2UgPSAoKSA9PiBudWxsO1xuXG5jb25zdCBUaHJlYWRNZXNzYWdlczogRkM8e1xuICB1bnN0YWJsZV9mbGV4R3Jvd0Rpdj86IGJvb2xlYW47XG4gIGNvbXBvbmVudHM/OiB7XG4gICAgVXNlck1lc3NhZ2U/OiBDb21wb25lbnRUeXBlIHwgdW5kZWZpbmVkO1xuICAgIEVkaXRDb21wb3Nlcj86IENvbXBvbmVudFR5cGUgfCB1bmRlZmluZWQ7XG4gICAgQXNzaXN0YW50TWVzc2FnZT86IENvbXBvbmVudFR5cGUgfCB1bmRlZmluZWQ7XG4gICAgU3lzdGVtTWVzc2FnZT86IENvbXBvbmVudFR5cGUgfCB1bmRlZmluZWQ7XG4gIH07XG59PiA9ICh7IGNvbXBvbmVudHMsIHVuc3RhYmxlX2ZsZXhHcm93RGl2OiBmbGV4R3Jvd0RpdiA9IHRydWUsIC4uLnJlc3QgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8VGhyZWFkUHJpbWl0aXZlLk1lc3NhZ2VzXG4gICAgICAgIGNvbXBvbmVudHM9e3tcbiAgICAgICAgICBVc2VyTWVzc2FnZTogY29tcG9uZW50cz8uVXNlck1lc3NhZ2UgPz8gVXNlck1lc3NhZ2UsXG4gICAgICAgICAgRWRpdENvbXBvc2VyOiBjb21wb25lbnRzPy5FZGl0Q29tcG9zZXIgPz8gRWRpdENvbXBvc2VyLFxuICAgICAgICAgIEFzc2lzdGFudE1lc3NhZ2U6IGNvbXBvbmVudHM/LkFzc2lzdGFudE1lc3NhZ2UgPz8gQXNzaXN0YW50TWVzc2FnZSxcbiAgICAgICAgICBTeXN0ZW1NZXNzYWdlOiBjb21wb25lbnRzPy5TeXN0ZW1NZXNzYWdlID8/IFN5c3RlbU1lc3NhZ2UsXG4gICAgICAgIH19XG4gICAgICAgIHsuLi5yZXN0fVxuICAgICAgLz5cbiAgICAgIHtmbGV4R3Jvd0RpdiAmJiAoXG4gICAgICAgIDxUaHJlYWRQcmltaXRpdmUuSWYgZW1wdHk9e2ZhbHNlfT5cbiAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGZsZXhHcm93OiAxIH19IC8+XG4gICAgICAgIDwvVGhyZWFkUHJpbWl0aXZlLklmPlxuICAgICAgKX1cbiAgICA8Lz5cbiAgKTtcbn07XG5cblRocmVhZE1lc3NhZ2VzLmRpc3BsYXlOYW1lID0gXCJUaHJlYWRNZXNzYWdlc1wiO1xuXG5jb25zdCBUaHJlYWRGb2xsb3d1cFN1Z2dlc3Rpb25zOiBGQyA9ICgpID0+IHtcbiAgY29uc3Qgc3VnZ2VzdGlvbnMgPSB1c2VUaHJlYWQoKHQpID0+IHQuc3VnZ2VzdGlvbnMpO1xuXG4gIHJldHVybiAoXG4gICAgPFRocmVhZFByaW1pdGl2ZS5JZiBlbXB0eT17ZmFsc2V9IHJ1bm5pbmc9e2ZhbHNlfT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYXVpLXRocmVhZC1mb2xsb3d1cC1zdWdnZXN0aW9uc1wiPlxuICAgICAgICB7c3VnZ2VzdGlvbnM/Lm1hcCgoc3VnZ2VzdGlvbiwgaWR4KSA9PiAoXG4gICAgICAgICAgPFRocmVhZFByaW1pdGl2ZS5TdWdnZXN0aW9uXG4gICAgICAgICAgICBrZXk9e2lkeH1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImF1aS10aHJlYWQtZm9sbG93dXAtc3VnZ2VzdGlvblwiXG4gICAgICAgICAgICBwcm9tcHQ9e3N1Z2dlc3Rpb24ucHJvbXB0fVxuICAgICAgICAgICAgbWV0aG9kPVwicmVwbGFjZVwiXG4gICAgICAgICAgICBhdXRvU2VuZFxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtzdWdnZXN0aW9uLnByb21wdH1cbiAgICAgICAgICA8L1RocmVhZFByaW1pdGl2ZS5TdWdnZXN0aW9uPlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuICAgIDwvVGhyZWFkUHJpbWl0aXZlLklmPlxuICApO1xufTtcblxuY29uc3QgVGhyZWFkU2Nyb2xsVG9Cb3R0b21JY29uQnV0dG9uID0gd2l0aERlZmF1bHRzKFRvb2x0aXBJY29uQnV0dG9uLCB7XG4gIHZhcmlhbnQ6IFwib3V0bGluZVwiLFxuICBjbGFzc05hbWU6IFwiYXVpLXRocmVhZC1zY3JvbGwtdG8tYm90dG9tXCIsXG59KTtcblxubmFtZXNwYWNlIFRocmVhZFNjcm9sbFRvQm90dG9tIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEhUTUxCdXR0b25FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFBhcnRpYWw8VG9vbHRpcEljb25CdXR0b25Qcm9wcz47XG59XG5cbmNvbnN0IFRocmVhZFNjcm9sbFRvQm90dG9tID0gZm9yd2FyZFJlZjxcbiAgVGhyZWFkU2Nyb2xsVG9Cb3R0b20uRWxlbWVudCxcbiAgVGhyZWFkU2Nyb2xsVG9Cb3R0b20uUHJvcHNcbj4oKHByb3BzLCByZWYpID0+IHtcbiAgY29uc3Qge1xuICAgIHN0cmluZ3M6IHtcbiAgICAgIHRocmVhZDogeyBzY3JvbGxUb0JvdHRvbTogeyB0b29sdGlwID0gXCJTY3JvbGwgdG8gYm90dG9tXCIgfSA9IHt9IH0gPSB7fSxcbiAgICB9ID0ge30sXG4gIH0gPSB1c2VUaHJlYWRDb25maWcoKTtcbiAgcmV0dXJuIChcbiAgICA8VGhyZWFkUHJpbWl0aXZlLlNjcm9sbFRvQm90dG9tIGFzQ2hpbGQ+XG4gICAgICA8VGhyZWFkU2Nyb2xsVG9Cb3R0b21JY29uQnV0dG9uIHRvb2x0aXA9e3Rvb2x0aXB9IHsuLi5wcm9wc30gcmVmPXtyZWZ9PlxuICAgICAgICB7cHJvcHMuY2hpbGRyZW4gPz8gPEFycm93RG93bkljb24gLz59XG4gICAgICA8L1RocmVhZFNjcm9sbFRvQm90dG9tSWNvbkJ1dHRvbj5cbiAgICA8L1RocmVhZFByaW1pdGl2ZS5TY3JvbGxUb0JvdHRvbT5cbiAgKTtcbn0pO1xuXG5UaHJlYWRTY3JvbGxUb0JvdHRvbS5kaXNwbGF5TmFtZSA9IFwiVGhyZWFkU2Nyb2xsVG9Cb3R0b21cIjtcblxuY29uc3QgZXhwb3J0cyA9IHtcbiAgUm9vdDogVGhyZWFkUm9vdCxcbiAgVmlld3BvcnQ6IFRocmVhZFZpZXdwb3J0LFxuICBNZXNzYWdlczogVGhyZWFkTWVzc2FnZXMsXG4gIEZvbGxvd3VwU3VnZ2VzdGlvbnM6IFRocmVhZEZvbGxvd3VwU3VnZ2VzdGlvbnMsXG4gIFNjcm9sbFRvQm90dG9tOiBUaHJlYWRTY3JvbGxUb0JvdHRvbSxcbiAgVmlld3BvcnRGb290ZXI6IFRocmVhZFZpZXdwb3J0Rm9vdGVyLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmFzc2lnbihUaHJlYWQsIGV4cG9ydHMpIGFzIHR5cGVvZiBUaHJlYWQgJiB0eXBlb2YgZXhwb3J0cztcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYsIGZvcndhcmRSZWYsIHR5cGUgRkMgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgUGFwZXJjbGlwSWNvbiwgU2VuZEhvcml6b250YWxJY29uIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuaW1wb3J0IHsgd2l0aERlZmF1bHRzIH0gZnJvbSBcIi4vdXRpbHMvd2l0aERlZmF1bHRzXCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRDb25maWcgfSBmcm9tIFwiLi90aHJlYWQtY29uZmlnXCI7XG5pbXBvcnQge1xuICBUb29sdGlwSWNvbkJ1dHRvbixcbiAgVG9vbHRpcEljb25CdXR0b25Qcm9wcyxcbn0gZnJvbSBcIi4vYmFzZS90b29sdGlwLWljb24tYnV0dG9uXCI7XG5pbXBvcnQgeyBDaXJjbGVTdG9wSWNvbiB9IGZyb20gXCIuL2Jhc2UvQ2lyY2xlU3RvcEljb25cIjtcbmltcG9ydCB7IENvbXBvc2VyUHJpbWl0aXZlLCBUaHJlYWRQcmltaXRpdmUgfSBmcm9tIFwiLi4vcHJpbWl0aXZlc1wiO1xuaW1wb3J0IHsgdXNlVGhyZWFkIH0gZnJvbSBcIi4uL2NvbnRleHQvcmVhY3QvVGhyZWFkQ29udGV4dFwiO1xuaW1wb3J0IEF0dGFjaG1lbnQgZnJvbSBcIi4vYXR0YWNobWVudFwiO1xuXG5jb25zdCB1c2VBbGxvd0F0dGFjaG1lbnRzID0gKGVuc3VyZUNhcGFiaWxpdHkgPSBmYWxzZSkgPT4ge1xuICBjb25zdCB7IGNvbXBvc2VyOiB7IGFsbG93QXR0YWNobWVudHMgPSB0cnVlIH0gPSB7fSB9ID0gdXNlVGhyZWFkQ29uZmlnKCk7XG4gIGNvbnN0IGF0dGFjaG1lbnRzU3VwcG9ydGVkID0gdXNlVGhyZWFkKCh0KSA9PiB0LmNhcGFiaWxpdGllcy5hdHRhY2htZW50cyk7XG4gIHJldHVybiBhbGxvd0F0dGFjaG1lbnRzICYmICghZW5zdXJlQ2FwYWJpbGl0eSB8fCBhdHRhY2htZW50c1N1cHBvcnRlZCk7XG59O1xuXG5jb25zdCBDb21wb3NlcjogRkMgPSAoKSA9PiB7XG4gIGNvbnN0IGFsbG93QXR0YWNobWVudHMgPSB1c2VBbGxvd0F0dGFjaG1lbnRzKHRydWUpO1xuICByZXR1cm4gKFxuICAgIDxDb21wb3NlclJvb3Q+XG4gICAgICB7YWxsb3dBdHRhY2htZW50cyAmJiA8Q29tcG9zZXJBdHRhY2htZW50cyAvPn1cbiAgICAgIHthbGxvd0F0dGFjaG1lbnRzICYmIDxDb21wb3NlckFkZEF0dGFjaG1lbnQgLz59XG4gICAgICA8Q29tcG9zZXJJbnB1dCBhdXRvRm9jdXMgLz5cbiAgICAgIDxDb21wb3NlckFjdGlvbiAvPlxuICAgIDwvQ29tcG9zZXJSb290PlxuICApO1xufTtcblxuQ29tcG9zZXIuZGlzcGxheU5hbWUgPSBcIkNvbXBvc2VyXCI7XG5cbmNvbnN0IENvbXBvc2VyUm9vdCA9IHdpdGhEZWZhdWx0cyhDb21wb3NlclByaW1pdGl2ZS5Sb290LCB7XG4gIGNsYXNzTmFtZTogXCJhdWktY29tcG9zZXItcm9vdFwiLFxufSk7XG5cbkNvbXBvc2VyUm9vdC5kaXNwbGF5TmFtZSA9IFwiQ29tcG9zZXJSb290XCI7XG5cbmNvbnN0IENvbXBvc2VySW5wdXRTdHlsZWQgPSB3aXRoRGVmYXVsdHMoQ29tcG9zZXJQcmltaXRpdmUuSW5wdXQsIHtcbiAgcm93czogMSxcbiAgYXV0b0ZvY3VzOiB0cnVlLFxuICBjbGFzc05hbWU6IFwiYXVpLWNvbXBvc2VyLWlucHV0XCIsXG59KTtcblxubmFtZXNwYWNlIENvbXBvc2VySW5wdXQge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gSFRNTFRleHRBcmVhRWxlbWVudDtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIENvbXBvc2VySW5wdXRTdHlsZWQ+O1xufVxuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgQ29tcG9zZXJJbnB1dC5Qcm9wc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBDb21wb3NlcklucHV0UHJvcHMgPSBDb21wb3NlcklucHV0LlByb3BzO1xuXG5jb25zdCBDb21wb3NlcklucHV0ID0gZm9yd2FyZFJlZjxDb21wb3NlcklucHV0LkVsZW1lbnQsIENvbXBvc2VySW5wdXQuUHJvcHM+KFxuICAocHJvcHMsIHJlZikgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIHN0cmluZ3M6IHtcbiAgICAgICAgY29tcG9zZXI6IHsgaW5wdXQ6IHsgcGxhY2Vob2xkZXIgPSBcIldyaXRlIGEgbWVzc2FnZS4uLlwiIH0gPSB7fSB9ID0ge30sXG4gICAgICB9ID0ge30sXG4gICAgfSA9IHVzZVRocmVhZENvbmZpZygpO1xuICAgIHJldHVybiAoXG4gICAgICA8Q29tcG9zZXJJbnB1dFN0eWxlZCBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9IHsuLi5wcm9wc30gcmVmPXtyZWZ9IC8+XG4gICAgKTtcbiAgfSxcbik7XG5cbkNvbXBvc2VySW5wdXQuZGlzcGxheU5hbWUgPSBcIkNvbXBvc2VySW5wdXRcIjtcblxuY29uc3QgQ29tcG9zZXJBdHRhY2htZW50c0NvbnRhaW5lciA9IHdpdGhEZWZhdWx0cyhcImRpdlwiLCB7XG4gIGNsYXNzTmFtZTogXCJhdWktY29tcG9zZXItYXR0YWNobWVudHNcIixcbn0pO1xuXG5uYW1lc3BhY2UgQ29tcG9zZXJBdHRhY2htZW50cyB7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUGFydGlhbDxDb21wb3NlclByaW1pdGl2ZS5BdHRhY2htZW50cy5Qcm9wcz47XG59XG5cbmNvbnN0IENvbXBvc2VyQXR0YWNobWVudHM6IEZDPENvbXBvc2VyQXR0YWNobWVudHMuUHJvcHM+ID0gKHsgY29tcG9uZW50cyB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbXBvc2VyQXR0YWNobWVudHNDb250YWluZXI+XG4gICAgICA8Q29tcG9zZXJQcmltaXRpdmUuQXR0YWNobWVudHNcbiAgICAgICAgY29tcG9uZW50cz17e1xuICAgICAgICAgIC4uLmNvbXBvbmVudHMsXG4gICAgICAgICAgQXR0YWNobWVudDogY29tcG9uZW50cz8uQXR0YWNobWVudCA/PyBBdHRhY2htZW50LFxuICAgICAgICB9fVxuICAgICAgLz5cbiAgICA8L0NvbXBvc2VyQXR0YWNobWVudHNDb250YWluZXI+XG4gICk7XG59O1xuXG5jb25zdCBDb21wb3NlckF0dGFjaEJ1dHRvbiA9IHdpdGhEZWZhdWx0cyhUb29sdGlwSWNvbkJ1dHRvbiwge1xuICB2YXJpYW50OiBcImRlZmF1bHRcIixcbiAgY2xhc3NOYW1lOiBcImF1aS1jb21wb3Nlci1hdHRhY2hcIixcbn0pO1xuXG5uYW1lc3BhY2UgQ29tcG9zZXJBZGRBdHRhY2htZW50IHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEhUTUxCdXR0b25FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFBhcnRpYWw8VG9vbHRpcEljb25CdXR0b25Qcm9wcz47XG59XG5cbmNvbnN0IENvbXBvc2VyQWRkQXR0YWNobWVudCA9IGZvcndhcmRSZWY8XG4gIENvbXBvc2VyQWRkQXR0YWNobWVudC5FbGVtZW50LFxuICBDb21wb3NlckFkZEF0dGFjaG1lbnQuUHJvcHNcbj4oKHByb3BzLCByZWYpID0+IHtcbiAgY29uc3Qge1xuICAgIHN0cmluZ3M6IHtcbiAgICAgIGNvbXBvc2VyOiB7IGFkZEF0dGFjaG1lbnQ6IHsgdG9vbHRpcCA9IFwiQXR0YWNoIGZpbGVcIiB9ID0ge30gfSA9IHt9LFxuICAgIH0gPSB7fSxcbiAgfSA9IHVzZVRocmVhZENvbmZpZygpO1xuICBjb25zdCBhbGxvd0F0dGFjaG1lbnRzID0gdXNlQWxsb3dBdHRhY2htZW50cygpO1xuICByZXR1cm4gKFxuICAgIDxDb21wb3NlclByaW1pdGl2ZS5BZGRBdHRhY2htZW50IGRpc2FibGVkPXshYWxsb3dBdHRhY2htZW50c30gYXNDaGlsZD5cbiAgICAgIDxDb21wb3NlckF0dGFjaEJ1dHRvblxuICAgICAgICB0b29sdGlwPXt0b29sdGlwfVxuICAgICAgICB2YXJpYW50PXtcImdob3N0XCJ9XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICA+XG4gICAgICAgIHtwcm9wcy5jaGlsZHJlbiA/PyA8UGFwZXJjbGlwSWNvbiAvPn1cbiAgICAgIDwvQ29tcG9zZXJBdHRhY2hCdXR0b24+XG4gICAgPC9Db21wb3NlclByaW1pdGl2ZS5BZGRBdHRhY2htZW50PlxuICApO1xufSk7XG5cbkNvbXBvc2VyQWRkQXR0YWNobWVudC5kaXNwbGF5TmFtZSA9IFwiQ29tcG9zZXJBZGRBdHRhY2htZW50XCI7XG5cbmNvbnN0IHVzZUFsbG93Q2FuY2VsID0gKCkgPT4ge1xuICBjb25zdCBjYW5jZWxTdXBwb3J0ZWQgPSB1c2VUaHJlYWQoKHQpID0+IHQuY2FwYWJpbGl0aWVzLmNhbmNlbCk7XG4gIHJldHVybiBjYW5jZWxTdXBwb3J0ZWQ7XG59O1xuXG5jb25zdCBDb21wb3NlckFjdGlvbjogRkMgPSAoKSA9PiB7XG4gIGNvbnN0IGFsbG93Q2FuY2VsID0gdXNlQWxsb3dDYW5jZWwoKTtcbiAgaWYgKCFhbGxvd0NhbmNlbCkgcmV0dXJuIDxDb21wb3NlclNlbmQgLz47XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxUaHJlYWRQcmltaXRpdmUuSWYgcnVubmluZz17ZmFsc2V9PlxuICAgICAgICA8Q29tcG9zZXJTZW5kIC8+XG4gICAgICA8L1RocmVhZFByaW1pdGl2ZS5JZj5cbiAgICAgIDxUaHJlYWRQcmltaXRpdmUuSWYgcnVubmluZz5cbiAgICAgICAgPENvbXBvc2VyQ2FuY2VsIC8+XG4gICAgICA8L1RocmVhZFByaW1pdGl2ZS5JZj5cbiAgICA8Lz5cbiAgKTtcbn07XG5cbkNvbXBvc2VyQWN0aW9uLmRpc3BsYXlOYW1lID0gXCJDb21wb3NlckFjdGlvblwiO1xuXG5jb25zdCBDb21wb3NlclNlbmRCdXR0b24gPSB3aXRoRGVmYXVsdHMoVG9vbHRpcEljb25CdXR0b24sIHtcbiAgdmFyaWFudDogXCJkZWZhdWx0XCIsXG4gIGNsYXNzTmFtZTogXCJhdWktY29tcG9zZXItc2VuZFwiLFxufSk7XG5cbm5hbWVzcGFjZSBDb21wb3NlclNlbmQge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gSFRNTEJ1dHRvbkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUGFydGlhbDxUb29sdGlwSWNvbkJ1dHRvblByb3BzPjtcbn1cblxuY29uc3QgQ29tcG9zZXJTZW5kID0gZm9yd2FyZFJlZjxDb21wb3NlclNlbmQuRWxlbWVudCwgQ29tcG9zZXJTZW5kLlByb3BzPihcbiAgKHByb3BzLCByZWYpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBzdHJpbmdzOiB7IGNvbXBvc2VyOiB7IHNlbmQ6IHsgdG9vbHRpcCA9IFwiU2VuZFwiIH0gPSB7fSB9ID0ge30gfSA9IHt9LFxuICAgIH0gPSB1c2VUaHJlYWRDb25maWcoKTtcbiAgICByZXR1cm4gKFxuICAgICAgPENvbXBvc2VyUHJpbWl0aXZlLlNlbmQgYXNDaGlsZD5cbiAgICAgICAgPENvbXBvc2VyU2VuZEJ1dHRvbiB0b29sdGlwPXt0b29sdGlwfSB7Li4ucHJvcHN9IHJlZj17cmVmfT5cbiAgICAgICAgICB7cHJvcHMuY2hpbGRyZW4gPz8gPFNlbmRIb3Jpem9udGFsSWNvbiAvPn1cbiAgICAgICAgPC9Db21wb3NlclNlbmRCdXR0b24+XG4gICAgICA8L0NvbXBvc2VyUHJpbWl0aXZlLlNlbmQ+XG4gICAgKTtcbiAgfSxcbik7XG5cbkNvbXBvc2VyU2VuZC5kaXNwbGF5TmFtZSA9IFwiQ29tcG9zZXJTZW5kXCI7XG5cbmNvbnN0IENvbXBvc2VyQ2FuY2VsQnV0dG9uID0gd2l0aERlZmF1bHRzKFRvb2x0aXBJY29uQnV0dG9uLCB7XG4gIHZhcmlhbnQ6IFwiZGVmYXVsdFwiLFxuICBjbGFzc05hbWU6IFwiYXVpLWNvbXBvc2VyLWNhbmNlbFwiLFxufSk7XG5cbm5hbWVzcGFjZSBDb21wb3NlckNhbmNlbCB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBIVE1MQnV0dG9uRWxlbWVudDtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBQYXJ0aWFsPFRvb2x0aXBJY29uQnV0dG9uUHJvcHM+O1xufVxuXG5jb25zdCBDb21wb3NlckNhbmNlbCA9IGZvcndhcmRSZWY8Q29tcG9zZXJDYW5jZWwuRWxlbWVudCwgQ29tcG9zZXJDYW5jZWwuUHJvcHM+KFxuICAocHJvcHMsIHJlZikgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIHN0cmluZ3M6IHsgY29tcG9zZXI6IHsgY2FuY2VsOiB7IHRvb2x0aXAgPSBcIkNhbmNlbFwiIH0gPSB7fSB9ID0ge30gfSA9IHt9LFxuICAgIH0gPSB1c2VUaHJlYWRDb25maWcoKTtcbiAgICByZXR1cm4gKFxuICAgICAgPENvbXBvc2VyUHJpbWl0aXZlLkNhbmNlbCBhc0NoaWxkPlxuICAgICAgICA8Q29tcG9zZXJDYW5jZWxCdXR0b24gdG9vbHRpcD17dG9vbHRpcH0gey4uLnByb3BzfSByZWY9e3JlZn0+XG4gICAgICAgICAge3Byb3BzLmNoaWxkcmVuID8/IDxDaXJjbGVTdG9wSWNvbiAvPn1cbiAgICAgICAgPC9Db21wb3NlckNhbmNlbEJ1dHRvbj5cbiAgICAgIDwvQ29tcG9zZXJQcmltaXRpdmUuQ2FuY2VsPlxuICAgICk7XG4gIH0sXG4pO1xuXG5Db21wb3NlckNhbmNlbC5kaXNwbGF5TmFtZSA9IFwiQ29tcG9zZXJDYW5jZWxcIjtcblxuY29uc3QgZXhwb3J0cyA9IHtcbiAgUm9vdDogQ29tcG9zZXJSb290LFxuICBJbnB1dDogQ29tcG9zZXJJbnB1dCxcbiAgQWN0aW9uOiBDb21wb3NlckFjdGlvbixcbiAgU2VuZDogQ29tcG9zZXJTZW5kLFxuICBDYW5jZWw6IENvbXBvc2VyQ2FuY2VsLFxuICBBZGRBdHRhY2htZW50OiBDb21wb3NlckFkZEF0dGFjaG1lbnQsXG4gIEF0dGFjaG1lbnRzOiBDb21wb3NlckF0dGFjaG1lbnRzLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmFzc2lnbihDb21wb3NlciwgZXhwb3J0cykgYXMgdHlwZW9mIENvbXBvc2VyICZcbiAgdHlwZW9mIGV4cG9ydHM7XG4iLCJpbXBvcnQgeyBGQyB9IGZyb20gXCJyZWFjdFwiO1xuXG5leHBvcnQgY29uc3QgQ2lyY2xlU3RvcEljb246IEZDID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzdmdcbiAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgdmlld0JveD1cIjAgMCAxNiAxNlwiXG4gICAgICBmaWxsPVwiY3VycmVudENvbG9yXCJcbiAgICAgIHdpZHRoPVwiMTZcIlxuICAgICAgaGVpZ2h0PVwiMTZcIlxuICAgID5cbiAgICAgIDxyZWN0IHdpZHRoPVwiMTBcIiBoZWlnaHQ9XCIxMFwiIHg9XCIzXCIgeT1cIjNcIiByeD1cIjJcIiAvPlxuICAgIDwvc3ZnPlxuICApO1xufTtcblxuQ2lyY2xlU3RvcEljb24uZGlzcGxheU5hbWUgPSBcIkNpcmNsZVN0b3BJY29uXCI7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHtcbiAgZm9yd2FyZFJlZixcbiAgUHJvcHNXaXRoQ2hpbGRyZW4sXG4gIHVzZUVmZmVjdCxcbiAgdXNlU3RhdGUsXG4gIHR5cGUgRkMsXG59IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQ2lyY2xlWEljb24sIEZpbGVJY29uIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuaW1wb3J0IHsgd2l0aERlZmF1bHRzIH0gZnJvbSBcIi4vdXRpbHMvd2l0aERlZmF1bHRzXCI7XG5pbXBvcnQgeyB1c2VUaHJlYWRDb25maWcgfSBmcm9tIFwiLi90aHJlYWQtY29uZmlnXCI7XG5pbXBvcnQge1xuICBUb29sdGlwSWNvbkJ1dHRvbixcbiAgVG9vbHRpcEljb25CdXR0b25Qcm9wcyxcbn0gZnJvbSBcIi4vYmFzZS90b29sdGlwLWljb24tYnV0dG9uXCI7XG5pbXBvcnQgeyBBdHRhY2htZW50UHJpbWl0aXZlIH0gZnJvbSBcIi4uL3ByaW1pdGl2ZXNcIjtcbmltcG9ydCB7IHVzZUF0dGFjaG1lbnQgfSBmcm9tIFwiLi4vY29udGV4dC9yZWFjdC9BdHRhY2htZW50Q29udGV4dFwiO1xuaW1wb3J0IHtcbiAgQXZhdGFySW1hZ2UsXG4gIEF2YXRhclJvb3QsXG4gIFRvb2x0aXAsXG4gIFRvb2x0aXBDb250ZW50LFxuICBUb29sdGlwVHJpZ2dlcixcbn0gZnJvbSBcIi4vYmFzZVwiO1xuaW1wb3J0IHsgRGlhbG9nLCBEaWFsb2dUcmlnZ2VyLCBEaWFsb2dDb250ZW50IH0gZnJvbSBcIi4vYmFzZS9kaWFsb2dcIjtcbmltcG9ydCB7IEF2YXRhckZhbGxiYWNrIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1hdmF0YXJcIjtcblxuY29uc3QgQXR0YWNobWVudFJvb3QgPSB3aXRoRGVmYXVsdHMoQXR0YWNobWVudFByaW1pdGl2ZS5Sb290LCB7XG4gIGNsYXNzTmFtZTogXCJhdWktYXR0YWNobWVudC1yb290XCIsXG59KTtcblxuQXR0YWNobWVudFJvb3QuZGlzcGxheU5hbWUgPSBcIkF0dGFjaG1lbnRSb290XCI7XG5cbmNvbnN0IHVzZUZpbGVTcmMgPSAoZmlsZTogRmlsZSB8IHVuZGVmaW5lZCkgPT4ge1xuICBjb25zdCBbc3JjLCBzZXRTcmNdID0gdXNlU3RhdGU8c3RyaW5nIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFmaWxlKSB7XG4gICAgICBzZXRTcmModW5kZWZpbmVkKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBvYmplY3RVcmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUpO1xuICAgIHNldFNyYyhvYmplY3RVcmwpO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwob2JqZWN0VXJsKTtcbiAgICB9O1xuICB9LCBbZmlsZV0pO1xuXG4gIHJldHVybiBzcmM7XG59O1xuXG5jb25zdCB1c2VBdHRhY2htZW50U3JjID0gKCkgPT4ge1xuICBjb25zdCB7IGZpbGUsIHNyYyB9ID0gdXNlQXR0YWNobWVudCgoYSk6IHsgZmlsZT86IEZpbGU7IHNyYz86IHN0cmluZyB9ID0+IHtcbiAgICBpZiAoYS50eXBlICE9PSBcImltYWdlXCIpIHJldHVybiB7fTtcbiAgICBpZiAoYS5maWxlKSByZXR1cm4geyBmaWxlOiBhLmZpbGUgfTtcbiAgICBjb25zdCBzcmMgPSBhLmNvbnRlbnQ/LmZpbHRlcigoYykgPT4gYy50eXBlID09PSBcImltYWdlXCIpWzBdPy5pbWFnZTtcbiAgICBpZiAoIXNyYykgcmV0dXJuIHt9O1xuICAgIHJldHVybiB7IHNyYyB9O1xuICB9KTtcblxuICByZXR1cm4gdXNlRmlsZVNyYyhmaWxlKSA/PyBzcmM7XG59O1xuXG50eXBlIEF0dGFjaG1lbnRQcmV2aWV3UHJvcHMgPSB7XG4gIHNyYzogc3RyaW5nO1xufTtcblxuY29uc3QgQXR0YWNobWVudFByZXZpZXc6IEZDPEF0dGFjaG1lbnRQcmV2aWV3UHJvcHM+ID0gKHsgc3JjIH0pID0+IHtcbiAgY29uc3QgW2lzTG9hZGVkLCBzZXRJc0xvYWRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgcmV0dXJuIChcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQG5leHQvbmV4dC9uby1pbWctZWxlbWVudFxuICAgIDxpbWdcbiAgICAgIHNyYz17c3JjfVxuICAgICAgc3R5bGU9e3tcbiAgICAgICAgd2lkdGg6IFwiYXV0b1wiLFxuICAgICAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgICAgICBtYXhXaWR0aDogXCI3NWR2aFwiLFxuICAgICAgICBtYXhIZWlnaHQ6IFwiNzVkdmhcIixcbiAgICAgICAgZGlzcGxheTogaXNMb2FkZWQgPyBcImJsb2NrXCIgOiBcIm5vbmVcIixcbiAgICAgICAgb3ZlcmZsb3c6IFwiY2xpcFwiLFxuICAgICAgfX1cbiAgICAgIG9uTG9hZD17KCkgPT4gc2V0SXNMb2FkZWQodHJ1ZSl9XG4gICAgICBhbHQ9XCJJbWFnZSBQcmV2aWV3XCJcbiAgICAvPlxuICApO1xufTtcblxuY29uc3QgQXR0YWNobWVudFByZXZpZXdEaWFsb2c6IEZDPFByb3BzV2l0aENoaWxkcmVuPiA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgY29uc3Qgc3JjID0gdXNlQXR0YWNobWVudFNyYygpO1xuXG4gIGlmICghc3JjKSByZXR1cm4gY2hpbGRyZW47XG5cbiAgcmV0dXJuIChcbiAgICA8RGlhbG9nPlxuICAgICAgPERpYWxvZ1RyaWdnZXIgY2xhc3NOYW1lPVwiYXVpLWF0dGFjaG1lbnQtcHJldmlldy10cmlnZ2VyXCIgYXNDaGlsZD5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9EaWFsb2dUcmlnZ2VyPlxuICAgICAgPERpYWxvZ0NvbnRlbnQ+XG4gICAgICAgIDxBdHRhY2htZW50UHJldmlldyBzcmM9e3NyY30gLz5cbiAgICAgIDwvRGlhbG9nQ29udGVudD5cbiAgICA8L0RpYWxvZz5cbiAgKTtcbn07XG5cbmNvbnN0IEF0dGFjaG1lbnRUaHVtYjogRkMgPSAoKSA9PiB7XG4gIGNvbnN0IGlzSW1hZ2UgPSB1c2VBdHRhY2htZW50KChhKSA9PiBhLnR5cGUgPT09IFwiaW1hZ2VcIik7XG4gIGNvbnN0IHNyYyA9IHVzZUF0dGFjaG1lbnRTcmMoKTtcbiAgcmV0dXJuIChcbiAgICA8QXZhdGFyUm9vdCBjbGFzc05hbWU9XCJhdWktYXR0YWNobWVudC10aHVtYlwiPlxuICAgICAgPEF2YXRhckZhbGxiYWNrIGRlbGF5TXM9e2lzSW1hZ2UgPyAyMDAgOiAwfT5cbiAgICAgICAgPEZpbGVJY29uIC8+XG4gICAgICA8L0F2YXRhckZhbGxiYWNrPlxuICAgICAgPEF2YXRhckltYWdlIHNyYz17c3JjfT48L0F2YXRhckltYWdlPlxuICAgIDwvQXZhdGFyUm9vdD5cbiAgKTtcbn07XG5cbmNvbnN0IEF0dGFjaG1lbnQ6IEZDID0gKCkgPT4ge1xuICBjb25zdCBjYW5SZW1vdmUgPSB1c2VBdHRhY2htZW50KChhKSA9PiBhLnNvdXJjZSAhPT0gXCJtZXNzYWdlXCIpO1xuICBjb25zdCB0eXBlTGFiZWwgPSB1c2VBdHRhY2htZW50KChhKSA9PiB7XG4gICAgY29uc3QgdHlwZSA9IGEudHlwZTtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgXCJpbWFnZVwiOlxuICAgICAgICByZXR1cm4gXCJJbWFnZVwiO1xuICAgICAgY2FzZSBcImRvY3VtZW50XCI6XG4gICAgICAgIHJldHVybiBcIkRvY3VtZW50XCI7XG4gICAgICBjYXNlIFwiZmlsZVwiOlxuICAgICAgICByZXR1cm4gXCJGaWxlXCI7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBjb25zdCBfZXhoYXVzdGl2ZUNoZWNrOiBuZXZlciA9IHR5cGU7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBhdHRhY2htZW50IHR5cGU6ICR7X2V4aGF1c3RpdmVDaGVja31gKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gKFxuICAgIDxUb29sdGlwPlxuICAgICAgPEF0dGFjaG1lbnRQcmV2aWV3RGlhbG9nPlxuICAgICAgICA8VG9vbHRpcFRyaWdnZXIgYXNDaGlsZD5cbiAgICAgICAgICA8QXR0YWNobWVudFJvb3Q+XG4gICAgICAgICAgICA8QXR0YWNobWVudFRodW1iIC8+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImF1aS1hdHRhY2htZW50LXRleHRcIj5cbiAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiYXVpLWF0dGFjaG1lbnQtbmFtZVwiPlxuICAgICAgICAgICAgICAgIDxBdHRhY2htZW50UHJpbWl0aXZlLk5hbWUgLz5cbiAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJhdWktYXR0YWNobWVudC10eXBlXCI+e3R5cGVMYWJlbH08L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHtjYW5SZW1vdmUgJiYgPEF0dGFjaG1lbnRSZW1vdmUgLz59XG4gICAgICAgICAgPC9BdHRhY2htZW50Um9vdD5cbiAgICAgICAgPC9Ub29sdGlwVHJpZ2dlcj5cbiAgICAgIDwvQXR0YWNobWVudFByZXZpZXdEaWFsb2c+XG4gICAgICA8VG9vbHRpcENvbnRlbnQgc2lkZT1cInRvcFwiPlxuICAgICAgICA8QXR0YWNobWVudFByaW1pdGl2ZS5OYW1lIC8+XG4gICAgICA8L1Rvb2x0aXBDb250ZW50PlxuICAgIDwvVG9vbHRpcD5cbiAgKTtcbn07XG5cbkF0dGFjaG1lbnQuZGlzcGxheU5hbWUgPSBcIkF0dGFjaG1lbnRcIjtcblxubmFtZXNwYWNlIEF0dGFjaG1lbnRSZW1vdmUge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gSFRNTEJ1dHRvbkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUGFydGlhbDxUb29sdGlwSWNvbkJ1dHRvblByb3BzPjtcbn1cblxuY29uc3QgQXR0YWNobWVudFJlbW92ZSA9IGZvcndhcmRSZWY8XG4gIEF0dGFjaG1lbnRSZW1vdmUuRWxlbWVudCxcbiAgQXR0YWNobWVudFJlbW92ZS5Qcm9wc1xuPigocHJvcHMsIHJlZikgPT4ge1xuICBjb25zdCB7XG4gICAgc3RyaW5nczoge1xuICAgICAgY29tcG9zZXI6IHsgcmVtb3ZlQXR0YWNobWVudDogeyB0b29sdGlwID0gXCJSZW1vdmUgZmlsZVwiIH0gPSB7fSB9ID0ge30sXG4gICAgfSA9IHt9LFxuICB9ID0gdXNlVGhyZWFkQ29uZmlnKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8QXR0YWNobWVudFByaW1pdGl2ZS5SZW1vdmUgYXNDaGlsZD5cbiAgICAgIDxUb29sdGlwSWNvbkJ1dHRvblxuICAgICAgICB0b29sdGlwPXt0b29sdGlwfVxuICAgICAgICBjbGFzc05hbWU9XCJhdWktYXR0YWNobWVudC1yZW1vdmVcIlxuICAgICAgICBzaWRlPVwidG9wXCJcbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgID5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVuID8/IDxDaXJjbGVYSWNvbiAvPn1cbiAgICAgIDwvVG9vbHRpcEljb25CdXR0b24+XG4gICAgPC9BdHRhY2htZW50UHJpbWl0aXZlLlJlbW92ZT5cbiAgKTtcbn0pO1xuXG5BdHRhY2htZW50UmVtb3ZlLmRpc3BsYXlOYW1lID0gXCJBdHRhY2htZW50UmVtb3ZlXCI7XG5cbmNvbnN0IGV4cG9ydHMgPSB7XG4gIFJvb3Q6IEF0dGFjaG1lbnRSb290LFxuICBSZW1vdmU6IEF0dGFjaG1lbnRSZW1vdmUsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBPYmplY3QuYXNzaWduKEF0dGFjaG1lbnQsIGV4cG9ydHMpIGFzIHR5cGVvZiBBdHRhY2htZW50ICZcbiAgdHlwZW9mIGV4cG9ydHM7XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBEaWFsb2dQcmltaXRpdmUgZnJvbSBcIkByYWRpeC11aS9yZWFjdC1kaWFsb2dcIjtcblxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSBcImNsYXNzbmFtZXNcIjtcblxuY29uc3QgRGlhbG9nID0gRGlhbG9nUHJpbWl0aXZlLlJvb3Q7XG5cbmNvbnN0IERpYWxvZ1RyaWdnZXIgPSBEaWFsb2dQcmltaXRpdmUuVHJpZ2dlcjtcblxuY29uc3QgRGlhbG9nUG9ydGFsID0gRGlhbG9nUHJpbWl0aXZlLlBvcnRhbDtcblxuY29uc3QgRGlhbG9nQ2xvc2UgPSBEaWFsb2dQcmltaXRpdmUuQ2xvc2U7XG5cbmNvbnN0IERpYWxvZ092ZXJsYXkgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBEaWFsb2dQcmltaXRpdmUuT3ZlcmxheT4sXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgRGlhbG9nUHJpbWl0aXZlLk92ZXJsYXk+XG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDxEaWFsb2dQcmltaXRpdmUuT3ZlcmxheVxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcImF1aS1kaWFsb2ctb3ZlcmxheVwiLCBjbGFzc05hbWUpfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpO1xuRGlhbG9nT3ZlcmxheS5kaXNwbGF5TmFtZSA9IERpYWxvZ1ByaW1pdGl2ZS5PdmVybGF5LmRpc3BsYXlOYW1lO1xuXG5jb25zdCBEaWFsb2dDb250ZW50ID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgRGlhbG9nUHJpbWl0aXZlLkNvbnRlbnQ+LFxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIERpYWxvZ1ByaW1pdGl2ZS5Db250ZW50PlxuPigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPERpYWxvZ1BvcnRhbD5cbiAgICA8RGlhbG9nT3ZlcmxheSAvPlxuICAgIDxEaWFsb2dQcmltaXRpdmUuQ29udGVudFxuICAgICAgcmVmPXtyZWZ9XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoXCJhdWktZGlhbG9nLWNvbnRlbnRcIiwgY2xhc3NOYW1lKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgICB7LyogPERpYWxvZ1ByaW1pdGl2ZS5DbG9zZSBjbGFzc05hbWU9XCJyaW5nLW9mZnNldC1iYWNrZ3JvdW5kIGZvY3VzOnJpbmctcmluZyBkYXRhLVtzdGF0ZT1vcGVuXTpiZy1hY2NlbnQgZGF0YS1bc3RhdGU9b3Blbl06dGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGFic29sdXRlIHJpZ2h0LTQgdG9wLTQgcm91bmRlZC1zbSBvcGFjaXR5LTcwIHRyYW5zaXRpb24tb3BhY2l0eSBob3ZlcjpvcGFjaXR5LTEwMCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctb2Zmc2V0LTIgZGlzYWJsZWQ6cG9pbnRlci1ldmVudHMtbm9uZVwiPlxuICAgICAgICA8WEljb24gY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInNyLW9ubHlcIj5DbG9zZTwvc3Bhbj5cbiAgICAgIDwvRGlhbG9nUHJpbWl0aXZlLkNsb3NlPiAqL31cbiAgICA8L0RpYWxvZ1ByaW1pdGl2ZS5Db250ZW50PlxuICA8L0RpYWxvZ1BvcnRhbD5cbikpO1xuRGlhbG9nQ29udGVudC5kaXNwbGF5TmFtZSA9IERpYWxvZ1ByaW1pdGl2ZS5Db250ZW50LmRpc3BsYXlOYW1lO1xuXG4vLyBjb25zdCBEaWFsb2dIZWFkZXIgPSAoe1xuLy8gICBjbGFzc05hbWUsXG4vLyAgIC4uLnByb3BzXG4vLyB9OiBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4pID0+IChcbi8vICAgPGRpdlxuLy8gICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcbi8vICAgICAgIFwiZmxleCBmbGV4LWNvbCBzcGFjZS15LTEuNSB0ZXh0LWNlbnRlciBzbTp0ZXh0LWxlZnRcIixcbi8vICAgICAgIGNsYXNzTmFtZSxcbi8vICAgICApfVxuLy8gICAgIHsuLi5wcm9wc31cbi8vICAgLz5cbi8vICk7XG4vLyBEaWFsb2dIZWFkZXIuZGlzcGxheU5hbWUgPSBcIkRpYWxvZ0hlYWRlclwiO1xuXG4vLyBjb25zdCBEaWFsb2dGb290ZXIgPSAoe1xuLy8gICBjbGFzc05hbWUsXG4vLyAgIC4uLnByb3BzXG4vLyB9OiBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4pID0+IChcbi8vICAgPGRpdlxuLy8gICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcbi8vICAgICAgIFwiZmxleCBmbGV4LWNvbC1yZXZlcnNlIHNtOmZsZXgtcm93IHNtOmp1c3RpZnktZW5kIHNtOnNwYWNlLXgtMlwiLFxuLy8gICAgICAgY2xhc3NOYW1lLFxuLy8gICAgICl9XG4vLyAgICAgey4uLnByb3BzfVxuLy8gICAvPlxuLy8gKTtcbi8vIERpYWxvZ0Zvb3Rlci5kaXNwbGF5TmFtZSA9IFwiRGlhbG9nRm9vdGVyXCI7XG5cbi8vIGNvbnN0IERpYWxvZ1RpdGxlID0gUmVhY3QuZm9yd2FyZFJlZjxcbi8vICAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgRGlhbG9nUHJpbWl0aXZlLlRpdGxlPixcbi8vICAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBEaWFsb2dQcmltaXRpdmUuVGl0bGU+XG4vLyA+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4vLyAgIDxEaWFsb2dQcmltaXRpdmUuVGl0bGVcbi8vICAgICByZWY9e3JlZn1cbi8vICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoXG4vLyAgICAgICBcInRleHQtbGcgZm9udC1zZW1pYm9sZCBsZWFkaW5nLW5vbmUgdHJhY2tpbmctdGlnaHRcIixcbi8vICAgICAgIGNsYXNzTmFtZSxcbi8vICAgICApfVxuLy8gICAgIHsuLi5wcm9wc31cbi8vICAgLz5cbi8vICkpO1xuLy8gRGlhbG9nVGl0bGUuZGlzcGxheU5hbWUgPSBEaWFsb2dQcmltaXRpdmUuVGl0bGUuZGlzcGxheU5hbWU7XG5cbi8vIGNvbnN0IERpYWxvZ0Rlc2NyaXB0aW9uID0gUmVhY3QuZm9yd2FyZFJlZjxcbi8vICAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgRGlhbG9nUHJpbWl0aXZlLkRlc2NyaXB0aW9uPixcbi8vICAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBEaWFsb2dQcmltaXRpdmUuRGVzY3JpcHRpb24+XG4vLyA+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4vLyAgIDxEaWFsb2dQcmltaXRpdmUuRGVzY3JpcHRpb25cbi8vICAgICByZWY9e3JlZn1cbi8vICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoXCJ0ZXh0LW11dGVkLWZvcmVncm91bmQgdGV4dC1zbVwiLCBjbGFzc05hbWUpfVxuLy8gICAgIHsuLi5wcm9wc31cbi8vICAgLz5cbi8vICkpO1xuLy8gRGlhbG9nRGVzY3JpcHRpb24uZGlzcGxheU5hbWUgPSBEaWFsb2dQcmltaXRpdmUuRGVzY3JpcHRpb24uZGlzcGxheU5hbWU7XG5cbmV4cG9ydCB7XG4gIERpYWxvZyxcbiAgRGlhbG9nUG9ydGFsLFxuICBEaWFsb2dPdmVybGF5LFxuICBEaWFsb2dUcmlnZ2VyLFxuICBEaWFsb2dDbG9zZSxcbiAgRGlhbG9nQ29udGVudCxcbiAgLy8gRGlhbG9nSGVhZGVyLFxuICAvLyBEaWFsb2dGb290ZXIsXG4gIC8vIERpYWxvZ1RpdGxlLFxuICAvLyBEaWFsb2dEZXNjcmlwdGlvbixcbn07XG4iLCJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmLCBmb3J3YXJkUmVmLCB0eXBlIEZDIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB3aXRoRGVmYXVsdHMgfSBmcm9tIFwiLi91dGlscy93aXRoRGVmYXVsdHNcIjtcbmltcG9ydCB7IEF2YXRhciB9IGZyb20gXCIuL2Jhc2UvYXZhdGFyXCI7XG5pbXBvcnQgeyBTdWdnZXN0aW9uQ29uZmlnLCB1c2VUaHJlYWRDb25maWcgfSBmcm9tIFwiLi90aHJlYWQtY29uZmlnXCI7XG5pbXBvcnQgeyBUaHJlYWRQcmltaXRpdmUgfSBmcm9tIFwiLi4vcHJpbWl0aXZlc1wiO1xuaW1wb3J0IHsgdXNlVGhyZWFkIH0gZnJvbSBcIi4uL2NvbnRleHRcIjtcblxuY29uc3QgVGhyZWFkV2VsY29tZTogRkMgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFRocmVhZFdlbGNvbWVSb290PlxuICAgICAgPFRocmVhZFdlbGNvbWVDZW50ZXI+XG4gICAgICAgIDxUaHJlYWRXZWxjb21lQXZhdGFyIC8+XG4gICAgICAgIDxUaHJlYWRXZWxjb21lTWVzc2FnZSAvPlxuICAgICAgPC9UaHJlYWRXZWxjb21lQ2VudGVyPlxuICAgICAgPFRocmVhZFdlbGNvbWVTdWdnZXN0aW9ucyAvPlxuICAgIDwvVGhyZWFkV2VsY29tZVJvb3Q+XG4gICk7XG59O1xuXG5UaHJlYWRXZWxjb21lLmRpc3BsYXlOYW1lID0gXCJUaHJlYWRXZWxjb21lXCI7XG5cbmNvbnN0IFRocmVhZFdlbGNvbWVSb290U3R5bGVkID0gd2l0aERlZmF1bHRzKFwiZGl2XCIsIHtcbiAgY2xhc3NOYW1lOiBcImF1aS10aHJlYWQtd2VsY29tZS1yb290XCIsXG59KTtcblxuY29uc3QgVGhyZWFkV2VsY29tZUNlbnRlciA9IHdpdGhEZWZhdWx0cyhcImRpdlwiLCB7XG4gIGNsYXNzTmFtZTogXCJhdWktdGhyZWFkLXdlbGNvbWUtY2VudGVyXCIsXG59KTtcblxubmFtZXNwYWNlIFRocmVhZFdlbGNvbWVSb290IHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEhUTUxEaXZFbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IENvbXBvbmVudFByb3BzV2l0aG91dFJlZjxcImRpdlwiPjtcbn1cblxuY29uc3QgVGhyZWFkV2VsY29tZVJvb3QgPSBmb3J3YXJkUmVmPFxuICBUaHJlYWRXZWxjb21lUm9vdC5FbGVtZW50LFxuICBUaHJlYWRXZWxjb21lUm9vdC5Qcm9wc1xuPigocHJvcHMsIHJlZikgPT4ge1xuICByZXR1cm4gKFxuICAgIDxUaHJlYWRQcmltaXRpdmUuRW1wdHk+XG4gICAgICA8VGhyZWFkV2VsY29tZVJvb3RTdHlsZWQgey4uLnByb3BzfSByZWY9e3JlZn0gLz5cbiAgICA8L1RocmVhZFByaW1pdGl2ZS5FbXB0eT5cbiAgKTtcbn0pO1xuXG5UaHJlYWRXZWxjb21lUm9vdC5kaXNwbGF5TmFtZSA9IFwiVGhyZWFkV2VsY29tZVJvb3RcIjtcblxuY29uc3QgVGhyZWFkV2VsY29tZUF2YXRhcjogRkMgPSAoKSA9PiB7XG4gIGNvbnN0IHsgYXNzaXN0YW50QXZhdGFyOiBhdmF0YXIgPSB7IGZhbGxiYWNrOiBcIkFcIiB9IH0gPSB1c2VUaHJlYWRDb25maWcoKTtcbiAgcmV0dXJuIDxBdmF0YXIgey4uLmF2YXRhcn0gLz47XG59O1xuXG5jb25zdCBUaHJlYWRXZWxjb21lTWVzc2FnZVN0eWxlZCA9IHdpdGhEZWZhdWx0cyhcInBcIiwge1xuICBjbGFzc05hbWU6IFwiYXVpLXRocmVhZC13ZWxjb21lLW1lc3NhZ2VcIixcbn0pO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgVGhyZWFkV2VsY29tZS5NZXNzYWdlLlByb3BzYCBpbnN0ZWFkLiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiAwLjYuXG4gKi9cbmV4cG9ydCB0eXBlIFRocmVhZFdlbGNvbWVNZXNzYWdlUHJvcHMgPSBUaHJlYWRXZWxjb21lTWVzc2FnZS5Qcm9wcztcblxubmFtZXNwYWNlIFRocmVhZFdlbGNvbWVNZXNzYWdlIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEhUTUxQYXJhZ3JhcGhFbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IE9taXQ8XG4gICAgQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBUaHJlYWRXZWxjb21lTWVzc2FnZVN0eWxlZD4sXG4gICAgXCJjaGlsZHJlblwiXG4gID4gJiB7IG1lc3NhZ2U/OiBzdHJpbmcgfCB1bmRlZmluZWQgfTtcbn1cblxuY29uc3QgVGhyZWFkV2VsY29tZU1lc3NhZ2UgPSBmb3J3YXJkUmVmPFxuICBUaHJlYWRXZWxjb21lTWVzc2FnZS5FbGVtZW50LFxuICBUaHJlYWRXZWxjb21lTWVzc2FnZS5Qcm9wc1xuPigoeyBtZXNzYWdlOiBtZXNzYWdlUHJvcCwgLi4ucmVzdCB9LCByZWYpID0+IHtcbiAgY29uc3QgeyB3ZWxjb21lOiB7IG1lc3NhZ2UgPSBcIkhvdyBjYW4gSSBoZWxwIHlvdSB0b2RheT9cIiB9ID0ge30gfSA9XG4gICAgdXNlVGhyZWFkQ29uZmlnKCk7XG4gIHJldHVybiAoXG4gICAgPFRocmVhZFdlbGNvbWVNZXNzYWdlU3R5bGVkIHsuLi5yZXN0fSByZWY9e3JlZn0+XG4gICAgICB7bWVzc2FnZVByb3AgPz8gbWVzc2FnZX1cbiAgICA8L1RocmVhZFdlbGNvbWVNZXNzYWdlU3R5bGVkPlxuICApO1xufSk7XG5cblRocmVhZFdlbGNvbWVNZXNzYWdlLmRpc3BsYXlOYW1lID0gXCJUaHJlYWRXZWxjb21lTWVzc2FnZVwiO1xuXG5jb25zdCBUaHJlYWRXZWxjb21lU3VnZ2VzdGlvbkNvbnRhaW5lciA9IHdpdGhEZWZhdWx0cyhcImRpdlwiLCB7XG4gIGNsYXNzTmFtZTogXCJhdWktdGhyZWFkLXdlbGNvbWUtc3VnZ2VzdGlvbi1jb250YWluZXJcIixcbn0pO1xuXG5jb25zdCBUaHJlYWRXZWxjb21lU3VnZ2VzdGlvblN0eWxlZCA9IHdpdGhEZWZhdWx0cyhUaHJlYWRQcmltaXRpdmUuU3VnZ2VzdGlvbiwge1xuICBjbGFzc05hbWU6IFwiYXVpLXRocmVhZC13ZWxjb21lLXN1Z2dlc3Rpb25cIixcbn0pO1xuXG5leHBvcnQgdHlwZSBUaHJlYWRXZWxjb21lU3VnZ2VzdGlvblByb3BzID0ge1xuICBzdWdnZXN0aW9uOiBTdWdnZXN0aW9uQ29uZmlnO1xufTtcblxuY29uc3QgVGhyZWFkV2VsY29tZVN1Z2dlc3Rpb246IEZDPFRocmVhZFdlbGNvbWVTdWdnZXN0aW9uUHJvcHM+ID0gKHtcbiAgc3VnZ2VzdGlvbjogeyB0ZXh0LCBwcm9tcHQgfSxcbn0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8VGhyZWFkV2VsY29tZVN1Z2dlc3Rpb25TdHlsZWQgcHJvbXB0PXtwcm9tcHR9IG1ldGhvZD1cInJlcGxhY2VcIiBhdXRvU2VuZD5cbiAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImF1aS10aHJlYWQtd2VsY29tZS1zdWdnZXN0aW9uLXRleHRcIj5cbiAgICAgICAge3RleHQgPz8gcHJvbXB0fVxuICAgICAgPC9zcGFuPlxuICAgIDwvVGhyZWFkV2VsY29tZVN1Z2dlc3Rpb25TdHlsZWQ+XG4gICk7XG59O1xuXG5jb25zdCBUaHJlYWRXZWxjb21lU3VnZ2VzdGlvbnM6IEZDID0gKCkgPT4ge1xuICBjb25zdCBzdWdnZXN0aW9uczIgPSB1c2VUaHJlYWQoKHQpID0+IHQuc3VnZ2VzdGlvbnMpO1xuICBjb25zdCB7IHdlbGNvbWU6IHsgc3VnZ2VzdGlvbnMgfSA9IHt9IH0gPSB1c2VUaHJlYWRDb25maWcoKTtcblxuICBjb25zdCBmaW5hbFN1Z2dlc3Rpb25zID0gc3VnZ2VzdGlvbnMyLmxlbmd0aCA/IHN1Z2dlc3Rpb25zMiA6IHN1Z2dlc3Rpb25zO1xuXG4gIHJldHVybiAoXG4gICAgPFRocmVhZFdlbGNvbWVTdWdnZXN0aW9uQ29udGFpbmVyPlxuICAgICAge2ZpbmFsU3VnZ2VzdGlvbnM/Lm1hcCgoc3VnZ2VzdGlvbiwgaWR4KSA9PiB7XG4gICAgICAgIGNvbnN0IGtleSA9IGAke3N1Z2dlc3Rpb24ucHJvbXB0fS0ke2lkeH1gO1xuICAgICAgICByZXR1cm4gPFRocmVhZFdlbGNvbWVTdWdnZXN0aW9uIGtleT17a2V5fSBzdWdnZXN0aW9uPXtzdWdnZXN0aW9ufSAvPjtcbiAgICAgIH0pfVxuICAgIDwvVGhyZWFkV2VsY29tZVN1Z2dlc3Rpb25Db250YWluZXI+XG4gICk7XG59O1xuXG5UaHJlYWRXZWxjb21lU3VnZ2VzdGlvbnMuZGlzcGxheU5hbWUgPSBcIlRocmVhZFdlbGNvbWVTdWdnZXN0aW9uc1wiO1xuXG5jb25zdCBleHBvcnRzID0ge1xuICBSb290OiBUaHJlYWRXZWxjb21lUm9vdCxcbiAgQ2VudGVyOiBUaHJlYWRXZWxjb21lQ2VudGVyLFxuICBBdmF0YXI6IFRocmVhZFdlbGNvbWVBdmF0YXIsXG4gIE1lc3NhZ2U6IFRocmVhZFdlbGNvbWVNZXNzYWdlLFxuICBTdWdnZXN0aW9uczogVGhyZWFkV2VsY29tZVN1Z2dlc3Rpb25zLFxuICBTdWdnZXN0aW9uOiBUaHJlYWRXZWxjb21lU3VnZ2VzdGlvbixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5hc3NpZ24oVGhyZWFkV2VsY29tZSwgZXhwb3J0cykgYXMgdHlwZW9mIFRocmVhZFdlbGNvbWUgJlxuICB0eXBlb2YgZXhwb3J0cztcbiIsIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWYsIGZvcndhcmRSZWYsIHR5cGUgRkMgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IEJyYW5jaFBpY2tlciBmcm9tIFwiLi9icmFuY2gtcGlja2VyXCI7XG5pbXBvcnQgeyB3aXRoRGVmYXVsdHMgfSBmcm9tIFwiLi91dGlscy93aXRoRGVmYXVsdHNcIjtcbmltcG9ydCBVc2VyQWN0aW9uQmFyIGZyb20gXCIuL3VzZXItYWN0aW9uLWJhclwiO1xuaW1wb3J0IENvbnRlbnRQYXJ0IGZyb20gXCIuL2NvbnRlbnQtcGFydFwiO1xuaW1wb3J0IHsgTWVzc2FnZVByaW1pdGl2ZSB9IGZyb20gXCIuLi9wcmltaXRpdmVzXCI7XG5pbXBvcnQgQXR0YWNobWVudCBmcm9tIFwiLi9hdHRhY2htZW50XCI7XG5cbmNvbnN0IFVzZXJNZXNzYWdlOiBGQyA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8VXNlck1lc3NhZ2VSb290PlxuICAgICAgPFVzZXJNZXNzYWdlQXR0YWNobWVudHMgLz5cbiAgICAgIHsvKiBUT0RPIHRoaXMgaXMgdGVtcG9yYXJ5IHVudGlsIHdlIHBsYWNlIHRoZSBVc2VyQWN0aW9uQmFyIGluIGEgYmV0dGVyIHBsYWNlICovfVxuICAgICAgPE1lc3NhZ2VQcmltaXRpdmUuSWYgaGFzQ29udGVudD5cbiAgICAgICAgPFVzZXJBY3Rpb25CYXIgLz5cbiAgICAgICAgPFVzZXJNZXNzYWdlQ29udGVudCAvPlxuICAgICAgPC9NZXNzYWdlUHJpbWl0aXZlLklmPlxuICAgICAgPEJyYW5jaFBpY2tlciAvPlxuICAgIDwvVXNlck1lc3NhZ2VSb290PlxuICApO1xufTtcblxuVXNlck1lc3NhZ2UuZGlzcGxheU5hbWUgPSBcIlVzZXJNZXNzYWdlXCI7XG5cbmNvbnN0IFVzZXJNZXNzYWdlUm9vdCA9IHdpdGhEZWZhdWx0cyhNZXNzYWdlUHJpbWl0aXZlLlJvb3QsIHtcbiAgY2xhc3NOYW1lOiBcImF1aS11c2VyLW1lc3NhZ2Utcm9vdFwiLFxufSk7XG5cblVzZXJNZXNzYWdlUm9vdC5kaXNwbGF5TmFtZSA9IFwiVXNlck1lc3NhZ2VSb290XCI7XG5cbmNvbnN0IFVzZXJNZXNzYWdlQ29udGVudFdyYXBwZXIgPSB3aXRoRGVmYXVsdHMoXCJkaXZcIiwge1xuICBjbGFzc05hbWU6IFwiYXVpLXVzZXItbWVzc2FnZS1jb250ZW50XCIsXG59KTtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYFVzZXJNZXNzYWdlLkNvbnRlbnQuUHJvcHNgIGluc3RlYWQuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIDAuNi5cbiAqL1xuZXhwb3J0IHR5cGUgVXNlck1lc3NhZ2VDb250ZW50UHJvcHMgPSBVc2VyTWVzc2FnZUNvbnRlbnQuUHJvcHM7XG5cbm5hbWVzcGFjZSBVc2VyTWVzc2FnZUNvbnRlbnQge1xuICBleHBvcnQgdHlwZSBFbGVtZW50ID0gSFRNTERpdkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gTWVzc2FnZVByaW1pdGl2ZS5Db250ZW50LlByb3BzICZcbiAgICBDb21wb25lbnRQcm9wc1dpdGhvdXRSZWY8XCJkaXZcIj47XG59XG5cbmNvbnN0IFVzZXJNZXNzYWdlQ29udGVudCA9IGZvcndhcmRSZWY8XG4gIFVzZXJNZXNzYWdlQ29udGVudC5FbGVtZW50LFxuICBVc2VyTWVzc2FnZUNvbnRlbnQuUHJvcHNcbj4oKHsgY29tcG9uZW50cywgLi4ucHJvcHMgfSwgcmVmKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFVzZXJNZXNzYWdlQ29udGVudFdyYXBwZXIgey4uLnByb3BzfSByZWY9e3JlZn0+XG4gICAgICA8TWVzc2FnZVByaW1pdGl2ZS5Db250ZW50XG4gICAgICAgIGNvbXBvbmVudHM9e3tcbiAgICAgICAgICAuLi5jb21wb25lbnRzLFxuICAgICAgICAgIFRleHQ6IGNvbXBvbmVudHM/LlRleHQgPz8gQ29udGVudFBhcnQuVGV4dCxcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgPC9Vc2VyTWVzc2FnZUNvbnRlbnRXcmFwcGVyPlxuICApO1xufSk7XG5cblVzZXJNZXNzYWdlQ29udGVudC5kaXNwbGF5TmFtZSA9IFwiVXNlck1lc3NhZ2VDb250ZW50XCI7XG5cbmNvbnN0IFVzZXJNZXNzYWdlQXR0YWNobWVudHNDb250YWluZXIgPSB3aXRoRGVmYXVsdHMoXCJkaXZcIiwge1xuICBjbGFzc05hbWU6IFwiYXVpLXVzZXItbWVzc2FnZS1hdHRhY2htZW50c1wiLFxufSk7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBVc2VyTWVzc2FnZS5BdHRhY2htZW50cy5Qcm9wc2AgaW5zdGVhZC4gVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gMC42LlxuICovXG5leHBvcnQgdHlwZSBVc2VyTWVzc2FnZUF0dGFjaG1lbnRzUHJvcHMgPSBVc2VyTWVzc2FnZUF0dGFjaG1lbnRzLlByb3BzO1xuXG5uYW1lc3BhY2UgVXNlck1lc3NhZ2VBdHRhY2htZW50cyB7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUGFydGlhbDxNZXNzYWdlUHJpbWl0aXZlLkF0dGFjaG1lbnRzLlByb3BzPjtcbn1cblxuY29uc3QgVXNlck1lc3NhZ2VBdHRhY2htZW50czogRkM8VXNlck1lc3NhZ2VBdHRhY2htZW50c1Byb3BzPiA9ICh7XG4gIGNvbXBvbmVudHMsXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPE1lc3NhZ2VQcmltaXRpdmUuSWYgaGFzQXR0YWNobWVudHM+XG4gICAgICA8VXNlck1lc3NhZ2VBdHRhY2htZW50c0NvbnRhaW5lcj5cbiAgICAgICAgPE1lc3NhZ2VQcmltaXRpdmUuQXR0YWNobWVudHMgXG4gICAgICAgICAgY29tcG9uZW50cz17e1xuICAgICAgICAgICAgLi4uY29tcG9uZW50cyxcbiAgICAgICAgICAgIEF0dGFjaG1lbnQ6IGNvbXBvbmVudHM/LkF0dGFjaG1lbnQgPz8gQXR0YWNobWVudCxcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgPC9Vc2VyTWVzc2FnZUF0dGFjaG1lbnRzQ29udGFpbmVyPlxuICAgIDwvTWVzc2FnZVByaW1pdGl2ZS5JZj5cbiAgKTtcbn07XG5cbmNvbnN0IGV4cG9ydHMgPSB7XG4gIFJvb3Q6IFVzZXJNZXNzYWdlUm9vdCxcbiAgQ29udGVudDogVXNlck1lc3NhZ2VDb250ZW50LFxuICBBdHRhY2htZW50czogVXNlck1lc3NhZ2VBdHRhY2htZW50cyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5hc3NpZ24oVXNlck1lc3NhZ2UsIGV4cG9ydHMpIGFzIHR5cGVvZiBVc2VyTWVzc2FnZSAmXG4gIHR5cGVvZiBleHBvcnRzO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IGZvcndhcmRSZWYsIHR5cGUgRkMgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFBlbmNpbEljb24gfSBmcm9tIFwibHVjaWRlLXJlYWN0XCI7XG5cbmltcG9ydCB7XG4gIFRvb2x0aXBJY29uQnV0dG9uLFxuICBUb29sdGlwSWNvbkJ1dHRvblByb3BzLFxufSBmcm9tIFwiLi9iYXNlL3Rvb2x0aXAtaWNvbi1idXR0b25cIjtcbmltcG9ydCB7IHdpdGhEZWZhdWx0cyB9IGZyb20gXCIuL3V0aWxzL3dpdGhEZWZhdWx0c1wiO1xuaW1wb3J0IHsgdXNlVGhyZWFkQ29uZmlnIH0gZnJvbSBcIi4vdGhyZWFkLWNvbmZpZ1wiO1xuaW1wb3J0IHsgdXNlVGhyZWFkIH0gZnJvbSBcIi4uL2NvbnRleHRcIjtcbmltcG9ydCB7IEFjdGlvbkJhclByaW1pdGl2ZSB9IGZyb20gXCIuLi9wcmltaXRpdmVzXCI7XG5cbmNvbnN0IHVzZUFsbG93RWRpdCA9IChlbnN1cmVDYXBhYmlsaXR5ID0gZmFsc2UpID0+IHtcbiAgY29uc3QgeyB1c2VyTWVzc2FnZTogeyBhbGxvd0VkaXQgPSB0cnVlIH0gPSB7fSB9ID0gdXNlVGhyZWFkQ29uZmlnKCk7XG4gIGNvbnN0IGVkaXRTdXBwb3J0ZWQgPSB1c2VUaHJlYWQoKHQpID0+IHQuY2FwYWJpbGl0aWVzLmVkaXQpO1xuICByZXR1cm4gYWxsb3dFZGl0ICYmICghZW5zdXJlQ2FwYWJpbGl0eSB8fCBlZGl0U3VwcG9ydGVkKTtcbn07XG5cbmNvbnN0IFVzZXJBY3Rpb25CYXI6IEZDID0gKCkgPT4ge1xuICBjb25zdCBhbGxvd0VkaXQgPSB1c2VBbGxvd0VkaXQodHJ1ZSk7XG4gIGlmICghYWxsb3dFZGl0KSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIChcbiAgICA8VXNlckFjdGlvbkJhclJvb3QgaGlkZVdoZW5SdW5uaW5nIGF1dG9oaWRlPVwibm90LWxhc3RcIj5cbiAgICAgIDxVc2VyQWN0aW9uQmFyRWRpdCAvPlxuICAgIDwvVXNlckFjdGlvbkJhclJvb3Q+XG4gICk7XG59O1xuXG5Vc2VyQWN0aW9uQmFyLmRpc3BsYXlOYW1lID0gXCJVc2VyQWN0aW9uQmFyXCI7XG5cbmNvbnN0IFVzZXJBY3Rpb25CYXJSb290ID0gd2l0aERlZmF1bHRzKEFjdGlvbkJhclByaW1pdGl2ZS5Sb290LCB7XG4gIGNsYXNzTmFtZTogXCJhdWktdXNlci1hY3Rpb24tYmFyLXJvb3RcIixcbn0pO1xuXG5Vc2VyQWN0aW9uQmFyUm9vdC5kaXNwbGF5TmFtZSA9IFwiVXNlckFjdGlvbkJhclJvb3RcIjtcblxubmFtZXNwYWNlIFVzZXJBY3Rpb25CYXJFZGl0IHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEFjdGlvbkJhclByaW1pdGl2ZS5FZGl0LkVsZW1lbnQ7XG4gIGV4cG9ydCB0eXBlIFByb3BzID0gUGFydGlhbDxUb29sdGlwSWNvbkJ1dHRvblByb3BzPjtcbn1cblxuY29uc3QgVXNlckFjdGlvbkJhckVkaXQgPSBmb3J3YXJkUmVmPFxuICBVc2VyQWN0aW9uQmFyRWRpdC5FbGVtZW50LFxuICBVc2VyQWN0aW9uQmFyRWRpdC5Qcm9wc1xuPigocHJvcHMsIHJlZikgPT4ge1xuICBjb25zdCB7XG4gICAgc3RyaW5nczogeyB1c2VyTWVzc2FnZTogeyBlZGl0OiB7IHRvb2x0aXAgPSBcIkVkaXRcIiB9ID0ge30gfSA9IHt9IH0gPSB7fSxcbiAgfSA9IHVzZVRocmVhZENvbmZpZygpO1xuICBjb25zdCBhbGxvd0VkaXQgPSB1c2VBbGxvd0VkaXQoKTtcbiAgcmV0dXJuIChcbiAgICA8QWN0aW9uQmFyUHJpbWl0aXZlLkVkaXQgZGlzYWJsZWQ9eyFhbGxvd0VkaXR9IGFzQ2hpbGQ+XG4gICAgICA8VG9vbHRpcEljb25CdXR0b24gdG9vbHRpcD17dG9vbHRpcH0gey4uLnByb3BzfSByZWY9e3JlZn0+XG4gICAgICAgIHtwcm9wcy5jaGlsZHJlbiA/PyA8UGVuY2lsSWNvbiAvPn1cbiAgICAgIDwvVG9vbHRpcEljb25CdXR0b24+XG4gICAgPC9BY3Rpb25CYXJQcmltaXRpdmUuRWRpdD5cbiAgKTtcbn0pO1xuXG5Vc2VyQWN0aW9uQmFyRWRpdC5kaXNwbGF5TmFtZSA9IFwiVXNlckFjdGlvbkJhckVkaXRcIjtcblxuY29uc3QgZXhwb3J0cyA9IHtcbiAgUm9vdDogVXNlckFjdGlvbkJhclJvb3QsXG4gIEVkaXQ6IFVzZXJBY3Rpb25CYXJFZGl0LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmFzc2lnbihVc2VyQWN0aW9uQmFyLCBleHBvcnRzKSBhcyB0eXBlb2YgVXNlckFjdGlvbkJhciAmXG4gIHR5cGVvZiBleHBvcnRzO1xuIiwiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IGZvcndhcmRSZWYsIHR5cGUgRkMgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgQnV0dG9uLCBCdXR0b25Qcm9wcyB9IGZyb20gXCIuL2Jhc2UvYnV0dG9uXCI7XG5pbXBvcnQgeyB3aXRoRGVmYXVsdHMgfSBmcm9tIFwiLi91dGlscy93aXRoRGVmYXVsdHNcIjtcbmltcG9ydCB7IHVzZVRocmVhZENvbmZpZyB9IGZyb20gXCIuL3RocmVhZC1jb25maWdcIjtcbmltcG9ydCB7IENvbXBvc2VyUHJpbWl0aXZlIH0gZnJvbSBcIi4uL3ByaW1pdGl2ZXNcIjtcblxuY29uc3QgRWRpdENvbXBvc2VyOiBGQyA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8RWRpdENvbXBvc2VyUm9vdD5cbiAgICAgIDxFZGl0Q29tcG9zZXJJbnB1dCAvPlxuXG4gICAgICA8RWRpdENvbXBvc2VyRm9vdGVyPlxuICAgICAgICA8RWRpdENvbXBvc2VyQ2FuY2VsIC8+XG4gICAgICAgIDxFZGl0Q29tcG9zZXJTZW5kIC8+XG4gICAgICA8L0VkaXRDb21wb3NlckZvb3Rlcj5cbiAgICA8L0VkaXRDb21wb3NlclJvb3Q+XG4gICk7XG59O1xuXG5FZGl0Q29tcG9zZXIuZGlzcGxheU5hbWUgPSBcIkVkaXRDb21wb3NlclwiO1xuXG5jb25zdCBFZGl0Q29tcG9zZXJSb290ID0gd2l0aERlZmF1bHRzKENvbXBvc2VyUHJpbWl0aXZlLlJvb3QsIHtcbiAgY2xhc3NOYW1lOiBcImF1aS1lZGl0LWNvbXBvc2VyLXJvb3RcIixcbn0pO1xuXG5FZGl0Q29tcG9zZXJSb290LmRpc3BsYXlOYW1lID0gXCJFZGl0Q29tcG9zZXJSb290XCI7XG5cbmNvbnN0IEVkaXRDb21wb3NlcklucHV0ID0gd2l0aERlZmF1bHRzKENvbXBvc2VyUHJpbWl0aXZlLklucHV0LCB7XG4gIGNsYXNzTmFtZTogXCJhdWktZWRpdC1jb21wb3Nlci1pbnB1dFwiLFxufSk7XG5cbkVkaXRDb21wb3NlcklucHV0LmRpc3BsYXlOYW1lID0gXCJFZGl0Q29tcG9zZXJJbnB1dFwiO1xuXG5jb25zdCBFZGl0Q29tcG9zZXJGb290ZXIgPSB3aXRoRGVmYXVsdHMoXCJkaXZcIiwge1xuICBjbGFzc05hbWU6IFwiYXVpLWVkaXQtY29tcG9zZXItZm9vdGVyXCIsXG59KTtcblxuRWRpdENvbXBvc2VyRm9vdGVyLmRpc3BsYXlOYW1lID0gXCJFZGl0Q29tcG9zZXJGb290ZXJcIjtcblxubmFtZXNwYWNlIEVkaXRDb21wb3NlckNhbmNlbCB7XG4gIGV4cG9ydCB0eXBlIEVsZW1lbnQgPSBIVE1MQnV0dG9uRWxlbWVudDtcbiAgZXhwb3J0IHR5cGUgUHJvcHMgPSBQYXJ0aWFsPEJ1dHRvblByb3BzPjtcbn1cblxuY29uc3QgRWRpdENvbXBvc2VyQ2FuY2VsID0gZm9yd2FyZFJlZjxcbiAgRWRpdENvbXBvc2VyQ2FuY2VsLkVsZW1lbnQsXG4gIEVkaXRDb21wb3NlckNhbmNlbC5Qcm9wc1xuPigocHJvcHMsIHJlZikgPT4ge1xuICBjb25zdCB7XG4gICAgc3RyaW5nczogeyBlZGl0Q29tcG9zZXI6IHsgY2FuY2VsOiB7IGxhYmVsID0gXCJDYW5jZWxcIiB9ID0ge30gfSA9IHt9IH0gPSB7fSxcbiAgfSA9IHVzZVRocmVhZENvbmZpZygpO1xuICByZXR1cm4gKFxuICAgIDxDb21wb3NlclByaW1pdGl2ZS5DYW5jZWwgYXNDaGlsZD5cbiAgICAgIDxCdXR0b24gdmFyaWFudD1cImdob3N0XCIgey4uLnByb3BzfSByZWY9e3JlZn0+XG4gICAgICAgIHtwcm9wcy5jaGlsZHJlbiA/PyBsYWJlbH1cbiAgICAgIDwvQnV0dG9uPlxuICAgIDwvQ29tcG9zZXJQcmltaXRpdmUuQ2FuY2VsPlxuICApO1xufSk7XG5cbkVkaXRDb21wb3NlckNhbmNlbC5kaXNwbGF5TmFtZSA9IFwiRWRpdENvbXBvc2VyQ2FuY2VsXCI7XG5cbm5hbWVzcGFjZSBFZGl0Q29tcG9zZXJTZW5kIHtcbiAgZXhwb3J0IHR5cGUgRWxlbWVudCA9IEhUTUxCdXR0b25FbGVtZW50O1xuICBleHBvcnQgdHlwZSBQcm9wcyA9IFBhcnRpYWw8QnV0dG9uUHJvcHM+O1xufVxuXG5jb25zdCBFZGl0Q29tcG9zZXJTZW5kID0gZm9yd2FyZFJlZjxcbiAgRWRpdENvbXBvc2VyU2VuZC5FbGVtZW50LFxuICBFZGl0Q29tcG9zZXJTZW5kLlByb3BzXG4+KChwcm9wcywgcmVmKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBzdHJpbmdzOiB7IGVkaXRDb21wb3NlcjogeyBzZW5kOiB7IGxhYmVsID0gXCJTZW5kXCIgfSA9IHt9IH0gPSB7fSB9ID0ge30sXG4gIH0gPSB1c2VUaHJlYWRDb25maWcoKTtcbiAgcmV0dXJuIChcbiAgICA8Q29tcG9zZXJQcmltaXRpdmUuU2VuZCBhc0NoaWxkPlxuICAgICAgPEJ1dHRvbiB7Li4ucHJvcHN9IHJlZj17cmVmfT5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVuID8/IGxhYmVsfVxuICAgICAgPC9CdXR0b24+XG4gICAgPC9Db21wb3NlclByaW1pdGl2ZS5TZW5kPlxuICApO1xufSk7XG5cbkVkaXRDb21wb3NlclNlbmQuZGlzcGxheU5hbWUgPSBcIkVkaXRDb21wb3NlclNlbmRcIjtcblxuY29uc3QgZXhwb3J0cyA9IHtcbiAgUm9vdDogRWRpdENvbXBvc2VyUm9vdCxcbiAgSW5wdXQ6IEVkaXRDb21wb3NlcklucHV0LFxuICBGb290ZXI6IEVkaXRDb21wb3NlckZvb3RlcixcbiAgQ2FuY2VsOiBFZGl0Q29tcG9zZXJDYW5jZWwsXG4gIFNlbmQ6IEVkaXRDb21wb3NlclNlbmQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBPYmplY3QuYXNzaWduKEVkaXRDb21wb3NlciwgZXhwb3J0cykgYXMgdHlwZW9mIEVkaXRDb21wb3NlciAmXG4gIHR5cGVvZiBleHBvcnRzO1xuIl0sIm5hbWVzIjpbIm1lbW8iLCJ1c2VFZmZlY3QiLCJ1c2VNZW1vIiwidXNlU3RhdGUiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsImNyZWF0ZUNvbnRleHRIb29rIiwiY29udGV4dCIsInByb3ZpZGVyTmFtZSIsInVzZUNvbnRleHRIb29rIiwib3B0aW9ucyIsImNvbnRleHRWYWx1ZSIsIm9wdGlvbmFsIiwiRXJyb3IiLCJjcmVhdGVDb250ZXh0U3RvcmVIb29rIiwiY29udGV4dEhvb2siLCJjb250ZXh0S2V5IiwidXNlU3RvcmVTdG9yZUhvb2siLCJ1c2VTdG9yZUhvb2siLCJwYXJhbSIsInNlbGVjdG9yIiwic3RvcmUiLCJBc3Npc3RhbnRDb250ZXh0IiwidXNlQXNzaXN0YW50Q29udGV4dCIsInVzZUFzc2lzdGFudFJ1bnRpbWUiLCJhY3Rpb25zIiwidXNlQXNzaXN0YW50QWN0aW9uc1N0b3JlIiwidXNlQXNzaXN0YW50QWN0aW9ucyIsInVzZUFzc2lzdGFudFJ1bnRpbWVTdG9yZSIsInVzZVRvb2xVSXMiLCJ1c2VUb29sVUlzU3RvcmUiLCJjcmVhdGUiLCJtYWtlQXNzaXN0YW50VG9vbFVJc1N0b3JlIiwic2V0IiwicmVuZGVyZXJzIiwiTWFwIiwiT2JqZWN0IiwiZnJlZXplIiwiZ2V0VG9vbFVJIiwibmFtZSIsImFyciIsImdldCIsImxhc3QiLCJhdCIsInNldFRvb2xVSSIsInJlbmRlciIsInB1c2giLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJsZW5ndGgiLCJUaHJlYWRDb250ZXh0IiwidXNlVGhyZWFkQ29udGV4dCIsInVzZVRocmVhZFJ1bnRpbWUiLCJ1c2VUaHJlYWRBY3Rpb25zU3RvcmUiLCJ1c2VUaHJlYWRBY3Rpb25zIiwidXNlVGhyZWFkUnVudGltZVN0b3JlIiwidXNlVGhyZWFkIiwidXNlVGhyZWFkU3RvcmUiLCJtZXNzYWdlcyIsInVzZVRocmVhZE1lc3NhZ2VzIiwidXNlVGhyZWFkTWVzc2FnZXNTdG9yZSIsInVzZUNvbXBvc2VyIiwidXNlVGhyZWFkQ29tcG9zZXIiLCJ1c2VDb21wb3NlclN0b3JlIiwidXNlVGhyZWFkQ29tcG9zZXJTdG9yZSIsInVzZVZpZXdwb3J0IiwidXNlVGhyZWFkVmlld3BvcnQiLCJ1c2VWaWV3cG9ydFN0b3JlIiwidXNlVGhyZWFkVmlld3BvcnRTdG9yZSIsInVzZVRocmVhZE1vZGVsQ29uZmlnIiwicmVyZW5kZXIiLCJydW50aW1lIiwidW5zdGFibGVfb24iLCJnZXRNb2RlbENvbmZpZyIsIm1ha2VUaHJlYWRWaWV3cG9ydFN0b3JlIiwic2Nyb2xsVG9Cb3R0b21MaXN0ZW5lcnMiLCJTZXQiLCJpc0F0Qm90dG9tIiwic2Nyb2xsVG9Cb3R0b20iLCJsaXN0ZW5lciIsIm9uU2Nyb2xsVG9Cb3R0b20iLCJjYWxsYmFjayIsImFkZCIsImRlbGV0ZSIsIndyaXRhYmxlU3RvcmUiLCJqc3giLCJzZXRTdGF0ZSIsImdldFN0YXRlIiwidXBkYXRlU3RhdGUiLCJzdWJzY3JpYmUiLCJUaHJlYWRSdW50aW1lUHJvdmlkZXIiLCJjaGlsZHJlbiIsImNvbXBvc2VyIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsInVzZUFzc2lzdGFudFRvb2xVSXNTdG9yZSIsIkFzc2lzdGFudFJ1bnRpbWVQcm92aWRlckltcGwiLCJ0aHJlYWQiLCJBc3Npc3RhbnRSdW50aW1lUHJvdmlkZXIiLCJDb250ZW50UGFydENvbnRleHQiLCJ1c2VDb250ZW50UGFydENvbnRleHQiLCJ1c2VDb250ZW50UGFydFJ1bnRpbWUiLCJ1c2VDb250ZW50UGFydCIsInVzZUNvbnRlbnRQYXJ0U3RvcmUiLCJDb250ZW50UGFydFJ1bnRpbWVJbXBsIiwicGF0aCIsImNvbnRlbnRCaW5kaW5nIiwiYWRkVG9vbFJlc3VsdCIsInJlc3VsdCIsIm1lc3NhZ2UiLCJtZXNzYWdlQXBpIiwic3RhdGUiLCJ0eXBlIiwidG9vbE5hbWUiLCJ0b29sQ2FsbElkIiwidGhyZWFkQXBpIiwibWVzc2FnZUlkIiwiaWQiLCJjb25zdHJ1Y3RvciIsIkNPTVBMRVRFX1NUQVRVUyIsIlJVTk5JTkdfU1RBVFVTIiwiVGV4dENvbnRlbnRQYXJ0UHJvdmlkZXIiLCJ0ZXh0IiwiaXNSdW5uaW5nIiwic3RhdHVzIiwicGFydCIsInRleHRVcGRhdGVkIiwidGFyZ2V0U3RhdHVzIiwic3RhdHVzVXBkYXRlZCIsIk1lc3NhZ2VDb250ZXh0IiwidXNlTWVzc2FnZUNvbnRleHQiLCJ1c2VNZXNzYWdlUnVudGltZSIsInVzZU1lc3NhZ2UiLCJ1c2VNZXNzYWdlU3RvcmUiLCJ1c2VNZXNzYWdlVXRpbHMiLCJ1c2VNZXNzYWdlVXRpbHNTdG9yZSIsInVzZUVkaXRDb21wb3NlciIsInVzZUVkaXRDb21wb3NlclN0b3JlIiwidXNlQ29tcG9zZXJDb250ZXh0IiwidXNlQ29tcG9zZXJSdW50aW1lIiwibWVzc2FnZVJ1bnRpbWUiLCJ0aHJlYWRSdW50aW1lIiwidXNlQ2FsbGJhY2siLCJ1c2VBcHBlbmRNZXNzYWdlIiwiYXBwZW5kIiwidXNlU3dpdGNoVG9OZXdUaHJlYWQiLCJhc3Npc3RhbnRSdW50aW1lIiwic3dpdGNoVG9OZXdUaHJlYWQiLCJ1c2VBc3Npc3RhbnRUb29sIiwidG9vbCIsInRvb2xVSXNTdG9yZSIsInJlc3QiLCJjb25maWciLCJ0b29scyIsInVuc3ViMSIsInJlZ2lzdGVyTW9kZWxDb25maWdQcm92aWRlciIsInVuc3ViMiIsIm1ha2VBc3Npc3RhbnRUb29sIiwiVG9vbCIsInVuc3RhYmxlX3Rvb2wiLCJ1c2VBc3Npc3RhbnRUb29sVUkiLCJtYWtlQXNzaXN0YW50VG9vbFVJIiwiVG9vbFVJIiwidXNlQXNzaXN0YW50SW5zdHJ1Y3Rpb25zIiwiaW5zdHJ1Y3Rpb24iLCJzeXN0ZW0iLCJ1c2VBY3Rpb25CYXJDb3B5IiwiY29waWVkRHVyYXRpb24iLCJjb21wb3NlclJ1bnRpbWUiLCJzZXRJc0NvcGllZCIsInMiLCJoYXNDb3B5YWJsZUNvbnRlbnQiLCJyb2xlIiwiY29udGVudCIsInNvbWUiLCJjIiwiaXNFZGl0aW5nIiwiY29tcG9zZXJWYWx1ZSIsInZhbHVlVG9Db3B5IiwidW5zdGFibGVfZ2V0Q29weVRleHQiLCJuYXZpZ2F0b3IiLCJjbGlwYm9hcmQiLCJ3cml0ZVRleHQiLCJ0aGVuIiwic2V0VGltZW91dCIsInVzZUFjdGlvbkJhckVkaXQiLCJkaXNhYmxlZCIsImJlZ2luRWRpdCIsInVzZVN5bmNFeHRlcm5hbFN0b3JlIiwiY3JlYXRlQ29tYmluZWRTdG9yZSIsInN0b3JlcyIsInVuc3Vic2NyaWJlcyIsIm1hcCIsInVuc3ViIiwiZ2V0U25hcHNob3QiLCJ1c2VDb21iaW5lZFN0b3JlIiwidXNlQ29tYmluZWQiLCJ1c2VBY3Rpb25CYXJSZWxvYWQiLCJ0IiwibSIsImlzRGlzYWJsZWQiLCJyZWxvYWQiLCJ1c2VBY3Rpb25CYXJTcGVhayIsIm1lc3NhZ2VSdW5pbWUiLCJzcGVhayIsImhhc1NwZWFrYWJsZUNvbnRlbnQiLCJ1c2VBY3Rpb25CYXJTdG9wU3BlYWtpbmciLCJpc1NwZWFraW5nIiwidSIsInNwZWVjaCIsInN0b3BTcGVha2luZyIsInVzZUFjdGlvbkJhckZlZWRiYWNrUG9zaXRpdmUiLCJzdWJtaXRGZWVkYmFjayIsInVzZUFjdGlvbkJhckZlZWRiYWNrTmVnYXRpdmUiLCJ1c2VCcmFuY2hQaWNrZXJDb3VudCIsImJyYW5jaENvdW50IiwidXNlQnJhbmNoUGlja2VyTmV4dCIsImJyYW5jaE51bWJlciIsInN3aXRjaFRvQnJhbmNoIiwicG9zaXRpb24iLCJ1c2VCcmFuY2hQaWNrZXJOdW1iZXIiLCJ1c2VCcmFuY2hQaWNrZXJQcmV2aW91cyIsInVzZUNvbXBvc2VyQ2FuY2VsIiwiY2FuQ2FuY2VsIiwiY2FuY2VsIiwidXNlQ29tcG9zZXJJZiIsInByb3BzIiwiZWRpdGluZyIsInVzZUNvbXBvc2VyU2VuZCIsImlzRW1wdHkiLCJzZW5kIiwidXNlQ29tcG9zZXJBZGRBdHRhY2htZW50IiwiaW5wdXQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJhdHRhY2htZW50QWNjZXB0IiwiZ2V0QXR0YWNobWVudEFjY2VwdCIsImFjY2VwdCIsIm9uY2hhbmdlIiwiZSIsImZpbGUiLCJ0YXJnZXQiLCJmaWxlcyIsImFkZEF0dGFjaG1lbnQiLCJjbGljayIsInVzZUNvbnRlbnRQYXJ0RGlzcGxheSIsImRpc3BsYXkiLCJ1c2VDb250ZW50UGFydEltYWdlIiwiaW1hZ2UiLCJ1c2VDb250ZW50UGFydFRleHQiLCJ1c2VNZXNzYWdlSWYiLCJtZXNzYWdlVXRpbHNTdG9yZSIsImF0dGFjaG1lbnRzIiwiaXNMYXN0Iiwic3VibWl0dGVkRmVlZGJhY2siLCJpc0NvcGllZCIsImlzSG92ZXJpbmciLCJoYXNCcmFuY2hlcyIsInVzZXIiLCJhc3Npc3RhbnQiLCJsYXN0T3JIb3ZlciIsImNvcGllZCIsInNwZWFraW5nIiwiaGFzQXR0YWNobWVudHMiLCJoYXNDb250ZW50IiwidXNlVGhyZWFkSWYiLCJlbXB0eSIsInJ1bm5pbmciLCJ1c2VUaHJlYWRFbXB0eSIsInVzZVRocmVhZFNjcm9sbFRvQm90dG9tIiwidGhyZWFkVmlld3BvcnRTdG9yZSIsImhhbmRsZVNjcm9sbFRvQm90dG9tIiwidXNlVGhyZWFkU3VnZ2VzdGlvbiIsInByb21wdCIsImF1dG9TZW5kIiwic2V0VGV4dCIsImFjdGlvbkJhcl9leHBvcnRzIiwiX19leHBvcnQiLCJDb3B5IiwiQWN0aW9uQmFyUHJpbWl0aXZlQ29weSIsIkVkaXQiLCJBY3Rpb25CYXJQcmltaXRpdmVFZGl0IiwiRmVlZGJhY2tOZWdhdGl2ZSIsIkFjdGlvbkJhclByaW1pdGl2ZUZlZWRiYWNrTmVnYXRpdmUiLCJGZWVkYmFja1Bvc2l0aXZlIiwiQWN0aW9uQmFyUHJpbWl0aXZlRmVlZGJhY2tQb3NpdGl2ZSIsIlJlbG9hZCIsIkFjdGlvbkJhclByaW1pdGl2ZVJlbG9hZCIsIlJvb3QiLCJBY3Rpb25CYXJQcmltaXRpdmVSb290IiwiU3BlYWsiLCJBY3Rpb25CYXJQcmltaXRpdmVTcGVhayIsIlN0b3BTcGVha2luZyIsIkFjdGlvbkJhclByaW1pdGl2ZVN0b3BTcGVha2luZyIsIlByaW1pdGl2ZSIsImZvcndhcmRSZWYiLCJ1c2VBY3Rpb25CYXJGbG9hdFN0YXR1cyIsImhpZGVXaGVuUnVubmluZyIsImF1dG9oaWRlIiwiYXV0b2hpZGVGbG9hdCIsIm11IiwiYXV0b2hpZGVFbmFibGVkIiwicmVmIiwiaGlkZUFuZGZsb2F0U3RhdHVzIiwiZGl2IiwiZGlzcGxheU5hbWUiLCJjb21wb3NlRXZlbnRIYW5kbGVycyIsImZvcndhcmRlZFJlZiIsIm9uQ2xpY2siLCJidXR0b24iLCJjcmVhdGVBY3Rpb25CdXR0b24iLCJ1c2VBY3Rpb25CdXR0b24iLCJmb3J3YXJkUHJvcHMiLCJBY3Rpb25CdXR0b24iLCJmb3J3YXJkZWRQcm9wcyIsInByaW1pdGl2ZVByb3BzIiwia2V5cyIsImZvckVhY2giLCJrZXkiLCJpbmNsdWRlcyIsInVzZUVzY2FwZUtleWRvd24iLCJwcmV2ZW50RGVmYXVsdCIsImlzU3VibWl0dGVkIiwiYXNzaXN0YW50TW9kYWxfZXhwb3J0cyIsIkFuY2hvciIsIkFzc2lzdGFudE1vZGFsUHJpbWl0aXZlQW5jaG9yIiwiQ29udGVudCIsIkFzc2lzdGFudE1vZGFsUHJpbWl0aXZlQ29udGVudCIsIkFzc2lzdGFudE1vZGFsUHJpbWl0aXZlUm9vdCIsIlRyaWdnZXIiLCJBc3Npc3RhbnRNb2RhbFByaW1pdGl2ZVRyaWdnZXIiLCJQb3BvdmVyUHJpbWl0aXZlIiwidXNlUG9wb3ZlclNjb3BlIiwiY3JlYXRlUG9wb3ZlclNjb3BlIiwidXNlQXNzaXN0YW50TW9kYWxPcGVuU3RhdGUiLCJkZWZhdWx0T3BlbiIsInVuc3RhYmxlX29wZW5PblJ1blN0YXJ0Iiwic2V0T3BlbiIsIl9fc2NvcGVBc3Npc3RhbnRNb2RhbCIsIm9wZW4iLCJvbk9wZW5DaGFuZ2UiLCJzY29wZSIsIm1vZGFsT3BlbiIsIlBvcG92ZXJQcmltaXRpdmUyIiwiUG9wb3ZlclByaW1pdGl2ZTMiLCJzaWRlIiwiYWxpZ24iLCJvbkludGVyYWN0T3V0c2lkZSIsImRpc3NtaXNzT25JbnRlcmFjdE91dHNpZGUiLCJQb3BvdmVyUHJpbWl0aXZlNCIsIlBvcnRhbCIsIlBvcG92ZXJQcmltaXRpdmU1IiwiYXR0YWNobWVudF9leHBvcnRzIiwiTmFtZSIsIkF0dGFjaG1lbnRQcmltaXRpdmVOYW1lIiwiUmVtb3ZlIiwiQXR0YWNobWVudFByaW1pdGl2ZVJlbW92ZSIsIkF0dGFjaG1lbnRQcmltaXRpdmVSb290IiwidW5zdGFibGVfVGh1bWIiLCJBdHRhY2htZW50UHJpbWl0aXZlVGh1bWIiLCJBdHRhY2htZW50Q29udGV4dCIsInVzZUF0dGFjaG1lbnRDb250ZXh0IiwidXNlVGhyZWFkQ29tcG9zZXJBdHRhY2htZW50Q29udGV4dCIsInNvdXJjZSIsInVzZUVkaXRDb21wb3NlckF0dGFjaG1lbnRDb250ZXh0IiwidXNlTWVzc2FnZUF0dGFjaG1lbnRDb250ZXh0IiwidXNlQXR0YWNobWVudFJ1bnRpbWUiLCJhdHRhY2htZW50UnVudGltZSIsInVzZUF0dGFjaG1lbnQiLCJ1c2VUaHJlYWRDb21wb3NlckF0dGFjaG1lbnQiLCJ1c2VFZGl0Q29tcG9zZXJBdHRhY2htZW50IiwidXNlTWVzc2FnZUF0dGFjaG1lbnQiLCJqc3hzIiwiZXh0IiwiYSIsInNwbGl0IiwicG9wIiwiRnJhZ21lbnQiLCJ1c2VBdHRhY2htZW50UmVtb3ZlIiwiaGFuZGxlUmVtb3ZlQXR0YWNobWVudCIsInJlbW92ZSIsImJyYW5jaFBpY2tlcl9leHBvcnRzIiwiQ291bnQiLCJCcmFuY2hQaWNrZXJQcmltaXRpdmVDb3VudCIsIk5leHQiLCJCcmFuY2hQaWNrZXJQcmltaXRpdmVOZXh0IiwiTnVtYmVyIiwiQnJhbmNoUGlja2VyUHJpbWl0aXZlTnVtYmVyIiwiUHJldmlvdXMiLCJCcmFuY2hQaWNrZXJQcmltaXRpdmVQcmV2aW91cyIsIkJyYW5jaFBpY2tlclByaW1pdGl2ZVJvb3QiLCJtZXNzYWdlX2V4cG9ydHMiLCJBdHRhY2htZW50cyIsIk1lc3NhZ2VQcmltaXRpdmVBdHRhY2htZW50cyIsIk1lc3NhZ2VQcmltaXRpdmVDb250ZW50IiwiSWYiLCJNZXNzYWdlUHJpbWl0aXZlSWYiLCJJblByb2dyZXNzIiwiTWVzc2FnZVByaW1pdGl2ZUluUHJvZ3Jlc3MiLCJNZXNzYWdlUHJpbWl0aXZlUm9vdCIsInVzZVJlZiIsInVzZU1hbmFnZWRSZWYiLCJjbGVhbnVwUmVmIiwiZWwiLCJjdXJyZW50IiwidXNlQ29tcG9zZWRSZWZzIiwidXNlSXNIb3ZlcmluZ1JlZiIsImNhbGxiYWNrUmVmIiwic2V0SXNIb3ZlcmluZyIsImhhbmRsZU1vdXNlRW50ZXIiLCJoYW5kbGVNb3VzZUxlYXZlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJpc0hvdmVyaW5nUmVmIiwicXVlcnkiLCJ1c2VDb250ZW50UGFydFJ1bnRpbWVTdG9yZSIsIkNvbnRlbnRQYXJ0UnVudGltZVByb3ZpZGVyIiwidXNlQ2FsbGJhY2tSZWYiLCJTbW9vdGhDb250ZXh0IiwibWFrZVNtb290aENvbnRleHQiLCJpbml0aWFsU3RhdGUiLCJ1c2VTbW9vdGhTdGF0dXMiLCJTbW9vdGhDb250ZXh0UHJvdmlkZXIiLCJvdXRlciIsInVzZVNtb290aENvbnRleHQiLCJjb250ZW50UGFydFN0b3JlIiwid2l0aFNtb290aENvbnRleHRQcm92aWRlciIsIkNvbXBvbmVudCIsIldyYXBwZWQiLCJ1c2VTbW9vdGhTdGF0dXNTdG9yZSIsIlRleHRTdHJlYW1BbmltYXRvciIsInN0YXJ0IiwiYW5pbWF0aW9uRnJhbWVJZCIsImxhc3RVcGRhdGVUaW1lIiwiRGF0ZSIsIm5vdyIsImFuaW1hdGUiLCJzdG9wIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJjdXJyZW50VGV4dCIsInRhcmdldFRleHQiLCJjdXJyZW50VGltZSIsImRlbHRhVGltZSIsInRpbWVUb0NvbnN1bWUiLCJyZW1haW5pbmdDaGFycyIsImJhc2VUaW1lUGVyQ2hhciIsIk1hdGgiLCJtaW4iLCJjaGFyc1RvQWRkIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic2xpY2UiLCJTTU9PVEhfU1RBVFVTIiwidXNlU21vb3RoIiwic21vb3RoIiwiaWRSZWYiLCJkaXNwbGF5ZWRUZXh0Iiwic2V0RGlzcGxheWVkVGV4dCIsInNtb290aFN0YXR1c1N0b3JlIiwiYW5pbWF0b3JSZWYiLCJzdGFydHNXaXRoIiwiQ29udGVudFBhcnRQcmltaXRpdmVUZXh0IiwiY29tcG9uZW50IiwiQ29udGVudFBhcnRQcmltaXRpdmVJbWFnZSIsImltZyIsInNyYyIsIkNvbnRlbnRQYXJ0UHJpbWl0aXZlRGlzcGxheSIsIkNvbnRlbnRQYXJ0UHJpbWl0aXZlSW5Qcm9ncmVzcyIsImlzSW5Qcm9ncmVzcyIsImdldFRocmVhZE1lc3NhZ2VUZXh0IiwidGV4dFBhcnRzIiwiZmlsdGVyIiwiam9pbiIsIkF0dGFjaG1lbnRSdW50aW1lSW1wbCIsIl9jb3JlIiwiQ29tcG9zZXJBdHRhY2htZW50UnVudGltZSIsImNvcmUiLCJfY29tcG9zZXJBcGkiLCJyZW1vdmVBdHRhY2htZW50IiwiVGhyZWFkQ29tcG9zZXJBdHRhY2htZW50UnVudGltZUltcGwiLCJFZGl0Q29tcG9zZXJBdHRhY2htZW50UnVudGltZUltcGwiLCJNZXNzYWdlQXR0YWNobWVudFJ1bnRpbWVJbXBsIiwiQmFzZVN1YmplY3QiLCJpc0Nvbm5lY3RlZCIsIl9jb25uZWN0aW9uIiwibm90aWZ5U3Vic2NyaWJlcnMiLCJfc3Vic2NyaXB0aW9ucyIsIl91cGRhdGVDb25uZWN0aW9uIiwic2l6ZSIsIl9jb25uZWN0IiwiU0tJUF9VUERBVEUiLCJTeW1ib2wiLCJMYXp5TWVtb2l6ZVN1YmplY3QiLCJiaW5kaW5nIiwiX3ByZXZpb3VzU3RhdGVEaXJ0eSIsIm5ld1N0YXRlIiwiX3ByZXZpb3VzU3RhdGUiLCJzaGFsbG93RXF1YWwiLCJvYmpBIiwib2JqQiIsInZhbHVlQSIsInZhbHVlQiIsImlzIiwiU2hhbGxvd01lbW9pemVTdWJqZWN0IiwiX3N5bmNTdGF0ZSIsIk1FVEhPRF9OT1RfU1VQUE9SVEVEIiwiRU1QVFlfQVJSQVkiLCJnZXRUaHJlYWRDb21wb3NlclN0YXRlIiwic2V0VmFsdWUiLCJiaW5kIiwicmVzZXQiLCJnZXRFZGl0Q29tcG9zZXJTdGF0ZSIsImVkaXQiLCJDb21wb3NlclJ1bnRpbWVJbXBsIiwiYXR0YWNobWVudElkIiwiVGhyZWFkQ29tcG9zZXJSdW50aW1lSW1wbCIsIl9nZXRTdGF0ZSIsImdldEF0dGFjaG1lbnRCeUluZGV4IiwiaWR4IiwiYXR0YWNobWVudFNvdXJjZSIsImF0dGFjaG1lbnRTZWxlY3RvciIsImF0dGFjaG1lbnQiLCJzdGF0ZUJpbmRpbmciLCJFZGl0Q29tcG9zZXJSdW50aW1lSW1wbCIsIl9iZWdpbkVkaXQiLCJOZXN0ZWRTdWJzY3JpcHRpb25TdWJqZWN0Iiwib3V0ZXJTdWJzY3JpYmUiLCJsYXN0U3RhdGUiLCJpbm5lclVuc3Vic2NyaWJlIiwib25SdW50aW1lVXBkYXRlIiwib3V0ZXJVbnN1YnNjcmliZSIsInRvQ29udGVudFBhcnRTdGF0dXMiLCJwYXJ0SW5kZXgiLCJpc0xhc3RQYXJ0IiwibWF4IiwicmVhc29uIiwiRU1QVFlfQ09OVEVOVCIsImdldENvbnRlbnRQYXJ0U3RhdGUiLCJNZXNzYWdlUnVudGltZUltcGwiLCJfdGhyZWFkQmluZGluZyIsInN0YXJ0UnVuIiwicGFyZW50SWQiLCJicmFuY2hJZCIsImJyYW5jaGVzIiwiZ2V0QnJhbmNoZXMiLCJ0YXJnZXRCcmFuY2giLCJnZXRDb250ZW50UGFydEJ5SW5kZXgiLCJjb250ZW50UGFydFNlbGVjdG9yIiwiZ2V0Q29udGVudFBhcnRCeVRvb2xDYWxsSWQiLCJKU09OIiwic3RyaW5naWZ5IiwiZmluZEluZGV4IiwiY29tcG9zZXJTb3VyY2UiLCJnZXRFZGl0Q29tcG9zZXIiLCJUb29sVUlEaXNwbGF5IiwiVUkiLCJSZW5kZXIiLCJkZWZhdWx0Q29tcG9uZW50cyIsIlRleHQiLCJzdHlsZSIsIndoaXRlU3BhY2UiLCJmb250RmFtaWx5IiwiSW1hZ2UiLCJNZXNzYWdlQ29udGVudFBhcnRDb21wb25lbnQiLCJjb21wb25lbnRzIiwiRW1wdHkiLCJieV9uYW1lIiwiRmFsbGJhY2siLCJjb250ZW50UGFydFJ1bnRpbWUiLCJhZGRSZXN1bHQiLCJ1bmhhbmRsZWRUeXBlIiwiTWVzc2FnZUNvbnRlbnRQYXJ0SW1wbCIsIk1lc3NhZ2VDb250ZW50UGFydCIsInByZXYiLCJuZXh0IiwiY29udGVudExlbmd0aCIsIkFycmF5IiwiZnJvbSIsIl8iLCJ1c2VBdHRhY2htZW50UnVudGltZVN0b3JlIiwidXNlQXR0YWNobWVudFN0b3JlIiwiQXR0YWNobWVudFJ1bnRpbWVQcm92aWRlciIsImdldENvbXBvbmVudCIsIkF0dGFjaG1lbnQiLCJEb2N1bWVudCIsIkZpbGUiLCJfZXhoYXVzdGl2ZUNoZWNrIiwiQXR0YWNobWVudENvbXBvbmVudCIsIk1lc3NhZ2VBdHRhY2htZW50SW1wbCIsImF0dGFjaG1lbnRJbmRleCIsIk1lc3NhZ2VBdHRhY2htZW50IiwiYXR0YWNobWVudHNDb3VudCIsImhpZGVXaGVuU2luZ2xlQnJhbmNoIiwiY29tcG9zZXJfZXhwb3J0cyIsIkFkZEF0dGFjaG1lbnQiLCJDb21wb3NlclByaW1pdGl2ZUFkZEF0dGFjaG1lbnQiLCJDb21wb3NlclByaW1pdGl2ZUF0dGFjaG1lbnRzIiwiQ2FuY2VsIiwiQ29tcG9zZXJQcmltaXRpdmVDYW5jZWwiLCJDb21wb3NlclByaW1pdGl2ZUlmIiwiSW5wdXQiLCJDb21wb3NlclByaW1pdGl2ZUlucHV0IiwiQ29tcG9zZXJQcmltaXRpdmVSb290IiwiU2VuZCIsIkNvbXBvc2VyUHJpbWl0aXZlU2VuZCIsIm9uU3VibWl0IiwiaGFuZGxlU3VibWl0IiwiZm9ybSIsIlNsb3QiLCJUZXh0YXJlYUF1dG9zaXplIiwidXNlT25TY3JvbGxUb0JvdHRvbSIsInZwIiwiYXV0b0ZvY3VzIiwiYXNDaGlsZCIsImRpc2FibGVkUHJvcCIsIm9uQ2hhbmdlIiwib25LZXlEb3duIiwic3VibWl0T25FbnRlciIsImNhbmNlbE9uRXNjYXBlIiwidW5zdGFibGVfZm9jdXNPblJ1blN0YXJ0IiwidW5zdGFibGVfZm9jdXNPblNjcm9sbFRvQm90dG9tIiwidW5zdGFibGVfZm9jdXNPblRocmVhZFN3aXRjaGVkIiwidGV4dGFyZWFSZWYiLCJoYW5kbGVLZXlQcmVzcyIsIm5hdGl2ZUV2ZW50IiwiaXNDb21wb3NpbmciLCJzaGlmdEtleSIsImNsb3Nlc3QiLCJyZXF1ZXN0U3VibWl0IiwiYXV0b0ZvY3VzRW5hYmxlZCIsImZvY3VzIiwidGV4dGFyZWEiLCJwcmV2ZW50U2Nyb2xsIiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJDb21wb3NlckF0dGFjaG1lbnRJbXBsIiwiQ29tcG9zZXJBdHRhY2htZW50IiwiY29udGVudFBhcnRfZXhwb3J0cyIsIkRpc3BsYXkiLCJ0aHJlYWRfZXhwb3J0cyIsIlRocmVhZFByaW1pdGl2ZUVtcHR5IiwiVGhyZWFkUHJpbWl0aXZlSWYiLCJNZXNzYWdlcyIsIlRocmVhZFByaW1pdGl2ZU1lc3NhZ2VzIiwiVGhyZWFkUHJpbWl0aXZlUm9vdCIsIlNjcm9sbFRvQm90dG9tIiwiVGhyZWFkUHJpbWl0aXZlU2Nyb2xsVG9Cb3R0b20iLCJTdWdnZXN0aW9uIiwiVGhyZWFkUHJpbWl0aXZlU3VnZ2VzdGlvbiIsIlZpZXdwb3J0IiwiVGhyZWFkUHJpbWl0aXZlVmlld3BvcnQiLCJ1c2VPblJlc2l6ZUNvbnRlbnQiLCJyZWZDYWxsYmFjayIsInJlc2l6ZU9ic2VydmVyIiwiUmVzaXplT2JzZXJ2ZXIiLCJtdXRhdGlvbk9ic2VydmVyIiwiTXV0YXRpb25PYnNlcnZlciIsIm11dGF0aW9ucyIsIm11dGF0aW9uIiwibm9kZSIsImFkZGVkTm9kZXMiLCJFbGVtZW50Iiwib2JzZXJ2ZSIsInJlbW92ZWROb2RlcyIsInVub2JzZXJ2ZSIsImNoaWxkTGlzdCIsImNoaWxkIiwiZGlzY29ubmVjdCIsInVzZVRocmVhZFZpZXdwb3J0QXV0b1Njcm9sbCIsImF1dG9TY3JvbGwiLCJ1bnN0YWJsZV9zY3JvbGxUb0JvdHRvbU9uUnVuU3RhcnQiLCJkaXZSZWYiLCJsYXN0U2Nyb2xsVG9wIiwiaXNTY3JvbGxpbmdUb0JvdHRvbVJlZiIsImJlaGF2aW9yIiwic2Nyb2xsVG8iLCJ0b3AiLCJzY3JvbGxIZWlnaHQiLCJoYW5kbGVTY3JvbGwiLCJuZXdJc0F0Qm90dG9tIiwic2Nyb2xsVG9wIiwiY2xpZW50SGVpZ2h0IiwicmVzaXplUmVmIiwic2Nyb2xsUmVmIiwiYXV0b1Njcm9sbFJlZiIsIm1ha2VNZXNzYWdlVXRpbHNTdG9yZSIsInVzZU1lc3NhZ2VSdW50aW1lU3RvcmUiLCJNZXNzYWdlUnVudGltZVByb3ZpZGVyIiwiaXNDb21wb25lbnRzU2FtZSIsIk1lc3NhZ2UiLCJFZGl0Q29tcG9zZXIiLCJVc2VyRWRpdENvbXBvc2VyIiwiQXNzaXN0YW50RWRpdENvbXBvc2VyIiwiU3lzdGVtRWRpdENvbXBvc2VyIiwiVXNlck1lc3NhZ2UiLCJBc3Npc3RhbnRNZXNzYWdlIiwiU3lzdGVtTWVzc2FnZSIsIkRFRkFVTFRfU1lTVEVNX01FU1NBR0UiLCJUaHJlYWRNZXNzYWdlQ29tcG9uZW50IiwiVGhyZWFkTWVzc2FnZUltcGwiLCJtZXNzYWdlSW5kZXgiLCJnZXRNZXNzc2FnZUJ5SW5kZXgiLCJUaHJlYWRNZXNzYWdlIiwiVGhyZWFkUHJpbWl0aXZlTWVzc2FnZXNJbXBsIiwibWVzc2FnZXNMZW5ndGgiLCJzdWJzY3JpYmVUb01haW5UaHJlYWQiLCJmaXJzdCIsImNsZWFudXAiLCJpbm5lciIsInVuc3Vic2NyaWJlIiwidXNlSW5zZXJ0aW9uRWZmZWN0IiwiQmFzZUFzc2lzdGFudFJ1bnRpbWVDb3JlIiwiX3RocmVhZCIsInN1YnNjcmlwdGlvbkhhbmRsZXIiLCJpbnRlcm5hbF9leHBvcnRzIiwiQXNzaXN0YW50UnVudGltZUltcGwiLCJEZWZhdWx0VGhyZWFkQ29tcG9zZXJSdW50aW1lQ29yZSIsIk1lc3NhZ2VSZXBvc2l0b3J5IiwiUHJveHlDb25maWdQcm92aWRlciIsIlRocmVhZFJ1bnRpbWVJbXBsIiwiVG9vbHRpcEljb25CdXR0b24iLCJnZW5lcmF0ZUlkIiwiaXNBdHRhY2htZW50Q29tcGxldGUiLCJCYXNlQ29tcG9zZXJSdW50aW1lQ29yZSIsImdldEF0dGFjaG1lbnRBZGFwdGVyIiwiX2F0dGFjaG1lbnRzIiwidHJpbSIsIl90ZXh0IiwiYWRhcHRlciIsIlByb21pc2UiLCJhbGwiLCJoYW5kbGVTZW5kIiwidG9TcGxpY2VkIiwiX2NhbkNhbmNlbCIsImFkYXB0ZXJzIiwiY29ubmVjdCIsImNhcGFiaWxpdGllcyIsImNhbmNlbFJ1biIsIm1lcmdlTW9kZWxDb25maWdzIiwiX3Byb3ZpZGVycyIsInByb3ZpZGVyIiwiX3N1YnNjcmliZXJzIiwiY3VzdG9tQWxwaGFiZXQiLCJvcHRpbWlzdGljUHJlZml4IiwiZ2VuZXJhdGVPcHRpbWlzdGljSWQiLCJmcm9tQ29yZU1lc3NhZ2VzIiwiZnJvbUNvcmVNZXNzYWdlIiwiY29tbW9uUHJvcHMiLCJjcmVhdGVkQXQiLCJhcmdzVGV4dCIsImFyZ3MiLCJ1bnN1cHBvcnRlZFJvbGUiLCJmaW5kSGVhZCIsInBlcmZvcm1PcCIsIm5ld1BhcmVudCIsIm9wZXJhdGlvbiIsInBhcmVudE9yUm9vdCIsInJvb3QiLCJuZXdQYXJlbnRPclJvb3QiLCJmYWxsYmFja0lkIiwiZmFsbGJhY2siLCJoZWFkIiwiZ2V0TWVzc2FnZXMiLCJsZXZlbCIsImFkZE9yVXBkYXRlTWVzc2FnZSIsImV4aXN0aW5nSXRlbSIsIm5ld0l0ZW0iLCJnZXRNZXNzYWdlIiwiYXBwZW5kT3B0aW1pc3RpY01lc3NhZ2UiLCJvcHRpbWlzdGljSWQiLCJoYXMiLCJkZWxldGVNZXNzYWdlIiwicmVwbGFjZW1lbnRJZCIsInJlcGxhY2VtZW50IiwiY2hpbGRNZXNzYWdlIiwicHJldk9yUm9vdCIsInJlc2V0SGVhZCIsImV4cG9ydCIsImV4cG9ydEl0ZW1zIiwiaGVhZElkIiwiaW1wb3J0IiwiVG9vbHRpcFByaW1pdGl2ZSIsImNsYXNzTmFtZXMiLCJ3aXRoRGVmYXVsdFByb3BzIiwiY2xhc3NOYW1lIiwiZGVmYXVsdFByb3BzIiwiY2xhc3NOYW1lUHJvcCIsIndpdGhEZWZhdWx0cyIsImdldFByb3BzIiwiV2l0aERlZmF1bHRzIiwiQ29tcG9uZW50QXNBbnkiLCJUb29sdGlwIiwiVG9vbHRpcFRyaWdnZXIiLCJUb29sdGlwQ29udGVudCIsInNpZGVPZmZzZXQiLCJjdmEiLCJidXR0b25WYXJpYW50cyIsInZhcmlhbnRzIiwidmFyaWFudCIsImRlZmF1bHQiLCJvdXRsaW5lIiwiZ2hvc3QiLCJpY29uIiwiZGVmYXVsdFZhcmlhbnRzIiwiQnV0dG9uIiwidG9vbHRpcCIsInRvQXBwZW5kTWVzc2FnZSIsImdldFRocmVhZFN0YXRlIiwibGFzdE1lc3NhZ2UiLCJ0aHJlYWRJZCIsInN1Z2dlc3Rpb25zIiwiZXh0cmFzIiwidW5zdGFibGVfZ2V0Q29yZSIsImdldFN0YXRlU3RhdGUiLCJnZXRTdWJtaXR0ZWRGZWVkYmFjayIsImRhdGEiLCJfZ2V0TWVzc2FnZVJ1bnRpbWUiLCJtZXNzYWdlU2VsZWN0b3IiLCJnZXRNZXNzc2FnZUJ5SWQiLCJnZXRNZXNzYWdlQnlJZCIsInNwZWVjaFN0YXRlIiwiZXZlbnQiLCJzdWJqZWN0IiwiX2V2ZW50TGlzdGVuZXJOZXN0ZWRTdWJzY3JpcHRpb25zIiwidGhyZWFkQmluZGluZyIsIl9Bc3Npc3RhbnRSdW50aW1lSW1wbCIsInN3aXRjaFRvVGhyZWFkIiwiY3JlYXRlTWFpblRocmVhZFJ1bnRpbWUiLCJDdXN0b21UaHJlYWRSdW50aW1lIiwidGhyZWFkU2VsZWN0b3IiLCJmcm9tTGFuZ3VhZ2VNb2RlbE1lc3NhZ2VzIiwibG0iLCJtZXJnZVN0ZXBzIiwibG1NZXNzYWdlIiwiVVJMIiwiaHJlZiIsIm5ld0NvbnRlbnQiLCJwcmV2aW91c01lc3NhZ2UiLCJ0b29sQ2FsbCIsImZpbmQiLCJpc0Vycm9yIiwidW5oYW5kbGVkUm9sZSIsImZyb21MYW5ndWFnZU1vZGVsVG9vbHMiLCJmcm9tRW50cmllcyIsImRlc2NyaXB0aW9uIiwicGFyYW1ldGVycyIsImNodW5rQnlMaW5lU3RyZWFtIiwiYnVmZmVyIiwiVHJhbnNmb3JtU3RyZWFtIiwidHJhbnNmb3JtIiwiY2h1bmsiLCJjb250cm9sbGVyIiwibGluZXMiLCJpIiwiZW5xdWV1ZSIsImZsdXNoIiwiZGVjb2RlU3RyZWFtUGFydCIsInBhcnNlIiwic3RyZWFtUGFydERlY29kZXJTdHJlYW0iLCJkZWNvZGVTdHJlYW0iLCJQaXBlYWJsZVRyYW5zZm9ybVN0cmVhbSIsInJlYWRhYmxlIiwicGlwZVRocm91Z2giLCJUZXh0RGVjb2RlclN0cmVhbSIsInN0cmVhbVV0aWxzIiwic3RyZWFtUGFydEVuY29kZXJTdHJlYW0iLCJhc3Npc3RhbnREZWNvZGVyU3RyZWFtIiwidG9vbENhbGxOYW1lcyIsImN1cnJlbnRUb29sQ2FsbCIsInRvb2xDYWxsVHlwZSIsInRleHREZWx0YSIsImFyZ3NUZXh0RGVsdGEiLCJlcnJvciIsImFzQXN5bmNJdGVyYWJsZSIsImFzeW5jSXRlcmF0b3IiLCJyZWFkZXIiLCJnZXRSZWFkZXIiLCJkb25lIiwicmVhZCIsIkVkZ2VDaGF0QWRhcHRlciIsInJ1biIsImFib3J0U2lnbmFsIiwiaGVhZGVycyIsIkhlYWRlcnMiLCJmZXRjaCIsImFwaSIsIm1ldGhvZCIsImNyZWRlbnRpYWxzIiwiYm9keSIsInRvQ29yZU1lc3NhZ2VzIiwidG9MYW5ndWFnZU1vZGVsVG9vbHMiLCJjYWxsU2V0dGluZ3MiLCJzaWduYWwiLCJvayIsInN0cmVhbSIsInRvb2xSZXN1bHRTdHJlYW0iLCJydW5SZXN1bHRTdHJlYW0iLCJ1cGRhdGUiLCJzcGxpdExvY2FsUnVudGltZU9wdGlvbnMiLCJpbml0aWFsTWVzc2FnZXMiLCJtYXhUb29sUm91bmR0cmlwcyIsIm1heFN0ZXBzIiwibG9jYWxSdW50aW1lT3B0aW9ucyIsIm90aGVyT3B0aW9ucyIsInVzZUVkZ2VSdW50aW1lIiwidXNlTG9jYWxSdW50aW1lIiwic2hvdWxkQ29udGludWUiLCJldmVyeSIsIkRlZmF1bHRFZGl0Q29tcG9zZXJSdW50aW1lQ29yZSIsIl9wcmV2aW91c1RleHQiLCJfbm9uVGV4dFBhcnRzIiwiX3BhcmVudElkIiwiZW5kRWRpdENhbGxiYWNrIiwiQmFzZVRocmVhZFJ1bnRpbWVDb3JlIiwicmVwb3NpdG9yeSIsImNvbmZpZ1Byb3ZpZGVyIiwiX2VkaXRDb21wb3NlcnMiLCJfbm90aWZ5U3Vic2NyaWJlcnMiLCJfbm90aWZ5RXZlbnRTdWJzY3JpYmVycyIsInN1YnNjcmliZXJzIiwiX2V2ZW50U3Vic2NyaWJlcnMiLCJfc3VibWl0dGVkRmVlZGJhY2siLCJmZWVkYmFjayIsInN1Ym1pdCIsIl9zdG9wU3BlYWtpbmciLCJ1dHRlcmFuY2UiLCJMb2NhbFRocmVhZFJ1bnRpbWVDb3JlIiwiX29wdGlvbnMiLCJoYXNVcGRhdGVzIiwiY2FuU3BlYWsiLCJjYW5BdHRhY2giLCJjYW5GZWVkYmFjayIsIm5ld01lc3NhZ2UiLCJwZXJmb3JtUm91bmR0cmlwIiwiYWJvcnRDb250cm9sbGVyIiwiYWJvcnQiLCJBYm9ydENvbnRyb2xsZXIiLCJpbml0aWFsQ29udGVudCIsImluaXRpYWxTdGVwcyIsIm1ldGFkYXRhIiwic3RlcHMiLCJpbml0YWxDdXN0b20iLCJjdXN0b20iLCJ1cGRhdGVNZXNzYWdlIiwibmV3U3RlcHMiLCJyb3VuZHRyaXBzIiwicHJvbWlzZU9yR2VuZXJhdG9yIiwib25VcGRhdGUiLCJyIiwibWVzc2FnZURhdGEiLCJhZGRlZCIsImZvdW5kIiwidW5zdGFibGVfY29weSIsIkxvY2FsUnVudGltZUNvcmUiLCJfcHJveHlDb25maWdQcm92aWRlciIsInByb3h5Q29uZmlnUHJvdmlkZXIiLCJMb2NhbFJ1bnRpbWVJbXBsIiwiX0xvY2FsUnVudGltZUltcGwiLCJzeW1ib2xJbm5lck1lc3NhZ2UiLCJnZXRFeHRlcm5hbFN0b3JlTWVzc2FnZSIsIlRocmVhZE1lc3NhZ2VDb252ZXJ0ZXIiLCJjb252ZXJ0TWVzc2FnZXMiLCJjb252ZXJ0ZXIiLCJjYWNoZWQiLCJjYWNoZSIsIldlYWtNYXAiLCJBVVRPX1NUQVRVU19SVU5OSU5HIiwiQVVUT19TVEFUVVNfQ09NUExFVEUiLCJpc0F1dG9TdGF0dXMiLCJnZXRBdXRvU3RhdHVzIiwiZnJvbVRocmVhZE1lc3NhZ2VMaWtlIiwibGlrZSIsImZhbGxiYWNrU3RhdHVzIiwiY29tbW9uIiwiaGFzVXBjb21pbmdNZXNzYWdlIiwiRXh0ZXJuYWxTdG9yZVRocmVhZFJ1bnRpbWVDb3JlIiwiX2NhcGFiaWxpdGllcyIsIl9tZXNzYWdlcyIsIl9zdG9yZSIsIm9uRWRpdCIsIm9sZFN0b3JlIiwic2V0TWVzc2FnZXMiLCJvblJlbG9hZCIsIm9uQ2FuY2VsIiwidW5zdGFibGVfY2FwYWJpbGl0aWVzIiwiY29weSIsImNvbnZlcnRNZXNzYWdlIiwiX2NvbnZlcnRlciIsImF1dG9TdGF0dXMiLCJ0b1N0cmluZyIsInBhcmVudCIsImFzc2lzdGFudE9wdGltaXN0aWNJZCIsInVwZGF0ZU1lc3NhZ2VzIiwib25OZXciLCJvbkFkZFRvb2xSZXN1bHQiLCJmbGF0TWFwIiwiRXh0ZXJuYWxTdG9yZVJ1bnRpbWVDb3JlIiwib25Td2l0Y2hUb05ld1RocmVhZCIsIm9uU3dpdGNoVG9UaHJlYWQiLCJ1c2VFeHRlcm5hbFN0b3JlUnVudGltZSIsImpvaW5FeHRlcm5hbE1lc3NhZ2VzIiwiYXNzaXN0YW50TWVzc2FnZSIsIm91dHB1dCIsInRvb2xDYWxsSWR4IiwiY2h1bmtFeHRlcm5hbE1lc3NhZ2VzIiwiY2FsbGJhY2tSZXN1bHRzIiwicmVzdWx0cyIsImlzQXNzaXN0YW50IiwiaW5wdXRzIiwib3V0cHV0cyIsImNhbGxiYWNrUmVzdWx0IiwidXNlRXh0ZXJuYWxNZXNzYWdlQ29udmVydGVyIiwiY2FsbGJhY2tDYWNoZSIsImNodW5rQ2FjaGUiLCJjb252ZXJ0ZXJDYWNoZSIsImlzQXJyYXkiLCJjaHVua3MiLCJzaGFsbG93QXJyYXlFcXVhbCIsImIiLCJEYW5nZXJvdXNJbkJyb3dzZXJBZGFwdGVyIiwicmVzIiwiZ2V0RWRnZVJ1bnRpbWVTdHJlYW0iLCJyZXF1ZXN0RGF0YSIsInVzZURhbmdlcm91c0luQnJvd3NlclJ1bnRpbWUiLCJXZWJTcGVlY2hTeW50aGVzaXNBZGFwdGVyIiwiU3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlIiwiaGFuZGxlRW5kIiwiaGFuZGxlciIsIndpbmRvdyIsInNwZWVjaFN5bnRoZXNpcyIsImNhbmNlbGxlZCIsInF1ZXVlTWljcm90YXNrIiwiU2ltcGxlSW1hZ2VBdHRhY2htZW50QWRhcHRlciIsImNvbnRlbnRUeXBlIiwiZ2V0RmlsZURhdGFVUkwiLCJyZXNvbHZlIiwicmVqZWN0IiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsIm9uZXJyb3IiLCJyZWFkQXNEYXRhVVJMIiwiU2ltcGxlVGV4dEF0dGFjaG1lbnRBZGFwdGVyIiwiZ2V0RmlsZVRleHQiLCJyZWFkQXNUZXh0IiwiZmlsZU1hdGNoZXNBY2NlcHQiLCJhY2NlcHRTdHJpbmciLCJhbGxvd2VkVHlwZXMiLCJ0b0xvd2VyQ2FzZSIsImZpbGVFeHRlbnNpb24iLCJmaWxlTWltZVR5cGUiLCJlbmRzV2l0aCIsImdlbmVyYWxUeXBlIiwiQ29tcG9zaXRlQXR0YWNobWVudEFkYXB0ZXIiLCJfYWRhcHRlcnMiLCJ3aWxkY2FyZElkeCIsIlRocmVhZENvbmZpZ0NvbnRleHQiLCJ1c2VUaHJlYWRDb25maWciLCJUaHJlYWRDb25maWdQcm92aWRlciIsImhhc0Fzc2lzdGFudCIsIkF1ZGlvTGluZXNJY29uIiwiQ2hlY2tJY29uIiwiQ29weUljb24iLCJSZWZyZXNoQ3dJY29uIiwiU3RvcENpcmNsZUljb24iLCJUaHVtYnNEb3duSWNvbiIsIlRodW1ic1VwSWNvbiIsInVzZUFsbG93Q29weSIsImVuc3VyZUNhcGFiaWxpdHkiLCJhbGxvd0NvcHkiLCJjb3B5U3VwcG9ydGVkIiwidXNlQWxsb3dTcGVhayIsImFsbG93U3BlYWsiLCJzcGVlY2hTdXBwb3J0ZWQiLCJ1c2VBbGxvd1JlbG9hZCIsImFsbG93UmVsb2FkIiwicmVsb2FkU3VwcG9ydGVkIiwidXNlQWxsb3dGZWVkYmFja1Bvc2l0aXZlIiwiYWxsb3dGZWVkYmFja1Bvc2l0aXZlIiwiZmVlZGJhY2tTdXBwb3J0ZWQiLCJ1c2VBbGxvd0ZlZWRiYWNrTmVnYXRpdmUiLCJhbGxvd0ZlZWRiYWNrTmVnYXRpdmUiLCJBc3Npc3RhbnRBY3Rpb25CYXIiLCJBc3Npc3RhbnRBY3Rpb25CYXJSb290IiwiQXNzaXN0YW50QWN0aW9uQmFyU3BlZWNoQ29udHJvbCIsIkFzc2lzdGFudEFjdGlvbkJhckNvcHkiLCJBc3Npc3RhbnRBY3Rpb25CYXJSZWxvYWQiLCJBc3Npc3RhbnRBY3Rpb25CYXJGZWVkYmFja1Bvc2l0aXZlIiwiQXNzaXN0YW50QWN0aW9uQmFyRmVlZGJhY2tOZWdhdGl2ZSIsInN0cmluZ3MiLCJBc3Npc3RhbnRBY3Rpb25CYXJTcGVhayIsIkFzc2lzdGFudEFjdGlvbkJhclN0b3BTcGVha2luZyIsInN0b3BUb29sdGlwIiwicG9zaXRpdmUiLCJuZWdhdGl2ZSIsImV4cG9ydHMiLCJTcGVlY2hDb250cm9sIiwiYXNzaXN0YW50X2FjdGlvbl9iYXJfZGVmYXVsdCIsImFzc2lnbiIsIkNoZXZyb25MZWZ0SWNvbiIsIkNoZXZyb25SaWdodEljb24iLCJ1c2VBbGxvd0JyYW5jaFBpY2tlciIsImJyYW5jaFBpY2tlciIsImFsbG93QnJhbmNoUGlja2VyIiwiYnJhbmNoUGlja2VyU3VwcG9ydGVkIiwiQnJhbmNoUGlja2VyIiwiQnJhbmNoUGlja2VyUm9vdCIsIkJyYW5jaFBpY2tlclByZXZpb3VzIiwiQnJhbmNoUGlja2VyU3RhdGUiLCJCcmFuY2hQaWNrZXJOZXh0IiwicHJldmlvdXMiLCJCcmFuY2hQaWNrZXJTdGF0ZVdyYXBwZXIiLCJicmFuY2hfcGlja2VyX2RlZmF1bHQiLCJBdmF0YXJQcmltaXRpdmUiLCJBdmF0YXIiLCJhbHQiLCJBdmF0YXJSb290IiwiQXZhdGFySW1hZ2UiLCJBdmF0YXJGYWxsYmFjayIsImNvbnRlbnRfcGFydF9kZWZhdWx0IiwiQXNzaXN0YW50TWVzc2FnZVJvb3QiLCJBc3Npc3RhbnRNZXNzYWdlQXZhdGFyIiwiQXNzaXN0YW50TWVzc2FnZUNvbnRlbnQiLCJhc3Npc3RhbnRBdmF0YXIiLCJhdmF0YXIiLCJBc3Npc3RhbnRNZXNzYWdlQ29udGVudFdyYXBwZXIiLCJjb21wb25lbnRzUHJvcCIsInRvb2xzQ29tcG9uZW50cyIsIlRvb2xGYWxsYmFjayIsImFzc2lzdGFudF9tZXNzYWdlX2RlZmF1bHQiLCJCb3RJY29uIiwiQ2hldnJvbkRvd25JY29uIiwiQXJyb3dEb3duSWNvbiIsIlBhcGVyY2xpcEljb24iLCJTZW5kSG9yaXpvbnRhbEljb24iLCJDaXJjbGVTdG9wSWNvbiIsInhtbG5zIiwidmlld0JveCIsImZpbGwiLCJ3aWR0aCIsImhlaWdodCIsIngiLCJ5IiwicngiLCJDaXJjbGVYSWNvbiIsIkZpbGVJY29uIiwiUmVhY3QiLCJEaWFsb2dQcmltaXRpdmUiLCJEaWFsb2ciLCJEaWFsb2dUcmlnZ2VyIiwiRGlhbG9nUG9ydGFsIiwiRGlhbG9nT3ZlcmxheSIsIk92ZXJsYXkiLCJEaWFsb2dDb250ZW50IiwiQXR0YWNobWVudFJvb3QiLCJ1c2VGaWxlU3JjIiwic2V0U3JjIiwib2JqZWN0VXJsIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwidXNlQXR0YWNobWVudFNyYyIsIkF0dGFjaG1lbnRQcmV2aWV3IiwiaXNMb2FkZWQiLCJzZXRJc0xvYWRlZCIsIm1heFdpZHRoIiwibWF4SGVpZ2h0Iiwib3ZlcmZsb3ciLCJvbkxvYWQiLCJBdHRhY2htZW50UHJldmlld0RpYWxvZyIsIkF0dGFjaG1lbnRUaHVtYiIsImlzSW1hZ2UiLCJkZWxheU1zIiwiY2FuUmVtb3ZlIiwidHlwZUxhYmVsIiwiQXR0YWNobWVudFJlbW92ZSIsImF0dGFjaG1lbnRfZGVmYXVsdCIsInVzZUFsbG93QXR0YWNobWVudHMiLCJhbGxvd0F0dGFjaG1lbnRzIiwiYXR0YWNobWVudHNTdXBwb3J0ZWQiLCJDb21wb3NlciIsIkNvbXBvc2VyUm9vdCIsIkNvbXBvc2VyQXR0YWNobWVudHMiLCJDb21wb3NlckFkZEF0dGFjaG1lbnQiLCJDb21wb3NlcklucHV0IiwiQ29tcG9zZXJBY3Rpb24iLCJDb21wb3NlcklucHV0U3R5bGVkIiwicm93cyIsInBsYWNlaG9sZGVyIiwiQ29tcG9zZXJBdHRhY2htZW50c0NvbnRhaW5lciIsIkNvbXBvc2VyQXR0YWNoQnV0dG9uIiwidXNlQWxsb3dDYW5jZWwiLCJjYW5jZWxTdXBwb3J0ZWQiLCJhbGxvd0NhbmNlbCIsIkNvbXBvc2VyU2VuZCIsIkNvbXBvc2VyQ2FuY2VsIiwiQ29tcG9zZXJTZW5kQnV0dG9uIiwiQ29tcG9zZXJDYW5jZWxCdXR0b24iLCJBY3Rpb24iLCJjb21wb3Nlcl9kZWZhdWx0IiwiVGhyZWFkV2VsY29tZSIsIlRocmVhZFdlbGNvbWVSb290IiwiVGhyZWFkV2VsY29tZUNlbnRlciIsIlRocmVhZFdlbGNvbWVBdmF0YXIiLCJUaHJlYWRXZWxjb21lTWVzc2FnZSIsIlRocmVhZFdlbGNvbWVTdWdnZXN0aW9ucyIsIlRocmVhZFdlbGNvbWVSb290U3R5bGVkIiwiVGhyZWFkV2VsY29tZU1lc3NhZ2VTdHlsZWQiLCJtZXNzYWdlUHJvcCIsIndlbGNvbWUiLCJUaHJlYWRXZWxjb21lU3VnZ2VzdGlvbkNvbnRhaW5lciIsIlRocmVhZFdlbGNvbWVTdWdnZXN0aW9uU3R5bGVkIiwiVGhyZWFkV2VsY29tZVN1Z2dlc3Rpb24iLCJzdWdnZXN0aW9uIiwic3VnZ2VzdGlvbnMyIiwiZmluYWxTdWdnZXN0aW9ucyIsIkNlbnRlciIsIlN1Z2dlc3Rpb25zIiwidGhyZWFkX3dlbGNvbWVfZGVmYXVsdCIsIlBlbmNpbEljb24iLCJ1c2VBbGxvd0VkaXQiLCJ1c2VyTWVzc2FnZSIsImFsbG93RWRpdCIsImVkaXRTdXBwb3J0ZWQiLCJVc2VyQWN0aW9uQmFyIiwiVXNlckFjdGlvbkJhclJvb3QiLCJVc2VyQWN0aW9uQmFyRWRpdCIsInVzZXJfYWN0aW9uX2Jhcl9kZWZhdWx0IiwiVXNlck1lc3NhZ2VSb290IiwiVXNlck1lc3NhZ2VBdHRhY2htZW50cyIsIlVzZXJNZXNzYWdlQ29udGVudCIsIlVzZXJNZXNzYWdlQ29udGVudFdyYXBwZXIiLCJVc2VyTWVzc2FnZUF0dGFjaG1lbnRzQ29udGFpbmVyIiwidXNlcl9tZXNzYWdlX2RlZmF1bHQiLCJFZGl0Q29tcG9zZXJSb290IiwiRWRpdENvbXBvc2VySW5wdXQiLCJFZGl0Q29tcG9zZXJGb290ZXIiLCJFZGl0Q29tcG9zZXJDYW5jZWwiLCJFZGl0Q29tcG9zZXJTZW5kIiwiZWRpdENvbXBvc2VyIiwibGFiZWwiLCJGb290ZXIiLCJlZGl0X2NvbXBvc2VyX2RlZmF1bHQiLCJUaHJlYWQiLCJDb21wb3NlckNvbXBvbmVudCIsIlRocmVhZFdlbGNvbWVDb21wb25lbnQiLCJUaHJlYWRSb290IiwiVGhyZWFkVmlld3BvcnQiLCJUaHJlYWRNZXNzYWdlcyIsIlRocmVhZEZvbGxvd3VwU3VnZ2VzdGlvbnMiLCJUaHJlYWRWaWV3cG9ydEZvb3RlciIsIlRocmVhZFNjcm9sbFRvQm90dG9tIiwiVGhyZWFkUm9vdFN0eWxlZCIsInVuc3RhYmxlX2ZsZXhHcm93RGl2IiwiZmxleEdyb3dEaXYiLCJmbGV4R3JvdyIsIlRocmVhZFNjcm9sbFRvQm90dG9tSWNvbkJ1dHRvbiIsIkZvbGxvd3VwU3VnZ2VzdGlvbnMiLCJWaWV3cG9ydEZvb3RlciIsInRocmVhZF9kZWZhdWx0IiwiQXNzaXN0YW50TW9kYWwiLCJBc3Npc3RhbnRNb2RhbFJvb3QiLCJBc3Npc3RhbnRNb2RhbFRyaWdnZXIiLCJBc3Npc3RhbnRNb2RhbENvbnRlbnQiLCJBc3Npc3RhbnRNb2RhbEFuY2hvciIsIkFzc2lzdGFudE1vZGFsQnV0dG9uIiwiTW9kYWxCdXR0b25TdHlsZWQiLCJhc3Npc3RhbnRNb2RhbCIsIm9wZW5Ub29sdGlwIiwiY2xvc2VkIiwiY2xvc2VkVG9vbHRpcCIsImFzc2lzdGFudF9tb2RhbF9kZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@assistant-ui/react/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _extends; }\n/* harmony export */ });\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzPzA0YmIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIHJldHVybiBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gPyBPYmplY3QuYXNzaWduLmJpbmQoKSA6IGZ1bmN0aW9uIChuKSB7XG4gICAgZm9yICh2YXIgZSA9IDE7IGUgPCBhcmd1bWVudHMubGVuZ3RoOyBlKyspIHtcbiAgICAgIHZhciB0ID0gYXJndW1lbnRzW2VdO1xuICAgICAgZm9yICh2YXIgciBpbiB0KSAoe30pLmhhc093blByb3BlcnR5LmNhbGwodCwgcikgJiYgKG5bcl0gPSB0W3JdKTtcbiAgICB9XG4gICAgcmV0dXJuIG47XG4gIH0sIF9leHRlbmRzLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG59XG5leHBvcnQgeyBfZXh0ZW5kcyBhcyBkZWZhdWx0IH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/extends.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _objectWithoutPropertiesLoose; }\n/* harmony export */ });\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcz81YTllIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHIsIGUpIHtcbiAgaWYgKG51bGwgPT0gcikgcmV0dXJuIHt9O1xuICB2YXIgdCA9IHt9O1xuICBmb3IgKHZhciBuIGluIHIpIGlmICh7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsIG4pKSB7XG4gICAgaWYgKGUuaW5jbHVkZXMobikpIGNvbnRpbnVlO1xuICAgIHRbbl0gPSByW25dO1xuICB9XG4gIHJldHVybiB0O1xufVxuZXhwb3J0IHsgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgYXMgZGVmYXVsdCB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@floating-ui/core/dist/floating-ui.core.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrow: function() { return /* binding */ arrow; },\n/* harmony export */   autoPlacement: function() { return /* binding */ autoPlacement; },\n/* harmony export */   computePosition: function() { return /* binding */ computePosition; },\n/* harmony export */   detectOverflow: function() { return /* binding */ detectOverflow; },\n/* harmony export */   flip: function() { return /* binding */ flip; },\n/* harmony export */   hide: function() { return /* binding */ hide; },\n/* harmony export */   inline: function() { return /* binding */ inline; },\n/* harmony export */   limitShift: function() { return /* binding */ limitShift; },\n/* harmony export */   offset: function() { return /* binding */ offset; },\n/* harmony export */   rectToClientRect: function() { return /* reexport safe */ _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect; },\n/* harmony export */   shift: function() { return /* binding */ shift; },\n/* harmony export */   size: function() { return /* binding */ size; }\n/* harmony export */ });\n/* harmony import */ var _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/utils */ \"(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs\");\n\n\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement);\n  const alignmentAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentAxis)(placement);\n  const alignLength = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAxisLength)(alignmentAxis);\n  const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch ((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n  const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentAxis)(placement);\n    const length = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAxisLength)(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) === alignment), ...allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) !== alignment)] : allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) === alignment || (autoAlignment ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAlignmentPlacement)(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentSides)(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);\n      const initialSideAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(initialPlacement);\n      const isBasePlacement = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositePlacement)(initialPlacement)] : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getExpandedPlacements)(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxisPlacements)(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentSides)(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...rects.map(rect => rect.left));\n  const minY = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...rects.map(rect => rect.top));\n  const maxX = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...rects.map(rect => rect.right));\n  const maxY = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(getBoundingRect(nativeClientRects));\n      const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if ((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === 'left';\n          const maxRight = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...clientRects.map(rect => rect.right));\n          const minLeft = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);\n  const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement);\n  const isVertical = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement));\n      const mainAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxis)(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement);\n      const mainAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxis)(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);\n      const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement);\n      const isYAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.left, 0);\n        const xMax = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.right, 0);\n        const yMin = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.top, 0);\n        const yMax = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrow: function() { return /* binding */ arrow; },\n/* harmony export */   autoPlacement: function() { return /* binding */ autoPlacement; },\n/* harmony export */   autoUpdate: function() { return /* binding */ autoUpdate; },\n/* harmony export */   computePosition: function() { return /* binding */ computePosition; },\n/* harmony export */   detectOverflow: function() { return /* binding */ detectOverflow; },\n/* harmony export */   flip: function() { return /* binding */ flip; },\n/* harmony export */   getOverflowAncestors: function() { return /* reexport safe */ _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors; },\n/* harmony export */   hide: function() { return /* binding */ hide; },\n/* harmony export */   inline: function() { return /* binding */ inline; },\n/* harmony export */   limitShift: function() { return /* binding */ limitShift; },\n/* harmony export */   offset: function() { return /* binding */ offset; },\n/* harmony export */   platform: function() { return /* binding */ platform; },\n/* harmony export */   shift: function() { return /* binding */ shift; },\n/* harmony export */   size: function() { return /* binding */ size; }\n/* harmony export */ });\n/* harmony import */ var _floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @floating-ui/utils */ \"(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs\");\n/* harmony import */ var _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @floating-ui/core */ \"(app-pages-browser)/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs\");\n/* harmony import */ var _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/utils/dom */ \"(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs\");\n\n\n\n\n\nfunction getCssDimensions(element) {\n  const css = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(width) !== offsetWidth || (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(domElement)) {\n    return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(rect.width) : rect.width) / width;\n  let y = ($ ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);\nfunction getVisualOffsets(element) {\n  const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element);\n  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isWebKit)() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(domElement);\n    const offsetWin = offsetParent && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(offsetParent) ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getFrameElement)(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(currentIFrame);\n      currentIFrame = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getFrameElement)(currentWin);\n    }\n  }\n  return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.rectToClientRect)({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(offsetParent);\n  const topLayer = elements ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTopLayer)(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);\n  const offsets = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);\n  const isOffsetParentAnElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeName)(offsetParent) !== 'body' || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isOverflowElement)(documentElement)) {\n      scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(offsetParent);\n    }\n    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element);\n  const scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(element);\n  const body = element.ownerDocument.body;\n  const width = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(body).direction === 'rtl') {\n    x += (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element);\n  const html = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isWebKit)();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) ? getScale(element) : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element));\n  } else if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.rectToClientRect)(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(element);\n  if (parentNode === stopNode || !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(parentNode) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(parentNode)) {\n    return false;\n  }\n  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors)(element, [], false).filter(el => (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(el) && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeName)(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).position === 'fixed';\n  let currentNode = elementIsFixed ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(currentNode) && !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(currentNode)) {\n    const computedStyle = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(currentNode);\n    const currentNodeIsContaining = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isContainingBlock)(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isOverflowElement)(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTopLayer)(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(rect.top, accRect.top);\n    accRect.right = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.min)(rect.right, accRect.right);\n    accRect.bottom = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.min)(rect.bottom, accRect.bottom);\n    accRect.left = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(offsetParent);\n  const documentElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeName)(offsetParent) !== 'body' || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isOverflowElement)(documentElement)) {\n      scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  let htmlX = 0;\n  let htmlY = 0;\n  if (documentElement && !isOffsetParentAnElement && !isFixed) {\n    const htmlRect = documentElement.getBoundingClientRect();\n    htmlY = htmlRect.top + scroll.scrollTop;\n    htmlX = htmlRect.left + scroll.scrollLeft -\n    // RTL <body> scrollbar.\n    getWindowScrollBarX(documentElement, htmlRect);\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlX;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlY;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element);\n  if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTopLayer)(element)) {\n    return win;\n  }\n  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element)) {\n    let svgOffsetParent = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(element);\n    while (svgOffsetParent && !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(svgOffsetParent)) {\n      if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTableElement)(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(offsetParent) && isStaticPositioned(offsetParent) && !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isContainingBlock)(offsetParent)) {\n    return win;\n  }\n  return offsetParent || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getContainingBlock)(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement: _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement: _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(top);\n    const insetRight = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(root.clientWidth - (left + width));\n    const insetBottom = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(root.clientHeight - (top + height));\n    const insetLeft = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(0, (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.min)(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors)(referenceEl) : []), ...(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors)(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.detectOverflow;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.offset;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.autoPlacement;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.shift;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.flip;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.size;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.hide;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.arrow;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.inline;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.limitShift;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return (0,_floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.computePosition)(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZmxvYXRpbmctdWkvZG9tL2Rpc3QvZmxvYXRpbmctdWkuZG9tLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF5VDtBQUMvTztBQUNrUDtBQUM5UDs7QUFFOUQ7QUFDQSxjQUFjLHdFQUFnQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxRUFBYTtBQUNqQztBQUNBO0FBQ0EseUJBQXlCLHlEQUFLLDJCQUEyQix5REFBSztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFVBQVUsaUVBQVM7QUFDbkI7O0FBRUE7QUFDQTtBQUNBLE9BQU8scUVBQWE7QUFDcEIsV0FBVyxnRUFBWTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osZUFBZSx5REFBSztBQUNwQixlQUFlLHlEQUFLOztBQUVwQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLCtCQUErQixnRUFBWTtBQUMzQztBQUNBLGNBQWMsaUVBQVM7QUFDdkIsT0FBTyxnRUFBUTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsaUVBQVM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnRUFBWTtBQUMxQjtBQUNBO0FBQ0EsVUFBVSxpRUFBUztBQUNuQjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLDJIQUEySCxnRUFBWTtBQUN2STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlFQUFTO0FBQ3pCLHNDQUFzQyxpRUFBUyxpQkFBaUIsaUVBQVM7QUFDekU7QUFD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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw2REFBZ0I7O0FBRXZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxxREFBUTs7QUFFdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDREQUFlOztBQUVyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxvREFBTzs7QUFFckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtREFBTTs7QUFFbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtREFBTTs7QUFFbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbURBQU07O0FBRW5CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG9EQUFPOztBQUVyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxxREFBUTs7QUFFdkI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHlEQUFZOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxrRUFBaUI7QUFDMUI7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFNEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BmbG9hdGluZy11aS9kb20vZGlzdC9mbG9hdGluZy11aS5kb20ubWpzP2NkMzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVjdFRvQ2xpZW50UmVjdCwgZGV0ZWN0T3ZlcmZsb3cgYXMgZGV0ZWN0T3ZlcmZsb3ckMSwgb2Zmc2V0IGFzIG9mZnNldCQxLCBhdXRvUGxhY2VtZW50IGFzIGF1dG9QbGFjZW1lbnQkMSwgc2hpZnQgYXMgc2hpZnQkMSwgZmxpcCBhcyBmbGlwJDEsIHNpemUgYXMgc2l6ZSQxLCBoaWRlIGFzIGhpZGUkMSwgYXJyb3cgYXMgYXJyb3ckMSwgaW5saW5lIGFzIGlubGluZSQxLCBsaW1pdFNoaWZ0IGFzIGxpbWl0U2hpZnQkMSwgY29tcHV0ZVBvc2l0aW9uIGFzIGNvbXB1dGVQb3NpdGlvbiQxIH0gZnJvbSAnQGZsb2F0aW5nLXVpL2NvcmUnO1xuaW1wb3J0IHsgcm91bmQsIGNyZWF0ZUNvb3JkcywgbWF4LCBtaW4sIGZsb29yIH0gZnJvbSAnQGZsb2F0aW5nLXVpL3V0aWxzJztcbmltcG9ydCB7IGdldENvbXB1dGVkU3R5bGUsIGlzSFRNTEVsZW1lbnQsIGlzRWxlbWVudCwgZ2V0V2luZG93LCBpc1dlYktpdCwgZ2V0RnJhbWVFbGVtZW50LCBnZXREb2N1bWVudEVsZW1lbnQsIGlzVG9wTGF5ZXIsIGdldE5vZGVOYW1lLCBpc092ZXJmbG93RWxlbWVudCwgZ2V0Tm9kZVNjcm9sbCwgZ2V0T3ZlcmZsb3dBbmNlc3RvcnMsIGdldFBhcmVudE5vZGUsIGlzTGFzdFRyYXZlcnNhYmxlTm9kZSwgaXNDb250YWluaW5nQmxvY2ssIGlzVGFibGVFbGVtZW50LCBnZXRDb250YWluaW5nQmxvY2sgfSBmcm9tICdAZmxvYXRpbmctdWkvdXRpbHMvZG9tJztcbmV4cG9ydCB7IGdldE92ZXJmbG93QW5jZXN0b3JzIH0gZnJvbSAnQGZsb2F0aW5nLXVpL3V0aWxzL2RvbSc7XG5cbmZ1bmN0aW9uIGdldENzc0RpbWVuc2lvbnMoZWxlbWVudCkge1xuICBjb25zdCBjc3MgPSBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpO1xuICAvLyBJbiB0ZXN0aW5nIGVudmlyb25tZW50cywgdGhlIGB3aWR0aGAgYW5kIGBoZWlnaHRgIHByb3BlcnRpZXMgYXJlIGVtcHR5XG4gIC8vIHN0cmluZ3MgZm9yIFNWRyBlbGVtZW50cywgcmV0dXJuaW5nIE5hTi4gRmFsbGJhY2sgdG8gYDBgIGluIHRoaXMgY2FzZS5cbiAgbGV0IHdpZHRoID0gcGFyc2VGbG9hdChjc3Mud2lkdGgpIHx8IDA7XG4gIGxldCBoZWlnaHQgPSBwYXJzZUZsb2F0KGNzcy5oZWlnaHQpIHx8IDA7XG4gIGNvbnN0IGhhc09mZnNldCA9IGlzSFRNTEVsZW1lbnQoZWxlbWVudCk7XG4gIGNvbnN0IG9mZnNldFdpZHRoID0gaGFzT2Zmc2V0ID8gZWxlbWVudC5vZmZzZXRXaWR0aCA6IHdpZHRoO1xuICBjb25zdCBvZmZzZXRIZWlnaHQgPSBoYXNPZmZzZXQgPyBlbGVtZW50Lm9mZnNldEhlaWdodCA6IGhlaWdodDtcbiAgY29uc3Qgc2hvdWxkRmFsbGJhY2sgPSByb3VuZCh3aWR0aCkgIT09IG9mZnNldFdpZHRoIHx8IHJvdW5kKGhlaWdodCkgIT09IG9mZnNldEhlaWdodDtcbiAgaWYgKHNob3VsZEZhbGxiYWNrKSB7XG4gICAgd2lkdGggPSBvZmZzZXRXaWR0aDtcbiAgICBoZWlnaHQgPSBvZmZzZXRIZWlnaHQ7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgJDogc2hvdWxkRmFsbGJhY2tcbiAgfTtcbn1cblxuZnVuY3Rpb24gdW53cmFwRWxlbWVudChlbGVtZW50KSB7XG4gIHJldHVybiAhaXNFbGVtZW50KGVsZW1lbnQpID8gZWxlbWVudC5jb250ZXh0RWxlbWVudCA6IGVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGdldFNjYWxlKGVsZW1lbnQpIHtcbiAgY29uc3QgZG9tRWxlbWVudCA9IHVud3JhcEVsZW1lbnQoZWxlbWVudCk7XG4gIGlmICghaXNIVE1MRWxlbWVudChkb21FbGVtZW50KSkge1xuICAgIHJldHVybiBjcmVhdGVDb29yZHMoMSk7XG4gIH1cbiAgY29uc3QgcmVjdCA9IGRvbUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIGNvbnN0IHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgJFxuICB9ID0gZ2V0Q3NzRGltZW5zaW9ucyhkb21FbGVtZW50KTtcbiAgbGV0IHggPSAoJCA/IHJvdW5kKHJlY3Qud2lkdGgpIDogcmVjdC53aWR0aCkgLyB3aWR0aDtcbiAgbGV0IHkgPSAoJCA/IHJvdW5kKHJlY3QuaGVpZ2h0KSA6IHJlY3QuaGVpZ2h0KSAvIGhlaWdodDtcblxuICAvLyAwLCBOYU4sIG9yIEluZmluaXR5IHNob3VsZCBhbHdheXMgZmFsbGJhY2sgdG8gMS5cblxuICBpZiAoIXggfHwgIU51bWJlci5pc0Zpbml0ZSh4KSkge1xuICAgIHggPSAxO1xuICB9XG4gIGlmICgheSB8fCAhTnVtYmVyLmlzRmluaXRlKHkpKSB7XG4gICAgeSA9IDE7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB4LFxuICAgIHlcbiAgfTtcbn1cblxuY29uc3Qgbm9PZmZzZXRzID0gLyojX19QVVJFX18qL2NyZWF0ZUNvb3JkcygwKTtcbmZ1bmN0aW9uIGdldFZpc3VhbE9mZnNldHMoZWxlbWVudCkge1xuICBjb25zdCB3aW4gPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIGlmICghaXNXZWJLaXQoKSB8fCAhd2luLnZpc3VhbFZpZXdwb3J0KSB7XG4gICAgcmV0dXJuIG5vT2Zmc2V0cztcbiAgfVxuICByZXR1cm4ge1xuICAgIHg6IHdpbi52aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0LFxuICAgIHk6IHdpbi52aXN1YWxWaWV3cG9ydC5vZmZzZXRUb3BcbiAgfTtcbn1cbmZ1bmN0aW9uIHNob3VsZEFkZFZpc3VhbE9mZnNldHMoZWxlbWVudCwgaXNGaXhlZCwgZmxvYXRpbmdPZmZzZXRQYXJlbnQpIHtcbiAgaWYgKGlzRml4ZWQgPT09IHZvaWQgMCkge1xuICAgIGlzRml4ZWQgPSBmYWxzZTtcbiAgfVxuICBpZiAoIWZsb2F0aW5nT2Zmc2V0UGFyZW50IHx8IGlzRml4ZWQgJiYgZmxvYXRpbmdPZmZzZXRQYXJlbnQgIT09IGdldFdpbmRvdyhlbGVtZW50KSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gaXNGaXhlZDtcbn1cblxuZnVuY3Rpb24gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIGluY2x1ZGVTY2FsZSwgaXNGaXhlZFN0cmF0ZWd5LCBvZmZzZXRQYXJlbnQpIHtcbiAgaWYgKGluY2x1ZGVTY2FsZSA9PT0gdm9pZCAwKSB7XG4gICAgaW5jbHVkZVNjYWxlID0gZmFsc2U7XG4gIH1cbiAgaWYgKGlzRml4ZWRTdHJhdGVneSA9PT0gdm9pZCAwKSB7XG4gICAgaXNGaXhlZFN0cmF0ZWd5ID0gZmFsc2U7XG4gIH1cbiAgY29uc3QgY2xpZW50UmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIGNvbnN0IGRvbUVsZW1lbnQgPSB1bndyYXBFbGVtZW50KGVsZW1lbnQpO1xuICBsZXQgc2NhbGUgPSBjcmVhdGVDb29yZHMoMSk7XG4gIGlmIChpbmNsdWRlU2NhbGUpIHtcbiAgICBpZiAob2Zmc2V0UGFyZW50KSB7XG4gICAgICBpZiAoaXNFbGVtZW50KG9mZnNldFBhcmVudCkpIHtcbiAgICAgICAgc2NhbGUgPSBnZXRTY2FsZShvZmZzZXRQYXJlbnQpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzY2FsZSA9IGdldFNjYWxlKGVsZW1lbnQpO1xuICAgIH1cbiAgfVxuICBjb25zdCB2aXN1YWxPZmZzZXRzID0gc2hvdWxkQWRkVmlzdWFsT2Zmc2V0cyhkb21FbGVtZW50LCBpc0ZpeGVkU3RyYXRlZ3ksIG9mZnNldFBhcmVudCkgPyBnZXRWaXN1YWxPZmZzZXRzKGRvbUVsZW1lbnQpIDogY3JlYXRlQ29vcmRzKDApO1xuICBsZXQgeCA9IChjbGllbnRSZWN0LmxlZnQgKyB2aXN1YWxPZmZzZXRzLngpIC8gc2NhbGUueDtcbiAgbGV0IHkgPSAoY2xpZW50UmVjdC50b3AgKyB2aXN1YWxPZmZzZXRzLnkpIC8gc2NhbGUueTtcbiAgbGV0IHdpZHRoID0gY2xpZW50UmVjdC53aWR0aCAvIHNjYWxlLng7XG4gIGxldCBoZWlnaHQgPSBjbGllbnRSZWN0LmhlaWdodCAvIHNjYWxlLnk7XG4gIGlmIChkb21FbGVtZW50KSB7XG4gICAgY29uc3Qgd2luID0gZ2V0V2luZG93KGRvbUVsZW1lbnQpO1xuICAgIGNvbnN0IG9mZnNldFdpbiA9IG9mZnNldFBhcmVudCAmJiBpc0VsZW1lbnQob2Zmc2V0UGFyZW50KSA/IGdldFdpbmRvdyhvZmZzZXRQYXJlbnQpIDogb2Zmc2V0UGFyZW50O1xuICAgIGxldCBjdXJyZW50V2luID0gd2luO1xuICAgIGxldCBjdXJyZW50SUZyYW1lID0gZ2V0RnJhbWVFbGVtZW50KGN1cnJlbnRXaW4pO1xuICAgIHdoaWxlIChjdXJyZW50SUZyYW1lICYmIG9mZnNldFBhcmVudCAmJiBvZmZzZXRXaW4gIT09IGN1cnJlbnRXaW4pIHtcbiAgICAgIGNvbnN0IGlmcmFtZVNjYWxlID0gZ2V0U2NhbGUoY3VycmVudElGcmFtZSk7XG4gICAgICBjb25zdCBpZnJhbWVSZWN0ID0gY3VycmVudElGcmFtZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIGNvbnN0IGNzcyA9IGdldENvbXB1dGVkU3R5bGUoY3VycmVudElGcmFtZSk7XG4gICAgICBjb25zdCBsZWZ0ID0gaWZyYW1lUmVjdC5sZWZ0ICsgKGN1cnJlbnRJRnJhbWUuY2xpZW50TGVmdCArIHBhcnNlRmxvYXQoY3NzLnBhZGRpbmdMZWZ0KSkgKiBpZnJhbWVTY2FsZS54O1xuICAgICAgY29uc3QgdG9wID0gaWZyYW1lUmVjdC50b3AgKyAoY3VycmVudElGcmFtZS5jbGllbnRUb3AgKyBwYXJzZUZsb2F0KGNzcy5wYWRkaW5nVG9wKSkgKiBpZnJhbWVTY2FsZS55O1xuICAgICAgeCAqPSBpZnJhbWVTY2FsZS54O1xuICAgICAgeSAqPSBpZnJhbWVTY2FsZS55O1xuICAgICAgd2lkdGggKj0gaWZyYW1lU2NhbGUueDtcbiAgICAgIGhlaWdodCAqPSBpZnJhbWVTY2FsZS55O1xuICAgICAgeCArPSBsZWZ0O1xuICAgICAgeSArPSB0b3A7XG4gICAgICBjdXJyZW50V2luID0gZ2V0V2luZG93KGN1cnJlbnRJRnJhbWUpO1xuICAgICAgY3VycmVudElGcmFtZSA9IGdldEZyYW1lRWxlbWVudChjdXJyZW50V2luKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlY3RUb0NsaWVudFJlY3Qoe1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNvbnZlcnRPZmZzZXRQYXJlbnRSZWxhdGl2ZVJlY3RUb1ZpZXdwb3J0UmVsYXRpdmVSZWN0KF9yZWYpIHtcbiAgbGV0IHtcbiAgICBlbGVtZW50cyxcbiAgICByZWN0LFxuICAgIG9mZnNldFBhcmVudCxcbiAgICBzdHJhdGVneVxuICB9ID0gX3JlZjtcbiAgY29uc3QgaXNGaXhlZCA9IHN0cmF0ZWd5ID09PSAnZml4ZWQnO1xuICBjb25zdCBkb2N1bWVudEVsZW1lbnQgPSBnZXREb2N1bWVudEVsZW1lbnQob2Zmc2V0UGFyZW50KTtcbiAgY29uc3QgdG9wTGF5ZXIgPSBlbGVtZW50cyA/IGlzVG9wTGF5ZXIoZWxlbWVudHMuZmxvYXRpbmcpIDogZmFsc2U7XG4gIGlmIChvZmZzZXRQYXJlbnQgPT09IGRvY3VtZW50RWxlbWVudCB8fCB0b3BMYXllciAmJiBpc0ZpeGVkKSB7XG4gICAgcmV0dXJuIHJlY3Q7XG4gIH1cbiAgbGV0IHNjcm9sbCA9IHtcbiAgICBzY3JvbGxMZWZ0OiAwLFxuICAgIHNjcm9sbFRvcDogMFxuICB9O1xuICBsZXQgc2NhbGUgPSBjcmVhdGVDb29yZHMoMSk7XG4gIGNvbnN0IG9mZnNldHMgPSBjcmVhdGVDb29yZHMoMCk7XG4gIGNvbnN0IGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ID0gaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBpZiAoaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgfHwgIWlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ICYmICFpc0ZpeGVkKSB7XG4gICAgaWYgKGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgIT09ICdib2R5JyB8fCBpc092ZXJmbG93RWxlbWVudChkb2N1bWVudEVsZW1lbnQpKSB7XG4gICAgICBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKG9mZnNldFBhcmVudCk7XG4gICAgfVxuICAgIGlmIChpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCkpIHtcbiAgICAgIGNvbnN0IG9mZnNldFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3Qob2Zmc2V0UGFyZW50KTtcbiAgICAgIHNjYWxlID0gZ2V0U2NhbGUob2Zmc2V0UGFyZW50KTtcbiAgICAgIG9mZnNldHMueCA9IG9mZnNldFJlY3QueCArIG9mZnNldFBhcmVudC5jbGllbnRMZWZ0O1xuICAgICAgb2Zmc2V0cy55ID0gb2Zmc2V0UmVjdC55ICsgb2Zmc2V0UGFyZW50LmNsaWVudFRvcDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogcmVjdC53aWR0aCAqIHNjYWxlLngsXG4gICAgaGVpZ2h0OiByZWN0LmhlaWdodCAqIHNjYWxlLnksXG4gICAgeDogcmVjdC54ICogc2NhbGUueCAtIHNjcm9sbC5zY3JvbGxMZWZ0ICogc2NhbGUueCArIG9mZnNldHMueCxcbiAgICB5OiByZWN0LnkgKiBzY2FsZS55IC0gc2Nyb2xsLnNjcm9sbFRvcCAqIHNjYWxlLnkgKyBvZmZzZXRzLnlcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0Q2xpZW50UmVjdHMoZWxlbWVudCkge1xuICByZXR1cm4gQXJyYXkuZnJvbShlbGVtZW50LmdldENsaWVudFJlY3RzKCkpO1xufVxuXG4vLyBJZiA8aHRtbD4gaGFzIGEgQ1NTIHdpZHRoIGdyZWF0ZXIgdGhhbiB0aGUgdmlld3BvcnQsIHRoZW4gdGhpcyB3aWxsIGJlXG4vLyBpbmNvcnJlY3QgZm9yIFJUTC5cbmZ1bmN0aW9uIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCwgcmVjdCkge1xuICBjb25zdCBsZWZ0U2Nyb2xsID0gZ2V0Tm9kZVNjcm9sbChlbGVtZW50KS5zY3JvbGxMZWZ0O1xuICBpZiAoIXJlY3QpIHtcbiAgICByZXR1cm4gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSkubGVmdCArIGxlZnRTY3JvbGw7XG4gIH1cbiAgcmV0dXJuIHJlY3QubGVmdCArIGxlZnRTY3JvbGw7XG59XG5cbi8vIEdldHMgdGhlIGVudGlyZSBzaXplIG9mIHRoZSBzY3JvbGxhYmxlIGRvY3VtZW50IGFyZWEsIGV2ZW4gZXh0ZW5kaW5nIG91dHNpZGVcbi8vIG9mIHRoZSBgPGh0bWw+YCBhbmQgYDxib2R5PmAgcmVjdCBib3VuZHMgaWYgaG9yaXpvbnRhbGx5IHNjcm9sbGFibGUuXG5mdW5jdGlvbiBnZXREb2N1bWVudFJlY3QoZWxlbWVudCkge1xuICBjb25zdCBodG1sID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICBjb25zdCBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpO1xuICBjb25zdCBib2R5ID0gZWxlbWVudC5vd25lckRvY3VtZW50LmJvZHk7XG4gIGNvbnN0IHdpZHRoID0gbWF4KGh0bWwuc2Nyb2xsV2lkdGgsIGh0bWwuY2xpZW50V2lkdGgsIGJvZHkuc2Nyb2xsV2lkdGgsIGJvZHkuY2xpZW50V2lkdGgpO1xuICBjb25zdCBoZWlnaHQgPSBtYXgoaHRtbC5zY3JvbGxIZWlnaHQsIGh0bWwuY2xpZW50SGVpZ2h0LCBib2R5LnNjcm9sbEhlaWdodCwgYm9keS5jbGllbnRIZWlnaHQpO1xuICBsZXQgeCA9IC1zY3JvbGwuc2Nyb2xsTGVmdCArIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCk7XG4gIGNvbnN0IHkgPSAtc2Nyb2xsLnNjcm9sbFRvcDtcbiAgaWYgKGdldENvbXB1dGVkU3R5bGUoYm9keSkuZGlyZWN0aW9uID09PSAncnRsJykge1xuICAgIHggKz0gbWF4KGh0bWwuY2xpZW50V2lkdGgsIGJvZHkuY2xpZW50V2lkdGgpIC0gd2lkdGg7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgeCxcbiAgICB5XG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldFZpZXdwb3J0UmVjdChlbGVtZW50LCBzdHJhdGVneSkge1xuICBjb25zdCB3aW4gPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIGNvbnN0IGh0bWwgPSBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCk7XG4gIGNvbnN0IHZpc3VhbFZpZXdwb3J0ID0gd2luLnZpc3VhbFZpZXdwb3J0O1xuICBsZXQgd2lkdGggPSBodG1sLmNsaWVudFdpZHRoO1xuICBsZXQgaGVpZ2h0ID0gaHRtbC5jbGllbnRIZWlnaHQ7XG4gIGxldCB4ID0gMDtcbiAgbGV0IHkgPSAwO1xuICBpZiAodmlzdWFsVmlld3BvcnQpIHtcbiAgICB3aWR0aCA9IHZpc3VhbFZpZXdwb3J0LndpZHRoO1xuICAgIGhlaWdodCA9IHZpc3VhbFZpZXdwb3J0LmhlaWdodDtcbiAgICBjb25zdCB2aXN1YWxWaWV3cG9ydEJhc2VkID0gaXNXZWJLaXQoKTtcbiAgICBpZiAoIXZpc3VhbFZpZXdwb3J0QmFzZWQgfHwgdmlzdWFsVmlld3BvcnRCYXNlZCAmJiBzdHJhdGVneSA9PT0gJ2ZpeGVkJykge1xuICAgICAgeCA9IHZpc3VhbFZpZXdwb3J0Lm9mZnNldExlZnQ7XG4gICAgICB5ID0gdmlzdWFsVmlld3BvcnQub2Zmc2V0VG9wO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfTtcbn1cblxuLy8gUmV0dXJucyB0aGUgaW5uZXIgY2xpZW50IHJlY3QsIHN1YnRyYWN0aW5nIHNjcm9sbGJhcnMgaWYgcHJlc2VudC5cbmZ1bmN0aW9uIGdldElubmVyQm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KSB7XG4gIGNvbnN0IGNsaWVudFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgdHJ1ZSwgc3RyYXRlZ3kgPT09ICdmaXhlZCcpO1xuICBjb25zdCB0b3AgPSBjbGllbnRSZWN0LnRvcCArIGVsZW1lbnQuY2xpZW50VG9wO1xuICBjb25zdCBsZWZ0ID0gY2xpZW50UmVjdC5sZWZ0ICsgZWxlbWVudC5jbGllbnRMZWZ0O1xuICBjb25zdCBzY2FsZSA9IGlzSFRNTEVsZW1lbnQoZWxlbWVudCkgPyBnZXRTY2FsZShlbGVtZW50KSA6IGNyZWF0ZUNvb3JkcygxKTtcbiAgY29uc3Qgd2lkdGggPSBlbGVtZW50LmNsaWVudFdpZHRoICogc2NhbGUueDtcbiAgY29uc3QgaGVpZ2h0ID0gZWxlbWVudC5jbGllbnRIZWlnaHQgKiBzY2FsZS55O1xuICBjb25zdCB4ID0gbGVmdCAqIHNjYWxlLng7XG4gIGNvbnN0IHkgPSB0b3AgKiBzY2FsZS55O1xuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldENsaWVudFJlY3RGcm9tQ2xpcHBpbmdBbmNlc3RvcihlbGVtZW50LCBjbGlwcGluZ0FuY2VzdG9yLCBzdHJhdGVneSkge1xuICBsZXQgcmVjdDtcbiAgaWYgKGNsaXBwaW5nQW5jZXN0b3IgPT09ICd2aWV3cG9ydCcpIHtcbiAgICByZWN0ID0gZ2V0Vmlld3BvcnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KTtcbiAgfSBlbHNlIGlmIChjbGlwcGluZ0FuY2VzdG9yID09PSAnZG9jdW1lbnQnKSB7XG4gICAgcmVjdCA9IGdldERvY3VtZW50UmVjdChnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkpO1xuICB9IGVsc2UgaWYgKGlzRWxlbWVudChjbGlwcGluZ0FuY2VzdG9yKSkge1xuICAgIHJlY3QgPSBnZXRJbm5lckJvdW5kaW5nQ2xpZW50UmVjdChjbGlwcGluZ0FuY2VzdG9yLCBzdHJhdGVneSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgdmlzdWFsT2Zmc2V0cyA9IGdldFZpc3VhbE9mZnNldHMoZWxlbWVudCk7XG4gICAgcmVjdCA9IHtcbiAgICAgIC4uLmNsaXBwaW5nQW5jZXN0b3IsXG4gICAgICB4OiBjbGlwcGluZ0FuY2VzdG9yLnggLSB2aXN1YWxPZmZzZXRzLngsXG4gICAgICB5OiBjbGlwcGluZ0FuY2VzdG9yLnkgLSB2aXN1YWxPZmZzZXRzLnlcbiAgICB9O1xuICB9XG4gIHJldHVybiByZWN0VG9DbGllbnRSZWN0KHJlY3QpO1xufVxuZnVuY3Rpb24gaGFzRml4ZWRQb3NpdGlvbkFuY2VzdG9yKGVsZW1lbnQsIHN0b3BOb2RlKSB7XG4gIGNvbnN0IHBhcmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGVsZW1lbnQpO1xuICBpZiAocGFyZW50Tm9kZSA9PT0gc3RvcE5vZGUgfHwgIWlzRWxlbWVudChwYXJlbnROb2RlKSB8fCBpc0xhc3RUcmF2ZXJzYWJsZU5vZGUocGFyZW50Tm9kZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIGdldENvbXB1dGVkU3R5bGUocGFyZW50Tm9kZSkucG9zaXRpb24gPT09ICdmaXhlZCcgfHwgaGFzRml4ZWRQb3NpdGlvbkFuY2VzdG9yKHBhcmVudE5vZGUsIHN0b3BOb2RlKTtcbn1cblxuLy8gQSBcImNsaXBwaW5nIGFuY2VzdG9yXCIgaXMgYW4gYG92ZXJmbG93YCBlbGVtZW50IHdpdGggdGhlIGNoYXJhY3RlcmlzdGljIG9mXG4vLyBjbGlwcGluZyAob3IgaGlkaW5nKSBjaGlsZCBlbGVtZW50cy4gVGhpcyByZXR1cm5zIGFsbCBjbGlwcGluZyBhbmNlc3RvcnNcbi8vIG9mIHRoZSBnaXZlbiBlbGVtZW50IHVwIHRoZSB0cmVlLlxuZnVuY3Rpb24gZ2V0Q2xpcHBpbmdFbGVtZW50QW5jZXN0b3JzKGVsZW1lbnQsIGNhY2hlKSB7XG4gIGNvbnN0IGNhY2hlZFJlc3VsdCA9IGNhY2hlLmdldChlbGVtZW50KTtcbiAgaWYgKGNhY2hlZFJlc3VsdCkge1xuICAgIHJldHVybiBjYWNoZWRSZXN1bHQ7XG4gIH1cbiAgbGV0IHJlc3VsdCA9IGdldE92ZXJmbG93QW5jZXN0b3JzKGVsZW1lbnQsIFtdLCBmYWxzZSkuZmlsdGVyKGVsID0+IGlzRWxlbWVudChlbCkgJiYgZ2V0Tm9kZU5hbWUoZWwpICE9PSAnYm9keScpO1xuICBsZXQgY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgPSBudWxsO1xuICBjb25zdCBlbGVtZW50SXNGaXhlZCA9IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkucG9zaXRpb24gPT09ICdmaXhlZCc7XG4gIGxldCBjdXJyZW50Tm9kZSA9IGVsZW1lbnRJc0ZpeGVkID8gZ2V0UGFyZW50Tm9kZShlbGVtZW50KSA6IGVsZW1lbnQ7XG5cbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL0NvbnRhaW5pbmdfYmxvY2sjaWRlbnRpZnlpbmdfdGhlX2NvbnRhaW5pbmdfYmxvY2tcbiAgd2hpbGUgKGlzRWxlbWVudChjdXJyZW50Tm9kZSkgJiYgIWlzTGFzdFRyYXZlcnNhYmxlTm9kZShjdXJyZW50Tm9kZSkpIHtcbiAgICBjb25zdCBjb21wdXRlZFN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShjdXJyZW50Tm9kZSk7XG4gICAgY29uc3QgY3VycmVudE5vZGVJc0NvbnRhaW5pbmcgPSBpc0NvbnRhaW5pbmdCbG9jayhjdXJyZW50Tm9kZSk7XG4gICAgaWYgKCFjdXJyZW50Tm9kZUlzQ29udGFpbmluZyAmJiBjb21wdXRlZFN0eWxlLnBvc2l0aW9uID09PSAnZml4ZWQnKSB7XG4gICAgICBjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZSA9IG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHNob3VsZERyb3BDdXJyZW50Tm9kZSA9IGVsZW1lbnRJc0ZpeGVkID8gIWN1cnJlbnROb2RlSXNDb250YWluaW5nICYmICFjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZSA6ICFjdXJyZW50Tm9kZUlzQ29udGFpbmluZyAmJiBjb21wdXRlZFN0eWxlLnBvc2l0aW9uID09PSAnc3RhdGljJyAmJiAhIWN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlICYmIFsnYWJzb2x1dGUnLCAnZml4ZWQnXS5pbmNsdWRlcyhjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZS5wb3NpdGlvbikgfHwgaXNPdmVyZmxvd0VsZW1lbnQoY3VycmVudE5vZGUpICYmICFjdXJyZW50Tm9kZUlzQ29udGFpbmluZyAmJiBoYXNGaXhlZFBvc2l0aW9uQW5jZXN0b3IoZWxlbWVudCwgY3VycmVudE5vZGUpO1xuICAgIGlmIChzaG91bGREcm9wQ3VycmVudE5vZGUpIHtcbiAgICAgIC8vIERyb3Agbm9uLWNvbnRhaW5pbmcgYmxvY2tzLlxuICAgICAgcmVzdWx0ID0gcmVzdWx0LmZpbHRlcihhbmNlc3RvciA9PiBhbmNlc3RvciAhPT0gY3VycmVudE5vZGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBSZWNvcmQgbGFzdCBjb250YWluaW5nIGJsb2NrIGZvciBuZXh0IGl0ZXJhdGlvbi5cbiAgICAgIGN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlID0gY29tcHV0ZWRTdHlsZTtcbiAgICB9XG4gICAgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGN1cnJlbnROb2RlKTtcbiAgfVxuICBjYWNoZS5zZXQoZWxlbWVudCwgcmVzdWx0KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLy8gR2V0cyB0aGUgbWF4aW11bSBhcmVhIHRoYXQgdGhlIGVsZW1lbnQgaXMgdmlzaWJsZSBpbiBkdWUgdG8gYW55IG51bWJlciBvZlxuLy8gY2xpcHBpbmcgYW5jZXN0b3JzLlxuZnVuY3Rpb24gZ2V0Q2xpcHBpbmdSZWN0KF9yZWYpIHtcbiAgbGV0IHtcbiAgICBlbGVtZW50LFxuICAgIGJvdW5kYXJ5LFxuICAgIHJvb3RCb3VuZGFyeSxcbiAgICBzdHJhdGVneVxuICB9ID0gX3JlZjtcbiAgY29uc3QgZWxlbWVudENsaXBwaW5nQW5jZXN0b3JzID0gYm91bmRhcnkgPT09ICdjbGlwcGluZ0FuY2VzdG9ycycgPyBpc1RvcExheWVyKGVsZW1lbnQpID8gW10gOiBnZXRDbGlwcGluZ0VsZW1lbnRBbmNlc3RvcnMoZWxlbWVudCwgdGhpcy5fYykgOiBbXS5jb25jYXQoYm91bmRhcnkpO1xuICBjb25zdCBjbGlwcGluZ0FuY2VzdG9ycyA9IFsuLi5lbGVtZW50Q2xpcHBpbmdBbmNlc3RvcnMsIHJvb3RCb3VuZGFyeV07XG4gIGNvbnN0IGZpcnN0Q2xpcHBpbmdBbmNlc3RvciA9IGNsaXBwaW5nQW5jZXN0b3JzWzBdO1xuICBjb25zdCBjbGlwcGluZ1JlY3QgPSBjbGlwcGluZ0FuY2VzdG9ycy5yZWR1Y2UoKGFjY1JlY3QsIGNsaXBwaW5nQW5jZXN0b3IpID0+IHtcbiAgICBjb25zdCByZWN0ID0gZ2V0Q2xpZW50UmVjdEZyb21DbGlwcGluZ0FuY2VzdG9yKGVsZW1lbnQsIGNsaXBwaW5nQW5jZXN0b3IsIHN0cmF0ZWd5KTtcbiAgICBhY2NSZWN0LnRvcCA9IG1heChyZWN0LnRvcCwgYWNjUmVjdC50b3ApO1xuICAgIGFjY1JlY3QucmlnaHQgPSBtaW4ocmVjdC5yaWdodCwgYWNjUmVjdC5yaWdodCk7XG4gICAgYWNjUmVjdC5ib3R0b20gPSBtaW4ocmVjdC5ib3R0b20sIGFjY1JlY3QuYm90dG9tKTtcbiAgICBhY2NSZWN0LmxlZnQgPSBtYXgocmVjdC5sZWZ0LCBhY2NSZWN0LmxlZnQpO1xuICAgIHJldHVybiBhY2NSZWN0O1xuICB9LCBnZXRDbGllbnRSZWN0RnJvbUNsaXBwaW5nQW5jZXN0b3IoZWxlbWVudCwgZmlyc3RDbGlwcGluZ0FuY2VzdG9yLCBzdHJhdGVneSkpO1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiBjbGlwcGluZ1JlY3QucmlnaHQgLSBjbGlwcGluZ1JlY3QubGVmdCxcbiAgICBoZWlnaHQ6IGNsaXBwaW5nUmVjdC5ib3R0b20gLSBjbGlwcGluZ1JlY3QudG9wLFxuICAgIHg6IGNsaXBwaW5nUmVjdC5sZWZ0LFxuICAgIHk6IGNsaXBwaW5nUmVjdC50b3BcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0RGltZW5zaW9ucyhlbGVtZW50KSB7XG4gIGNvbnN0IHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHRcbiAgfSA9IGdldENzc0RpbWVuc2lvbnMoZWxlbWVudCk7XG4gIHJldHVybiB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldFJlY3RSZWxhdGl2ZVRvT2Zmc2V0UGFyZW50KGVsZW1lbnQsIG9mZnNldFBhcmVudCwgc3RyYXRlZ3kpIHtcbiAgY29uc3QgaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgPSBpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCk7XG4gIGNvbnN0IGRvY3VtZW50RWxlbWVudCA9IGdldERvY3VtZW50RWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBjb25zdCBpc0ZpeGVkID0gc3RyYXRlZ3kgPT09ICdmaXhlZCc7XG4gIGNvbnN0IHJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgdHJ1ZSwgaXNGaXhlZCwgb2Zmc2V0UGFyZW50KTtcbiAgbGV0IHNjcm9sbCA9IHtcbiAgICBzY3JvbGxMZWZ0OiAwLFxuICAgIHNjcm9sbFRvcDogMFxuICB9O1xuICBjb25zdCBvZmZzZXRzID0gY3JlYXRlQ29vcmRzKDApO1xuICBpZiAoaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgfHwgIWlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ICYmICFpc0ZpeGVkKSB7XG4gICAgaWYgKGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgIT09ICdib2R5JyB8fCBpc092ZXJmbG93RWxlbWVudChkb2N1bWVudEVsZW1lbnQpKSB7XG4gICAgICBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKG9mZnNldFBhcmVudCk7XG4gICAgfVxuICAgIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCkge1xuICAgICAgY29uc3Qgb2Zmc2V0UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChvZmZzZXRQYXJlbnQsIHRydWUsIGlzRml4ZWQsIG9mZnNldFBhcmVudCk7XG4gICAgICBvZmZzZXRzLnggPSBvZmZzZXRSZWN0LnggKyBvZmZzZXRQYXJlbnQuY2xpZW50TGVmdDtcbiAgICAgIG9mZnNldHMueSA9IG9mZnNldFJlY3QueSArIG9mZnNldFBhcmVudC5jbGllbnRUb3A7XG4gICAgfSBlbHNlIGlmIChkb2N1bWVudEVsZW1lbnQpIHtcbiAgICAgIC8vIElmIHRoZSA8Ym9keT4gc2Nyb2xsYmFyIGFwcGVhcnMgb24gdGhlIGxlZnQgKGUuZy4gUlRMIHN5c3RlbXMpLiBVc2VcbiAgICAgIC8vIEZpcmVmb3ggd2l0aCBsYXlvdXQuc2Nyb2xsYmFyLnNpZGUgPSAzIGluIGFib3V0OmNvbmZpZyB0byB0ZXN0IHRoaXMuXG4gICAgICBvZmZzZXRzLnggPSBnZXRXaW5kb3dTY3JvbGxCYXJYKGRvY3VtZW50RWxlbWVudCk7XG4gICAgfVxuICB9XG4gIGxldCBodG1sWCA9IDA7XG4gIGxldCBodG1sWSA9IDA7XG4gIGlmIChkb2N1bWVudEVsZW1lbnQgJiYgIWlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ICYmICFpc0ZpeGVkKSB7XG4gICAgY29uc3QgaHRtbFJlY3QgPSBkb2N1bWVudEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgaHRtbFkgPSBodG1sUmVjdC50b3AgKyBzY3JvbGwuc2Nyb2xsVG9wO1xuICAgIGh0bWxYID0gaHRtbFJlY3QubGVmdCArIHNjcm9sbC5zY3JvbGxMZWZ0IC1cbiAgICAvLyBSVEwgPGJvZHk+IHNjcm9sbGJhci5cbiAgICBnZXRXaW5kb3dTY3JvbGxCYXJYKGRvY3VtZW50RWxlbWVudCwgaHRtbFJlY3QpO1xuICB9XG4gIGNvbnN0IHggPSByZWN0LmxlZnQgKyBzY3JvbGwuc2Nyb2xsTGVmdCAtIG9mZnNldHMueCAtIGh0bWxYO1xuICBjb25zdCB5ID0gcmVjdC50b3AgKyBzY3JvbGwuc2Nyb2xsVG9wIC0gb2Zmc2V0cy55IC0gaHRtbFk7XG4gIHJldHVybiB7XG4gICAgeCxcbiAgICB5LFxuICAgIHdpZHRoOiByZWN0LndpZHRoLFxuICAgIGhlaWdodDogcmVjdC5oZWlnaHRcbiAgfTtcbn1cblxuZnVuY3Rpb24gaXNTdGF0aWNQb3NpdGlvbmVkKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkucG9zaXRpb24gPT09ICdzdGF0aWMnO1xufVxuXG5mdW5jdGlvbiBnZXRUcnVlT2Zmc2V0UGFyZW50KGVsZW1lbnQsIHBvbHlmaWxsKSB7XG4gIGlmICghaXNIVE1MRWxlbWVudChlbGVtZW50KSB8fCBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpLnBvc2l0aW9uID09PSAnZml4ZWQnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgaWYgKHBvbHlmaWxsKSB7XG4gICAgcmV0dXJuIHBvbHlmaWxsKGVsZW1lbnQpO1xuICB9XG4gIGxldCByYXdPZmZzZXRQYXJlbnQgPSBlbGVtZW50Lm9mZnNldFBhcmVudDtcblxuICAvLyBGaXJlZm94IHJldHVybnMgdGhlIDxodG1sPiBlbGVtZW50IGFzIHRoZSBvZmZzZXRQYXJlbnQgaWYgaXQncyBub24tc3RhdGljLFxuICAvLyB3aGlsZSBDaHJvbWUgYW5kIFNhZmFyaSByZXR1cm4gdGhlIDxib2R5PiBlbGVtZW50LiBUaGUgPGJvZHk+IGVsZW1lbnQgbXVzdFxuICAvLyBiZSB1c2VkIHRvIHBlcmZvcm0gdGhlIGNvcnJlY3QgY2FsY3VsYXRpb25zIGV2ZW4gaWYgdGhlIDxodG1sPiBlbGVtZW50IGlzXG4gIC8vIG5vbi1zdGF0aWMuXG4gIGlmIChnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkgPT09IHJhd09mZnNldFBhcmVudCkge1xuICAgIHJhd09mZnNldFBhcmVudCA9IHJhd09mZnNldFBhcmVudC5vd25lckRvY3VtZW50LmJvZHk7XG4gIH1cbiAgcmV0dXJuIHJhd09mZnNldFBhcmVudDtcbn1cblxuLy8gR2V0cyB0aGUgY2xvc2VzdCBhbmNlc3RvciBwb3NpdGlvbmVkIGVsZW1lbnQuIEhhbmRsZXMgc29tZSBlZGdlIGNhc2VzLFxuLy8gc3VjaCBhcyB0YWJsZSBhbmNlc3RvcnMgYW5kIGNyb3NzIGJyb3dzZXIgYnVncy5cbmZ1bmN0aW9uIGdldE9mZnNldFBhcmVudChlbGVtZW50LCBwb2x5ZmlsbCkge1xuICBjb25zdCB3aW4gPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIGlmIChpc1RvcExheWVyKGVsZW1lbnQpKSB7XG4gICAgcmV0dXJuIHdpbjtcbiAgfVxuICBpZiAoIWlzSFRNTEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICBsZXQgc3ZnT2Zmc2V0UGFyZW50ID0gZ2V0UGFyZW50Tm9kZShlbGVtZW50KTtcbiAgICB3aGlsZSAoc3ZnT2Zmc2V0UGFyZW50ICYmICFpc0xhc3RUcmF2ZXJzYWJsZU5vZGUoc3ZnT2Zmc2V0UGFyZW50KSkge1xuICAgICAgaWYgKGlzRWxlbWVudChzdmdPZmZzZXRQYXJlbnQpICYmICFpc1N0YXRpY1Bvc2l0aW9uZWQoc3ZnT2Zmc2V0UGFyZW50KSkge1xuICAgICAgICByZXR1cm4gc3ZnT2Zmc2V0UGFyZW50O1xuICAgICAgfVxuICAgICAgc3ZnT2Zmc2V0UGFyZW50ID0gZ2V0UGFyZW50Tm9kZShzdmdPZmZzZXRQYXJlbnQpO1xuICAgIH1cbiAgICByZXR1cm4gd2luO1xuICB9XG4gIGxldCBvZmZzZXRQYXJlbnQgPSBnZXRUcnVlT2Zmc2V0UGFyZW50KGVsZW1lbnQsIHBvbHlmaWxsKTtcbiAgd2hpbGUgKG9mZnNldFBhcmVudCAmJiBpc1RhYmxlRWxlbWVudChvZmZzZXRQYXJlbnQpICYmIGlzU3RhdGljUG9zaXRpb25lZChvZmZzZXRQYXJlbnQpKSB7XG4gICAgb2Zmc2V0UGFyZW50ID0gZ2V0VHJ1ZU9mZnNldFBhcmVudChvZmZzZXRQYXJlbnQsIHBvbHlmaWxsKTtcbiAgfVxuICBpZiAob2Zmc2V0UGFyZW50ICYmIGlzTGFzdFRyYXZlcnNhYmxlTm9kZShvZmZzZXRQYXJlbnQpICYmIGlzU3RhdGljUG9zaXRpb25lZChvZmZzZXRQYXJlbnQpICYmICFpc0NvbnRhaW5pbmdCbG9jayhvZmZzZXRQYXJlbnQpKSB7XG4gICAgcmV0dXJuIHdpbjtcbiAgfVxuICByZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGdldENvbnRhaW5pbmdCbG9jayhlbGVtZW50KSB8fCB3aW47XG59XG5cbmNvbnN0IGdldEVsZW1lbnRSZWN0cyA9IGFzeW5jIGZ1bmN0aW9uIChkYXRhKSB7XG4gIGNvbnN0IGdldE9mZnNldFBhcmVudEZuID0gdGhpcy5nZXRPZmZzZXRQYXJlbnQgfHwgZ2V0T2Zmc2V0UGFyZW50O1xuICBjb25zdCBnZXREaW1lbnNpb25zRm4gPSB0aGlzLmdldERpbWVuc2lvbnM7XG4gIGNvbnN0IGZsb2F0aW5nRGltZW5zaW9ucyA9IGF3YWl0IGdldERpbWVuc2lvbnNGbihkYXRhLmZsb2F0aW5nKTtcbiAgcmV0dXJuIHtcbiAgICByZWZlcmVuY2U6IGdldFJlY3RSZWxhdGl2ZVRvT2Zmc2V0UGFyZW50KGRhdGEucmVmZXJlbmNlLCBhd2FpdCBnZXRPZmZzZXRQYXJlbnRGbihkYXRhLmZsb2F0aW5nKSwgZGF0YS5zdHJhdGVneSksXG4gICAgZmxvYXRpbmc6IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwLFxuICAgICAgd2lkdGg6IGZsb2F0aW5nRGltZW5zaW9ucy53aWR0aCxcbiAgICAgIGhlaWdodDogZmxvYXRpbmdEaW1lbnNpb25zLmhlaWdodFxuICAgIH1cbiAgfTtcbn07XG5cbmZ1bmN0aW9uIGlzUlRMKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkuZGlyZWN0aW9uID09PSAncnRsJztcbn1cblxuY29uc3QgcGxhdGZvcm0gPSB7XG4gIGNvbnZlcnRPZmZzZXRQYXJlbnRSZWxhdGl2ZVJlY3RUb1ZpZXdwb3J0UmVsYXRpdmVSZWN0LFxuICBnZXREb2N1bWVudEVsZW1lbnQsXG4gIGdldENsaXBwaW5nUmVjdCxcbiAgZ2V0T2Zmc2V0UGFyZW50LFxuICBnZXRFbGVtZW50UmVjdHMsXG4gIGdldENsaWVudFJlY3RzLFxuICBnZXREaW1lbnNpb25zLFxuICBnZXRTY2FsZSxcbiAgaXNFbGVtZW50LFxuICBpc1JUTFxufTtcblxuLy8gaHR0cHM6Ly9zYW10aG9yLmF1LzIwMjEvb2JzZXJ2aW5nLWRvbS9cbmZ1bmN0aW9uIG9ic2VydmVNb3ZlKGVsZW1lbnQsIG9uTW92ZSkge1xuICBsZXQgaW8gPSBudWxsO1xuICBsZXQgdGltZW91dElkO1xuICBjb25zdCByb290ID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICBmdW5jdGlvbiBjbGVhbnVwKCkge1xuICAgIHZhciBfaW87XG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgKF9pbyA9IGlvKSA9PSBudWxsIHx8IF9pby5kaXNjb25uZWN0KCk7XG4gICAgaW8gPSBudWxsO1xuICB9XG4gIGZ1bmN0aW9uIHJlZnJlc2goc2tpcCwgdGhyZXNob2xkKSB7XG4gICAgaWYgKHNraXAgPT09IHZvaWQgMCkge1xuICAgICAgc2tpcCA9IGZhbHNlO1xuICAgIH1cbiAgICBpZiAodGhyZXNob2xkID09PSB2b2lkIDApIHtcbiAgICAgIHRocmVzaG9sZCA9IDE7XG4gICAgfVxuICAgIGNsZWFudXAoKTtcbiAgICBjb25zdCB7XG4gICAgICBsZWZ0LFxuICAgICAgdG9wLFxuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHRcbiAgICB9ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBpZiAoIXNraXApIHtcbiAgICAgIG9uTW92ZSgpO1xuICAgIH1cbiAgICBpZiAoIXdpZHRoIHx8ICFoZWlnaHQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgaW5zZXRUb3AgPSBmbG9vcih0b3ApO1xuICAgIGNvbnN0IGluc2V0UmlnaHQgPSBmbG9vcihyb290LmNsaWVudFdpZHRoIC0gKGxlZnQgKyB3aWR0aCkpO1xuICAgIGNvbnN0IGluc2V0Qm90dG9tID0gZmxvb3Iocm9vdC5jbGllbnRIZWlnaHQgLSAodG9wICsgaGVpZ2h0KSk7XG4gICAgY29uc3QgaW5zZXRMZWZ0ID0gZmxvb3IobGVmdCk7XG4gICAgY29uc3Qgcm9vdE1hcmdpbiA9IC1pbnNldFRvcCArIFwicHggXCIgKyAtaW5zZXRSaWdodCArIFwicHggXCIgKyAtaW5zZXRCb3R0b20gKyBcInB4IFwiICsgLWluc2V0TGVmdCArIFwicHhcIjtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgcm9vdE1hcmdpbixcbiAgICAgIHRocmVzaG9sZDogbWF4KDAsIG1pbigxLCB0aHJlc2hvbGQpKSB8fCAxXG4gICAgfTtcbiAgICBsZXQgaXNGaXJzdFVwZGF0ZSA9IHRydWU7XG4gICAgZnVuY3Rpb24gaGFuZGxlT2JzZXJ2ZShlbnRyaWVzKSB7XG4gICAgICBjb25zdCByYXRpbyA9IGVudHJpZXNbMF0uaW50ZXJzZWN0aW9uUmF0aW87XG4gICAgICBpZiAocmF0aW8gIT09IHRocmVzaG9sZCkge1xuICAgICAgICBpZiAoIWlzRmlyc3RVcGRhdGUpIHtcbiAgICAgICAgICByZXR1cm4gcmVmcmVzaCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcmF0aW8pIHtcbiAgICAgICAgICAvLyBJZiB0aGUgcmVmZXJlbmNlIGlzIGNsaXBwZWQsIHRoZSByYXRpbyBpcyAwLiBUaHJvdHRsZSB0aGUgcmVmcmVzaFxuICAgICAgICAgIC8vIHRvIHByZXZlbnQgYW4gaW5maW5pdGUgbG9vcCBvZiB1cGRhdGVzLlxuICAgICAgICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgcmVmcmVzaChmYWxzZSwgMWUtNyk7XG4gICAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVmcmVzaChmYWxzZSwgcmF0aW8pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpc0ZpcnN0VXBkYXRlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgLy8gT2xkZXIgYnJvd3NlcnMgZG9uJ3Qgc3VwcG9ydCBhIGBkb2N1bWVudGAgYXMgdGhlIHJvb3QgYW5kIHdpbGwgdGhyb3cgYW5cbiAgICAvLyBlcnJvci5cbiAgICB0cnkge1xuICAgICAgaW8gPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoaGFuZGxlT2JzZXJ2ZSwge1xuICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAvLyBIYW5kbGUgPGlmcmFtZT5zXG4gICAgICAgIHJvb3Q6IHJvb3Qub3duZXJEb2N1bWVudFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgaW8gPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoaGFuZGxlT2JzZXJ2ZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGlvLm9ic2VydmUoZWxlbWVudCk7XG4gIH1cbiAgcmVmcmVzaCh0cnVlKTtcbiAgcmV0dXJuIGNsZWFudXA7XG59XG5cbi8qKlxuICogQXV0b21hdGljYWxseSB1cGRhdGVzIHRoZSBwb3NpdGlvbiBvZiB0aGUgZmxvYXRpbmcgZWxlbWVudCB3aGVuIG5lY2Vzc2FyeS5cbiAqIFNob3VsZCBvbmx5IGJlIGNhbGxlZCB3aGVuIHRoZSBmbG9hdGluZyBlbGVtZW50IGlzIG1vdW50ZWQgb24gdGhlIERPTSBvclxuICogdmlzaWJsZSBvbiB0aGUgc2NyZWVuLlxuICogQHJldHVybnMgY2xlYW51cCBmdW5jdGlvbiB0aGF0IHNob3VsZCBiZSBpbnZva2VkIHdoZW4gdGhlIGZsb2F0aW5nIGVsZW1lbnQgaXNcbiAqIHJlbW92ZWQgZnJvbSB0aGUgRE9NIG9yIGhpZGRlbiBmcm9tIHRoZSBzY3JlZW4uXG4gKiBAc2VlIGh0dHBzOi8vZmxvYXRpbmctdWkuY29tL2RvY3MvYXV0b1VwZGF0ZVxuICovXG5mdW5jdGlvbiBhdXRvVXBkYXRlKHJlZmVyZW5jZSwgZmxvYXRpbmcsIHVwZGF0ZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGNvbnN0IHtcbiAgICBhbmNlc3RvclNjcm9sbCA9IHRydWUsXG4gICAgYW5jZXN0b3JSZXNpemUgPSB0cnVlLFxuICAgIGVsZW1lbnRSZXNpemUgPSB0eXBlb2YgUmVzaXplT2JzZXJ2ZXIgPT09ICdmdW5jdGlvbicsXG4gICAgbGF5b3V0U2hpZnQgPSB0eXBlb2YgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgPT09ICdmdW5jdGlvbicsXG4gICAgYW5pbWF0aW9uRnJhbWUgPSBmYWxzZVxuICB9ID0gb3B0aW9ucztcbiAgY29uc3QgcmVmZXJlbmNlRWwgPSB1bndyYXBFbGVtZW50KHJlZmVyZW5jZSk7XG4gIGNvbnN0IGFuY2VzdG9ycyA9IGFuY2VzdG9yU2Nyb2xsIHx8IGFuY2VzdG9yUmVzaXplID8gWy4uLihyZWZlcmVuY2VFbCA/IGdldE92ZXJmbG93QW5jZXN0b3JzKHJlZmVyZW5jZUVsKSA6IFtdKSwgLi4uZ2V0T3ZlcmZsb3dBbmNlc3RvcnMoZmxvYXRpbmcpXSA6IFtdO1xuICBhbmNlc3RvcnMuZm9yRWFjaChhbmNlc3RvciA9PiB7XG4gICAgYW5jZXN0b3JTY3JvbGwgJiYgYW5jZXN0b3IuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdXBkYXRlLCB7XG4gICAgICBwYXNzaXZlOiB0cnVlXG4gICAgfSk7XG4gICAgYW5jZXN0b3JSZXNpemUgJiYgYW5jZXN0b3IuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdXBkYXRlKTtcbiAgfSk7XG4gIGNvbnN0IGNsZWFudXBJbyA9IHJlZmVyZW5jZUVsICYmIGxheW91dFNoaWZ0ID8gb2JzZXJ2ZU1vdmUocmVmZXJlbmNlRWwsIHVwZGF0ZSkgOiBudWxsO1xuICBsZXQgcmVvYnNlcnZlRnJhbWUgPSAtMTtcbiAgbGV0IHJlc2l6ZU9ic2VydmVyID0gbnVsbDtcbiAgaWYgKGVsZW1lbnRSZXNpemUpIHtcbiAgICByZXNpemVPYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcihfcmVmID0+IHtcbiAgICAgIGxldCBbZmlyc3RFbnRyeV0gPSBfcmVmO1xuICAgICAgaWYgKGZpcnN0RW50cnkgJiYgZmlyc3RFbnRyeS50YXJnZXQgPT09IHJlZmVyZW5jZUVsICYmIHJlc2l6ZU9ic2VydmVyKSB7XG4gICAgICAgIC8vIFByZXZlbnQgdXBkYXRlIGxvb3BzIHdoZW4gdXNpbmcgdGhlIGBzaXplYCBtaWRkbGV3YXJlLlxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZmxvYXRpbmctdWkvZmxvYXRpbmctdWkvaXNzdWVzLzE3NDBcbiAgICAgICAgcmVzaXplT2JzZXJ2ZXIudW5vYnNlcnZlKGZsb2F0aW5nKTtcbiAgICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUocmVvYnNlcnZlRnJhbWUpO1xuICAgICAgICByZW9ic2VydmVGcmFtZSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgdmFyIF9yZXNpemVPYnNlcnZlcjtcbiAgICAgICAgICAoX3Jlc2l6ZU9ic2VydmVyID0gcmVzaXplT2JzZXJ2ZXIpID09IG51bGwgfHwgX3Jlc2l6ZU9ic2VydmVyLm9ic2VydmUoZmxvYXRpbmcpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHVwZGF0ZSgpO1xuICAgIH0pO1xuICAgIGlmIChyZWZlcmVuY2VFbCAmJiAhYW5pbWF0aW9uRnJhbWUpIHtcbiAgICAgIHJlc2l6ZU9ic2VydmVyLm9ic2VydmUocmVmZXJlbmNlRWwpO1xuICAgIH1cbiAgICByZXNpemVPYnNlcnZlci5vYnNlcnZlKGZsb2F0aW5nKTtcbiAgfVxuICBsZXQgZnJhbWVJZDtcbiAgbGV0IHByZXZSZWZSZWN0ID0gYW5pbWF0aW9uRnJhbWUgPyBnZXRCb3VuZGluZ0NsaWVudFJlY3QocmVmZXJlbmNlKSA6IG51bGw7XG4gIGlmIChhbmltYXRpb25GcmFtZSkge1xuICAgIGZyYW1lTG9vcCgpO1xuICB9XG4gIGZ1bmN0aW9uIGZyYW1lTG9vcCgpIHtcbiAgICBjb25zdCBuZXh0UmVmUmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChyZWZlcmVuY2UpO1xuICAgIGlmIChwcmV2UmVmUmVjdCAmJiAobmV4dFJlZlJlY3QueCAhPT0gcHJldlJlZlJlY3QueCB8fCBuZXh0UmVmUmVjdC55ICE9PSBwcmV2UmVmUmVjdC55IHx8IG5leHRSZWZSZWN0LndpZHRoICE9PSBwcmV2UmVmUmVjdC53aWR0aCB8fCBuZXh0UmVmUmVjdC5oZWlnaHQgIT09IHByZXZSZWZSZWN0LmhlaWdodCkpIHtcbiAgICAgIHVwZGF0ZSgpO1xuICAgIH1cbiAgICBwcmV2UmVmUmVjdCA9IG5leHRSZWZSZWN0O1xuICAgIGZyYW1lSWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnJhbWVMb29wKTtcbiAgfVxuICB1cGRhdGUoKTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICB2YXIgX3Jlc2l6ZU9ic2VydmVyMjtcbiAgICBhbmNlc3RvcnMuZm9yRWFjaChhbmNlc3RvciA9PiB7XG4gICAgICBhbmNlc3RvclNjcm9sbCAmJiBhbmNlc3Rvci5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB1cGRhdGUpO1xuICAgICAgYW5jZXN0b3JSZXNpemUgJiYgYW5jZXN0b3IucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdXBkYXRlKTtcbiAgICB9KTtcbiAgICBjbGVhbnVwSW8gPT0gbnVsbCB8fCBjbGVhbnVwSW8oKTtcbiAgICAoX3Jlc2l6ZU9ic2VydmVyMiA9IHJlc2l6ZU9ic2VydmVyKSA9PSBudWxsIHx8IF9yZXNpemVPYnNlcnZlcjIuZGlzY29ubmVjdCgpO1xuICAgIHJlc2l6ZU9ic2VydmVyID0gbnVsbDtcbiAgICBpZiAoYW5pbWF0aW9uRnJhbWUpIHtcbiAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKGZyYW1lSWQpO1xuICAgIH1cbiAgfTtcbn1cblxuLyoqXG4gKiBSZXNvbHZlcyB3aXRoIGFuIG9iamVjdCBvZiBvdmVyZmxvdyBzaWRlIG9mZnNldHMgdGhhdCBkZXRlcm1pbmUgaG93IG11Y2ggdGhlXG4gKiBlbGVtZW50IGlzIG92ZXJmbG93aW5nIGEgZ2l2ZW4gY2xpcHBpbmcgYm91bmRhcnkgb24gZWFjaCBzaWRlLlxuICogLSBwb3NpdGl2ZSA9IG92ZXJmbG93aW5nIHRoZSBib3VuZGFyeSBieSB0aGF0IG51bWJlciBvZiBwaXhlbHNcbiAqIC0gbmVnYXRpdmUgPSBob3cgbWFueSBwaXhlbHMgbGVmdCBiZWZvcmUgaXQgd2lsbCBvdmVyZmxvd1xuICogLSAwID0gbGllcyBmbHVzaCB3aXRoIHRoZSBib3VuZGFyeVxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL2RldGVjdE92ZXJmbG93XG4gKi9cbmNvbnN0IGRldGVjdE92ZXJmbG93ID0gZGV0ZWN0T3ZlcmZsb3ckMTtcblxuLyoqXG4gKiBNb2RpZmllcyB0aGUgcGxhY2VtZW50IGJ5IHRyYW5zbGF0aW5nIHRoZSBmbG9hdGluZyBlbGVtZW50IGFsb25nIHRoZVxuICogc3BlY2lmaWVkIGF4ZXMuXG4gKiBBIG51bWJlciAoc2hvcnRoYW5kIGZvciBgbWFpbkF4aXNgIG9yIGRpc3RhbmNlKSwgb3IgYW4gYXhlcyBjb25maWd1cmF0aW9uXG4gKiBvYmplY3QgbWF5IGJlIHBhc3NlZC5cbiAqIEBzZWUgaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy9vZmZzZXRcbiAqL1xuY29uc3Qgb2Zmc2V0ID0gb2Zmc2V0JDE7XG5cbi8qKlxuICogT3B0aW1pemVzIHRoZSB2aXNpYmlsaXR5IG9mIHRoZSBmbG9hdGluZyBlbGVtZW50IGJ5IGNob29zaW5nIHRoZSBwbGFjZW1lbnRcbiAqIHRoYXQgaGFzIHRoZSBtb3N0IHNwYWNlIGF2YWlsYWJsZSBhdXRvbWF0aWNhbGx5LCB3aXRob3V0IG5lZWRpbmcgdG8gc3BlY2lmeSBhXG4gKiBwcmVmZXJyZWQgcGxhY2VtZW50LiBBbHRlcm5hdGl2ZSB0byBgZmxpcGAuXG4gKiBAc2VlIGh0dHBzOi8vZmxvYXRpbmctdWkuY29tL2RvY3MvYXV0b1BsYWNlbWVudFxuICovXG5jb25zdCBhdXRvUGxhY2VtZW50ID0gYXV0b1BsYWNlbWVudCQxO1xuXG4vKipcbiAqIE9wdGltaXplcyB0aGUgdmlzaWJpbGl0eSBvZiB0aGUgZmxvYXRpbmcgZWxlbWVudCBieSBzaGlmdGluZyBpdCBpbiBvcmRlciB0b1xuICoga2VlcCBpdCBpbiB2aWV3IHdoZW4gaXQgd2lsbCBvdmVyZmxvdyB0aGUgY2xpcHBpbmcgYm91bmRhcnkuXG4gKiBAc2VlIGh0dHBzOi8vZmxvYXRpbmctdWkuY29tL2RvY3Mvc2hpZnRcbiAqL1xuY29uc3Qgc2hpZnQgPSBzaGlmdCQxO1xuXG4vKipcbiAqIE9wdGltaXplcyB0aGUgdmlzaWJpbGl0eSBvZiB0aGUgZmxvYXRpbmcgZWxlbWVudCBieSBmbGlwcGluZyB0aGUgYHBsYWNlbWVudGBcbiAqIGluIG9yZGVyIHRvIGtlZXAgaXQgaW4gdmlldyB3aGVuIHRoZSBwcmVmZXJyZWQgcGxhY2VtZW50KHMpIHdpbGwgb3ZlcmZsb3cgdGhlXG4gKiBjbGlwcGluZyBib3VuZGFyeS4gQWx0ZXJuYXRpdmUgdG8gYGF1dG9QbGFjZW1lbnRgLlxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL2ZsaXBcbiAqL1xuY29uc3QgZmxpcCA9IGZsaXAkMTtcblxuLyoqXG4gKiBQcm92aWRlcyBkYXRhIHRoYXQgYWxsb3dzIHlvdSB0byBjaGFuZ2UgdGhlIHNpemUgb2YgdGhlIGZsb2F0aW5nIGVsZW1lbnQg4oCUXG4gKiBmb3IgaW5zdGFuY2UsIHByZXZlbnQgaXQgZnJvbSBvdmVyZmxvd2luZyB0aGUgY2xpcHBpbmcgYm91bmRhcnkgb3IgbWF0Y2ggdGhlXG4gKiB3aWR0aCBvZiB0aGUgcmVmZXJlbmNlIGVsZW1lbnQuXG4gKiBAc2VlIGh0dHBzOi8vZmxvYXRpbmctdWkuY29tL2RvY3Mvc2l6ZVxuICovXG5jb25zdCBzaXplID0gc2l6ZSQxO1xuXG4vKipcbiAqIFByb3ZpZGVzIGRhdGEgdG8gaGlkZSB0aGUgZmxvYXRpbmcgZWxlbWVudCBpbiBhcHBsaWNhYmxlIHNpdHVhdGlvbnMsIHN1Y2ggYXNcbiAqIHdoZW4gaXQgaXMgbm90IGluIHRoZSBzYW1lIGNsaXBwaW5nIGNvbnRleHQgYXMgdGhlIHJlZmVyZW5jZSBlbGVtZW50LlxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL2hpZGVcbiAqL1xuY29uc3QgaGlkZSA9IGhpZGUkMTtcblxuLyoqXG4gKiBQcm92aWRlcyBkYXRhIHRvIHBvc2l0aW9uIGFuIGlubmVyIGVsZW1lbnQgb2YgdGhlIGZsb2F0aW5nIGVsZW1lbnQgc28gdGhhdCBpdFxuICogYXBwZWFycyBjZW50ZXJlZCB0byB0aGUgcmVmZXJlbmNlIGVsZW1lbnQuXG4gKiBAc2VlIGh0dHBzOi8vZmxvYXRpbmctdWkuY29tL2RvY3MvYXJyb3dcbiAqL1xuY29uc3QgYXJyb3cgPSBhcnJvdyQxO1xuXG4vKipcbiAqIFByb3ZpZGVzIGltcHJvdmVkIHBvc2l0aW9uaW5nIGZvciBpbmxpbmUgcmVmZXJlbmNlIGVsZW1lbnRzIHRoYXQgY2FuIHNwYW5cbiAqIG92ZXIgbXVsdGlwbGUgbGluZXMsIHN1Y2ggYXMgaHlwZXJsaW5rcyBvciByYW5nZSBzZWxlY3Rpb25zLlxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL2lubGluZVxuICovXG5jb25zdCBpbmxpbmUgPSBpbmxpbmUkMTtcblxuLyoqXG4gKiBCdWlsdC1pbiBgbGltaXRlcmAgdGhhdCB3aWxsIHN0b3AgYHNoaWZ0KClgIGF0IGEgY2VydGFpbiBwb2ludC5cbiAqL1xuY29uc3QgbGltaXRTaGlmdCA9IGxpbWl0U2hpZnQkMTtcblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgYHhgIGFuZCBgeWAgY29vcmRpbmF0ZXMgdGhhdCB3aWxsIHBsYWNlIHRoZSBmbG9hdGluZyBlbGVtZW50XG4gKiBuZXh0IHRvIGEgZ2l2ZW4gcmVmZXJlbmNlIGVsZW1lbnQuXG4gKi9cbmNvbnN0IGNvbXB1dGVQb3NpdGlvbiA9IChyZWZlcmVuY2UsIGZsb2F0aW5nLCBvcHRpb25zKSA9PiB7XG4gIC8vIFRoaXMgY2FjaGVzIHRoZSBleHBlbnNpdmUgYGdldENsaXBwaW5nRWxlbWVudEFuY2VzdG9yc2AgZnVuY3Rpb24gc28gdGhhdFxuICAvLyBtdWx0aXBsZSBsaWZlY3ljbGUgcmVzZXRzIHJlLXVzZSB0aGUgc2FtZSByZXN1bHQuIEl0IG9ubHkgbGl2ZXMgZm9yIGFcbiAgLy8gc2luZ2xlIGNhbGwuIElmIG90aGVyIGZ1bmN0aW9ucyBiZWNvbWUgZXhwZW5zaXZlLCB3ZSBjYW4gYWRkIHRoZW0gYXMgd2VsbC5cbiAgY29uc3QgY2FjaGUgPSBuZXcgTWFwKCk7XG4gIGNvbnN0IG1lcmdlZE9wdGlvbnMgPSB7XG4gICAgcGxhdGZvcm0sXG4gICAgLi4ub3B0aW9uc1xuICB9O1xuICBjb25zdCBwbGF0Zm9ybVdpdGhDYWNoZSA9IHtcbiAgICAuLi5tZXJnZWRPcHRpb25zLnBsYXRmb3JtLFxuICAgIF9jOiBjYWNoZVxuICB9O1xuICByZXR1cm4gY29tcHV0ZVBvc2l0aW9uJDEocmVmZXJlbmNlLCBmbG9hdGluZywge1xuICAgIC4uLm1lcmdlZE9wdGlvbnMsXG4gICAgcGxhdGZvcm06IHBsYXRmb3JtV2l0aENhY2hlXG4gIH0pO1xufTtcblxuZXhwb3J0IHsgYXJyb3csIGF1dG9QbGFjZW1lbnQsIGF1dG9VcGRhdGUsIGNvbXB1dGVQb3NpdGlvbiwgZGV0ZWN0T3ZlcmZsb3csIGZsaXAsIGhpZGUsIGlubGluZSwgbGltaXRTaGlmdCwgb2Zmc2V0LCBwbGF0Zm9ybSwgc2hpZnQsIHNpemUgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrow: function() { return /* binding */ arrow; },\n/* harmony export */   autoPlacement: function() { return /* binding */ autoPlacement; },\n/* harmony export */   autoUpdate: function() { return /* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.autoUpdate; },\n/* harmony export */   computePosition: function() { return /* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.computePosition; },\n/* harmony export */   detectOverflow: function() { return /* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.detectOverflow; },\n/* harmony export */   flip: function() { return /* binding */ flip; },\n/* harmony export */   getOverflowAncestors: function() { return /* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.getOverflowAncestors; },\n/* harmony export */   hide: function() { return /* binding */ hide; },\n/* harmony export */   inline: function() { return /* binding */ inline; },\n/* harmony export */   limitShift: function() { return /* binding */ limitShift; },\n/* harmony export */   offset: function() { return /* binding */ offset; },\n/* harmony export */   platform: function() { return /* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.platform; },\n/* harmony export */   shift: function() { return /* binding */ shift; },\n/* harmony export */   size: function() { return /* binding */ size; },\n/* harmony export */   useFloating: function() { return /* binding */ useFloating; }\n/* harmony export */ });\n/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/dom */ \"(app-pages-browser)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\");\n/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @floating-ui/dom */ \"(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n\n\n\n\n\n\nvar index = typeof document !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_2__.useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = react__WEBPACK_IMPORTED_MODULE_2__.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = react__WEBPACK_IMPORTED_MODULE_2__.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = react__WEBPACK_IMPORTED_MODULE_2__.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = react__WEBPACK_IMPORTED_MODULE_2__.useState(null);\n  const [_floating, _setFloating] = react__WEBPACK_IMPORTED_MODULE_2__.useState(null);\n  const setReference = react__WEBPACK_IMPORTED_MODULE_2__.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = react__WEBPACK_IMPORTED_MODULE_2__.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(null);\n  const floatingRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(null);\n  const dataRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = react__WEBPACK_IMPORTED_MODULE_2__.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.computePosition)(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        react_dom__WEBPACK_IMPORTED_MODULE_3__.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.arrow)({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.arrow)({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.offset)(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.shift)(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.limitShift)(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.flip)(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.size)(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.autoPlacement)(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.hide)(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.inline)(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getComputedStyle: function() { return /* binding */ getComputedStyle; },\n/* harmony export */   getContainingBlock: function() { return /* binding */ getContainingBlock; },\n/* harmony export */   getDocumentElement: function() { return /* binding */ getDocumentElement; },\n/* harmony export */   getFrameElement: function() { return /* binding */ getFrameElement; },\n/* harmony export */   getNearestOverflowAncestor: function() { return /* binding */ getNearestOverflowAncestor; },\n/* harmony export */   getNodeName: function() { return /* binding */ getNodeName; },\n/* harmony export */   getNodeScroll: function() { return /* binding */ getNodeScroll; },\n/* harmony export */   getOverflowAncestors: function() { return /* binding */ getOverflowAncestors; },\n/* harmony export */   getParentNode: function() { return /* binding */ getParentNode; },\n/* harmony export */   getWindow: function() { return /* binding */ getWindow; },\n/* harmony export */   isContainingBlock: function() { return /* binding */ isContainingBlock; },\n/* harmony export */   isElement: function() { return /* binding */ isElement; },\n/* harmony export */   isHTMLElement: function() { return /* binding */ isHTMLElement; },\n/* harmony export */   isLastTraversableNode: function() { return /* binding */ isLastTraversableNode; },\n/* harmony export */   isNode: function() { return /* binding */ isNode; },\n/* harmony export */   isOverflowElement: function() { return /* binding */ isOverflowElement; },\n/* harmony export */   isShadowRoot: function() { return /* binding */ isShadowRoot; },\n/* harmony export */   isTableElement: function() { return /* binding */ isTableElement; },\n/* harmony export */   isTopLayer: function() { return /* binding */ isTopLayer; },\n/* harmony export */   isWebKit: function() { return /* binding */ isWebKit; }\n/* harmony export */ });\nfunction hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alignments: function() { return /* binding */ alignments; },\n/* harmony export */   clamp: function() { return /* binding */ clamp; },\n/* harmony export */   createCoords: function() { return /* binding */ createCoords; },\n/* harmony export */   evaluate: function() { return /* binding */ evaluate; },\n/* harmony export */   expandPaddingObject: function() { return /* binding */ expandPaddingObject; },\n/* harmony export */   floor: function() { return /* binding */ floor; },\n/* harmony export */   getAlignment: function() { return /* binding */ getAlignment; },\n/* harmony export */   getAlignmentAxis: function() { return /* binding */ getAlignmentAxis; },\n/* harmony export */   getAlignmentSides: function() { return /* binding */ getAlignmentSides; },\n/* harmony export */   getAxisLength: function() { return /* binding */ getAxisLength; },\n/* harmony export */   getExpandedPlacements: function() { return /* binding */ getExpandedPlacements; },\n/* harmony export */   getOppositeAlignmentPlacement: function() { return /* binding */ getOppositeAlignmentPlacement; },\n/* harmony export */   getOppositeAxis: function() { return /* binding */ getOppositeAxis; },\n/* harmony export */   getOppositeAxisPlacements: function() { return /* binding */ getOppositeAxisPlacements; },\n/* harmony export */   getOppositePlacement: function() { return /* binding */ getOppositePlacement; },\n/* harmony export */   getPaddingObject: function() { return /* binding */ getPaddingObject; },\n/* harmony export */   getSide: function() { return /* binding */ getSide; },\n/* harmony export */   getSideAxis: function() { return /* binding */ getSideAxis; },\n/* harmony export */   max: function() { return /* binding */ max; },\n/* harmony export */   min: function() { return /* binding */ min; },\n/* harmony export */   placements: function() { return /* binding */ placements; },\n/* harmony export */   rectToClientRect: function() { return /* binding */ rectToClientRect; },\n/* harmony export */   round: function() { return /* binding */ round; },\n/* harmony export */   sides: function() { return /* binding */ sides; }\n/* harmony export */ });\n/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZmxvYXRpbmctdWkvdXRpbHMvZGlzdC9mbG9hdGluZy11aS51dGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZmxvYXRpbmctdWkvdXRpbHMvZGlzdC9mbG9hdGluZy11aS51dGlscy5tanM/ZTZlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEN1c3RvbSBwb3NpdGlvbmluZyByZWZlcmVuY2UgZWxlbWVudC5cbiAqIEBzZWUgaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy92aXJ0dWFsLWVsZW1lbnRzXG4gKi9cblxuY29uc3Qgc2lkZXMgPSBbJ3RvcCcsICdyaWdodCcsICdib3R0b20nLCAnbGVmdCddO1xuY29uc3QgYWxpZ25tZW50cyA9IFsnc3RhcnQnLCAnZW5kJ107XG5jb25zdCBwbGFjZW1lbnRzID0gLyojX19QVVJFX18qL3NpZGVzLnJlZHVjZSgoYWNjLCBzaWRlKSA9PiBhY2MuY29uY2F0KHNpZGUsIHNpZGUgKyBcIi1cIiArIGFsaWdubWVudHNbMF0sIHNpZGUgKyBcIi1cIiArIGFsaWdubWVudHNbMV0pLCBbXSk7XG5jb25zdCBtaW4gPSBNYXRoLm1pbjtcbmNvbnN0IG1heCA9IE1hdGgubWF4O1xuY29uc3Qgcm91bmQgPSBNYXRoLnJvdW5kO1xuY29uc3QgZmxvb3IgPSBNYXRoLmZsb29yO1xuY29uc3QgY3JlYXRlQ29vcmRzID0gdiA9PiAoe1xuICB4OiB2LFxuICB5OiB2XG59KTtcbmNvbnN0IG9wcG9zaXRlU2lkZU1hcCA9IHtcbiAgbGVmdDogJ3JpZ2h0JyxcbiAgcmlnaHQ6ICdsZWZ0JyxcbiAgYm90dG9tOiAndG9wJyxcbiAgdG9wOiAnYm90dG9tJ1xufTtcbmNvbnN0IG9wcG9zaXRlQWxpZ25tZW50TWFwID0ge1xuICBzdGFydDogJ2VuZCcsXG4gIGVuZDogJ3N0YXJ0J1xufTtcbmZ1bmN0aW9uIGNsYW1wKHN0YXJ0LCB2YWx1ZSwgZW5kKSB7XG4gIHJldHVybiBtYXgoc3RhcnQsIG1pbih2YWx1ZSwgZW5kKSk7XG59XG5mdW5jdGlvbiBldmFsdWF0ZSh2YWx1ZSwgcGFyYW0pIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyA/IHZhbHVlKHBhcmFtKSA6IHZhbHVlO1xufVxuZnVuY3Rpb24gZ2V0U2lkZShwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xufVxuZnVuY3Rpb24gZ2V0QWxpZ25tZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KCctJylbMV07XG59XG5mdW5jdGlvbiBnZXRPcHBvc2l0ZUF4aXMoYXhpcykge1xuICByZXR1cm4gYXhpcyA9PT0gJ3gnID8gJ3knIDogJ3gnO1xufVxuZnVuY3Rpb24gZ2V0QXhpc0xlbmd0aChheGlzKSB7XG4gIHJldHVybiBheGlzID09PSAneScgPyAnaGVpZ2h0JyA6ICd3aWR0aCc7XG59XG5mdW5jdGlvbiBnZXRTaWRlQXhpcyhwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIFsndG9wJywgJ2JvdHRvbSddLmluY2x1ZGVzKGdldFNpZGUocGxhY2VtZW50KSkgPyAneScgOiAneCc7XG59XG5mdW5jdGlvbiBnZXRBbGlnbm1lbnRBeGlzKHBsYWNlbWVudCkge1xuICByZXR1cm4gZ2V0T3Bwb3NpdGVBeGlzKGdldFNpZGVBeGlzKHBsYWNlbWVudCkpO1xufVxuZnVuY3Rpb24gZ2V0QWxpZ25tZW50U2lkZXMocGxhY2VtZW50LCByZWN0cywgcnRsKSB7XG4gIGlmIChydGwgPT09IHZvaWQgMCkge1xuICAgIHJ0bCA9IGZhbHNlO1xuICB9XG4gIGNvbnN0IGFsaWdubWVudCA9IGdldEFsaWdubWVudChwbGFjZW1lbnQpO1xuICBjb25zdCBhbGlnbm1lbnRBeGlzID0gZ2V0QWxpZ25tZW50QXhpcyhwbGFjZW1lbnQpO1xuICBjb25zdCBsZW5ndGggPSBnZXRBeGlzTGVuZ3RoKGFsaWdubWVudEF4aXMpO1xuICBsZXQgbWFpbkFsaWdubWVudFNpZGUgPSBhbGlnbm1lbnRBeGlzID09PSAneCcgPyBhbGlnbm1lbnQgPT09IChydGwgPyAnZW5kJyA6ICdzdGFydCcpID8gJ3JpZ2h0JyA6ICdsZWZ0JyA6IGFsaWdubWVudCA9PT0gJ3N0YXJ0JyA/ICdib3R0b20nIDogJ3RvcCc7XG4gIGlmIChyZWN0cy5yZWZlcmVuY2VbbGVuZ3RoXSA+IHJlY3RzLmZsb2F0aW5nW2xlbmd0aF0pIHtcbiAgICBtYWluQWxpZ25tZW50U2lkZSA9IGdldE9wcG9zaXRlUGxhY2VtZW50KG1haW5BbGlnbm1lbnRTaWRlKTtcbiAgfVxuICByZXR1cm4gW21haW5BbGlnbm1lbnRTaWRlLCBnZXRPcHBvc2l0ZVBsYWNlbWVudChtYWluQWxpZ25tZW50U2lkZSldO1xufVxuZnVuY3Rpb24gZ2V0RXhwYW5kZWRQbGFjZW1lbnRzKHBsYWNlbWVudCkge1xuICBjb25zdCBvcHBvc2l0ZVBsYWNlbWVudCA9IGdldE9wcG9zaXRlUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gIHJldHVybiBbZ2V0T3Bwb3NpdGVBbGlnbm1lbnRQbGFjZW1lbnQocGxhY2VtZW50KSwgb3Bwb3NpdGVQbGFjZW1lbnQsIGdldE9wcG9zaXRlQWxpZ25tZW50UGxhY2VtZW50KG9wcG9zaXRlUGxhY2VtZW50KV07XG59XG5mdW5jdGlvbiBnZXRPcHBvc2l0ZUFsaWdubWVudFBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5yZXBsYWNlKC9zdGFydHxlbmQvZywgYWxpZ25tZW50ID0+IG9wcG9zaXRlQWxpZ25tZW50TWFwW2FsaWdubWVudF0pO1xufVxuZnVuY3Rpb24gZ2V0U2lkZUxpc3Qoc2lkZSwgaXNTdGFydCwgcnRsKSB7XG4gIGNvbnN0IGxyID0gWydsZWZ0JywgJ3JpZ2h0J107XG4gIGNvbnN0IHJsID0gWydyaWdodCcsICdsZWZ0J107XG4gIGNvbnN0IHRiID0gWyd0b3AnLCAnYm90dG9tJ107XG4gIGNvbnN0IGJ0ID0gWydib3R0b20nLCAndG9wJ107XG4gIHN3aXRjaCAoc2lkZSkge1xuICAgIGNhc2UgJ3RvcCc6XG4gICAgY2FzZSAnYm90dG9tJzpcbiAgICAgIGlmIChydGwpIHJldHVybiBpc1N0YXJ0ID8gcmwgOiBscjtcbiAgICAgIHJldHVybiBpc1N0YXJ0ID8gbHIgOiBybDtcbiAgICBjYXNlICdsZWZ0JzpcbiAgICBjYXNlICdyaWdodCc6XG4gICAgICByZXR1cm4gaXNTdGFydCA/IHRiIDogYnQ7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBbXTtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0T3Bwb3NpdGVBeGlzUGxhY2VtZW50cyhwbGFjZW1lbnQsIGZsaXBBbGlnbm1lbnQsIGRpcmVjdGlvbiwgcnRsKSB7XG4gIGNvbnN0IGFsaWdubWVudCA9IGdldEFsaWdubWVudChwbGFjZW1lbnQpO1xuICBsZXQgbGlzdCA9IGdldFNpZGVMaXN0KGdldFNpZGUocGxhY2VtZW50KSwgZGlyZWN0aW9uID09PSAnc3RhcnQnLCBydGwpO1xuICBpZiAoYWxpZ25tZW50KSB7XG4gICAgbGlzdCA9IGxpc3QubWFwKHNpZGUgPT4gc2lkZSArIFwiLVwiICsgYWxpZ25tZW50KTtcbiAgICBpZiAoZmxpcEFsaWdubWVudCkge1xuICAgICAgbGlzdCA9IGxpc3QuY29uY2F0KGxpc3QubWFwKGdldE9wcG9zaXRlQWxpZ25tZW50UGxhY2VtZW50KSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBsaXN0O1xufVxuZnVuY3Rpb24gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQucmVwbGFjZSgvbGVmdHxyaWdodHxib3R0b218dG9wL2csIHNpZGUgPT4gb3Bwb3NpdGVTaWRlTWFwW3NpZGVdKTtcbn1cbmZ1bmN0aW9uIGV4cGFuZFBhZGRpbmdPYmplY3QocGFkZGluZykge1xuICByZXR1cm4ge1xuICAgIHRvcDogMCxcbiAgICByaWdodDogMCxcbiAgICBib3R0b206IDAsXG4gICAgbGVmdDogMCxcbiAgICAuLi5wYWRkaW5nXG4gIH07XG59XG5mdW5jdGlvbiBnZXRQYWRkaW5nT2JqZWN0KHBhZGRpbmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBwYWRkaW5nICE9PSAnbnVtYmVyJyA/IGV4cGFuZFBhZGRpbmdPYmplY3QocGFkZGluZykgOiB7XG4gICAgdG9wOiBwYWRkaW5nLFxuICAgIHJpZ2h0OiBwYWRkaW5nLFxuICAgIGJvdHRvbTogcGFkZGluZyxcbiAgICBsZWZ0OiBwYWRkaW5nXG4gIH07XG59XG5mdW5jdGlvbiByZWN0VG9DbGllbnRSZWN0KHJlY3QpIHtcbiAgY29uc3Qge1xuICAgIHgsXG4gICAgeSxcbiAgICB3aWR0aCxcbiAgICBoZWlnaHRcbiAgfSA9IHJlY3Q7XG4gIHJldHVybiB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHRvcDogeSxcbiAgICBsZWZ0OiB4LFxuICAgIHJpZ2h0OiB4ICsgd2lkdGgsXG4gICAgYm90dG9tOiB5ICsgaGVpZ2h0LFxuICAgIHgsXG4gICAgeVxuICB9O1xufVxuXG5leHBvcnQgeyBhbGlnbm1lbnRzLCBjbGFtcCwgY3JlYXRlQ29vcmRzLCBldmFsdWF0ZSwgZXhwYW5kUGFkZGluZ09iamVjdCwgZmxvb3IsIGdldEFsaWdubWVudCwgZ2V0QWxpZ25tZW50QXhpcywgZ2V0QWxpZ25tZW50U2lkZXMsIGdldEF4aXNMZW5ndGgsIGdldEV4cGFuZGVkUGxhY2VtZW50cywgZ2V0T3Bwb3NpdGVBbGlnbm1lbnRQbGFjZW1lbnQsIGdldE9wcG9zaXRlQXhpcywgZ2V0T3Bwb3NpdGVBeGlzUGxhY2VtZW50cywgZ2V0T3Bwb3NpdGVQbGFjZW1lbnQsIGdldFBhZGRpbmdPYmplY3QsIGdldFNpZGUsIGdldFNpZGVBeGlzLCBtYXgsIG1pbiwgcGxhY2VtZW50cywgcmVjdFRvQ2xpZW50UmVjdCwgcm91bmQsIHNpZGVzIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@radix-ui/primitive/dist/index.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeEventHandlers: function() { return /* binding */ composeEventHandlers; }\n/* harmony export */ });\n// packages/core/primitive/src/primitive.tsx\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLHVFQUF1RSxrQ0FBa0MsSUFBSTtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9wcmltaXRpdmUvZGlzdC9pbmRleC5tanM/NDhkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9jb3JlL3ByaW1pdGl2ZS9zcmMvcHJpbWl0aXZlLnRzeFxuZnVuY3Rpb24gY29tcG9zZUV2ZW50SGFuZGxlcnMob3JpZ2luYWxFdmVudEhhbmRsZXIsIG91ckV2ZW50SGFuZGxlciwgeyBjaGVja0ZvckRlZmF1bHRQcmV2ZW50ZWQgPSB0cnVlIH0gPSB7fSkge1xuICByZXR1cm4gZnVuY3Rpb24gaGFuZGxlRXZlbnQoZXZlbnQpIHtcbiAgICBvcmlnaW5hbEV2ZW50SGFuZGxlcj8uKGV2ZW50KTtcbiAgICBpZiAoY2hlY2tGb3JEZWZhdWx0UHJldmVudGVkID09PSBmYWxzZSB8fCAhZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgcmV0dXJuIG91ckV2ZW50SGFuZGxlcj8uKGV2ZW50KTtcbiAgICB9XG4gIH07XG59XG5leHBvcnQge1xuICBjb21wb3NlRXZlbnRIYW5kbGVyc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-arrow/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@radix-ui/react-arrow/dist/index.mjs ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Arrow: function() { return /* binding */ Arrow; },\n/* harmony export */   Root: function() { return /* binding */ Root; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/arrow/src/Arrow.tsx\n\n\n\nvar NAME = \"Arrow\";\nvar Arrow = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__.Primitive.svg,\n    {\n      ...arrowProps,\n      ref: forwardedRef,\n      width,\n      height,\n      viewBox: \"0 0 30 10\",\n      preserveAspectRatio: \"none\",\n      children: props.asChild ? children : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"polygon\", { points: \"0,0 30,0 15,10\" })\n    }\n  );\n});\nArrow.displayName = NAME;\nvar Root = Arrow;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtYXJyb3cvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUN1QjtBQUNkO0FBQ3hDO0FBQ0EsWUFBWSw2Q0FBZ0I7QUFDNUIsVUFBVSxrREFBa0Q7QUFDNUQseUJBQXlCLHNEQUFHO0FBQzVCLElBQUksZ0VBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxzREFBRyxjQUFjLDBCQUEwQjtBQUN0RztBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtYXJyb3cvZGlzdC9pbmRleC5tanM/M2Q3NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC9hcnJvdy9zcmMvQXJyb3cudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFByaW1pdGl2ZSB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlXCI7XG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBOQU1FID0gXCJBcnJvd1wiO1xudmFyIEFycm93ID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuLCB3aWR0aCA9IDEwLCBoZWlnaHQgPSA1LCAuLi5hcnJvd1Byb3BzIH0gPSBwcm9wcztcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goXG4gICAgUHJpbWl0aXZlLnN2ZyxcbiAgICB7XG4gICAgICAuLi5hcnJvd1Byb3BzLFxuICAgICAgcmVmOiBmb3J3YXJkZWRSZWYsXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIHZpZXdCb3g6IFwiMCAwIDMwIDEwXCIsXG4gICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvOiBcIm5vbmVcIixcbiAgICAgIGNoaWxkcmVuOiBwcm9wcy5hc0NoaWxkID8gY2hpbGRyZW4gOiAvKiBAX19QVVJFX18gKi8ganN4KFwicG9seWdvblwiLCB7IHBvaW50czogXCIwLDAgMzAsMCAxNSwxMFwiIH0pXG4gICAgfVxuICApO1xufSk7XG5BcnJvdy5kaXNwbGF5TmFtZSA9IE5BTUU7XG52YXIgUm9vdCA9IEFycm93O1xuZXhwb3J0IHtcbiAgQXJyb3csXG4gIFJvb3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-arrow/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-avatar/dist/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@radix-ui/react-avatar/dist/index.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Avatar: function() { return /* binding */ Avatar; },\n/* harmony export */   AvatarFallback: function() { return /* binding */ AvatarFallback; },\n/* harmony export */   AvatarImage: function() { return /* binding */ AvatarImage; },\n/* harmony export */   Fallback: function() { return /* binding */ Fallback; },\n/* harmony export */   Image: function() { return /* binding */ Image; },\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   createAvatarScope: function() { return /* binding */ createAvatarScope; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Avatar,AvatarFallback,AvatarImage,Fallback,Image,Root,createAvatarScope auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$();\n// packages/react/avatar/src/Avatar.tsx\n\n\n\n\n\n\nvar AVATAR_NAME = \"Avatar\";\nvar [createAvatarContext, createAvatarScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContextScope)(AVATAR_NAME);\nvar [AvatarProvider, useAvatarContext] = createAvatarContext(AVATAR_NAME);\nvar Avatar = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = _s((props, forwardedRef)=>{\n    _s();\n    const { __scopeAvatar, ...avatarProps } = props;\n    const [imageLoadingStatus, setImageLoadingStatus] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\"idle\");\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AvatarProvider, {\n        scope: __scopeAvatar,\n        imageLoadingStatus,\n        onImageLoadingStatusChange: setImageLoadingStatus,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_3__.Primitive.span, {\n            ...avatarProps,\n            ref: forwardedRef\n        })\n    });\n}, \"LArj5vvXGSJ1qfdOqtP5F0s7/3k=\")), \"LArj5vvXGSJ1qfdOqtP5F0s7/3k=\");\n_c1 = Avatar;\nAvatar.displayName = AVATAR_NAME;\nvar IMAGE_NAME = \"AvatarImage\";\nvar AvatarImage = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c2 = _s1((props, forwardedRef)=>{\n    _s1();\n    const { __scopeAvatar, src, onLoadingStatusChange = ()=>{}, ...imageProps } = props;\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n    const imageLoadingStatus = useImageLoadingStatus(src, imageProps.referrerPolicy);\n    const handleLoadingStatusChange = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_4__.useCallbackRef)((status)=>{\n        onLoadingStatusChange(status);\n        context.onImageLoadingStatusChange(status);\n    });\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_5__.useLayoutEffect)(()=>{\n        if (imageLoadingStatus !== \"idle\") {\n            handleLoadingStatusChange(imageLoadingStatus);\n        }\n    }, [\n        imageLoadingStatus,\n        handleLoadingStatusChange\n    ]);\n    return imageLoadingStatus === \"loaded\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_3__.Primitive.img, {\n        ...imageProps,\n        ref: forwardedRef,\n        src\n    }) : null;\n}, \"pLqDpzOvi4to5gZ7rBbQ5hdybXk=\", false, function() {\n    return [\n        useAvatarContext,\n        useImageLoadingStatus,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_4__.useCallbackRef\n    ];\n})), \"pLqDpzOvi4to5gZ7rBbQ5hdybXk=\", false, function() {\n    return [\n        useAvatarContext,\n        useImageLoadingStatus,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_4__.useCallbackRef\n    ];\n});\n_c3 = AvatarImage;\nAvatarImage.displayName = IMAGE_NAME;\nvar FALLBACK_NAME = \"AvatarFallback\";\nvar AvatarFallback = /*#__PURE__*/ _s2(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c4 = _s2((props, forwardedRef)=>{\n    _s2();\n    const { __scopeAvatar, delayMs, ...fallbackProps } = props;\n    const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n    const [canRender, setCanRender] = react__WEBPACK_IMPORTED_MODULE_0__.useState(delayMs === void 0);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (delayMs !== void 0) {\n            const timerId = window.setTimeout(()=>setCanRender(true), delayMs);\n            return ()=>window.clearTimeout(timerId);\n        }\n    }, [\n        delayMs\n    ]);\n    return canRender && context.imageLoadingStatus !== \"loaded\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_3__.Primitive.span, {\n        ...fallbackProps,\n        ref: forwardedRef\n    }) : null;\n}, \"IfNhTzYfBBOb8/Nn5G9fJj5kYTk=\", false, function() {\n    return [\n        useAvatarContext\n    ];\n})), \"IfNhTzYfBBOb8/Nn5G9fJj5kYTk=\", false, function() {\n    return [\n        useAvatarContext\n    ];\n});\n_c5 = AvatarFallback;\nAvatarFallback.displayName = FALLBACK_NAME;\nfunction useImageLoadingStatus(src, referrerPolicy) {\n    _s3();\n    const [loadingStatus, setLoadingStatus] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\"idle\");\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_5__.useLayoutEffect)(()=>{\n        if (!src) {\n            setLoadingStatus(\"error\");\n            return;\n        }\n        let isMounted = true;\n        const image = new window.Image();\n        const updateStatus = (status)=>()=>{\n                if (!isMounted) return;\n                setLoadingStatus(status);\n            };\n        setLoadingStatus(\"loading\");\n        image.onload = updateStatus(\"loaded\");\n        image.onerror = updateStatus(\"error\");\n        image.src = src;\n        if (referrerPolicy) {\n            image.referrerPolicy = referrerPolicy;\n        }\n        return ()=>{\n            isMounted = false;\n        };\n    }, [\n        src,\n        referrerPolicy\n    ]);\n    return loadingStatus;\n}\n_s3(useImageLoadingStatus, \"kHtr7xNJjlthpAAUmbEbUxzkNdM=\");\nvar Root = Avatar;\nvar Image = AvatarImage;\nvar Fallback = AvatarFallback;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Avatar$React.forwardRef\");\n$RefreshReg$(_c1, \"Avatar\");\n$RefreshReg$(_c2, \"AvatarImage$React.forwardRef\");\n$RefreshReg$(_c3, \"AvatarImage\");\n$RefreshReg$(_c4, \"AvatarFallback$React.forwardRef\");\n$RefreshReg$(_c5, \"AvatarFallback\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-avatar/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@radix-ui/react-compose-refs/dist/index.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeRefs: function() { return /* binding */ composeRefs; },\n/* harmony export */   useComposedRefs: function() { return /* binding */ useComposedRefs; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/compose-refs/src/composeRefs.tsx\n\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => refs.forEach((ref) => setRef(ref, node));\n}\nfunction useComposedRefs(...refs) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(composeRefs(...refs), refs);\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQytCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsOENBQWlCO0FBQzFCO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LWNvbXBvc2UtcmVmcy9kaXN0L2luZGV4Lm1qcz80NTM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L2NvbXBvc2UtcmVmcy9zcmMvY29tcG9zZVJlZnMudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIHNldFJlZihyZWYsIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgcmVmID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZWYodmFsdWUpO1xuICB9IGVsc2UgaWYgKHJlZiAhPT0gbnVsbCAmJiByZWYgIT09IHZvaWQgMCkge1xuICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XG4gIH1cbn1cbmZ1bmN0aW9uIGNvbXBvc2VSZWZzKC4uLnJlZnMpIHtcbiAgcmV0dXJuIChub2RlKSA9PiByZWZzLmZvckVhY2goKHJlZikgPT4gc2V0UmVmKHJlZiwgbm9kZSkpO1xufVxuZnVuY3Rpb24gdXNlQ29tcG9zZWRSZWZzKC4uLnJlZnMpIHtcbiAgcmV0dXJuIFJlYWN0LnVzZUNhbGxiYWNrKGNvbXBvc2VSZWZzKC4uLnJlZnMpLCByZWZzKTtcbn1cbmV4cG9ydCB7XG4gIGNvbXBvc2VSZWZzLFxuICB1c2VDb21wb3NlZFJlZnNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@radix-ui/react-context/dist/index.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContext: function() { return /* binding */ createContext2; },\n/* harmony export */   createContextScope: function() { return /* binding */ createContextScope; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/context/src/createContext.tsx\n\n\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n  const Provider = (props) => {\n    const { children, ...context } = props;\n    const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\n  };\n  Provider.displayName = rootComponentName + \"Provider\";\n  function useContext2(consumerName) {\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    const Provider = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\n    };\n    Provider.displayName = rootComponentName + \"Provider\";\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29udGV4dC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDK0I7QUFDUztBQUN4QztBQUNBLGtCQUFrQixnREFBbUI7QUFDckM7QUFDQSxZQUFZLHVCQUF1QjtBQUNuQyxrQkFBa0IsMENBQWE7QUFDL0IsMkJBQTJCLHNEQUFHLHFCQUFxQixpQkFBaUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDZDQUFnQjtBQUNwQztBQUNBO0FBQ0EseUJBQXlCLGFBQWEsMkJBQTJCLGtCQUFrQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0RBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOEJBQThCO0FBQzVDO0FBQ0Esb0JBQW9CLDBDQUFhO0FBQ2pDLDZCQUE2QixzREFBRyxxQkFBcUIsaUJBQWlCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDZDQUFnQjtBQUN0QztBQUNBO0FBQ0EsMkJBQTJCLGFBQWEsMkJBQTJCLGtCQUFrQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnREFBbUI7QUFDaEMsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDBDQUFhO0FBQzFCLGlCQUFpQixXQUFXLFVBQVUsTUFBTSxtQ0FBbUM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJEQUEyRCxxQkFBcUI7QUFDaEY7QUFDQSxrREFBa0QsVUFBVTtBQUM1RCxpQkFBaUI7QUFDakIsT0FBTyxJQUFJO0FBQ1gsYUFBYSwwQ0FBYSxVQUFVLFdBQVcsb0JBQW9CLGdCQUFnQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LWNvbnRleHQvZGlzdC9pbmRleC5tanM/YjRkOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC9jb250ZXh0L3NyYy9jcmVhdGVDb250ZXh0LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIGNyZWF0ZUNvbnRleHQyKHJvb3RDb21wb25lbnROYW1lLCBkZWZhdWx0Q29udGV4dCkge1xuICBjb25zdCBDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChkZWZhdWx0Q29udGV4dCk7XG4gIGNvbnN0IFByb3ZpZGVyID0gKHByb3BzKSA9PiB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgLi4uY29udGV4dCB9ID0gcHJvcHM7XG4gICAgY29uc3QgdmFsdWUgPSBSZWFjdC51c2VNZW1vKCgpID0+IGNvbnRleHQsIE9iamVjdC52YWx1ZXMoY29udGV4dCkpO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KENvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWUsIGNoaWxkcmVuIH0pO1xuICB9O1xuICBQcm92aWRlci5kaXNwbGF5TmFtZSA9IHJvb3RDb21wb25lbnROYW1lICsgXCJQcm92aWRlclwiO1xuICBmdW5jdGlvbiB1c2VDb250ZXh0Mihjb25zdW1lck5hbWUpIHtcbiAgICBjb25zdCBjb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dChDb250ZXh0KTtcbiAgICBpZiAoY29udGV4dCkgcmV0dXJuIGNvbnRleHQ7XG4gICAgaWYgKGRlZmF1bHRDb250ZXh0ICE9PSB2b2lkIDApIHJldHVybiBkZWZhdWx0Q29udGV4dDtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFxcYCR7Y29uc3VtZXJOYW1lfVxcYCBtdXN0IGJlIHVzZWQgd2l0aGluIFxcYCR7cm9vdENvbXBvbmVudE5hbWV9XFxgYCk7XG4gIH1cbiAgcmV0dXJuIFtQcm92aWRlciwgdXNlQ29udGV4dDJdO1xufVxuZnVuY3Rpb24gY3JlYXRlQ29udGV4dFNjb3BlKHNjb3BlTmFtZSwgY3JlYXRlQ29udGV4dFNjb3BlRGVwcyA9IFtdKSB7XG4gIGxldCBkZWZhdWx0Q29udGV4dHMgPSBbXTtcbiAgZnVuY3Rpb24gY3JlYXRlQ29udGV4dDMocm9vdENvbXBvbmVudE5hbWUsIGRlZmF1bHRDb250ZXh0KSB7XG4gICAgY29uc3QgQmFzZUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGRlZmF1bHRDb250ZXh0KTtcbiAgICBjb25zdCBpbmRleCA9IGRlZmF1bHRDb250ZXh0cy5sZW5ndGg7XG4gICAgZGVmYXVsdENvbnRleHRzID0gWy4uLmRlZmF1bHRDb250ZXh0cywgZGVmYXVsdENvbnRleHRdO1xuICAgIGNvbnN0IFByb3ZpZGVyID0gKHByb3BzKSA9PiB7XG4gICAgICBjb25zdCB7IHNjb3BlLCBjaGlsZHJlbiwgLi4uY29udGV4dCB9ID0gcHJvcHM7XG4gICAgICBjb25zdCBDb250ZXh0ID0gc2NvcGU/LltzY29wZU5hbWVdPy5baW5kZXhdIHx8IEJhc2VDb250ZXh0O1xuICAgICAgY29uc3QgdmFsdWUgPSBSZWFjdC51c2VNZW1vKCgpID0+IGNvbnRleHQsIE9iamVjdC52YWx1ZXMoY29udGV4dCkpO1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZSwgY2hpbGRyZW4gfSk7XG4gICAgfTtcbiAgICBQcm92aWRlci5kaXNwbGF5TmFtZSA9IHJvb3RDb21wb25lbnROYW1lICsgXCJQcm92aWRlclwiO1xuICAgIGZ1bmN0aW9uIHVzZUNvbnRleHQyKGNvbnN1bWVyTmFtZSwgc2NvcGUpIHtcbiAgICAgIGNvbnN0IENvbnRleHQgPSBzY29wZT8uW3Njb3BlTmFtZV0/LltpbmRleF0gfHwgQmFzZUNvbnRleHQ7XG4gICAgICBjb25zdCBjb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dChDb250ZXh0KTtcbiAgICAgIGlmIChjb250ZXh0KSByZXR1cm4gY29udGV4dDtcbiAgICAgIGlmIChkZWZhdWx0Q29udGV4dCAhPT0gdm9pZCAwKSByZXR1cm4gZGVmYXVsdENvbnRleHQ7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFxcYCR7Y29uc3VtZXJOYW1lfVxcYCBtdXN0IGJlIHVzZWQgd2l0aGluIFxcYCR7cm9vdENvbXBvbmVudE5hbWV9XFxgYCk7XG4gICAgfVxuICAgIHJldHVybiBbUHJvdmlkZXIsIHVzZUNvbnRleHQyXTtcbiAgfVxuICBjb25zdCBjcmVhdGVTY29wZSA9ICgpID0+IHtcbiAgICBjb25zdCBzY29wZUNvbnRleHRzID0gZGVmYXVsdENvbnRleHRzLm1hcCgoZGVmYXVsdENvbnRleHQpID0+IHtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVDb250ZXh0KGRlZmF1bHRDb250ZXh0KTtcbiAgICB9KTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdXNlU2NvcGUoc2NvcGUpIHtcbiAgICAgIGNvbnN0IGNvbnRleHRzID0gc2NvcGU/LltzY29wZU5hbWVdIHx8IHNjb3BlQ29udGV4dHM7XG4gICAgICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICAgICAgKCkgPT4gKHsgW2BfX3Njb3BlJHtzY29wZU5hbWV9YF06IHsgLi4uc2NvcGUsIFtzY29wZU5hbWVdOiBjb250ZXh0cyB9IH0pLFxuICAgICAgICBbc2NvcGUsIGNvbnRleHRzXVxuICAgICAgKTtcbiAgICB9O1xuICB9O1xuICBjcmVhdGVTY29wZS5zY29wZU5hbWUgPSBzY29wZU5hbWU7XG4gIHJldHVybiBbY3JlYXRlQ29udGV4dDMsIGNvbXBvc2VDb250ZXh0U2NvcGVzKGNyZWF0ZVNjb3BlLCAuLi5jcmVhdGVDb250ZXh0U2NvcGVEZXBzKV07XG59XG5mdW5jdGlvbiBjb21wb3NlQ29udGV4dFNjb3BlcyguLi5zY29wZXMpIHtcbiAgY29uc3QgYmFzZVNjb3BlID0gc2NvcGVzWzBdO1xuICBpZiAoc2NvcGVzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIGJhc2VTY29wZTtcbiAgY29uc3QgY3JlYXRlU2NvcGUgPSAoKSA9PiB7XG4gICAgY29uc3Qgc2NvcGVIb29rcyA9IHNjb3Blcy5tYXAoKGNyZWF0ZVNjb3BlMikgPT4gKHtcbiAgICAgIHVzZVNjb3BlOiBjcmVhdGVTY29wZTIoKSxcbiAgICAgIHNjb3BlTmFtZTogY3JlYXRlU2NvcGUyLnNjb3BlTmFtZVxuICAgIH0pKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdXNlQ29tcG9zZWRTY29wZXMob3ZlcnJpZGVTY29wZXMpIHtcbiAgICAgIGNvbnN0IG5leHRTY29wZXMgPSBzY29wZUhvb2tzLnJlZHVjZSgobmV4dFNjb3BlczIsIHsgdXNlU2NvcGUsIHNjb3BlTmFtZSB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHNjb3BlUHJvcHMgPSB1c2VTY29wZShvdmVycmlkZVNjb3Blcyk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IHNjb3BlUHJvcHNbYF9fc2NvcGUke3Njb3BlTmFtZX1gXTtcbiAgICAgICAgcmV0dXJuIHsgLi4ubmV4dFNjb3BlczIsIC4uLmN1cnJlbnRTY29wZSB9O1xuICAgICAgfSwge30pO1xuICAgICAgcmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4gKHsgW2BfX3Njb3BlJHtiYXNlU2NvcGUuc2NvcGVOYW1lfWBdOiBuZXh0U2NvcGVzIH0pLCBbbmV4dFNjb3Blc10pO1xuICAgIH07XG4gIH07XG4gIGNyZWF0ZVNjb3BlLnNjb3BlTmFtZSA9IGJhc2VTY29wZS5zY29wZU5hbWU7XG4gIHJldHVybiBjcmVhdGVTY29wZTtcbn1cbmV4cG9ydCB7XG4gIGNyZWF0ZUNvbnRleHQyIGFzIGNyZWF0ZUNvbnRleHQsXG4gIGNyZWF0ZUNvbnRleHRTY29wZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-dialog/dist/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@radix-ui/react-dialog/dist/index.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Close: function() { return /* binding */ Close; },\n/* harmony export */   Content: function() { return /* binding */ Content; },\n/* harmony export */   Description: function() { return /* binding */ Description; },\n/* harmony export */   Dialog: function() { return /* binding */ Dialog; },\n/* harmony export */   DialogClose: function() { return /* binding */ DialogClose; },\n/* harmony export */   DialogContent: function() { return /* binding */ DialogContent; },\n/* harmony export */   DialogDescription: function() { return /* binding */ DialogDescription; },\n/* harmony export */   DialogOverlay: function() { return /* binding */ DialogOverlay; },\n/* harmony export */   DialogPortal: function() { return /* binding */ DialogPortal; },\n/* harmony export */   DialogTitle: function() { return /* binding */ DialogTitle; },\n/* harmony export */   DialogTrigger: function() { return /* binding */ DialogTrigger; },\n/* harmony export */   Overlay: function() { return /* binding */ Overlay; },\n/* harmony export */   Portal: function() { return /* binding */ Portal; },\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   Title: function() { return /* binding */ Title; },\n/* harmony export */   Trigger: function() { return /* binding */ Trigger; },\n/* harmony export */   WarningProvider: function() { return /* binding */ WarningProvider; },\n/* harmony export */   createDialogScope: function() { return /* binding */ createDialogScope; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-id */ \"(app-pages-browser)/./node_modules/@radix-ui/react-id/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-use-controllable-state */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @radix-ui/react-dismissable-layer */ \"(app-pages-browser)/./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_focus_scope__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @radix-ui/react-focus-scope */ \"(app-pages-browser)/./node_modules/@radix-ui/react-focus-scope/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @radix-ui/react-portal */ \"(app-pages-browser)/./node_modules/@radix-ui/react-portal/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @radix-ui/react-presence */ \"(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_focus_guards__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @radix-ui/react-focus-guards */ \"(app-pages-browser)/./node_modules/@radix-ui/react-focus-guards/dist/index.mjs\");\n/* harmony import */ var react_remove_scroll__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-remove-scroll */ \"(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/Combination.js\");\n/* harmony import */ var aria_hidden__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! aria-hidden */ \"(app-pages-browser)/./node_modules/aria-hidden/dist/es2015/index.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Close,Content,Description,Dialog,DialogClose,DialogContent,DialogDescription,DialogOverlay,DialogPortal,DialogTitle,DialogTrigger,Overlay,Portal,Root,Title,Trigger,WarningProvider,createDialogScope auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$(), _s12 = $RefreshSig$(), _s13 = $RefreshSig$();\n// packages/react/dialog/src/Dialog.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar DIALOG_NAME = \"Dialog\";\nvar [createDialogContext, createDialogScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContextScope)(DIALOG_NAME);\nvar [DialogProvider, useDialogContext] = createDialogContext(DIALOG_NAME);\nvar Dialog = (props)=>{\n    _s();\n    const { __scopeDialog, children, open: openProp, defaultOpen, onOpenChange, modal = true } = props;\n    const triggerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const contentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const [open = false, setOpen] = (0,_radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_3__.useControllableState)({\n        prop: openProp,\n        defaultProp: defaultOpen,\n        onChange: onOpenChange\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DialogProvider, {\n        scope: __scopeDialog,\n        triggerRef,\n        contentRef,\n        contentId: (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__.useId)(),\n        titleId: (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__.useId)(),\n        descriptionId: (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__.useId)(),\n        open,\n        onOpenChange: setOpen,\n        onOpenToggle: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>setOpen((prevOpen)=>!prevOpen), [\n            setOpen\n        ]),\n        modal,\n        children\n    });\n};\n_s(Dialog, \"/yuatmodaV7w4hyulEirYGxYW3g=\", false, function() {\n    return [\n        _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_3__.useControllableState,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__.useId,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__.useId,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__.useId\n    ];\n});\n_c = Dialog;\nDialog.displayName = DIALOG_NAME;\nvar TRIGGER_NAME = \"DialogTrigger\";\nvar DialogTrigger = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c1 = _s1((props, forwardedRef)=>{\n    _s1();\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, context.triggerRef);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__.Primitive.button, {\n        type: \"button\",\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": context.open,\n        \"aria-controls\": context.contentId,\n        \"data-state\": getState(context.open),\n        ...triggerProps,\n        ref: composedTriggerRef,\n        onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onClick, context.onOpenToggle)\n    });\n}, \"bYhw/KL0iUSfvGN4c0UsGZCd7iM=\", false, function() {\n    return [\n        useDialogContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs\n    ];\n})), \"bYhw/KL0iUSfvGN4c0UsGZCd7iM=\", false, function() {\n    return [\n        useDialogContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs\n    ];\n});\n_c2 = DialogTrigger;\nDialogTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"DialogPortal\";\nvar [PortalProvider, usePortalContext] = createDialogContext(PORTAL_NAME, {\n    forceMount: void 0\n});\nvar DialogPortal = (props)=>{\n    _s2();\n    const { __scopeDialog, forceMount, children, container } = props;\n    const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PortalProvider, {\n        scope: __scopeDialog,\n        forceMount,\n        children: react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child)=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_8__.Presence, {\n                present: forceMount || context.open,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_9__.Portal, {\n                    asChild: true,\n                    container,\n                    children: child\n                })\n            }))\n    });\n};\n_s2(DialogPortal, \"gb1df/SMEHYUh29U87o5E06m2nU=\", false, function() {\n    return [\n        useDialogContext\n    ];\n});\n_c3 = DialogPortal;\nDialogPortal.displayName = PORTAL_NAME;\nvar OVERLAY_NAME = \"DialogOverlay\";\nvar DialogOverlay = /*#__PURE__*/ _s3(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c4 = _s3((props, forwardedRef)=>{\n    _s3();\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_8__.Presence, {\n        present: forceMount || context.open,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DialogOverlayImpl, {\n            ...overlayProps,\n            ref: forwardedRef\n        })\n    }) : null;\n}, \"AXliLo+uLr/KDo6FX78QKyFnPa0=\", false, function() {\n    return [\n        usePortalContext,\n        useDialogContext\n    ];\n})), \"AXliLo+uLr/KDo6FX78QKyFnPa0=\", false, function() {\n    return [\n        usePortalContext,\n        useDialogContext\n    ];\n});\n_c5 = DialogOverlay;\nDialogOverlay.displayName = OVERLAY_NAME;\nvar DialogOverlayImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s4((props, forwardedRef)=>{\n    _s4();\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return(// Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n    // ie. when `Overlay` and `Content` are siblings\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_remove_scroll__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n        as: _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot,\n        allowPinchZoom: true,\n        shards: [\n            context.contentRef\n        ],\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__.Primitive.div, {\n            \"data-state\": getState(context.open),\n            ...overlayProps,\n            ref: forwardedRef,\n            style: {\n                pointerEvents: \"auto\",\n                ...overlayProps.style\n            }\n        })\n    }));\n}, \"gb1df/SMEHYUh29U87o5E06m2nU=\", false, function() {\n    return [\n        useDialogContext\n    ];\n}));\n_c6 = DialogOverlayImpl;\nvar CONTENT_NAME = \"DialogContent\";\nvar DialogContent = /*#__PURE__*/ _s5(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c7 = _s5((props, forwardedRef)=>{\n    _s5();\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_8__.Presence, {\n        present: forceMount || context.open,\n        children: context.modal ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DialogContentModal, {\n            ...contentProps,\n            ref: forwardedRef\n        }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DialogContentNonModal, {\n            ...contentProps,\n            ref: forwardedRef\n        })\n    });\n}, \"AXliLo+uLr/KDo6FX78QKyFnPa0=\", false, function() {\n    return [\n        usePortalContext,\n        useDialogContext\n    ];\n})), \"AXliLo+uLr/KDo6FX78QKyFnPa0=\", false, function() {\n    return [\n        usePortalContext,\n        useDialogContext\n    ];\n});\n_c8 = DialogContent;\nDialogContent.displayName = CONTENT_NAME;\nvar DialogContentModal = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s6((props, forwardedRef)=>{\n    _s6();\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, context.contentRef, contentRef);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const content = contentRef.current;\n        if (content) return (0,aria_hidden__WEBPACK_IMPORTED_MODULE_12__.hideOthers)(content);\n    }, []);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DialogContentImpl, {\n        ...props,\n        ref: composedRefs,\n        trapFocus: context.open,\n        disableOutsidePointerEvents: true,\n        onCloseAutoFocus: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onCloseAutoFocus, (event)=>{\n            var _context_triggerRef_current;\n            event.preventDefault();\n            (_context_triggerRef_current = context.triggerRef.current) === null || _context_triggerRef_current === void 0 ? void 0 : _context_triggerRef_current.focus();\n        }),\n        onPointerDownOutside: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onPointerDownOutside, (event)=>{\n            const originalEvent = event.detail.originalEvent;\n            const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n            const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n            if (isRightClick) event.preventDefault();\n        }),\n        onFocusOutside: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onFocusOutside, (event)=>event.preventDefault())\n    });\n}, \"z0QlyWdXD1MaBi1+3AtBr2MuboI=\", false, function() {\n    return [\n        useDialogContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs\n    ];\n}));\n_c9 = DialogContentModal;\nvar DialogContentNonModal = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s7((props, forwardedRef)=>{\n    _s7();\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const hasPointerDownOutsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DialogContentImpl, {\n        ...props,\n        ref: forwardedRef,\n        trapFocus: false,\n        disableOutsidePointerEvents: false,\n        onCloseAutoFocus: (event)=>{\n            var _props_onCloseAutoFocus;\n            (_props_onCloseAutoFocus = props.onCloseAutoFocus) === null || _props_onCloseAutoFocus === void 0 ? void 0 : _props_onCloseAutoFocus.call(props, event);\n            if (!event.defaultPrevented) {\n                var _context_triggerRef_current;\n                if (!hasInteractedOutsideRef.current) (_context_triggerRef_current = context.triggerRef.current) === null || _context_triggerRef_current === void 0 ? void 0 : _context_triggerRef_current.focus();\n                event.preventDefault();\n            }\n            hasInteractedOutsideRef.current = false;\n            hasPointerDownOutsideRef.current = false;\n        },\n        onInteractOutside: (event)=>{\n            var _props_onInteractOutside, _context_triggerRef_current;\n            (_props_onInteractOutside = props.onInteractOutside) === null || _props_onInteractOutside === void 0 ? void 0 : _props_onInteractOutside.call(props, event);\n            if (!event.defaultPrevented) {\n                hasInteractedOutsideRef.current = true;\n                if (event.detail.originalEvent.type === \"pointerdown\") {\n                    hasPointerDownOutsideRef.current = true;\n                }\n            }\n            const target = event.target;\n            const targetIsTrigger = (_context_triggerRef_current = context.triggerRef.current) === null || _context_triggerRef_current === void 0 ? void 0 : _context_triggerRef_current.contains(target);\n            if (targetIsTrigger) event.preventDefault();\n            if (event.detail.originalEvent.type === \"focusin\" && hasPointerDownOutsideRef.current) {\n                event.preventDefault();\n            }\n        }\n    });\n}, \"YrVQPDdDfWR20TF4ZFjbVSADLNA=\", false, function() {\n    return [\n        useDialogContext\n    ];\n}));\n_c10 = DialogContentNonModal;\nvar DialogContentImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s8((props, forwardedRef)=>{\n    _s8();\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, contentRef);\n    (0,_radix_ui_react_focus_guards__WEBPACK_IMPORTED_MODULE_13__.useFocusGuards)();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_focus_scope__WEBPACK_IMPORTED_MODULE_14__.FocusScope, {\n                asChild: true,\n                loop: true,\n                trapped: trapFocus,\n                onMountAutoFocus: onOpenAutoFocus,\n                onUnmountAutoFocus: onCloseAutoFocus,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_15__.DismissableLayer, {\n                    role: \"dialog\",\n                    id: context.contentId,\n                    \"aria-describedby\": context.descriptionId,\n                    \"aria-labelledby\": context.titleId,\n                    \"data-state\": getState(context.open),\n                    ...contentProps,\n                    ref: composedRefs,\n                    onDismiss: ()=>context.onOpenChange(false)\n                })\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n                children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TitleWarning, {\n                        titleId: context.titleId\n                    }),\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DescriptionWarning, {\n                        contentRef,\n                        descriptionId: context.descriptionId\n                    })\n                ]\n            })\n        ]\n    });\n}, \"wjdue5beIiufJExexORWgo6pOh0=\", false, function() {\n    return [\n        useDialogContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs,\n        _radix_ui_react_focus_guards__WEBPACK_IMPORTED_MODULE_13__.useFocusGuards\n    ];\n}));\n_c11 = DialogContentImpl;\nvar TITLE_NAME = \"DialogTitle\";\nvar DialogTitle = /*#__PURE__*/ _s9(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c12 = _s9((props, forwardedRef)=>{\n    _s9();\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__.Primitive.h2, {\n        id: context.titleId,\n        ...titleProps,\n        ref: forwardedRef\n    });\n}, \"gb1df/SMEHYUh29U87o5E06m2nU=\", false, function() {\n    return [\n        useDialogContext\n    ];\n})), \"gb1df/SMEHYUh29U87o5E06m2nU=\", false, function() {\n    return [\n        useDialogContext\n    ];\n});\n_c13 = DialogTitle;\nDialogTitle.displayName = TITLE_NAME;\nvar DESCRIPTION_NAME = \"DialogDescription\";\nvar DialogDescription = /*#__PURE__*/ _s10(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c14 = _s10((props, forwardedRef)=>{\n    _s10();\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__.Primitive.p, {\n        id: context.descriptionId,\n        ...descriptionProps,\n        ref: forwardedRef\n    });\n}, \"gb1df/SMEHYUh29U87o5E06m2nU=\", false, function() {\n    return [\n        useDialogContext\n    ];\n})), \"gb1df/SMEHYUh29U87o5E06m2nU=\", false, function() {\n    return [\n        useDialogContext\n    ];\n});\n_c15 = DialogDescription;\nDialogDescription.displayName = DESCRIPTION_NAME;\nvar CLOSE_NAME = \"DialogClose\";\nvar DialogClose = /*#__PURE__*/ _s11(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c16 = _s11((props, forwardedRef)=>{\n    _s11();\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_6__.Primitive.button, {\n        type: \"button\",\n        ...closeProps,\n        ref: forwardedRef,\n        onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__.composeEventHandlers)(props.onClick, ()=>context.onOpenChange(false))\n    });\n}, \"gb1df/SMEHYUh29U87o5E06m2nU=\", false, function() {\n    return [\n        useDialogContext\n    ];\n})), \"gb1df/SMEHYUh29U87o5E06m2nU=\", false, function() {\n    return [\n        useDialogContext\n    ];\n});\n_c17 = DialogClose;\nDialogClose.displayName = CLOSE_NAME;\nfunction getState(open) {\n    return open ? \"open\" : \"closed\";\n}\nvar TITLE_WARNING_NAME = \"DialogTitleWarning\";\nvar [WarningProvider, useWarningContext] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContext)(TITLE_WARNING_NAME, {\n    contentName: CONTENT_NAME,\n    titleName: TITLE_NAME,\n    docsSlug: \"dialog\"\n});\nvar TitleWarning = (param)=>{\n    let { titleId } = param;\n    _s12();\n    const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n    const MESSAGE = \"`\".concat(titleWarningContext.contentName, \"` requires a `\").concat(titleWarningContext.titleName, \"` for the component to be accessible for screen reader users.\\n\\nIf you want to hide the `\").concat(titleWarningContext.titleName, \"`, you can wrap it with our VisuallyHidden component.\\n\\nFor more information, see https://radix-ui.com/primitives/docs/components/\").concat(titleWarningContext.docsSlug);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (titleId) {\n            const hasTitle = document.getElementById(titleId);\n            if (!hasTitle) console.error(MESSAGE);\n        }\n    }, [\n        MESSAGE,\n        titleId\n    ]);\n    return null;\n};\n_s12(TitleWarning, \"GA0m2oeX5XXEaAUGtZZQs5ML670=\", false, function() {\n    return [\n        useWarningContext\n    ];\n});\n_c18 = TitleWarning;\nvar DESCRIPTION_WARNING_NAME = \"DialogDescriptionWarning\";\nvar DescriptionWarning = (param)=>{\n    let { contentRef, descriptionId } = param;\n    _s13();\n    const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n    const MESSAGE = \"Warning: Missing `Description` or `aria-describedby={undefined}` for {\".concat(descriptionWarningContext.contentName, \"}.\");\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        var _contentRef_current;\n        const describedById = (_contentRef_current = contentRef.current) === null || _contentRef_current === void 0 ? void 0 : _contentRef_current.getAttribute(\"aria-describedby\");\n        if (descriptionId && describedById) {\n            const hasDescription = document.getElementById(descriptionId);\n            if (!hasDescription) console.warn(MESSAGE);\n        }\n    }, [\n        MESSAGE,\n        contentRef,\n        descriptionId\n    ]);\n    return null;\n};\n_s13(DescriptionWarning, \"udowy/X+0YeBLGtDTT18KC58FH0=\", false, function() {\n    return [\n        useWarningContext\n    ];\n});\n_c19 = DescriptionWarning;\nvar Root = Dialog;\nvar Trigger = DialogTrigger;\nvar Portal = DialogPortal;\nvar Overlay = DialogOverlay;\nvar Content = DialogContent;\nvar Title = DialogTitle;\nvar Description = DialogDescription;\nvar Close = DialogClose;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19;\n$RefreshReg$(_c, \"Dialog\");\n$RefreshReg$(_c1, \"DialogTrigger$React.forwardRef\");\n$RefreshReg$(_c2, \"DialogTrigger\");\n$RefreshReg$(_c3, \"DialogPortal\");\n$RefreshReg$(_c4, \"DialogOverlay$React.forwardRef\");\n$RefreshReg$(_c5, \"DialogOverlay\");\n$RefreshReg$(_c6, \"DialogOverlayImpl\");\n$RefreshReg$(_c7, \"DialogContent$React.forwardRef\");\n$RefreshReg$(_c8, \"DialogContent\");\n$RefreshReg$(_c9, \"DialogContentModal\");\n$RefreshReg$(_c10, \"DialogContentNonModal\");\n$RefreshReg$(_c11, \"DialogContentImpl\");\n$RefreshReg$(_c12, \"DialogTitle$React.forwardRef\");\n$RefreshReg$(_c13, \"DialogTitle\");\n$RefreshReg$(_c14, \"DialogDescription$React.forwardRef\");\n$RefreshReg$(_c15, \"DialogDescription\");\n$RefreshReg$(_c16, \"DialogClose$React.forwardRef\");\n$RefreshReg$(_c17, \"DialogClose\");\n$RefreshReg$(_c18, \"TitleWarning\");\n$RefreshReg$(_c19, \"DescriptionWarning\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-dialog/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Branch: function() { return /* binding */ Branch; },\n/* harmony export */   DismissableLayer: function() { return /* binding */ DismissableLayer; },\n/* harmony export */   DismissableLayerBranch: function() { return /* binding */ DismissableLayerBranch; },\n/* harmony export */   Root: function() { return /* binding */ Root; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-use-escape-keydown */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Branch,DismissableLayer,DismissableLayerBranch,Root auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$();\n// packages/react/dismissable-layer/src/DismissableLayer.tsx\n\n\n\n\n\n\n\nvar DISMISSABLE_LAYER_NAME = \"DismissableLayer\";\nvar CONTEXT_UPDATE = \"dismissableLayer.update\";\nvar POINTER_DOWN_OUTSIDE = \"dismissableLayer.pointerDownOutside\";\nvar FOCUS_OUTSIDE = \"dismissableLayer.focusOutside\";\nvar originalBodyPointerEvents;\nvar DismissableLayerContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n    layers: /* @__PURE__ */ new Set(),\n    layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),\n    branches: /* @__PURE__ */ new Set()\n});\nvar DismissableLayer = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = _s((props, forwardedRef)=>{\n    var _globalThis;\n    _s();\n    const { disableOutsidePointerEvents = false, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, ...layerProps } = props;\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DismissableLayerContext);\n    const [node, setNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    var _node_ownerDocument;\n    const ownerDocument = (_node_ownerDocument = node === null || node === void 0 ? void 0 : node.ownerDocument) !== null && _node_ownerDocument !== void 0 ? _node_ownerDocument : (_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : _globalThis.document;\n    const [, force] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs)(forwardedRef, (node2)=>setNode(node2));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [\n        ...context.layersWithOutsidePointerEventsDisabled\n    ].slice(-1);\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n    const pointerDownOutside = usePointerDownOutside((event)=>{\n        const target = event.target;\n        const isPointerDownOnBranch = [\n            ...context.branches\n        ].some((branch)=>branch.contains(target));\n        if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n        onPointerDownOutside === null || onPointerDownOutside === void 0 ? void 0 : onPointerDownOutside(event);\n        onInteractOutside === null || onInteractOutside === void 0 ? void 0 : onInteractOutside(event);\n        if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();\n    }, ownerDocument);\n    const focusOutside = useFocusOutside((event)=>{\n        const target = event.target;\n        const isFocusInBranch = [\n            ...context.branches\n        ].some((branch)=>branch.contains(target));\n        if (isFocusInBranch) return;\n        onFocusOutside === null || onFocusOutside === void 0 ? void 0 : onFocusOutside(event);\n        onInteractOutside === null || onInteractOutside === void 0 ? void 0 : onInteractOutside(event);\n        if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();\n    }, ownerDocument);\n    (0,_radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__.useEscapeKeydown)((event)=>{\n        const isHighestLayer = index === context.layers.size - 1;\n        if (!isHighestLayer) return;\n        onEscapeKeyDown === null || onEscapeKeyDown === void 0 ? void 0 : onEscapeKeyDown(event);\n        if (!event.defaultPrevented && onDismiss) {\n            event.preventDefault();\n            onDismiss();\n        }\n    }, ownerDocument);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!node) return;\n        if (disableOutsidePointerEvents) {\n            if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n                originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n                ownerDocument.body.style.pointerEvents = \"none\";\n            }\n            context.layersWithOutsidePointerEventsDisabled.add(node);\n        }\n        context.layers.add(node);\n        dispatchUpdate();\n        return ()=>{\n            if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) {\n                ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n            }\n        };\n    }, [\n        node,\n        ownerDocument,\n        disableOutsidePointerEvents,\n        context\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        return ()=>{\n            if (!node) return;\n            context.layers.delete(node);\n            context.layersWithOutsidePointerEventsDisabled.delete(node);\n            dispatchUpdate();\n        };\n    }, [\n        node,\n        context\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const handleUpdate = ()=>force({});\n        document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n        return ()=>document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...layerProps,\n        ref: composedRefs,\n        style: {\n            pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? \"auto\" : \"none\" : void 0,\n            ...props.style\n        },\n        onFocusCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onFocusCapture, focusOutside.onFocusCapture),\n        onBlurCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onBlurCapture, focusOutside.onBlurCapture),\n        onPointerDownCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)\n    });\n}, \"Cv1Mp9NkKD7dAs9oYGx4QOBfHI8=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs,\n        usePointerDownOutside,\n        useFocusOutside,\n        _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__.useEscapeKeydown\n    ];\n})), \"Cv1Mp9NkKD7dAs9oYGx4QOBfHI8=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs,\n        usePointerDownOutside,\n        useFocusOutside,\n        _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__.useEscapeKeydown\n    ];\n});\n_c1 = DismissableLayer;\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\nvar BRANCH_NAME = \"DismissableLayerBranch\";\nvar DismissableLayerBranch = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c2 = _s1((props, forwardedRef)=>{\n    _s1();\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DismissableLayerContext);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs)(forwardedRef, ref);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const node = ref.current;\n        if (node) {\n            context.branches.add(node);\n            return ()=>{\n                context.branches.delete(node);\n            };\n        }\n    }, [\n        context.branches\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...props,\n        ref: composedRefs\n    });\n}, \"GBdJ+COKIgE+yfoxVYovlSfvJLw=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs\n    ];\n})), \"GBdJ+COKIgE+yfoxVYovlSfvJLw=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs\n    ];\n});\n_c3 = DismissableLayerBranch;\nDismissableLayerBranch.displayName = BRANCH_NAME;\nfunction usePointerDownOutside(onPointerDownOutside) {\n    let ownerDocument = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (()=>{\n        var _globalThis;\n        return (_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : _globalThis.document;\n    })();\n    _s2();\n    const handlePointerDownOutside = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef)(onPointerDownOutside);\n    const isPointerInsideReactTreeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const handleClickRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(()=>{});\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const handlePointerDown = (event)=>{\n            if (event.target && !isPointerInsideReactTreeRef.current) {\n                let handleAndDispatchPointerDownOutsideEvent2 = function() {\n                    handleAndDispatchCustomEvent(POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {\n                        discrete: true\n                    });\n                };\n                var handleAndDispatchPointerDownOutsideEvent = handleAndDispatchPointerDownOutsideEvent2;\n                const eventDetail = {\n                    originalEvent: event\n                };\n                if (event.pointerType === \"touch\") {\n                    ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n                    handleClickRef.current = handleAndDispatchPointerDownOutsideEvent2;\n                    ownerDocument.addEventListener(\"click\", handleClickRef.current, {\n                        once: true\n                    });\n                } else {\n                    handleAndDispatchPointerDownOutsideEvent2();\n                }\n            } else {\n                ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n            }\n            isPointerInsideReactTreeRef.current = false;\n        };\n        const timerId = window.setTimeout(()=>{\n            ownerDocument.addEventListener(\"pointerdown\", handlePointerDown);\n        }, 0);\n        return ()=>{\n            window.clearTimeout(timerId);\n            ownerDocument.removeEventListener(\"pointerdown\", handlePointerDown);\n            ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n        };\n    }, [\n        ownerDocument,\n        handlePointerDownOutside\n    ]);\n    return {\n        // ensures we check React component tree (not just DOM tree)\n        onPointerDownCapture: ()=>isPointerInsideReactTreeRef.current = true\n    };\n}\n_s2(usePointerDownOutside, \"M0Jqtgoae/27FfRizMxidmqs6b8=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef\n    ];\n});\nfunction useFocusOutside(onFocusOutside) {\n    let ownerDocument = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (()=>{\n        var _globalThis;\n        return (_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : _globalThis.document;\n    })();\n    _s3();\n    const handleFocusOutside = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef)(onFocusOutside);\n    const isFocusInsideReactTreeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const handleFocus = (event)=>{\n            if (event.target && !isFocusInsideReactTreeRef.current) {\n                const eventDetail = {\n                    originalEvent: event\n                };\n                handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n                    discrete: false\n                });\n            }\n        };\n        ownerDocument.addEventListener(\"focusin\", handleFocus);\n        return ()=>ownerDocument.removeEventListener(\"focusin\", handleFocus);\n    }, [\n        ownerDocument,\n        handleFocusOutside\n    ]);\n    return {\n        onFocusCapture: ()=>isFocusInsideReactTreeRef.current = true,\n        onBlurCapture: ()=>isFocusInsideReactTreeRef.current = false\n    };\n}\n_s3(useFocusOutside, \"IjUuEsgpHwQc3lZUTypKaC1ceUQ=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef\n    ];\n});\nfunction dispatchUpdate() {\n    const event = new CustomEvent(CONTEXT_UPDATE);\n    document.dispatchEvent(event);\n}\nfunction handleAndDispatchCustomEvent(name, handler, detail, param) {\n    let { discrete } = param;\n    const target = detail.originalEvent.target;\n    const event = new CustomEvent(name, {\n        bubbles: false,\n        cancelable: true,\n        detail\n    });\n    if (handler) target.addEventListener(name, handler, {\n        once: true\n    });\n    if (discrete) {\n        (0,_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.dispatchDiscreteCustomEvent)(target, event);\n    } else {\n        target.dispatchEvent(event);\n    }\n}\nvar Root = DismissableLayer;\nvar Branch = DismissableLayerBranch;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3;\n$RefreshReg$(_c, \"DismissableLayer$React.forwardRef\");\n$RefreshReg$(_c1, \"DismissableLayer\");\n$RefreshReg$(_c2, \"DismissableLayerBranch$React.forwardRef\");\n$RefreshReg$(_c3, \"DismissableLayerBranch\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-focus-guards/dist/index.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@radix-ui/react-focus-guards/dist/index.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusGuards: function() { return /* binding */ FocusGuards; },\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   useFocusGuards: function() { return /* binding */ useFocusGuards; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* __next_internal_client_entry_do_not_use__ FocusGuards,Root,useFocusGuards auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n// packages/react/focus-guards/src/FocusGuards.tsx\n\nvar count = 0;\nfunction FocusGuards(props) {\n    _s();\n    useFocusGuards();\n    return props.children;\n}\n_s(FocusGuards, \"x7paK38h0ScOLuskCuHf4USVPMM=\", false, function() {\n    return [\n        useFocusGuards\n    ];\n});\n_c = FocusGuards;\nfunction useFocusGuards() {\n    _s1();\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const edgeGuards = document.querySelectorAll(\"[data-radix-focus-guard]\");\n        var _edgeGuards_;\n        document.body.insertAdjacentElement(\"afterbegin\", (_edgeGuards_ = edgeGuards[0]) !== null && _edgeGuards_ !== void 0 ? _edgeGuards_ : createFocusGuard());\n        var _edgeGuards_1;\n        document.body.insertAdjacentElement(\"beforeend\", (_edgeGuards_1 = edgeGuards[1]) !== null && _edgeGuards_1 !== void 0 ? _edgeGuards_1 : createFocusGuard());\n        count++;\n        return ()=>{\n            if (count === 1) {\n                document.querySelectorAll(\"[data-radix-focus-guard]\").forEach((node)=>node.remove());\n            }\n            count--;\n        };\n    }, []);\n}\n_s1(useFocusGuards, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nfunction createFocusGuard() {\n    const element = document.createElement(\"span\");\n    element.setAttribute(\"data-radix-focus-guard\", \"\");\n    element.tabIndex = 0;\n    element.style.outline = \"none\";\n    element.style.opacity = \"0\";\n    element.style.position = \"fixed\";\n    element.style.pointerEvents = \"none\";\n    return element;\n}\nvar Root = FocusGuards;\n //# sourceMappingURL=index.mjs.map\nvar _c;\n$RefreshReg$(_c, \"FocusGuards\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtZm9jdXMtZ3VhcmRzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1QjtBQUd2QixJQUFJQyxRQUFRO0FBRVosU0FBU0MsWUFBWUMsS0FBQTs7SUFDbkJDO0lBQ0EsT0FBT0QsTUFBTUUsUUFBQTtBQUNmO0dBSFNIOztRQUNQRTs7O0tBRE9GO0FBU1QsU0FBU0U7O0lBQ0RKLDRDQUFBLENBQVU7UUFDZCxNQUFNTyxhQUFhQyxTQUFTQyxnQkFBQSxDQUFpQjtZQUNLRjtRQUFsREMsU0FBU0UsSUFBQSxDQUFLQyxxQkFBQSxDQUFzQixjQUFjSixDQUFBQSxlQUFBQSxVQUFBLENBQVcsRUFBQyxjQUFaQSwwQkFBQUEsZUFBaUJLO1lBQ2xCTDtRQUFqREMsU0FBU0UsSUFBQSxDQUFLQyxxQkFBQSxDQUFzQixhQUFhSixDQUFBQSxnQkFBQUEsVUFBQSxDQUFXLEVBQUMsY0FBWkEsMkJBQUFBLGdCQUFpQks7UUFDbEVYO1FBRUEsT0FBTztZQUNMLElBQUlBLFVBQVUsR0FBRztnQkFDZk8sU0FBU0MsZ0JBQUEsQ0FBaUIsNEJBQTRCSSxPQUFBLENBQVEsQ0FBQ0MsT0FBU0EsS0FBS0MsTUFBQTtZQUMvRTtZQUNBZDtRQUNGO0lBQ0YsR0FBRyxFQUFFO0FBQ1A7SUFkU0c7QUFnQlQsU0FBU1E7SUFDUCxNQUFNSSxVQUFVUixTQUFTUyxhQUFBLENBQWM7SUFDdkNELFFBQVFFLFlBQUEsQ0FBYSwwQkFBMEI7SUFDL0NGLFFBQVFHLFFBQUEsR0FBVztJQUNuQkgsUUFBUUksS0FBQSxDQUFNQyxPQUFBLEdBQVU7SUFDeEJMLFFBQVFJLEtBQUEsQ0FBTUUsT0FBQSxHQUFVO0lBQ3hCTixRQUFRSSxLQUFBLENBQU1HLFFBQUEsR0FBVztJQUN6QlAsUUFBUUksS0FBQSxDQUFNSSxhQUFBLEdBQWdCO0lBQzlCLE9BQU9SO0FBQ1Q7QUFFQSxJQUFNUyxPQUFPdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9Gb2N1c0d1YXJkcy50c3g/ZDU4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbi8qKiBOdW1iZXIgb2YgY29tcG9uZW50cyB3aGljaCBoYXZlIHJlcXVlc3RlZCBpbnRlcmVzdCB0byBoYXZlIGZvY3VzIGd1YXJkcyAqL1xubGV0IGNvdW50ID0gMDtcblxuZnVuY3Rpb24gRm9jdXNHdWFyZHMocHJvcHM6IGFueSkge1xuICB1c2VGb2N1c0d1YXJkcygpO1xuICByZXR1cm4gcHJvcHMuY2hpbGRyZW47XG59XG5cbi8qKlxuICogSW5qZWN0cyBhIHBhaXIgb2YgZm9jdXMgZ3VhcmRzIGF0IHRoZSBlZGdlcyBvZiB0aGUgd2hvbGUgRE9NIHRyZWVcbiAqIHRvIGVuc3VyZSBgZm9jdXNpbmAgJiBgZm9jdXNvdXRgIGV2ZW50cyBjYW4gYmUgY2F1Z2h0IGNvbnNpc3RlbnRseS5cbiAqL1xuZnVuY3Rpb24gdXNlRm9jdXNHdWFyZHMoKSB7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgZWRnZUd1YXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXJhZGl4LWZvY3VzLWd1YXJkXScpO1xuICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCdhZnRlcmJlZ2luJywgZWRnZUd1YXJkc1swXSA/PyBjcmVhdGVGb2N1c0d1YXJkKCkpO1xuICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCdiZWZvcmVlbmQnLCBlZGdlR3VhcmRzWzFdID8/IGNyZWF0ZUZvY3VzR3VhcmQoKSk7XG4gICAgY291bnQrKztcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAoY291bnQgPT09IDEpIHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtcmFkaXgtZm9jdXMtZ3VhcmRdJykuZm9yRWFjaCgobm9kZSkgPT4gbm9kZS5yZW1vdmUoKSk7XG4gICAgICB9XG4gICAgICBjb3VudC0tO1xuICAgIH07XG4gIH0sIFtdKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlRm9jdXNHdWFyZCgpIHtcbiAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtcmFkaXgtZm9jdXMtZ3VhcmQnLCAnJyk7XG4gIGVsZW1lbnQudGFiSW5kZXggPSAwO1xuICBlbGVtZW50LnN0eWxlLm91dGxpbmUgPSAnbm9uZSc7XG4gIGVsZW1lbnQuc3R5bGUub3BhY2l0eSA9ICcwJztcbiAgZWxlbWVudC5zdHlsZS5wb3NpdGlvbiA9ICdmaXhlZCc7XG4gIGVsZW1lbnQuc3R5bGUucG9pbnRlckV2ZW50cyA9ICdub25lJztcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbmNvbnN0IFJvb3QgPSBGb2N1c0d1YXJkcztcblxuZXhwb3J0IHtcbiAgRm9jdXNHdWFyZHMsXG4gIC8vXG4gIFJvb3QsXG4gIC8vXG4gIHVzZUZvY3VzR3VhcmRzLFxufTtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsImNvdW50IiwiRm9jdXNHdWFyZHMiLCJwcm9wcyIsInVzZUZvY3VzR3VhcmRzIiwiY2hpbGRyZW4iLCJ1c2VFZmZlY3QiLCJlZGdlR3VhcmRzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYm9keSIsImluc2VydEFkamFjZW50RWxlbWVudCIsImNyZWF0ZUZvY3VzR3VhcmQiLCJmb3JFYWNoIiwibm9kZSIsInJlbW92ZSIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwidGFiSW5kZXgiLCJzdHlsZSIsIm91dGxpbmUiLCJvcGFjaXR5IiwicG9zaXRpb24iLCJwb2ludGVyRXZlbnRzIiwiUm9vdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-focus-guards/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-focus-scope/dist/index.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@radix-ui/react-focus-scope/dist/index.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusScope: function() { return /* binding */ FocusScope; },\n/* harmony export */   Root: function() { return /* binding */ Root; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ FocusScope,Root auto */ var _s = $RefreshSig$();\n// packages/react/focus-scope/src/FocusScope.tsx\n\n\n\n\n\nvar AUTOFOCUS_ON_MOUNT = \"focusScope.autoFocusOnMount\";\nvar AUTOFOCUS_ON_UNMOUNT = \"focusScope.autoFocusOnUnmount\";\nvar EVENT_OPTIONS = {\n    bubbles: false,\n    cancelable: true\n};\nvar FOCUS_SCOPE_NAME = \"FocusScope\";\nvar FocusScope = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = _s((props, forwardedRef)=>{\n    _s();\n    const { loop = false, trapped = false, onMountAutoFocus: onMountAutoFocusProp, onUnmountAutoFocus: onUnmountAutoFocusProp, ...scopeProps } = props;\n    const [container, setContainer] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const onMountAutoFocus = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef)(onMountAutoFocusProp);\n    const onUnmountAutoFocus = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef)(onUnmountAutoFocusProp);\n    const lastFocusedElementRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, (node)=>setContainer(node));\n    const focusScope = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n        paused: false,\n        pause () {\n            this.paused = true;\n        },\n        resume () {\n            this.paused = false;\n        }\n    }).current;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (trapped) {\n            let handleFocusIn2 = function(event) {\n                if (focusScope.paused || !container) return;\n                const target = event.target;\n                if (container.contains(target)) {\n                    lastFocusedElementRef.current = target;\n                } else {\n                    focus(lastFocusedElementRef.current, {\n                        select: true\n                    });\n                }\n            }, handleFocusOut2 = function(event) {\n                if (focusScope.paused || !container) return;\n                const relatedTarget = event.relatedTarget;\n                if (relatedTarget === null) return;\n                if (!container.contains(relatedTarget)) {\n                    focus(lastFocusedElementRef.current, {\n                        select: true\n                    });\n                }\n            }, handleMutations2 = function(mutations) {\n                const focusedElement = document.activeElement;\n                if (focusedElement !== document.body) return;\n                for (const mutation of mutations){\n                    if (mutation.removedNodes.length > 0) focus(container);\n                }\n            };\n            var handleFocusIn = handleFocusIn2, handleFocusOut = handleFocusOut2, handleMutations = handleMutations2;\n            document.addEventListener(\"focusin\", handleFocusIn2);\n            document.addEventListener(\"focusout\", handleFocusOut2);\n            const mutationObserver = new MutationObserver(handleMutations2);\n            if (container) mutationObserver.observe(container, {\n                childList: true,\n                subtree: true\n            });\n            return ()=>{\n                document.removeEventListener(\"focusin\", handleFocusIn2);\n                document.removeEventListener(\"focusout\", handleFocusOut2);\n                mutationObserver.disconnect();\n            };\n        }\n    }, [\n        trapped,\n        container,\n        focusScope.paused\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (container) {\n            focusScopesStack.add(focusScope);\n            const previouslyFocusedElement = document.activeElement;\n            const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n            if (!hasFocusedCandidate) {\n                const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n                container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n                container.dispatchEvent(mountEvent);\n                if (!mountEvent.defaultPrevented) {\n                    focusFirst(removeLinks(getTabbableCandidates(container)), {\n                        select: true\n                    });\n                    if (document.activeElement === previouslyFocusedElement) {\n                        focus(container);\n                    }\n                }\n            }\n            return ()=>{\n                container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n                setTimeout(()=>{\n                    const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n                    container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n                    container.dispatchEvent(unmountEvent);\n                    if (!unmountEvent.defaultPrevented) {\n                        focus(previouslyFocusedElement !== null && previouslyFocusedElement !== void 0 ? previouslyFocusedElement : document.body, {\n                            select: true\n                        });\n                    }\n                    container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n                    focusScopesStack.remove(focusScope);\n                }, 0);\n            };\n        }\n    }, [\n        container,\n        onMountAutoFocus,\n        onUnmountAutoFocus,\n        focusScope\n    ]);\n    const handleKeyDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        if (!loop && !trapped) return;\n        if (focusScope.paused) return;\n        const isTabKey = event.key === \"Tab\" && !event.altKey && !event.ctrlKey && !event.metaKey;\n        const focusedElement = document.activeElement;\n        if (isTabKey && focusedElement) {\n            const container2 = event.currentTarget;\n            const [first, last] = getTabbableEdges(container2);\n            const hasTabbableElementsInside = first && last;\n            if (!hasTabbableElementsInside) {\n                if (focusedElement === container2) event.preventDefault();\n            } else {\n                if (!event.shiftKey && focusedElement === last) {\n                    event.preventDefault();\n                    if (loop) focus(first, {\n                        select: true\n                    });\n                } else if (event.shiftKey && focusedElement === first) {\n                    event.preventDefault();\n                    if (loop) focus(last, {\n                        select: true\n                    });\n                }\n            }\n        }\n    }, [\n        loop,\n        trapped,\n        focusScope.paused\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        tabIndex: -1,\n        ...scopeProps,\n        ref: composedRefs,\n        onKeyDown: handleKeyDown\n    });\n}, \"l+MhPHbysTuaMVA0Nuk5lsharoc=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n})), \"l+MhPHbysTuaMVA0Nuk5lsharoc=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_2__.useCallbackRef,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n});\n_c1 = FocusScope;\nFocusScope.displayName = FOCUS_SCOPE_NAME;\nfunction focusFirst(candidates) {\n    let { select = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const previouslyFocusedElement = document.activeElement;\n    for (const candidate of candidates){\n        focus(candidate, {\n            select\n        });\n        if (document.activeElement !== previouslyFocusedElement) return;\n    }\n}\nfunction getTabbableEdges(container) {\n    const candidates = getTabbableCandidates(container);\n    const first = findVisible(candidates, container);\n    const last = findVisible(candidates.reverse(), container);\n    return [\n        first,\n        last\n    ];\n}\nfunction getTabbableCandidates(container) {\n    const nodes = [];\n    const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n        acceptNode: (node)=>{\n            const isHiddenInput = node.tagName === \"INPUT\" && node.type === \"hidden\";\n            if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n            return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n        }\n    });\n    while(walker.nextNode())nodes.push(walker.currentNode);\n    return nodes;\n}\nfunction findVisible(elements, container) {\n    for (const element of elements){\n        if (!isHidden(element, {\n            upTo: container\n        })) return element;\n    }\n}\nfunction isHidden(node, param) {\n    let { upTo } = param;\n    if (getComputedStyle(node).visibility === \"hidden\") return true;\n    while(node){\n        if (upTo !== void 0 && node === upTo) return false;\n        if (getComputedStyle(node).display === \"none\") return true;\n        node = node.parentElement;\n    }\n    return false;\n}\nfunction isSelectableInput(element) {\n    return element instanceof HTMLInputElement && \"select\" in element;\n}\nfunction focus(element) {\n    let { select = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    if (element && element.focus) {\n        const previouslyFocusedElement = document.activeElement;\n        element.focus({\n            preventScroll: true\n        });\n        if (element !== previouslyFocusedElement && isSelectableInput(element) && select) element.select();\n    }\n}\nvar focusScopesStack = createFocusScopesStack();\nfunction createFocusScopesStack() {\n    let stack = [];\n    return {\n        add (focusScope) {\n            const activeFocusScope = stack[0];\n            if (focusScope !== activeFocusScope) {\n                activeFocusScope === null || activeFocusScope === void 0 ? void 0 : activeFocusScope.pause();\n            }\n            stack = arrayRemove(stack, focusScope);\n            stack.unshift(focusScope);\n        },\n        remove (focusScope) {\n            var _stack_;\n            stack = arrayRemove(stack, focusScope);\n            (_stack_ = stack[0]) === null || _stack_ === void 0 ? void 0 : _stack_.resume();\n        }\n    };\n}\nfunction arrayRemove(array, item) {\n    const updatedArray = [\n        ...array\n    ];\n    const index = updatedArray.indexOf(item);\n    if (index !== -1) {\n        updatedArray.splice(index, 1);\n    }\n    return updatedArray;\n}\nfunction removeLinks(items) {\n    return items.filter((item)=>item.tagName !== \"A\");\n}\nvar Root = FocusScope;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1;\n$RefreshReg$(_c, \"FocusScope$React.forwardRef\");\n$RefreshReg$(_c1, \"FocusScope\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-focus-scope/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-id/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@radix-ui/react-id/dist/index.mjs ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useId: function() { return /* binding */ useId; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n// packages/react/id/src/id.tsx\n\n\nvar useReactId = /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))[\"useId\".toString()] || (() => void 0);\nvar count = 0;\nfunction useId(deterministicId) {\n  const [id, setId] = react__WEBPACK_IMPORTED_MODULE_0__.useState(useReactId());\n  (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : \"\");\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtaWQvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQytCO0FBQ3FDO0FBQ3BFLGlCQUFpQix5TEFBSztBQUN0QjtBQUNBO0FBQ0Esc0JBQXNCLDJDQUFjO0FBQ3BDLEVBQUUsa0ZBQWU7QUFDakI7QUFDQSxHQUFHO0FBQ0gsMkNBQTJDLEdBQUc7QUFDOUM7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtaWQvZGlzdC9pbmRleC5tanM/YThmZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC9pZC9zcmMvaWQudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUxheW91dEVmZmVjdCB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtdXNlLWxheW91dC1lZmZlY3RcIjtcbnZhciB1c2VSZWFjdElkID0gUmVhY3RbXCJ1c2VJZFwiLnRvU3RyaW5nKCldIHx8ICgoKSA9PiB2b2lkIDApO1xudmFyIGNvdW50ID0gMDtcbmZ1bmN0aW9uIHVzZUlkKGRldGVybWluaXN0aWNJZCkge1xuICBjb25zdCBbaWQsIHNldElkXSA9IFJlYWN0LnVzZVN0YXRlKHVzZVJlYWN0SWQoKSk7XG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFkZXRlcm1pbmlzdGljSWQpIHNldElkKChyZWFjdElkKSA9PiByZWFjdElkID8/IFN0cmluZyhjb3VudCsrKSk7XG4gIH0sIFtkZXRlcm1pbmlzdGljSWRdKTtcbiAgcmV0dXJuIGRldGVybWluaXN0aWNJZCB8fCAoaWQgPyBgcmFkaXgtJHtpZH1gIDogXCJcIik7XG59XG5leHBvcnQge1xuICB1c2VJZFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-id/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-popover/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@radix-ui/react-popover/dist/index.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Anchor: function() { return /* binding */ Anchor2; },\n/* harmony export */   Arrow: function() { return /* binding */ Arrow2; },\n/* harmony export */   Close: function() { return /* binding */ Close; },\n/* harmony export */   Content: function() { return /* binding */ Content2; },\n/* harmony export */   Popover: function() { return /* binding */ Popover; },\n/* harmony export */   PopoverAnchor: function() { return /* binding */ PopoverAnchor; },\n/* harmony export */   PopoverArrow: function() { return /* binding */ PopoverArrow; },\n/* harmony export */   PopoverClose: function() { return /* binding */ PopoverClose; },\n/* harmony export */   PopoverContent: function() { return /* binding */ PopoverContent; },\n/* harmony export */   PopoverPortal: function() { return /* binding */ PopoverPortal; },\n/* harmony export */   PopoverTrigger: function() { return /* binding */ PopoverTrigger; },\n/* harmony export */   Portal: function() { return /* binding */ Portal; },\n/* harmony export */   Root: function() { return /* binding */ Root2; },\n/* harmony export */   Trigger: function() { return /* binding */ Trigger; },\n/* harmony export */   createPopoverScope: function() { return /* binding */ createPopoverScope; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @radix-ui/react-dismissable-layer */ \"(app-pages-browser)/./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_focus_guards__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @radix-ui/react-focus-guards */ \"(app-pages-browser)/./node_modules/@radix-ui/react-focus-guards/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_focus_scope__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @radix-ui/react-focus-scope */ \"(app-pages-browser)/./node_modules/@radix-ui/react-focus-scope/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/react-id */ \"(app-pages-browser)/./node_modules/@radix-ui/react-id/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-popper */ \"(app-pages-browser)/./node_modules/@radix-ui/react-popper/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-portal */ \"(app-pages-browser)/./node_modules/@radix-ui/react-portal/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @radix-ui/react-presence */ \"(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-use-controllable-state */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs\");\n/* harmony import */ var aria_hidden__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! aria-hidden */ \"(app-pages-browser)/./node_modules/aria-hidden/dist/es2015/index.js\");\n/* harmony import */ var react_remove_scroll__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react-remove-scroll */ \"(app-pages-browser)/./node_modules/react-remove-scroll/dist/es2015/Combination.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Anchor,Arrow,Close,Content,Popover,PopoverAnchor,PopoverArrow,PopoverClose,PopoverContent,PopoverPortal,PopoverTrigger,Portal,Root,Trigger,createPopoverScope auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$();\n// packages/react/popover/src/Popover.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar POPOVER_NAME = \"Popover\";\nvar [createPopoverContext, createPopoverScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContextScope)(POPOVER_NAME, [\n    _radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.createPopperScope\n]);\nvar usePopperScope = (0,_radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.createPopperScope)();\nvar [PopoverProvider, usePopoverContext] = createPopoverContext(POPOVER_NAME);\nvar Popover = (props)=>{\n    _s();\n    const { __scopePopover, children, open: openProp, defaultOpen, onOpenChange, modal = false } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    const triggerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const [hasCustomAnchor, setHasCustomAnchor] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [open = false, setOpen] = (0,_radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_4__.useControllableState)({\n        prop: openProp,\n        defaultProp: defaultOpen,\n        onChange: onOpenChange\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.Root, {\n        ...popperScope,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PopoverProvider, {\n            scope: __scopePopover,\n            contentId: (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_5__.useId)(),\n            triggerRef,\n            open,\n            onOpenChange: setOpen,\n            onOpenToggle: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>setOpen((prevOpen)=>!prevOpen), [\n                setOpen\n            ]),\n            hasCustomAnchor,\n            onCustomAnchorAdd: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>setHasCustomAnchor(true), []),\n            onCustomAnchorRemove: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>setHasCustomAnchor(false), []),\n            modal,\n            children\n        })\n    });\n};\n_s(Popover, \"WeIgGLOlyHy1kx6gym8Oz8ngl+0=\", false, function() {\n    return [\n        usePopperScope,\n        _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_4__.useControllableState,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_5__.useId\n    ];\n});\n_c = Popover;\nPopover.displayName = POPOVER_NAME;\nvar ANCHOR_NAME = \"PopoverAnchor\";\nvar PopoverAnchor = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c1 = _s1((props, forwardedRef)=>{\n    _s1();\n    const { __scopePopover, ...anchorProps } = props;\n    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        onCustomAnchorAdd();\n        return ()=>onCustomAnchorRemove();\n    }, [\n        onCustomAnchorAdd,\n        onCustomAnchorRemove\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.Anchor, {\n        ...popperScope,\n        ...anchorProps,\n        ref: forwardedRef\n    });\n}, \"yjbVQpHBunJMxYzojxDKHzLjDyc=\", false, function() {\n    return [\n        usePopoverContext,\n        usePopperScope\n    ];\n})), \"yjbVQpHBunJMxYzojxDKHzLjDyc=\", false, function() {\n    return [\n        usePopoverContext,\n        usePopperScope\n    ];\n});\n_c2 = PopoverAnchor;\nPopoverAnchor.displayName = ANCHOR_NAME;\nvar TRIGGER_NAME = \"PopoverTrigger\";\nvar PopoverTrigger = /*#__PURE__*/ _s2(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c3 = _s2((props, forwardedRef)=>{\n    _s2();\n    const { __scopePopover, ...triggerProps } = props;\n    const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const composedTriggerRef = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__.useComposedRefs)(forwardedRef, context.triggerRef);\n    const trigger = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.button, {\n        type: \"button\",\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": context.open,\n        \"aria-controls\": context.contentId,\n        \"data-state\": getState(context.open),\n        ...triggerProps,\n        ref: composedTriggerRef,\n        onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__.composeEventHandlers)(props.onClick, context.onOpenToggle)\n    });\n    return context.hasCustomAnchor ? trigger : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.Anchor, {\n        asChild: true,\n        ...popperScope,\n        children: trigger\n    });\n}, \"K4iZob5lbcsBXd+j7GfYCXS7ZOA=\", false, function() {\n    return [\n        usePopoverContext,\n        usePopperScope,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__.useComposedRefs\n    ];\n})), \"K4iZob5lbcsBXd+j7GfYCXS7ZOA=\", false, function() {\n    return [\n        usePopoverContext,\n        usePopperScope,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__.useComposedRefs\n    ];\n});\n_c4 = PopoverTrigger;\nPopoverTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"PopoverPortal\";\nvar [PortalProvider, usePortalContext] = createPopoverContext(PORTAL_NAME, {\n    forceMount: void 0\n});\nvar PopoverPortal = (props)=>{\n    _s3();\n    const { __scopePopover, forceMount, children, container } = props;\n    const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PortalProvider, {\n        scope: __scopePopover,\n        forceMount,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_9__.Presence, {\n            present: forceMount || context.open,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_10__.Portal, {\n                asChild: true,\n                container,\n                children\n            })\n        })\n    });\n};\n_s3(PopoverPortal, \"9et25l8VaLcpuQmtUVmALeCWc4M=\", false, function() {\n    return [\n        usePopoverContext\n    ];\n});\n_c5 = PopoverPortal;\nPopoverPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"PopoverContent\";\nvar PopoverContent = /*#__PURE__*/ _s4(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c6 = _s4((props, forwardedRef)=>{\n    _s4();\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_9__.Presence, {\n        present: forceMount || context.open,\n        children: context.modal ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PopoverContentModal, {\n            ...contentProps,\n            ref: forwardedRef\n        }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PopoverContentNonModal, {\n            ...contentProps,\n            ref: forwardedRef\n        })\n    });\n}, \"qw4xs0oQBSjmc3ITW/cjB3kNvpc=\", false, function() {\n    return [\n        usePortalContext,\n        usePopoverContext\n    ];\n})), \"qw4xs0oQBSjmc3ITW/cjB3kNvpc=\", false, function() {\n    return [\n        usePortalContext,\n        usePopoverContext\n    ];\n});\n_c7 = PopoverContent;\nPopoverContent.displayName = CONTENT_NAME;\nvar PopoverContentModal = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s5((props, forwardedRef)=>{\n    _s5();\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const contentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__.useComposedRefs)(forwardedRef, contentRef);\n    const isRightClickOutsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const content = contentRef.current;\n        if (content) return (0,aria_hidden__WEBPACK_IMPORTED_MODULE_11__.hideOthers)(content);\n    }, []);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_remove_scroll__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n        as: _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_13__.Slot,\n        allowPinchZoom: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PopoverContentImpl, {\n            ...props,\n            ref: composedRefs,\n            trapFocus: context.open,\n            disableOutsidePointerEvents: true,\n            onCloseAutoFocus: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__.composeEventHandlers)(props.onCloseAutoFocus, (event)=>{\n                var _context_triggerRef_current;\n                event.preventDefault();\n                if (!isRightClickOutsideRef.current) (_context_triggerRef_current = context.triggerRef.current) === null || _context_triggerRef_current === void 0 ? void 0 : _context_triggerRef_current.focus();\n            }),\n            onPointerDownOutside: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__.composeEventHandlers)(props.onPointerDownOutside, (event)=>{\n                const originalEvent = event.detail.originalEvent;\n                const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n                const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n                isRightClickOutsideRef.current = isRightClick;\n            }, {\n                checkForDefaultPrevented: false\n            }),\n            onFocusOutside: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__.composeEventHandlers)(props.onFocusOutside, (event)=>event.preventDefault(), {\n                checkForDefaultPrevented: false\n            })\n        })\n    });\n}, \"FECBP+0gqHSMxi3FmVm3wtSLePU=\", false, function() {\n    return [\n        usePopoverContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__.useComposedRefs\n    ];\n}));\n_c8 = PopoverContentModal;\nvar PopoverContentNonModal = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s6((props, forwardedRef)=>{\n    _s6();\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const hasInteractedOutsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const hasPointerDownOutsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PopoverContentImpl, {\n        ...props,\n        ref: forwardedRef,\n        trapFocus: false,\n        disableOutsidePointerEvents: false,\n        onCloseAutoFocus: (event)=>{\n            var _props_onCloseAutoFocus;\n            (_props_onCloseAutoFocus = props.onCloseAutoFocus) === null || _props_onCloseAutoFocus === void 0 ? void 0 : _props_onCloseAutoFocus.call(props, event);\n            if (!event.defaultPrevented) {\n                var _context_triggerRef_current;\n                if (!hasInteractedOutsideRef.current) (_context_triggerRef_current = context.triggerRef.current) === null || _context_triggerRef_current === void 0 ? void 0 : _context_triggerRef_current.focus();\n                event.preventDefault();\n            }\n            hasInteractedOutsideRef.current = false;\n            hasPointerDownOutsideRef.current = false;\n        },\n        onInteractOutside: (event)=>{\n            var _props_onInteractOutside, _context_triggerRef_current;\n            (_props_onInteractOutside = props.onInteractOutside) === null || _props_onInteractOutside === void 0 ? void 0 : _props_onInteractOutside.call(props, event);\n            if (!event.defaultPrevented) {\n                hasInteractedOutsideRef.current = true;\n                if (event.detail.originalEvent.type === \"pointerdown\") {\n                    hasPointerDownOutsideRef.current = true;\n                }\n            }\n            const target = event.target;\n            const targetIsTrigger = (_context_triggerRef_current = context.triggerRef.current) === null || _context_triggerRef_current === void 0 ? void 0 : _context_triggerRef_current.contains(target);\n            if (targetIsTrigger) event.preventDefault();\n            if (event.detail.originalEvent.type === \"focusin\" && hasPointerDownOutsideRef.current) {\n                event.preventDefault();\n            }\n        }\n    });\n}, \"FrFbVQaru0Wx8/HAeaTJNSNETpc=\", false, function() {\n    return [\n        usePopoverContext\n    ];\n}));\n_c9 = PopoverContentNonModal;\nvar PopoverContentImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s7((props, forwardedRef)=>{\n    _s7();\n    const { __scopePopover, trapFocus, onOpenAutoFocus, onCloseAutoFocus, disableOutsidePointerEvents, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    (0,_radix_ui_react_focus_guards__WEBPACK_IMPORTED_MODULE_14__.useFocusGuards)();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_focus_scope__WEBPACK_IMPORTED_MODULE_15__.FocusScope, {\n        asChild: true,\n        loop: true,\n        trapped: trapFocus,\n        onMountAutoFocus: onOpenAutoFocus,\n        onUnmountAutoFocus: onCloseAutoFocus,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_16__.DismissableLayer, {\n            asChild: true,\n            disableOutsidePointerEvents,\n            onInteractOutside,\n            onEscapeKeyDown,\n            onPointerDownOutside,\n            onFocusOutside,\n            onDismiss: ()=>context.onOpenChange(false),\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.Content, {\n                \"data-state\": getState(context.open),\n                role: \"dialog\",\n                id: context.contentId,\n                ...popperScope,\n                ...contentProps,\n                ref: forwardedRef,\n                style: {\n                    ...contentProps.style,\n                    // re-namespace exposed content custom properties\n                    ...{\n                        \"--radix-popover-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n                        \"--radix-popover-content-available-width\": \"var(--radix-popper-available-width)\",\n                        \"--radix-popover-content-available-height\": \"var(--radix-popper-available-height)\",\n                        \"--radix-popover-trigger-width\": \"var(--radix-popper-anchor-width)\",\n                        \"--radix-popover-trigger-height\": \"var(--radix-popper-anchor-height)\"\n                    }\n                }\n            })\n        })\n    });\n}, \"oCz0LJi5iYStV2MxUvBBGfchLDc=\", false, function() {\n    return [\n        usePopoverContext,\n        usePopperScope,\n        _radix_ui_react_focus_guards__WEBPACK_IMPORTED_MODULE_14__.useFocusGuards\n    ];\n}));\n_c10 = PopoverContentImpl;\nvar CLOSE_NAME = \"PopoverClose\";\nvar PopoverClose = /*#__PURE__*/ _s8(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c11 = _s8((props, forwardedRef)=>{\n    _s8();\n    const { __scopePopover, ...closeProps } = props;\n    const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.button, {\n        type: \"button\",\n        ...closeProps,\n        ref: forwardedRef,\n        onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__.composeEventHandlers)(props.onClick, ()=>context.onOpenChange(false))\n    });\n}, \"9et25l8VaLcpuQmtUVmALeCWc4M=\", false, function() {\n    return [\n        usePopoverContext\n    ];\n})), \"9et25l8VaLcpuQmtUVmALeCWc4M=\", false, function() {\n    return [\n        usePopoverContext\n    ];\n});\n_c12 = PopoverClose;\nPopoverClose.displayName = CLOSE_NAME;\nvar ARROW_NAME = \"PopoverArrow\";\nvar PopoverArrow = /*#__PURE__*/ _s9(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c13 = _s9((props, forwardedRef)=>{\n    _s9();\n    const { __scopePopover, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.Arrow, {\n        ...popperScope,\n        ...arrowProps,\n        ref: forwardedRef\n    });\n}, \"8WgpbJ/Lqh/12BZO7Eu0CP/9cMI=\", false, function() {\n    return [\n        usePopperScope\n    ];\n})), \"8WgpbJ/Lqh/12BZO7Eu0CP/9cMI=\", false, function() {\n    return [\n        usePopperScope\n    ];\n});\n_c14 = PopoverArrow;\nPopoverArrow.displayName = ARROW_NAME;\nfunction getState(open) {\n    return open ? \"open\" : \"closed\";\n}\nvar Root2 = Popover;\nvar Anchor2 = PopoverAnchor;\nvar Trigger = PopoverTrigger;\nvar Portal = PopoverPortal;\nvar Content2 = PopoverContent;\nvar Close = PopoverClose;\nvar Arrow2 = PopoverArrow;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"Popover\");\n$RefreshReg$(_c1, \"PopoverAnchor$React.forwardRef\");\n$RefreshReg$(_c2, \"PopoverAnchor\");\n$RefreshReg$(_c3, \"PopoverTrigger$React.forwardRef\");\n$RefreshReg$(_c4, \"PopoverTrigger\");\n$RefreshReg$(_c5, \"PopoverPortal\");\n$RefreshReg$(_c6, \"PopoverContent$React.forwardRef\");\n$RefreshReg$(_c7, \"PopoverContent\");\n$RefreshReg$(_c8, \"PopoverContentModal\");\n$RefreshReg$(_c9, \"PopoverContentNonModal\");\n$RefreshReg$(_c10, \"PopoverContentImpl\");\n$RefreshReg$(_c11, \"PopoverClose$React.forwardRef\");\n$RefreshReg$(_c12, \"PopoverClose\");\n$RefreshReg$(_c13, \"PopoverArrow$React.forwardRef\");\n$RefreshReg$(_c14, \"PopoverArrow\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-popover/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-popper/dist/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@radix-ui/react-popper/dist/index.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALIGN_OPTIONS: function() { return /* binding */ ALIGN_OPTIONS; },\n/* harmony export */   Anchor: function() { return /* binding */ Anchor; },\n/* harmony export */   Arrow: function() { return /* binding */ Arrow; },\n/* harmony export */   Content: function() { return /* binding */ Content; },\n/* harmony export */   Popper: function() { return /* binding */ Popper; },\n/* harmony export */   PopperAnchor: function() { return /* binding */ PopperAnchor; },\n/* harmony export */   PopperArrow: function() { return /* binding */ PopperArrow; },\n/* harmony export */   PopperContent: function() { return /* binding */ PopperContent; },\n/* harmony export */   Root: function() { return /* binding */ Root2; },\n/* harmony export */   SIDE_OPTIONS: function() { return /* binding */ SIDE_OPTIONS; },\n/* harmony export */   createPopperScope: function() { return /* binding */ createPopperScope; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @floating-ui/react-dom */ \"(app-pages-browser)/./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs\");\n/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @floating-ui/react-dom */ \"(app-pages-browser)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\");\n/* harmony import */ var _radix_ui_react_arrow__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-arrow */ \"(app-pages-browser)/./node_modules/@radix-ui/react-arrow/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-popper/node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_size__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/react-use-size */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-size/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ ALIGN_OPTIONS,Anchor,Arrow,Content,Popper,PopperAnchor,PopperArrow,PopperContent,Root,SIDE_OPTIONS,createPopperScope auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$();\n// packages/react/popper/src/Popper.tsx\n\n\n\n\n\n\n\n\n\n\nvar SIDE_OPTIONS = [\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\"\n];\nvar ALIGN_OPTIONS = [\n    \"start\",\n    \"center\",\n    \"end\"\n];\nvar POPPER_NAME = \"Popper\";\nvar [createPopperContext, createPopperScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContextScope)(POPPER_NAME);\nvar [PopperProvider, usePopperContext] = createPopperContext(POPPER_NAME);\nvar Popper = (props)=>{\n    _s();\n    const { __scopePopper, children } = props;\n    const [anchor, setAnchor] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PopperProvider, {\n        scope: __scopePopper,\n        anchor,\n        onAnchorChange: setAnchor,\n        children\n    });\n};\n_s(Popper, \"wxYvbWVl4wPDiI7jlInCOrjrm3Y=\");\n_c = Popper;\nPopper.displayName = POPPER_NAME;\nvar ANCHOR_NAME = \"PopperAnchor\";\nvar PopperAnchor = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c1 = _s1((props, forwardedRef)=>{\n    _s1();\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, ref);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        context.onAnchorChange((virtualRef === null || virtualRef === void 0 ? void 0 : virtualRef.current) || ref.current);\n    });\n    return virtualRef ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...anchorProps,\n        ref: composedRefs\n    });\n}, \"aNTYZQIUknAyxpmCTV83WEqvsAs=\", false, function() {\n    return [\n        usePopperContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n})), \"aNTYZQIUknAyxpmCTV83WEqvsAs=\", false, function() {\n    return [\n        usePopperContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n});\n_c2 = PopperAnchor;\nPopperAnchor.displayName = ANCHOR_NAME;\nvar CONTENT_NAME = \"PopperContent\";\nvar [PopperContentProvider, useContentContext] = createPopperContext(CONTENT_NAME);\nvar PopperContent = /*#__PURE__*/ _s2(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c3 = _s2((props, forwardedRef)=>{\n    var _middlewareData_arrow, _middlewareData_arrow1, _middlewareData_arrow2, _middlewareData_transformOrigin, _middlewareData_transformOrigin1, _middlewareData_hide;\n    _s2();\n    const { __scopePopper, side = \"bottom\", sideOffset = 0, align = \"center\", alignOffset = 0, arrowPadding = 0, avoidCollisions = true, collisionBoundary = [], collisionPadding: collisionPaddingProp = 0, sticky = \"partial\", hideWhenDetached = false, updatePositionStrategy = \"optimized\", onPlaced, ...contentProps } = props;\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [content, setContent] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, (node)=>setContent(node));\n    const [arrow, setArrow] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const arrowSize = (0,_radix_ui_react_use_size__WEBPACK_IMPORTED_MODULE_5__.useSize)(arrow);\n    var _arrowSize_width;\n    const arrowWidth = (_arrowSize_width = arrowSize === null || arrowSize === void 0 ? void 0 : arrowSize.width) !== null && _arrowSize_width !== void 0 ? _arrowSize_width : 0;\n    var _arrowSize_height;\n    const arrowHeight = (_arrowSize_height = arrowSize === null || arrowSize === void 0 ? void 0 : arrowSize.height) !== null && _arrowSize_height !== void 0 ? _arrowSize_height : 0;\n    const desiredPlacement = side + (align !== \"center\" ? \"-\" + align : \"\");\n    const collisionPadding = typeof collisionPaddingProp === \"number\" ? collisionPaddingProp : {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        ...collisionPaddingProp\n    };\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [\n        collisionBoundary\n    ];\n    const hasExplicitBoundaries = boundary.length > 0;\n    const detectOverflowOptions = {\n        padding: collisionPadding,\n        boundary: boundary.filter(isNotNull),\n        // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n        altBoundary: hasExplicitBoundaries\n    };\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.useFloating)({\n        // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n        strategy: \"fixed\",\n        placement: desiredPlacement,\n        whileElementsMounted: function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            const cleanup = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_7__.autoUpdate)(...args, {\n                animationFrame: updatePositionStrategy === \"always\"\n            });\n            return cleanup;\n        },\n        elements: {\n            reference: context.anchor\n        },\n        middleware: [\n            (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.offset)({\n                mainAxis: sideOffset + arrowHeight,\n                alignmentAxis: alignOffset\n            }),\n            avoidCollisions && (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.shift)({\n                mainAxis: true,\n                crossAxis: false,\n                limiter: sticky === \"partial\" ? (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.limitShift)() : void 0,\n                ...detectOverflowOptions\n            }),\n            avoidCollisions && (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.flip)({\n                ...detectOverflowOptions\n            }),\n            (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.size)({\n                ...detectOverflowOptions,\n                apply: (param)=>{\n                    let { elements, rects, availableWidth, availableHeight } = param;\n                    const { width: anchorWidth, height: anchorHeight } = rects.reference;\n                    const contentStyle = elements.floating.style;\n                    contentStyle.setProperty(\"--radix-popper-available-width\", \"\".concat(availableWidth, \"px\"));\n                    contentStyle.setProperty(\"--radix-popper-available-height\", \"\".concat(availableHeight, \"px\"));\n                    contentStyle.setProperty(\"--radix-popper-anchor-width\", \"\".concat(anchorWidth, \"px\"));\n                    contentStyle.setProperty(\"--radix-popper-anchor-height\", \"\".concat(anchorHeight, \"px\"));\n                }\n            }),\n            arrow && (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.arrow)({\n                element: arrow,\n                padding: arrowPadding\n            }),\n            transformOrigin({\n                arrowWidth,\n                arrowHeight\n            }),\n            hideWhenDetached && (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.hide)({\n                strategy: \"referenceHidden\",\n                ...detectOverflowOptions\n            })\n        ]\n    });\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const handlePlaced = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef)(onPlaced);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_9__.useLayoutEffect)(()=>{\n        if (isPositioned) {\n            handlePlaced === null || handlePlaced === void 0 ? void 0 : handlePlaced();\n        }\n    }, [\n        isPositioned,\n        handlePlaced\n    ]);\n    const arrowX = (_middlewareData_arrow = middlewareData.arrow) === null || _middlewareData_arrow === void 0 ? void 0 : _middlewareData_arrow.x;\n    const arrowY = (_middlewareData_arrow1 = middlewareData.arrow) === null || _middlewareData_arrow1 === void 0 ? void 0 : _middlewareData_arrow1.y;\n    const cannotCenterArrow = ((_middlewareData_arrow2 = middlewareData.arrow) === null || _middlewareData_arrow2 === void 0 ? void 0 : _middlewareData_arrow2.centerOffset) !== 0;\n    const [contentZIndex, setContentZIndex] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_9__.useLayoutEffect)(()=>{\n        if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [\n        content\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        ref: refs.setFloating,\n        \"data-radix-popper-content-wrapper\": \"\",\n        style: {\n            ...floatingStyles,\n            transform: isPositioned ? floatingStyles.transform : \"translate(0, -200%)\",\n            // keep off the page when measuring\n            minWidth: \"max-content\",\n            zIndex: contentZIndex,\n            [\"--radix-popper-transform-origin\"]: [\n                (_middlewareData_transformOrigin = middlewareData.transformOrigin) === null || _middlewareData_transformOrigin === void 0 ? void 0 : _middlewareData_transformOrigin.x,\n                (_middlewareData_transformOrigin1 = middlewareData.transformOrigin) === null || _middlewareData_transformOrigin1 === void 0 ? void 0 : _middlewareData_transformOrigin1.y\n            ].join(\" \"),\n            // hide the content if using the hide middleware and should be hidden\n            // set visibility to hidden and disable pointer events so the UI behaves\n            // as if the PopperContent isn't there at all\n            ...((_middlewareData_hide = middlewareData.hide) === null || _middlewareData_hide === void 0 ? void 0 : _middlewareData_hide.referenceHidden) && {\n                visibility: \"hidden\",\n                pointerEvents: \"none\"\n            }\n        },\n        dir: props.dir,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PopperContentProvider, {\n            scope: __scopePopper,\n            placedSide,\n            onArrowChange: setArrow,\n            arrowX,\n            arrowY,\n            shouldHideArrow: cannotCenterArrow,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n                \"data-side\": placedSide,\n                \"data-align\": placedAlign,\n                ...contentProps,\n                ref: composedRefs,\n                style: {\n                    ...contentProps.style,\n                    // if the PopperContent hasn't been placed yet (not all measurements done)\n                    // we prevent animations so that users's animation don't kick in too early referring wrong sides\n                    animation: !isPositioned ? \"none\" : void 0\n                }\n            })\n        })\n    });\n}, \"A1/Pj+1UFz1xA3voq7zud2LMtfs=\", false, function() {\n    return [\n        usePopperContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs,\n        _radix_ui_react_use_size__WEBPACK_IMPORTED_MODULE_5__.useSize,\n        _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.useFloating,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef\n    ];\n})), \"A1/Pj+1UFz1xA3voq7zud2LMtfs=\", false, function() {\n    return [\n        usePopperContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs,\n        _radix_ui_react_use_size__WEBPACK_IMPORTED_MODULE_5__.useSize,\n        _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.useFloating,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_8__.useCallbackRef\n    ];\n});\n_c4 = PopperContent;\nPopperContent.displayName = CONTENT_NAME;\nvar ARROW_NAME = \"PopperArrow\";\nvar OPPOSITE_SIDE = {\n    top: \"bottom\",\n    right: \"left\",\n    bottom: \"top\",\n    left: \"right\"\n};\nvar PopperArrow = /*#__PURE__*/ _s3(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c5 = _s3(function PopperArrow2(props, forwardedRef) {\n    _s3();\n    const { __scopePopper, ...arrowProps } = props;\n    const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n    const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n    return(// we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n        ref: contentContext.onArrowChange,\n        style: {\n            position: \"absolute\",\n            left: contentContext.arrowX,\n            top: contentContext.arrowY,\n            [baseSide]: 0,\n            transformOrigin: {\n                top: \"\",\n                right: \"0 0\",\n                bottom: \"center 0\",\n                left: \"100% 0\"\n            }[contentContext.placedSide],\n            transform: {\n                top: \"translateY(100%)\",\n                right: \"translateY(50%) rotate(90deg) translateX(-50%)\",\n                bottom: \"rotate(180deg)\",\n                left: \"translateY(50%) rotate(-90deg) translateX(50%)\"\n            }[contentContext.placedSide],\n            visibility: contentContext.shouldHideArrow ? \"hidden\" : void 0\n        },\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_arrow__WEBPACK_IMPORTED_MODULE_10__.Root, {\n            ...arrowProps,\n            ref: forwardedRef,\n            style: {\n                ...arrowProps.style,\n                // ensures the element can be measured correctly (mostly for if SVG)\n                display: \"block\"\n            }\n        })\n    }));\n}, \"VtYBvsFWU0YFzmBU5dyx7SVFyFY=\", false, function() {\n    return [\n        useContentContext\n    ];\n})), \"VtYBvsFWU0YFzmBU5dyx7SVFyFY=\", false, function() {\n    return [\n        useContentContext\n    ];\n});\n_c6 = PopperArrow;\nPopperArrow.displayName = ARROW_NAME;\nfunction isNotNull(value) {\n    return value !== null;\n}\nvar transformOrigin = (options)=>({\n        name: \"transformOrigin\",\n        options,\n        fn (data) {\n            var _middlewareData_arrow, _middlewareData_arrow1, _middlewareData_arrow2;\n            const { placement, rects, middlewareData } = data;\n            const cannotCenterArrow = ((_middlewareData_arrow = middlewareData.arrow) === null || _middlewareData_arrow === void 0 ? void 0 : _middlewareData_arrow.centerOffset) !== 0;\n            const isArrowHidden = cannotCenterArrow;\n            const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n            const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n            const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n            const noArrowAlign = {\n                start: \"0%\",\n                center: \"50%\",\n                end: \"100%\"\n            }[placedAlign];\n            var _middlewareData_arrow_x;\n            const arrowXCenter = ((_middlewareData_arrow_x = (_middlewareData_arrow1 = middlewareData.arrow) === null || _middlewareData_arrow1 === void 0 ? void 0 : _middlewareData_arrow1.x) !== null && _middlewareData_arrow_x !== void 0 ? _middlewareData_arrow_x : 0) + arrowWidth / 2;\n            var _middlewareData_arrow_y;\n            const arrowYCenter = ((_middlewareData_arrow_y = (_middlewareData_arrow2 = middlewareData.arrow) === null || _middlewareData_arrow2 === void 0 ? void 0 : _middlewareData_arrow2.y) !== null && _middlewareData_arrow_y !== void 0 ? _middlewareData_arrow_y : 0) + arrowHeight / 2;\n            let x = \"\";\n            let y = \"\";\n            if (placedSide === \"bottom\") {\n                x = isArrowHidden ? noArrowAlign : \"\".concat(arrowXCenter, \"px\");\n                y = \"\".concat(-arrowHeight, \"px\");\n            } else if (placedSide === \"top\") {\n                x = isArrowHidden ? noArrowAlign : \"\".concat(arrowXCenter, \"px\");\n                y = \"\".concat(rects.floating.height + arrowHeight, \"px\");\n            } else if (placedSide === \"right\") {\n                x = \"\".concat(-arrowHeight, \"px\");\n                y = isArrowHidden ? noArrowAlign : \"\".concat(arrowYCenter, \"px\");\n            } else if (placedSide === \"left\") {\n                x = \"\".concat(rects.floating.width + arrowHeight, \"px\");\n                y = isArrowHidden ? noArrowAlign : \"\".concat(arrowYCenter, \"px\");\n            }\n            return {\n                data: {\n                    x,\n                    y\n                }\n            };\n        }\n    });\nfunction getSideAndAlignFromPlacement(placement) {\n    const [side, align = \"center\"] = placement.split(\"-\");\n    return [\n        side,\n        align\n    ];\n}\nvar Root2 = Popper;\nvar Anchor = PopperAnchor;\nvar Content = PopperContent;\nvar Arrow = PopperArrow;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Popper\");\n$RefreshReg$(_c1, \"PopperAnchor$React.forwardRef\");\n$RefreshReg$(_c2, \"PopperAnchor\");\n$RefreshReg$(_c3, \"PopperContent$React.forwardRef\");\n$RefreshReg$(_c4, \"PopperContent\");\n$RefreshReg$(_c5, \"PopperArrow$React.forwardRef\");\n$RefreshReg$(_c6, \"PopperArrow\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-popper/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-popper/node_modules/@radix-ui/react-context/dist/index.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@radix-ui/react-popper/node_modules/@radix-ui/react-context/dist/index.mjs ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContext: function() { return /* binding */ createContext2; },\n/* harmony export */   createContextScope: function() { return /* binding */ createContextScope; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/context/src/createContext.tsx\n\n\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n  function Provider(props) {\n    const { children, ...context } = props;\n    const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\n  }\n  function useContext2(consumerName) {\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  Provider.displayName = rootComponentName + \"Provider\";\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    function Provider(props) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\n    }\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    Provider.displayName = rootComponentName + \"Provider\";\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcG9wcGVyL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29udGV4dC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDK0I7QUFDUztBQUN4QztBQUNBLGtCQUFrQixnREFBbUI7QUFDckM7QUFDQSxZQUFZLHVCQUF1QjtBQUNuQyxrQkFBa0IsMENBQWE7QUFDL0IsMkJBQTJCLHNEQUFHLHFCQUFxQixpQkFBaUI7QUFDcEU7QUFDQTtBQUNBLG9CQUFvQiw2Q0FBZ0I7QUFDcEM7QUFDQTtBQUNBLHlCQUF5QixhQUFhLDJCQUEyQixrQkFBa0I7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0RBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOEJBQThCO0FBQzVDO0FBQ0Esb0JBQW9CLDBDQUFhO0FBQ2pDLDZCQUE2QixzREFBRyxxQkFBcUIsaUJBQWlCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw2Q0FBZ0I7QUFDdEM7QUFDQTtBQUNBLDJCQUEyQixhQUFhLDJCQUEyQixrQkFBa0I7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnREFBbUI7QUFDaEMsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDBDQUFhO0FBQzFCLGlCQUFpQixXQUFXLFVBQVUsTUFBTSxtQ0FBbUM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJEQUEyRCxxQkFBcUI7QUFDaEY7QUFDQSxrREFBa0QsVUFBVTtBQUM1RCxpQkFBaUI7QUFDakIsT0FBTyxJQUFJO0FBQ1gsYUFBYSwwQ0FBYSxVQUFVLFdBQVcsb0JBQW9CLGdCQUFnQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LXBvcHBlci9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LWNvbnRleHQvZGlzdC9pbmRleC5tanM/OWUyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC9jb250ZXh0L3NyYy9jcmVhdGVDb250ZXh0LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIGNyZWF0ZUNvbnRleHQyKHJvb3RDb21wb25lbnROYW1lLCBkZWZhdWx0Q29udGV4dCkge1xuICBjb25zdCBDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChkZWZhdWx0Q29udGV4dCk7XG4gIGZ1bmN0aW9uIFByb3ZpZGVyKHByb3BzKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgLi4uY29udGV4dCB9ID0gcHJvcHM7XG4gICAgY29uc3QgdmFsdWUgPSBSZWFjdC51c2VNZW1vKCgpID0+IGNvbnRleHQsIE9iamVjdC52YWx1ZXMoY29udGV4dCkpO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KENvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWUsIGNoaWxkcmVuIH0pO1xuICB9XG4gIGZ1bmN0aW9uIHVzZUNvbnRleHQyKGNvbnN1bWVyTmFtZSkge1xuICAgIGNvbnN0IGNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0KENvbnRleHQpO1xuICAgIGlmIChjb250ZXh0KSByZXR1cm4gY29udGV4dDtcbiAgICBpZiAoZGVmYXVsdENvbnRleHQgIT09IHZvaWQgMCkgcmV0dXJuIGRlZmF1bHRDb250ZXh0O1xuICAgIHRocm93IG5ldyBFcnJvcihgXFxgJHtjb25zdW1lck5hbWV9XFxgIG11c3QgYmUgdXNlZCB3aXRoaW4gXFxgJHtyb290Q29tcG9uZW50TmFtZX1cXGBgKTtcbiAgfVxuICBQcm92aWRlci5kaXNwbGF5TmFtZSA9IHJvb3RDb21wb25lbnROYW1lICsgXCJQcm92aWRlclwiO1xuICByZXR1cm4gW1Byb3ZpZGVyLCB1c2VDb250ZXh0Ml07XG59XG5mdW5jdGlvbiBjcmVhdGVDb250ZXh0U2NvcGUoc2NvcGVOYW1lLCBjcmVhdGVDb250ZXh0U2NvcGVEZXBzID0gW10pIHtcbiAgbGV0IGRlZmF1bHRDb250ZXh0cyA9IFtdO1xuICBmdW5jdGlvbiBjcmVhdGVDb250ZXh0Myhyb290Q29tcG9uZW50TmFtZSwgZGVmYXVsdENvbnRleHQpIHtcbiAgICBjb25zdCBCYXNlQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZGVmYXVsdENvbnRleHQpO1xuICAgIGNvbnN0IGluZGV4ID0gZGVmYXVsdENvbnRleHRzLmxlbmd0aDtcbiAgICBkZWZhdWx0Q29udGV4dHMgPSBbLi4uZGVmYXVsdENvbnRleHRzLCBkZWZhdWx0Q29udGV4dF07XG4gICAgZnVuY3Rpb24gUHJvdmlkZXIocHJvcHMpIHtcbiAgICAgIGNvbnN0IHsgc2NvcGUsIGNoaWxkcmVuLCAuLi5jb250ZXh0IH0gPSBwcm9wcztcbiAgICAgIGNvbnN0IENvbnRleHQgPSBzY29wZT8uW3Njb3BlTmFtZV1baW5kZXhdIHx8IEJhc2VDb250ZXh0O1xuICAgICAgY29uc3QgdmFsdWUgPSBSZWFjdC51c2VNZW1vKCgpID0+IGNvbnRleHQsIE9iamVjdC52YWx1ZXMoY29udGV4dCkpO1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZSwgY2hpbGRyZW4gfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVzZUNvbnRleHQyKGNvbnN1bWVyTmFtZSwgc2NvcGUpIHtcbiAgICAgIGNvbnN0IENvbnRleHQgPSBzY29wZT8uW3Njb3BlTmFtZV1baW5kZXhdIHx8IEJhc2VDb250ZXh0O1xuICAgICAgY29uc3QgY29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoQ29udGV4dCk7XG4gICAgICBpZiAoY29udGV4dCkgcmV0dXJuIGNvbnRleHQ7XG4gICAgICBpZiAoZGVmYXVsdENvbnRleHQgIT09IHZvaWQgMCkgcmV0dXJuIGRlZmF1bHRDb250ZXh0O1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBcXGAke2NvbnN1bWVyTmFtZX1cXGAgbXVzdCBiZSB1c2VkIHdpdGhpbiBcXGAke3Jvb3RDb21wb25lbnROYW1lfVxcYGApO1xuICAgIH1cbiAgICBQcm92aWRlci5kaXNwbGF5TmFtZSA9IHJvb3RDb21wb25lbnROYW1lICsgXCJQcm92aWRlclwiO1xuICAgIHJldHVybiBbUHJvdmlkZXIsIHVzZUNvbnRleHQyXTtcbiAgfVxuICBjb25zdCBjcmVhdGVTY29wZSA9ICgpID0+IHtcbiAgICBjb25zdCBzY29wZUNvbnRleHRzID0gZGVmYXVsdENvbnRleHRzLm1hcCgoZGVmYXVsdENvbnRleHQpID0+IHtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVDb250ZXh0KGRlZmF1bHRDb250ZXh0KTtcbiAgICB9KTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdXNlU2NvcGUoc2NvcGUpIHtcbiAgICAgIGNvbnN0IGNvbnRleHRzID0gc2NvcGU/LltzY29wZU5hbWVdIHx8IHNjb3BlQ29udGV4dHM7XG4gICAgICByZXR1cm4gUmVhY3QudXNlTWVtbyhcbiAgICAgICAgKCkgPT4gKHsgW2BfX3Njb3BlJHtzY29wZU5hbWV9YF06IHsgLi4uc2NvcGUsIFtzY29wZU5hbWVdOiBjb250ZXh0cyB9IH0pLFxuICAgICAgICBbc2NvcGUsIGNvbnRleHRzXVxuICAgICAgKTtcbiAgICB9O1xuICB9O1xuICBjcmVhdGVTY29wZS5zY29wZU5hbWUgPSBzY29wZU5hbWU7XG4gIHJldHVybiBbY3JlYXRlQ29udGV4dDMsIGNvbXBvc2VDb250ZXh0U2NvcGVzKGNyZWF0ZVNjb3BlLCAuLi5jcmVhdGVDb250ZXh0U2NvcGVEZXBzKV07XG59XG5mdW5jdGlvbiBjb21wb3NlQ29udGV4dFNjb3BlcyguLi5zY29wZXMpIHtcbiAgY29uc3QgYmFzZVNjb3BlID0gc2NvcGVzWzBdO1xuICBpZiAoc2NvcGVzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIGJhc2VTY29wZTtcbiAgY29uc3QgY3JlYXRlU2NvcGUgPSAoKSA9PiB7XG4gICAgY29uc3Qgc2NvcGVIb29rcyA9IHNjb3Blcy5tYXAoKGNyZWF0ZVNjb3BlMikgPT4gKHtcbiAgICAgIHVzZVNjb3BlOiBjcmVhdGVTY29wZTIoKSxcbiAgICAgIHNjb3BlTmFtZTogY3JlYXRlU2NvcGUyLnNjb3BlTmFtZVxuICAgIH0pKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdXNlQ29tcG9zZWRTY29wZXMob3ZlcnJpZGVTY29wZXMpIHtcbiAgICAgIGNvbnN0IG5leHRTY29wZXMgPSBzY29wZUhvb2tzLnJlZHVjZSgobmV4dFNjb3BlczIsIHsgdXNlU2NvcGUsIHNjb3BlTmFtZSB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHNjb3BlUHJvcHMgPSB1c2VTY29wZShvdmVycmlkZVNjb3Blcyk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IHNjb3BlUHJvcHNbYF9fc2NvcGUke3Njb3BlTmFtZX1gXTtcbiAgICAgICAgcmV0dXJuIHsgLi4ubmV4dFNjb3BlczIsIC4uLmN1cnJlbnRTY29wZSB9O1xuICAgICAgfSwge30pO1xuICAgICAgcmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4gKHsgW2BfX3Njb3BlJHtiYXNlU2NvcGUuc2NvcGVOYW1lfWBdOiBuZXh0U2NvcGVzIH0pLCBbbmV4dFNjb3Blc10pO1xuICAgIH07XG4gIH07XG4gIGNyZWF0ZVNjb3BlLnNjb3BlTmFtZSA9IGJhc2VTY29wZS5zY29wZU5hbWU7XG4gIHJldHVybiBjcmVhdGVTY29wZTtcbn1cbmV4cG9ydCB7XG4gIGNyZWF0ZUNvbnRleHQyIGFzIGNyZWF0ZUNvbnRleHQsXG4gIGNyZWF0ZUNvbnRleHRTY29wZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-popper/node_modules/@radix-ui/react-context/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-portal/dist/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@radix-ui/react-portal/dist/index.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Portal: function() { return /* binding */ Portal; },\n/* harmony export */   Root: function() { return /* binding */ Root; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Portal,Root auto */ var _s = $RefreshSig$();\n// packages/react/portal/src/Portal.tsx\n\n\n\n\n\nvar PORTAL_NAME = \"Portal\";\nvar Portal = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = _s((props, forwardedRef)=>{\n    var _globalThis_document, _globalThis;\n    _s();\n    const { container: containerProp, ...portalProps } = props;\n    const [mounted, setMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__.useLayoutEffect)(()=>setMounted(true), []);\n    const container = containerProp || mounted && ((_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : (_globalThis_document = _globalThis.document) === null || _globalThis_document === void 0 ? void 0 : _globalThis_document.body);\n    return container ? /*#__PURE__*/ react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...portalProps,\n        ref: forwardedRef\n    }), container) : null;\n}, \"FcnMiGdgWOI6sDTng8DolPv2NRo=\")), \"FcnMiGdgWOI6sDTng8DolPv2NRo=\");\n_c1 = Portal;\nPortal.displayName = PORTAL_NAME;\nvar Root = Portal;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Portal$React.forwardRef\");\n$RefreshReg$(_c1, \"Portal\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcG9ydGFsL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF1QjtBQUNGO0FBQ0s7QUFDTTtBQXVCSjtBQWpCNUIsSUFBTUssY0FBYztBQVdwQixJQUFNQyx1QkFBZU4sR0FBQUEsNkNBQUEsU0FBdUMsQ0FBQ1EsT0FBT0M7UUFJbkJDLHNCQUFBQTs7SUFIL0MsTUFBTSxFQUFFQyxXQUFXQyxhQUFBLEVBQWUsR0FBR0MsYUFBWSxHQUFJTDtJQUNyRCxNQUFNLENBQUNNLFNBQVNDLFdBQVUsR0FBVWYsMkNBQUEsQ0FBUztJQUM3Q0csa0ZBQWVBLENBQUMsSUFBTVksV0FBVyxPQUFPLEVBQUU7SUFDMUMsTUFBTUosWUFBWUMsaUJBQWtCRSxhQUFXSixjQUFBQSx3QkFBQUEsbUNBQUFBLHVCQUFBQSxZQUFZTyxRQUFBLGNBQVpQLDJDQUFBQSxxQkFBc0JRLElBQUE7SUFDckUsT0FBT1AsMEJBQ0hWLG1EQUFTLENBQWEsZ0JBQUFHLHNEQUFBQSxDQUFDRixnRUFBU0EsQ0FBQ2tCLEdBQUEsRUFBVjtRQUFlLEdBQUdQLFdBQUE7UUFBYVEsS0FBS1o7SUFBQSxJQUFrQkUsYUFDN0U7QUFDTjs7QUFFQUwsT0FBT2dCLFdBQUEsR0FBY2pCO0FBSXJCLElBQU1rQixPQUFPakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9Qb3J0YWwudHN4P2I2NzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgeyBQcmltaXRpdmUgfSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlJztcbmltcG9ydCB7IHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ0ByYWRpeC11aS9yZWFjdC11c2UtbGF5b3V0LWVmZmVjdCc7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIFBvcnRhbFxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5jb25zdCBQT1JUQUxfTkFNRSA9ICdQb3J0YWwnO1xuXG50eXBlIFBvcnRhbEVsZW1lbnQgPSBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBQcmltaXRpdmUuZGl2PjtcbnR5cGUgUHJpbWl0aXZlRGl2UHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFByaW1pdGl2ZS5kaXY+O1xuaW50ZXJmYWNlIFBvcnRhbFByb3BzIGV4dGVuZHMgUHJpbWl0aXZlRGl2UHJvcHMge1xuICAvKipcbiAgICogQW4gb3B0aW9uYWwgY29udGFpbmVyIHdoZXJlIHRoZSBwb3J0YWxlZCBjb250ZW50IHNob3VsZCBiZSBhcHBlbmRlZC5cbiAgICovXG4gIGNvbnRhaW5lcj86IEVsZW1lbnQgfCBEb2N1bWVudEZyYWdtZW50IHwgbnVsbDtcbn1cblxuY29uc3QgUG9ydGFsID0gUmVhY3QuZm9yd2FyZFJlZjxQb3J0YWxFbGVtZW50LCBQb3J0YWxQcm9wcz4oKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgY29uc3QgeyBjb250YWluZXI6IGNvbnRhaW5lclByb3AsIC4uLnBvcnRhbFByb3BzIH0gPSBwcm9wcztcbiAgY29uc3QgW21vdW50ZWQsIHNldE1vdW50ZWRdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4gc2V0TW91bnRlZCh0cnVlKSwgW10pO1xuICBjb25zdCBjb250YWluZXIgPSBjb250YWluZXJQcm9wIHx8IChtb3VudGVkICYmIGdsb2JhbFRoaXM/LmRvY3VtZW50Py5ib2R5KTtcbiAgcmV0dXJuIGNvbnRhaW5lclxuICAgID8gUmVhY3RET00uY3JlYXRlUG9ydGFsKDxQcmltaXRpdmUuZGl2IHsuLi5wb3J0YWxQcm9wc30gcmVmPXtmb3J3YXJkZWRSZWZ9IC8+LCBjb250YWluZXIpXG4gICAgOiBudWxsO1xufSk7XG5cblBvcnRhbC5kaXNwbGF5TmFtZSA9IFBPUlRBTF9OQU1FO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmNvbnN0IFJvb3QgPSBQb3J0YWw7XG5cbmV4cG9ydCB7XG4gIFBvcnRhbCxcbiAgLy9cbiAgUm9vdCxcbn07XG5leHBvcnQgdHlwZSB7IFBvcnRhbFByb3BzIH07XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJSZWFjdERPTSIsIlByaW1pdGl2ZSIsInVzZUxheW91dEVmZmVjdCIsImpzeCIsIlBPUlRBTF9OQU1FIiwiUG9ydGFsIiwiZm9yd2FyZFJlZiIsInByb3BzIiwiZm9yd2FyZGVkUmVmIiwiZ2xvYmFsVGhpcyIsImNvbnRhaW5lciIsImNvbnRhaW5lclByb3AiLCJwb3J0YWxQcm9wcyIsIm1vdW50ZWQiLCJzZXRNb3VudGVkIiwidXNlU3RhdGUiLCJkb2N1bWVudCIsImJvZHkiLCJjcmVhdGVQb3J0YWwiLCJkaXYiLCJyZWYiLCJkaXNwbGF5TmFtZSIsIlJvb3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-portal/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@radix-ui/react-presence/dist/index.mjs ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Presence: function() { return /* binding */ Presence; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ Presence auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n// packages/react/presence/src/Presence.tsx\n\n\n\n// packages/react/presence/src/useStateMachine.tsx\n\nfunction useStateMachine(initialState, machine) {\n    _s();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useReducer((state, event)=>{\n        const nextState = machine[state][event];\n        return nextState !== null && nextState !== void 0 ? nextState : state;\n    }, initialState);\n}\n_s(useStateMachine, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n// packages/react/presence/src/Presence.tsx\nvar Presence = (props)=>{\n    _s1();\n    const { present, children } = props;\n    const presence = usePresence(present);\n    const child = typeof children === \"function\" ? children({\n        present: presence.isPresent\n    }) : react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children);\n    const ref = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_1__.useComposedRefs)(presence.ref, getElementRef(child));\n    const forceMount = typeof children === \"function\";\n    return forceMount || presence.isPresent ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {\n        ref\n    }) : null;\n};\n_s1(Presence, \"uNryTcoDvJa4CrInYRt27opyun0=\", false, function() {\n    return [\n        usePresence,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_1__.useComposedRefs\n    ];\n});\n_c = Presence;\nPresence.displayName = \"Presence\";\nfunction usePresence(present) {\n    _s2();\n    const [node, setNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const stylesRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});\n    const prevPresentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(present);\n    const prevAnimationNameRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(\"none\");\n    const initialState = present ? \"mounted\" : \"unmounted\";\n    const [state, send] = useStateMachine(initialState, {\n        mounted: {\n            UNMOUNT: \"unmounted\",\n            ANIMATION_OUT: \"unmountSuspended\"\n        },\n        unmountSuspended: {\n            MOUNT: \"mounted\",\n            ANIMATION_END: \"unmounted\"\n        },\n        unmounted: {\n            MOUNT: \"mounted\"\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        prevAnimationNameRef.current = state === \"mounted\" ? currentAnimationName : \"none\";\n    }, [\n        state\n    ]);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect)(()=>{\n        const styles = stylesRef.current;\n        const wasPresent = prevPresentRef.current;\n        const hasPresentChanged = wasPresent !== present;\n        if (hasPresentChanged) {\n            const prevAnimationName = prevAnimationNameRef.current;\n            const currentAnimationName = getAnimationName(styles);\n            if (present) {\n                send(\"MOUNT\");\n            } else if (currentAnimationName === \"none\" || (styles === null || styles === void 0 ? void 0 : styles.display) === \"none\") {\n                send(\"UNMOUNT\");\n            } else {\n                const isAnimating = prevAnimationName !== currentAnimationName;\n                if (wasPresent && isAnimating) {\n                    send(\"ANIMATION_OUT\");\n                } else {\n                    send(\"UNMOUNT\");\n                }\n            }\n            prevPresentRef.current = present;\n        }\n    }, [\n        present,\n        send\n    ]);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect)(()=>{\n        if (node) {\n            let timeoutId;\n            var _node_ownerDocument_defaultView;\n            const ownerWindow = (_node_ownerDocument_defaultView = node.ownerDocument.defaultView) !== null && _node_ownerDocument_defaultView !== void 0 ? _node_ownerDocument_defaultView : window;\n            const handleAnimationEnd = (event)=>{\n                const currentAnimationName = getAnimationName(stylesRef.current);\n                const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n                if (event.target === node && isCurrentAnimation) {\n                    send(\"ANIMATION_END\");\n                    if (!prevPresentRef.current) {\n                        const currentFillMode = node.style.animationFillMode;\n                        node.style.animationFillMode = \"forwards\";\n                        timeoutId = ownerWindow.setTimeout(()=>{\n                            if (node.style.animationFillMode === \"forwards\") {\n                                node.style.animationFillMode = currentFillMode;\n                            }\n                        });\n                    }\n                }\n            };\n            const handleAnimationStart = (event)=>{\n                if (event.target === node) {\n                    prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n                }\n            };\n            node.addEventListener(\"animationstart\", handleAnimationStart);\n            node.addEventListener(\"animationcancel\", handleAnimationEnd);\n            node.addEventListener(\"animationend\", handleAnimationEnd);\n            return ()=>{\n                ownerWindow.clearTimeout(timeoutId);\n                node.removeEventListener(\"animationstart\", handleAnimationStart);\n                node.removeEventListener(\"animationcancel\", handleAnimationEnd);\n                node.removeEventListener(\"animationend\", handleAnimationEnd);\n            };\n        } else {\n            send(\"ANIMATION_END\");\n        }\n    }, [\n        node,\n        send\n    ]);\n    return {\n        isPresent: [\n            \"mounted\",\n            \"unmountSuspended\"\n        ].includes(state),\n        ref: react__WEBPACK_IMPORTED_MODULE_0__.useCallback((node2)=>{\n            if (node2) stylesRef.current = getComputedStyle(node2);\n            setNode(node2);\n        }, [])\n    };\n}\n_s2(usePresence, \"ncCWxmFAyU87e4PnaTkbrqgR834=\", false, function() {\n    return [\n        useStateMachine\n    ];\n});\nfunction getAnimationName(styles) {\n    return (styles === null || styles === void 0 ? void 0 : styles.animationName) || \"none\";\n}\nfunction getElementRef(element) {\n    var _Object_getOwnPropertyDescriptor, _Object_getOwnPropertyDescriptor1;\n    let getter = (_Object_getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor(element.props, \"ref\")) === null || _Object_getOwnPropertyDescriptor === void 0 ? void 0 : _Object_getOwnPropertyDescriptor.get;\n    let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n    if (mayWarn) {\n        return element.ref;\n    }\n    getter = (_Object_getOwnPropertyDescriptor1 = Object.getOwnPropertyDescriptor(element, \"ref\")) === null || _Object_getOwnPropertyDescriptor1 === void 0 ? void 0 : _Object_getOwnPropertyDescriptor1.get;\n    mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n    if (mayWarn) {\n        return element.props.ref;\n    }\n    return element.props.ref || element.ref;\n}\n //# sourceMappingURL=index.mjs.map\nvar _c;\n$RefreshReg$(_c, \"Presence\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcHJlc2VuY2UvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVCO0FBQ1M7QUFDQTs7QUNGVDtBQVdoQixTQUFTRyxnQkFDZEMsWUFBQSxFQUNBQyxPQUFBOztJQUVBLE9BQWFMLDZDQUFBLENBQVcsQ0FBQ08sT0FBd0JDO1FBQy9DLE1BQU1DLFlBQWFKLE9BQUEsQ0FBUUUsTUFBSyxDQUFVQyxNQUFLO1FBQy9DLE9BQU9DLHNCQUFBQSx1QkFBQUEsWUFBYUY7SUFDdEIsR0FBR0g7QUFDTDtHQVJnQkQ7O0FERGhCLElBQU1PLFdBQW9DLENBQUNDOztJQUN6QyxNQUFNLEVBQUVDLE9BQUEsRUFBU0MsUUFBQSxFQUFTLEdBQUlGO0lBQzlCLE1BQU1HLFdBQVdDLFlBQVlIO0lBRTdCLE1BQU1JLFFBQ0osT0FBT0gsYUFBYSxhQUNoQkEsU0FBUztRQUFFRCxTQUFTRSxTQUFTRyxTQUFBO0lBQVUsS0FDakNDLDJDQUFBLENBQVNFLElBQUEsQ0FBS1A7SUFHMUIsTUFBTVEsTUFBTXBCLDZFQUFlQSxDQUFDYSxTQUFTTyxHQUFBLEVBQUtDLGNBQWNOO0lBQ3hELE1BQU1PLGFBQWEsT0FBT1YsYUFBYTtJQUN2QyxPQUFPVSxjQUFjVCxTQUFTRyxTQUFBLGlCQUFrQkMsK0NBQUEsQ0FBYUYsT0FBTztRQUFFSztJQUFJLEtBQUs7QUFDakY7SUFiTVg7O1FBRWFLO1FBUUxkLHlFQUFlQTs7O0tBVnZCUztBQWVOQSxTQUFTZSxXQUFBLEdBQWM7QUFNdkIsU0FBU1YsWUFBWUgsT0FBQTs7SUFDbkIsTUFBTSxDQUFDYyxNQUFNQyxRQUFPLEdBQVVULDJDQUFBO0lBQzlCLE1BQU1XLFlBQWtCWCx5Q0FBQSxDQUE0QixDQUFDO0lBQ3JELE1BQU1hLGlCQUF1QmIseUNBQUEsQ0FBT047SUFDcEMsTUFBTW9CLHVCQUE2QmQseUNBQUEsQ0FBZTtJQUNsRCxNQUFNZCxlQUFl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QVc7WUFBQztZQUFXO1NBQWtCLENBQUV5QyxRQUFBLENBQVNuRDtRQUNwRGMsS0FBV0gsOENBQUEsQ0FBWSxDQUFDUTtZQUN0QixJQUFJQSxPQUFNRyxVQUFVZSxPQUFBLEdBQVUwQixpQkFBaUI1QztZQUMvQ0MsUUFBUUQ7UUFDVixHQUFHLEVBQUU7SUFDUDtBQUNGO0lBaElTWDs7UUFNZVo7OztBQThIeEIsU0FBU3dDLGlCQUFpQkUsTUFBQTtJQUN4QixPQUFPQSxDQUFBQSxtQkFBQUEsNkJBQUFBLE9BQVFjLGFBQUEsS0FBaUI7QUFDbEM7QUFPQSxTQUFTckMsY0FBY2lELE9BQUE7UUFFUkMsa0NBT0pBO0lBUFQsSUFBSUMsVUFBU0QsbUNBQUFBLE9BQU9FLHdCQUFBLENBQXlCSCxRQUFRNUQsS0FBQSxFQUFPLG9CQUEvQzZELHVEQUFBQSxpQ0FBdURHLEdBQUE7SUFDcEUsSUFBSUMsVUFBVUgsVUFBVSxvQkFBb0JBLFVBQVVBLE9BQU9JLGNBQUE7SUFDN0QsSUFBSUQsU0FBUztRQUNYLE9BQVFMLFFBQWdCbEQsR0FBQTtJQUMxQjtJQUdBb0QsVUFBU0Qsb0NBQUFBLE9BQU9FLHdCQUFBLENBQXlCSCxTQUFTLG9CQUF6Q0Msd0RBQUFBLGtDQUFpREcsR0FBQTtJQUMxREMsVUFBVUgsVUFBVSxvQkFBb0JBLFVBQVVBLE9BQU9JLGNBQUE7SUFDekQsSUFBSUQsU0FBUztRQUNYLE9BQU9MLFFBQVE1RCxLQUFBLENBQU1VLEdBQUE7SUFDdkI7SUFHQSxPQUFPa0QsUUFBUTVELEtBQUEsQ0FBTVUsR0FBQSxJQUFRa0QsUUFBZ0JsRCxHQUFBO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvUHJlc2VuY2UudHN4PzhiMzkiLCJ3ZWJwYWNrOi8vX05fRS8uLi9zcmMvdXNlU3RhdGVNYWNoaW5lLnRzeD9hMzIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUNvbXBvc2VkUmVmcyB9IGZyb20gJ0ByYWRpeC11aS9yZWFjdC1jb21wb3NlLXJlZnMnO1xuaW1wb3J0IHsgdXNlTGF5b3V0RWZmZWN0IH0gZnJvbSAnQHJhZGl4LXVpL3JlYWN0LXVzZS1sYXlvdXQtZWZmZWN0JztcbmltcG9ydCB7IHVzZVN0YXRlTWFjaGluZSB9IGZyb20gJy4vdXNlU3RhdGVNYWNoaW5lJztcblxuaW50ZXJmYWNlIFByZXNlbmNlUHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3RFbGVtZW50IHwgKChwcm9wczogeyBwcmVzZW50OiBib29sZWFuIH0pID0+IFJlYWN0LlJlYWN0RWxlbWVudCk7XG4gIHByZXNlbnQ6IGJvb2xlYW47XG59XG5cbmNvbnN0IFByZXNlbmNlOiBSZWFjdC5GQzxQcmVzZW5jZVByb3BzPiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7IHByZXNlbnQsIGNoaWxkcmVuIH0gPSBwcm9wcztcbiAgY29uc3QgcHJlc2VuY2UgPSB1c2VQcmVzZW5jZShwcmVzZW50KTtcblxuICBjb25zdCBjaGlsZCA9IChcbiAgICB0eXBlb2YgY2hpbGRyZW4gPT09ICdmdW5jdGlvbidcbiAgICAgID8gY2hpbGRyZW4oeyBwcmVzZW50OiBwcmVzZW5jZS5pc1ByZXNlbnQgfSlcbiAgICAgIDogUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbilcbiAgKSBhcyBSZWFjdC5SZWFjdEVsZW1lbnQ7XG5cbiAgY29uc3QgcmVmID0gdXNlQ29tcG9zZWRSZWZzKHByZXNlbmNlLnJlZiwgZ2V0RWxlbWVudFJlZihjaGlsZCkpO1xuICBjb25zdCBmb3JjZU1vdW50ID0gdHlwZW9mIGNoaWxkcmVuID09PSAnZnVuY3Rpb24nO1xuICByZXR1cm4gZm9yY2VNb3VudCB8fCBwcmVzZW5jZS5pc1ByZXNlbnQgPyBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHsgcmVmIH0pIDogbnVsbDtcbn07XG5cblByZXNlbmNlLmRpc3BsYXlOYW1lID0gJ1ByZXNlbmNlJztcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogdXNlUHJlc2VuY2VcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuZnVuY3Rpb24gdXNlUHJlc2VuY2UocHJlc2VudDogYm9vbGVhbikge1xuICBjb25zdCBbbm9kZSwgc2V0Tm9kZV0gPSBSZWFjdC51c2VTdGF0ZTxIVE1MRWxlbWVudD4oKTtcbiAgY29uc3Qgc3R5bGVzUmVmID0gUmVhY3QudXNlUmVmPENTU1N0eWxlRGVjbGFyYXRpb24+KHt9IGFzIGFueSk7XG4gIGNvbnN0IHByZXZQcmVzZW50UmVmID0gUmVhY3QudXNlUmVmKHByZXNlbnQpO1xuICBjb25zdCBwcmV2QW5pbWF0aW9uTmFtZVJlZiA9IFJlYWN0LnVzZVJlZjxzdHJpbmc+KCdub25lJyk7XG4gIGNvbnN0IGluaXRpYWxTdGF0ZSA9IHByZXNlbnQgPyAnbW91bnRlZCcgOiAndW5tb3VudGVkJztcbiAgY29uc3QgW3N0YXRlLCBzZW5kXSA9IHVzZVN0YXRlTWFjaGluZShpbml0aWFsU3RhdGUsIHtcbiAgICBtb3VudGVkOiB7XG4gICAgICBVTk1PVU5UOiAndW5tb3VudGVkJyxcbiAgICAgIEFOSU1BVElPTl9PVVQ6ICd1bm1vdW50U3VzcGVuZGVkJyxcbiAgICB9LFxuICAgIHVubW91bnRTdXNwZW5kZWQ6IHtcbiAgICAgIE1PVU5UOiAnbW91bnRlZCcsXG4gICAgICBBTklNQVRJT05fRU5EOiAndW5tb3VudGVkJyxcbiAgICB9LFxuICAgIHVubW91bnRlZDoge1xuICAgICAgTU9VTlQ6ICdtb3VudGVkJyxcbiAgICB9LFxuICB9KTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRBbmltYXRpb25OYW1lID0gZ2V0QW5pbWF0aW9uTmFtZShzdHlsZXNSZWYuY3VycmVudCk7XG4gICAgcHJldkFuaW1hdGlvbk5hbWVSZWYuY3VycmVudCA9IHN0YXRlID09PSAnbW91bnRlZCcgPyBjdXJyZW50QW5pbWF0aW9uTmFtZSA6ICdub25lJztcbiAgfSwgW3N0YXRlXSk7XG5cbiAgdXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBzdHlsZXMgPSBzdHlsZXNSZWYuY3VycmVudDtcbiAgICBjb25zdCB3YXNQcmVzZW50ID0gcHJldlByZXNlbnRSZWYuY3VycmVudDtcbiAgICBjb25zdCBoYXNQcmVzZW50Q2hhbmdlZCA9IHdhc1ByZXNlbnQgIT09IHByZXNlbnQ7XG5cbiAgICBpZiAoaGFzUHJlc2VudENoYW5nZWQpIHtcbiAgICAgIGNvbnN0IHByZXZBbmltYXRpb25OYW1lID0gcHJldkFuaW1hdGlvbk5hbWVSZWYuY3VycmVudDtcbiAgICAgIGNvbnN0IGN1cnJlbnRBbmltYXRpb25OYW1lID0gZ2V0QW5pbWF0aW9uTmFtZShzdHlsZXMpO1xuXG4gICAgICBpZiAocHJlc2VudCkge1xuICAgICAgICBzZW5kKCdNT1VOVCcpO1xuICAgICAgfSBlbHNlIGlmIChjdXJyZW50QW5pbWF0aW9uTmFtZSA9PT0gJ25vbmUnIHx8IHN0eWxlcz8uZGlzcGxheSA9PT0gJ25vbmUnKSB7XG4gICAgICAgIC8vIElmIHRoZXJlIGlzIG5vIGV4aXQgYW5pbWF0aW9uIG9yIHRoZSBlbGVtZW50IGlzIGhpZGRlbiwgYW5pbWF0aW9ucyB3b24ndCBydW5cbiAgICAgICAgLy8gc28gd2UgdW5tb3VudCBpbnN0YW50bHlcbiAgICAgICAgc2VuZCgnVU5NT1VOVCcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFdoZW4gYHByZXNlbnRgIGNoYW5nZXMgdG8gYGZhbHNlYCwgd2UgY2hlY2sgY2hhbmdlcyB0byBhbmltYXRpb24tbmFtZSB0b1xuICAgICAgICAgKiBkZXRlcm1pbmUgd2hldGhlciBhbiBhbmltYXRpb24gaGFzIHN0YXJ0ZWQuIFdlIGNob3NlIHRoaXMgYXBwcm9hY2ggKHJlYWRpbmdcbiAgICAgICAgICogY29tcHV0ZWQgc3R5bGVzKSBiZWNhdXNlIHRoZXJlIGlzIG5vIGBhbmltYXRpb25ydW5gIGV2ZW50IGFuZCBgYW5pbWF0aW9uc3RhcnRgXG4gICAgICAgICAqIGZpcmVzIGFmdGVyIGBhbmltYXRpb24tZGVsYXlgIGhhcyBleHBpcmVkIHdoaWNoIHdvdWxkIGJlIHRvbyBsYXRlLlxuICAgICAgICAgKi9cbiAgICAgICAgY29uc3QgaXNBbmltYXRpbmcgPSBwcmV2QW5pbWF0aW9uTmFtZSAhPT0gY3VycmVudEFuaW1hdGlvbk5hbWU7XG5cbiAgICAgICAgaWYgKHdhc1ByZXNlbnQgJiYgaXNBbmltYXRpbmcpIHtcbiAgICAgICAgICBzZW5kKCdBTklNQVRJT05fT1VUJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2VuZCgnVU5NT1VOVCcpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHByZXZQcmVzZW50UmVmLmN1cnJlbnQgPSBwcmVzZW50O1xuICAgIH1cbiAgfSwgW3ByZXNlbnQsIHNlbmRdKTtcblxuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChub2RlKSB7XG4gICAgICBsZXQgdGltZW91dElkOiBudW1iZXI7XG4gICAgICBjb25zdCBvd25lcldpbmRvdyA9IG5vZGUub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldyA/PyB3aW5kb3c7XG4gICAgICAvKipcbiAgICAgICAqIFRyaWdnZXJpbmcgYW4gQU5JTUFUSU9OX09VVCBkdXJpbmcgYW4gQU5JTUFUSU9OX0lOIHdpbGwgZmlyZSBhbiBgYW5pbWF0aW9uY2FuY2VsYFxuICAgICAgICogZXZlbnQgZm9yIEFOSU1BVElPTl9JTiBhZnRlciB3ZSBoYXZlIGVudGVyZWQgYHVubW91bnRTdXNwZW5kZWRgIHN0YXRlLiBTbywgd2VcbiAgICAgICAqIG1ha2Ugc3VyZSB3ZSBvbmx5IHRyaWdnZXIgQU5JTUFUSU9OX0VORCBmb3IgdGhlIGN1cnJlbnRseSBhY3RpdmUgYW5pbWF0aW9uLlxuICAgICAgICovXG4gICAgICBjb25zdCBoYW5kbGVBbmltYXRpb25FbmQgPSAoZXZlbnQ6IEFuaW1hdGlvbkV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRBbmltYXRpb25OYW1lID0gZ2V0QW5pbWF0aW9uTmFtZShzdHlsZXNSZWYuY3VycmVudCk7XG4gICAgICAgIGNvbnN0IGlzQ3VycmVudEFuaW1hdGlvbiA9IGN1cnJlbnRBbmltYXRpb25OYW1lLmluY2x1ZGVzKGV2ZW50LmFuaW1hdGlvbk5hbWUpO1xuICAgICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSBub2RlICYmIGlzQ3VycmVudEFuaW1hdGlvbikge1xuICAgICAgICAgIC8vIFdpdGggUmVhY3QgMTggY29uY3VycmVuY3kgdGhpcyB1cGRhdGUgaXMgYXBwbGllZCBhIGZyYW1lIGFmdGVyIHRoZVxuICAgICAgICAgIC8vIGFuaW1hdGlvbiBlbmRzLCBjcmVhdGluZyBhIGZsYXNoIG9mIHZpc2libGUgY29udGVudC4gQnkgc2V0dGluZyB0aGVcbiAgICAgICAgICAvLyBhbmltYXRpb24gZmlsbCBtb2RlIHRvIFwiZm9yd2FyZHNcIiwgd2UgZm9yY2UgdGhlIG5vZGUgdG8ga2VlcCB0aGVcbiAgICAgICAgICAvLyBzdHlsZXMgb2YgdGhlIGxhc3Qga2V5ZnJhbWUsIHJlbW92aW5nIHRoZSBmbGFzaC5cbiAgICAgICAgICAvL1xuICAgICAgICAgIC8vIFByZXZpb3VzbHkgd2UgZmx1c2hlZCB0aGUgdXBkYXRlIHZpYSBSZWFjdERvbS5mbHVzaFN5bmMsIGJ1dCB3aXRoXG4gICAgICAgICAgLy8gZXhpdCBhbmltYXRpb25zIHRoaXMgcmVzdWx0ZWQgaW4gdGhlIG5vZGUgYmVpbmcgcmVtb3ZlZCBmcm9tIHRoZVxuICAgICAgICAgIC8vIERPTSBiZWZvcmUgdGhlIHN5bnRoZXRpYyBhbmltYXRpb25FbmQgZXZlbnQgd2FzIGRpc3BhdGNoZWQsIG1lYW5pbmdcbiAgICAgICAgICAvLyB1c2VyLXByb3ZpZGVkIGV2ZW50IGhhbmRsZXJzIHdvdWxkIG5vdCBiZSBjYWxsZWQuXG4gICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3JhZGl4LXVpL3ByaW1pdGl2ZXMvcHVsbC8xODQ5XG4gICAgICAgICAgc2VuZCgnQU5JTUFUSU9OX0VORCcpO1xuICAgICAgICAgIGlmICghcHJldlByZXNlbnRSZWYuY3VycmVudCkge1xuICAgICAgICAgICAgY29uc3QgY3VycmVudEZpbGxNb2RlID0gbm9kZS5zdHlsZS5hbmltYXRpb25GaWxsTW9kZTtcbiAgICAgICAgICAgIG5vZGUuc3R5bGUuYW5pbWF0aW9uRmlsbE1vZGUgPSAnZm9yd2FyZHMnO1xuICAgICAgICAgICAgLy8gUmVzZXQgdGhlIHN0eWxlIGFmdGVyIHRoZSBub2RlIGhhZCB0aW1lIHRvIHVubW91bnQgKGZvciBjYXNlc1xuICAgICAgICAgICAgLy8gd2hlcmUgdGhlIGNvbXBvbmVudCBjaG9vc2VzIG5vdCB0byB1bm1vdW50KS4gRG9pbmcgdGhpcyBhbnlcbiAgICAgICAgICAgIC8vIHNvb25lciB0aGFuIGBzZXRUaW1lb3V0YCAoZS5nLiB3aXRoIGByZXF1ZXN0QW5pbWF0aW9uRnJhbWVgKVxuICAgICAgICAgICAgLy8gc3RpbGwgY2F1c2VzIGEgZmxhc2guXG4gICAgICAgICAgICB0aW1lb3V0SWQgPSBvd25lcldpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgaWYgKG5vZGUuc3R5bGUuYW5pbWF0aW9uRmlsbE1vZGUgPT09ICdmb3J3YXJkcycpIHtcbiAgICAgICAgICAgICAgICBub2RlLnN0eWxlLmFuaW1hdGlvbkZpbGxNb2RlID0gY3VycmVudEZpbGxNb2RlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBjb25zdCBoYW5kbGVBbmltYXRpb25TdGFydCA9IChldmVudDogQW5pbWF0aW9uRXZlbnQpID0+IHtcbiAgICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gbm9kZSkge1xuICAgICAgICAgIC8vIGlmIGFuaW1hdGlvbiBvY2N1cnJlZCwgc3RvcmUgaXRzIG5hbWUgYXMgdGhlIHByZXZpb3VzIGFuaW1hdGlvbi5cbiAgICAgICAgICBwcmV2QW5pbWF0aW9uTmFtZVJlZi5jdXJyZW50ID0gZ2V0QW5pbWF0aW9uTmFtZShzdHlsZXNSZWYuY3VycmVudCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbnN0YXJ0JywgaGFuZGxlQW5pbWF0aW9uU3RhcnQpO1xuICAgICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKCdhbmltYXRpb25jYW5jZWwnLCBoYW5kbGVBbmltYXRpb25FbmQpO1xuICAgICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBoYW5kbGVBbmltYXRpb25FbmQpO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgb3duZXJXaW5kb3cuY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICAgIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uc3RhcnQnLCBoYW5kbGVBbmltYXRpb25TdGFydCk7XG4gICAgICAgIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uY2FuY2VsJywgaGFuZGxlQW5pbWF0aW9uRW5kKTtcbiAgICAgICAgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBoYW5kbGVBbmltYXRpb25FbmQpO1xuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gVHJhbnNpdGlvbiB0byB0aGUgdW5tb3VudGVkIHN0YXRlIGlmIHRoZSBub2RlIGlzIHJlbW92ZWQgcHJlbWF0dXJlbHkuXG4gICAgICAvLyBXZSBhdm9pZCBkb2luZyBzbyBkdXJpbmcgY2xlYW51cCBhcyB0aGUgbm9kZSBtYXkgY2hhbmdlIGJ1dCBzdGlsbCBleGlzdC5cbiAgICAgIHNlbmQoJ0FOSU1BVElPTl9FTkQnKTtcbiAgICB9XG4gIH0sIFtub2RlLCBzZW5kXSk7XG5cbiAgcmV0dXJuIHtcbiAgICBpc1ByZXNlbnQ6IFsnbW91bnRlZCcsICd1bm1vdW50U3VzcGVuZGVkJ10uaW5jbHVkZXMoc3RhdGUpLFxuICAgIHJlZjogUmVhY3QudXNlQ2FsbGJhY2soKG5vZGU6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgICBpZiAobm9kZSkgc3R5bGVzUmVmLmN1cnJlbnQgPSBnZXRDb21wdXRlZFN0eWxlKG5vZGUpO1xuICAgICAgc2V0Tm9kZShub2RlKTtcbiAgICB9LCBbXSksXG4gIH07XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuZnVuY3Rpb24gZ2V0QW5pbWF0aW9uTmFtZShzdHlsZXM/OiBDU1NTdHlsZURlY2xhcmF0aW9uKSB7XG4gIHJldHVybiBzdHlsZXM/LmFuaW1hdGlvbk5hbWUgfHwgJ25vbmUnO1xufVxuXG4vLyBCZWZvcmUgUmVhY3QgMTkgYWNjZXNzaW5nIGBlbGVtZW50LnByb3BzLnJlZmAgd2lsbCB0aHJvdyBhIHdhcm5pbmcgYW5kIHN1Z2dlc3QgdXNpbmcgYGVsZW1lbnQucmVmYFxuLy8gQWZ0ZXIgUmVhY3QgMTkgYWNjZXNzaW5nIGBlbGVtZW50LnJlZmAgZG9lcyB0aGUgb3Bwb3NpdGUuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvcHVsbC8yODM0OFxuLy9cbi8vIEFjY2VzcyB0aGUgcmVmIHVzaW5nIHRoZSBtZXRob2QgdGhhdCBkb2Vzbid0IHlpZWxkIGEgd2FybmluZy5cbmZ1bmN0aW9uIGdldEVsZW1lbnRSZWYoZWxlbWVudDogUmVhY3QuUmVhY3RFbGVtZW50KSB7XG4gIC8vIFJlYWN0IDw9MTggaW4gREVWXG4gIGxldCBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGVsZW1lbnQucHJvcHMsICdyZWYnKT8uZ2V0O1xuICBsZXQgbWF5V2FybiA9IGdldHRlciAmJiAnaXNSZWFjdFdhcm5pbmcnIGluIGdldHRlciAmJiBnZXR0ZXIuaXNSZWFjdFdhcm5pbmc7XG4gIGlmIChtYXlXYXJuKSB7XG4gICAgcmV0dXJuIChlbGVtZW50IGFzIGFueSkucmVmO1xuICB9XG5cbiAgLy8gUmVhY3QgMTkgaW4gREVWXG4gIGdldHRlciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZWxlbWVudCwgJ3JlZicpPy5nZXQ7XG4gIG1heVdhcm4gPSBnZXR0ZXIgJiYgJ2lzUmVhY3RXYXJuaW5nJyBpbiBnZXR0ZXIgJiYgZ2V0dGVyLmlzUmVhY3RXYXJuaW5nO1xuICBpZiAobWF5V2Fybikge1xuICAgIHJldHVybiBlbGVtZW50LnByb3BzLnJlZjtcbiAgfVxuXG4gIC8vIE5vdCBERVZcbiAgcmV0dXJuIGVsZW1lbnQucHJvcHMucmVmIHx8IChlbGVtZW50IGFzIGFueSkucmVmO1xufVxuXG5leHBvcnQgeyBQcmVzZW5jZSB9O1xuZXhwb3J0IHR5cGUgeyBQcmVzZW5jZVByb3BzIH07XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbnR5cGUgTWFjaGluZTxTPiA9IHsgW2s6IHN0cmluZ106IHsgW2s6IHN0cmluZ106IFMgfSB9O1xudHlwZSBNYWNoaW5lU3RhdGU8VD4gPSBrZXlvZiBUO1xudHlwZSBNYWNoaW5lRXZlbnQ8VD4gPSBrZXlvZiBVbmlvblRvSW50ZXJzZWN0aW9uPFRba2V5b2YgVF0+O1xuXG4vLyDwn6SvIGh0dHBzOi8vZmV0dGJsb2cuZXUvdHlwZXNjcmlwdC11bmlvbi10by1pbnRlcnNlY3Rpb24vXG50eXBlIFVuaW9uVG9JbnRlcnNlY3Rpb248VD4gPSAoVCBleHRlbmRzIGFueSA/ICh4OiBUKSA9PiBhbnkgOiBuZXZlcikgZXh0ZW5kcyAoeDogaW5mZXIgUikgPT4gYW55XG4gID8gUlxuICA6IG5ldmVyO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlU3RhdGVNYWNoaW5lPE0+KFxuICBpbml0aWFsU3RhdGU6IE1hY2hpbmVTdGF0ZTxNPixcbiAgbWFjaGluZTogTSAmIE1hY2hpbmU8TWFjaGluZVN0YXRlPE0+PlxuKSB7XG4gIHJldHVybiBSZWFjdC51c2VSZWR1Y2VyKChzdGF0ZTogTWFjaGluZVN0YXRlPE0+LCBldmVudDogTWFjaGluZUV2ZW50PE0+KTogTWFjaGluZVN0YXRlPE0+ID0+IHtcbiAgICBjb25zdCBuZXh0U3RhdGUgPSAobWFjaGluZVtzdGF0ZV0gYXMgYW55KVtldmVudF07XG4gICAgcmV0dXJuIG5leHRTdGF0ZSA/PyBzdGF0ZTtcbiAgfSwgaW5pdGlhbFN0YXRlKTtcbn1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUNvbXBvc2VkUmVmcyIsInVzZUxheW91dEVmZmVjdCIsInVzZVN0YXRlTWFjaGluZSIsImluaXRpYWxTdGF0ZSIsIm1hY2hpbmUiLCJ1c2VSZWR1Y2VyIiwic3RhdGUiLCJldmVudCIsIm5leHRTdGF0ZSIsIlByZXNlbmNlIiwicHJvcHMiLCJwcmVzZW50IiwiY2hpbGRyZW4iLCJwcmVzZW5jZSIsInVzZVByZXNlbmNlIiwiY2hpbGQiLCJpc1ByZXNlbnQiLCJSZWFjdDIiLCJDaGlsZHJlbiIsIm9ubHkiLCJyZWYiLCJnZXRFbGVtZW50UmVmIiwiZm9yY2VNb3VudCIsImNsb25lRWxlbWVudCIsImRpc3BsYXlOYW1lIiwibm9kZSIsInNldE5vZGUiLCJ1c2VTdGF0ZSIsInN0eWxlc1JlZiIsInVzZVJlZiIsInByZXZQcmVzZW50UmVmIiwicHJldkFuaW1hdGlvbk5hbWVSZWYiLCJzZW5kIiwibW91bnRlZCIsIlVOTU9VTlQiLCJBTklNQVRJT05fT1VUIiwidW5tb3VudFN1c3BlbmRlZCIsIk1PVU5UIiwiQU5JTUFUSU9OX0VORCIsInVubW91bnRlZCIsInVzZUVmZmVjdCIsImN1cnJlbnRBbmltYXRpb25OYW1lIiwiZ2V0QW5pbWF0aW9uTmFtZSIsImN1cnJlbnQiLCJzdHlsZXMiLCJ3YXNQcmVzZW50IiwiaGFzUHJlc2VudENoYW5nZWQiLCJwcmV2QW5pbWF0aW9uTmFtZSIsImRpc3BsYXkiLCJpc0FuaW1hdGluZyIsInRpbWVvdXRJZCIsIm93bmVyV2luZG93Iiwib3duZXJEb2N1bWVudCIsImRlZmF1bHRWaWV3Iiwid2luZG93IiwiaGFuZGxlQW5pbWF0aW9uRW5kIiwiaXNDdXJyZW50QW5pbWF0aW9uIiwiaW5jbHVkZXMiLCJhbmltYXRpb25OYW1lIiwidGFyZ2V0IiwiY3VycmVudEZpbGxNb2RlIiwic3R5bGUiLCJhbmltYXRpb25GaWxsTW9kZSIsInNldFRpbWVvdXQiLCJoYW5kbGVBbmltYXRpb25TdGFydCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGVhclRpbWVvdXQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwidXNlQ2FsbGJhY2siLCJnZXRDb21wdXRlZFN0eWxlIiwiZWxlbWVudCIsIk9iamVjdCIsImdldHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldCIsIm1heVdhcm4iLCJpc1JlYWN0V2FybmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@radix-ui/react-primitive/dist/index.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Primitive: function() { return /* binding */ Primitive; },\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   dispatchDiscreteCustomEvent: function() { return /* binding */ dispatchDiscreteCustomEvent; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/primitive/src/Primitive.tsx\n\n\n\n\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Node = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__.Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUNPO0FBQ007QUFDSjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkNBQWdCO0FBQy9CLFlBQVksNkJBQTZCO0FBQ3pDLDJCQUEyQixzREFBSTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsc0RBQUcsU0FBUyxzQ0FBc0M7QUFDN0UsR0FBRztBQUNILGtDQUFrQyxLQUFLO0FBQ3ZDLFdBQVc7QUFDWCxDQUFDLElBQUk7QUFDTDtBQUNBLGNBQWMsZ0RBQWtCO0FBQ2hDO0FBQ0E7QUFLRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzPzM2MTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvcHJpbWl0aXZlL3NyYy9QcmltaXRpdmUudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcbmltcG9ydCB7IFNsb3QgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXNsb3RcIjtcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xudmFyIE5PREVTID0gW1xuICBcImFcIixcbiAgXCJidXR0b25cIixcbiAgXCJkaXZcIixcbiAgXCJmb3JtXCIsXG4gIFwiaDJcIixcbiAgXCJoM1wiLFxuICBcImltZ1wiLFxuICBcImlucHV0XCIsXG4gIFwibGFiZWxcIixcbiAgXCJsaVwiLFxuICBcIm5hdlwiLFxuICBcIm9sXCIsXG4gIFwicFwiLFxuICBcInNwYW5cIixcbiAgXCJzdmdcIixcbiAgXCJ1bFwiXG5dO1xudmFyIFByaW1pdGl2ZSA9IE5PREVTLnJlZHVjZSgocHJpbWl0aXZlLCBub2RlKSA9PiB7XG4gIGNvbnN0IE5vZGUgPSBSZWFjdC5mb3J3YXJkUmVmKChwcm9wcywgZm9yd2FyZGVkUmVmKSA9PiB7XG4gICAgY29uc3QgeyBhc0NoaWxkLCAuLi5wcmltaXRpdmVQcm9wcyB9ID0gcHJvcHM7XG4gICAgY29uc3QgQ29tcCA9IGFzQ2hpbGQgPyBTbG90IDogbm9kZTtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgd2luZG93W1N5bWJvbC5mb3IoXCJyYWRpeC11aVwiKV0gPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChDb21wLCB7IC4uLnByaW1pdGl2ZVByb3BzLCByZWY6IGZvcndhcmRlZFJlZiB9KTtcbiAgfSk7XG4gIE5vZGUuZGlzcGxheU5hbWUgPSBgUHJpbWl0aXZlLiR7bm9kZX1gO1xuICByZXR1cm4geyAuLi5wcmltaXRpdmUsIFtub2RlXTogTm9kZSB9O1xufSwge30pO1xuZnVuY3Rpb24gZGlzcGF0Y2hEaXNjcmV0ZUN1c3RvbUV2ZW50KHRhcmdldCwgZXZlbnQpIHtcbiAgaWYgKHRhcmdldCkgUmVhY3RET00uZmx1c2hTeW5jKCgpID0+IHRhcmdldC5kaXNwYXRjaEV2ZW50KGV2ZW50KSk7XG59XG52YXIgUm9vdCA9IFByaW1pdGl2ZTtcbmV4cG9ydCB7XG4gIFByaW1pdGl2ZSxcbiAgUm9vdCxcbiAgZGlzcGF0Y2hEaXNjcmV0ZUN1c3RvbUV2ZW50XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@radix-ui/react-slot/dist/index.mjs ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   Slot: function() { return /* binding */ Slot; },\n/* harmony export */   Slottable: function() { return /* binding */ Slottable; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/slot/src/Slot.tsx\n\n\n\nvar Slot = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (react__WEBPACK_IMPORTED_MODULE_0__.Children.count(newElement) > 1) return react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null);\n        return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children: react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(forwardedRef, childrenRef) : childrenRef\n    });\n  }\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) > 1 ? react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children });\n};\nfunction isSlottable(child) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3Qtc2xvdC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUM0QjtBQUNUO0FBQ2xELFdBQVcsNkNBQWdCO0FBQzNCLFVBQVUseUJBQXlCO0FBQ25DLHdCQUF3QiwyQ0FBYztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQ0FBYywrQkFBK0IsMkNBQWM7QUFDdkUsZUFBZSxpREFBb0I7QUFDbkMsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMkJBQTJCLHNEQUFHLGNBQWMsMkNBQTJDLGlEQUFvQixlQUFlLCtDQUFrQiwwQ0FBMEM7QUFDdEw7QUFDQSx5QkFBeUIsc0RBQUcsY0FBYywyQ0FBMkM7QUFDckYsQ0FBQztBQUNEO0FBQ0EsZ0JBQWdCLDZDQUFnQjtBQUNoQyxVQUFVLHlCQUF5QjtBQUNuQyxNQUFNLGlEQUFvQjtBQUMxQjtBQUNBLFdBQVcsK0NBQWtCO0FBQzdCO0FBQ0E7QUFDQSwwQkFBMEIseUVBQVc7QUFDckMsS0FBSztBQUNMO0FBQ0EsU0FBUywyQ0FBYyx1QkFBdUIsMkNBQWM7QUFDNUQsQ0FBQztBQUNEO0FBQ0EsbUJBQW1CLFVBQVU7QUFDN0IseUJBQXlCLHNEQUFHLENBQUMsdURBQVEsSUFBSSxVQUFVO0FBQ25EO0FBQ0E7QUFDQSxTQUFTLGlEQUFvQjtBQUM3QjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ04sa0NBQWtDO0FBQ2xDLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LXNsb3QvZGlzdC9pbmRleC5tanM/ZjQyMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC9zbG90L3NyYy9TbG90LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb21wb3NlUmVmcyB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzXCI7XG5pbXBvcnQgeyBGcmFnbWVudCwganN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG52YXIgU2xvdCA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgY29uc3QgeyBjaGlsZHJlbiwgLi4uc2xvdFByb3BzIH0gPSBwcm9wcztcbiAgY29uc3QgY2hpbGRyZW5BcnJheSA9IFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoY2hpbGRyZW4pO1xuICBjb25zdCBzbG90dGFibGUgPSBjaGlsZHJlbkFycmF5LmZpbmQoaXNTbG90dGFibGUpO1xuICBpZiAoc2xvdHRhYmxlKSB7XG4gICAgY29uc3QgbmV3RWxlbWVudCA9IHNsb3R0YWJsZS5wcm9wcy5jaGlsZHJlbjtcbiAgICBjb25zdCBuZXdDaGlsZHJlbiA9IGNoaWxkcmVuQXJyYXkubWFwKChjaGlsZCkgPT4ge1xuICAgICAgaWYgKGNoaWxkID09PSBzbG90dGFibGUpIHtcbiAgICAgICAgaWYgKFJlYWN0LkNoaWxkcmVuLmNvdW50KG5ld0VsZW1lbnQpID4gMSkgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLm9ubHkobnVsbCk7XG4gICAgICAgIHJldHVybiBSZWFjdC5pc1ZhbGlkRWxlbWVudChuZXdFbGVtZW50KSA/IG5ld0VsZW1lbnQucHJvcHMuY2hpbGRyZW4gOiBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFNsb3RDbG9uZSwgeyAuLi5zbG90UHJvcHMsIHJlZjogZm9yd2FyZGVkUmVmLCBjaGlsZHJlbjogUmVhY3QuaXNWYWxpZEVsZW1lbnQobmV3RWxlbWVudCkgPyBSZWFjdC5jbG9uZUVsZW1lbnQobmV3RWxlbWVudCwgdm9pZCAwLCBuZXdDaGlsZHJlbikgOiBudWxsIH0pO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFNsb3RDbG9uZSwgeyAuLi5zbG90UHJvcHMsIHJlZjogZm9yd2FyZGVkUmVmLCBjaGlsZHJlbiB9KTtcbn0pO1xuU2xvdC5kaXNwbGF5TmFtZSA9IFwiU2xvdFwiO1xudmFyIFNsb3RDbG9uZSA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgY29uc3QgeyBjaGlsZHJlbiwgLi4uc2xvdFByb3BzIH0gPSBwcm9wcztcbiAgaWYgKFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkcmVuKSkge1xuICAgIGNvbnN0IGNoaWxkcmVuUmVmID0gZ2V0RWxlbWVudFJlZihjaGlsZHJlbik7XG4gICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZHJlbiwge1xuICAgICAgLi4ubWVyZ2VQcm9wcyhzbG90UHJvcHMsIGNoaWxkcmVuLnByb3BzKSxcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHJlZjogZm9yd2FyZGVkUmVmID8gY29tcG9zZVJlZnMoZm9yd2FyZGVkUmVmLCBjaGlsZHJlblJlZikgOiBjaGlsZHJlblJlZlxuICAgIH0pO1xuICB9XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPiAxID8gUmVhY3QuQ2hpbGRyZW4ub25seShudWxsKSA6IG51bGw7XG59KTtcblNsb3RDbG9uZS5kaXNwbGF5TmFtZSA9IFwiU2xvdENsb25lXCI7XG52YXIgU2xvdHRhYmxlID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChGcmFnbWVudCwgeyBjaGlsZHJlbiB9KTtcbn07XG5mdW5jdGlvbiBpc1Nsb3R0YWJsZShjaGlsZCkge1xuICByZXR1cm4gUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpICYmIGNoaWxkLnR5cGUgPT09IFNsb3R0YWJsZTtcbn1cbmZ1bmN0aW9uIG1lcmdlUHJvcHMoc2xvdFByb3BzLCBjaGlsZFByb3BzKSB7XG4gIGNvbnN0IG92ZXJyaWRlUHJvcHMgPSB7IC4uLmNoaWxkUHJvcHMgfTtcbiAgZm9yIChjb25zdCBwcm9wTmFtZSBpbiBjaGlsZFByb3BzKSB7XG4gICAgY29uc3Qgc2xvdFByb3BWYWx1ZSA9IHNsb3RQcm9wc1twcm9wTmFtZV07XG4gICAgY29uc3QgY2hpbGRQcm9wVmFsdWUgPSBjaGlsZFByb3BzW3Byb3BOYW1lXTtcbiAgICBjb25zdCBpc0hhbmRsZXIgPSAvXm9uW0EtWl0vLnRlc3QocHJvcE5hbWUpO1xuICAgIGlmIChpc0hhbmRsZXIpIHtcbiAgICAgIGlmIChzbG90UHJvcFZhbHVlICYmIGNoaWxkUHJvcFZhbHVlKSB7XG4gICAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICBjaGlsZFByb3BWYWx1ZSguLi5hcmdzKTtcbiAgICAgICAgICBzbG90UHJvcFZhbHVlKC4uLmFyZ3MpO1xuICAgICAgICB9O1xuICAgICAgfSBlbHNlIGlmIChzbG90UHJvcFZhbHVlKSB7XG4gICAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gc2xvdFByb3BWYWx1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHByb3BOYW1lID09PSBcInN0eWxlXCIpIHtcbiAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0geyAuLi5zbG90UHJvcFZhbHVlLCAuLi5jaGlsZFByb3BWYWx1ZSB9O1xuICAgIH0gZWxzZSBpZiAocHJvcE5hbWUgPT09IFwiY2xhc3NOYW1lXCIpIHtcbiAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gW3Nsb3RQcm9wVmFsdWUsIGNoaWxkUHJvcFZhbHVlXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG4gICAgfVxuICB9XG4gIHJldHVybiB7IC4uLnNsb3RQcm9wcywgLi4ub3ZlcnJpZGVQcm9wcyB9O1xufVxuZnVuY3Rpb24gZ2V0RWxlbWVudFJlZihlbGVtZW50KSB7XG4gIGxldCBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGVsZW1lbnQucHJvcHMsIFwicmVmXCIpPy5nZXQ7XG4gIGxldCBtYXlXYXJuID0gZ2V0dGVyICYmIFwiaXNSZWFjdFdhcm5pbmdcIiBpbiBnZXR0ZXIgJiYgZ2V0dGVyLmlzUmVhY3RXYXJuaW5nO1xuICBpZiAobWF5V2Fybikge1xuICAgIHJldHVybiBlbGVtZW50LnJlZjtcbiAgfVxuICBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGVsZW1lbnQsIFwicmVmXCIpPy5nZXQ7XG4gIG1heVdhcm4gPSBnZXR0ZXIgJiYgXCJpc1JlYWN0V2FybmluZ1wiIGluIGdldHRlciAmJiBnZXR0ZXIuaXNSZWFjdFdhcm5pbmc7XG4gIGlmIChtYXlXYXJuKSB7XG4gICAgcmV0dXJuIGVsZW1lbnQucHJvcHMucmVmO1xuICB9XG4gIHJldHVybiBlbGVtZW50LnByb3BzLnJlZiB8fCBlbGVtZW50LnJlZjtcbn1cbnZhciBSb290ID0gU2xvdDtcbmV4cG9ydCB7XG4gIFJvb3QsXG4gIFNsb3QsXG4gIFNsb3R0YWJsZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-tooltip/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@radix-ui/react-tooltip/dist/index.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Arrow: function() { return /* binding */ Arrow2; },\n/* harmony export */   Content: function() { return /* binding */ Content2; },\n/* harmony export */   Portal: function() { return /* binding */ Portal; },\n/* harmony export */   Provider: function() { return /* binding */ Provider; },\n/* harmony export */   Root: function() { return /* binding */ Root3; },\n/* harmony export */   Tooltip: function() { return /* binding */ Tooltip; },\n/* harmony export */   TooltipArrow: function() { return /* binding */ TooltipArrow; },\n/* harmony export */   TooltipContent: function() { return /* binding */ TooltipContent; },\n/* harmony export */   TooltipPortal: function() { return /* binding */ TooltipPortal; },\n/* harmony export */   TooltipProvider: function() { return /* binding */ TooltipProvider; },\n/* harmony export */   TooltipTrigger: function() { return /* binding */ TooltipTrigger; },\n/* harmony export */   Trigger: function() { return /* binding */ Trigger; },\n/* harmony export */   createTooltipScope: function() { return /* binding */ createTooltipScope; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @radix-ui/react-dismissable-layer */ \"(app-pages-browser)/./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-id */ \"(app-pages-browser)/./node_modules/@radix-ui/react-id/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-popper */ \"(app-pages-browser)/./node_modules/@radix-ui/react-popper/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-portal */ \"(app-pages-browser)/./node_modules/@radix-ui/react-portal/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @radix-ui/react-presence */ \"(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/react-use-controllable-state */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_visually_hidden__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @radix-ui/react-visually-hidden */ \"(app-pages-browser)/./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Arrow,Content,Portal,Provider,Root,Tooltip,TooltipArrow,TooltipContent,TooltipPortal,TooltipProvider,TooltipTrigger,Trigger,createTooltipScope auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$();\n// packages/react/tooltip/src/Tooltip.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar [createTooltipContext, createTooltipScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContextScope)(\"Tooltip\", [\n    _radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.createPopperScope\n]);\nvar usePopperScope = (0,_radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.createPopperScope)();\nvar PROVIDER_NAME = \"TooltipProvider\";\nvar DEFAULT_DELAY_DURATION = 700;\nvar TOOLTIP_OPEN = \"tooltip.open\";\nvar [TooltipProviderContextProvider, useTooltipProviderContext] = createTooltipContext(PROVIDER_NAME);\nvar TooltipProvider = (props)=>{\n    _s();\n    const { __scopeTooltip, delayDuration = DEFAULT_DELAY_DURATION, skipDelayDuration = 300, disableHoverableContent = false, children } = props;\n    const [isOpenDelayed, setIsOpenDelayed] = react__WEBPACK_IMPORTED_MODULE_0__.useState(true);\n    const isPointerInTransitRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const skipDelayTimerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const skipDelayTimer = skipDelayTimerRef.current;\n        return ()=>window.clearTimeout(skipDelayTimer);\n    }, []);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TooltipProviderContextProvider, {\n        scope: __scopeTooltip,\n        isOpenDelayed,\n        delayDuration,\n        onOpen: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n            window.clearTimeout(skipDelayTimerRef.current);\n            setIsOpenDelayed(false);\n        }, []),\n        onClose: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n            window.clearTimeout(skipDelayTimerRef.current);\n            skipDelayTimerRef.current = window.setTimeout(()=>setIsOpenDelayed(true), skipDelayDuration);\n        }, [\n            skipDelayDuration\n        ]),\n        isPointerInTransitRef,\n        onPointerInTransitChange: react__WEBPACK_IMPORTED_MODULE_0__.useCallback((inTransit)=>{\n            isPointerInTransitRef.current = inTransit;\n        }, []),\n        disableHoverableContent,\n        children\n    });\n};\n_s(TooltipProvider, \"7CC5C5/6eLGaHqZaMJKZGYCw0s8=\");\n_c = TooltipProvider;\nTooltipProvider.displayName = PROVIDER_NAME;\nvar TOOLTIP_NAME = \"Tooltip\";\nvar [TooltipContextProvider, useTooltipContext] = createTooltipContext(TOOLTIP_NAME);\nvar Tooltip = (props)=>{\n    _s1();\n    const { __scopeTooltip, children, open: openProp, defaultOpen = false, onOpenChange, disableHoverableContent: disableHoverableContentProp, delayDuration: delayDurationProp } = props;\n    const providerContext = useTooltipProviderContext(TOOLTIP_NAME, props.__scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const [trigger, setTrigger] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const contentId = (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__.useId)();\n    const openTimerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const disableHoverableContent = disableHoverableContentProp !== null && disableHoverableContentProp !== void 0 ? disableHoverableContentProp : providerContext.disableHoverableContent;\n    const delayDuration = delayDurationProp !== null && delayDurationProp !== void 0 ? delayDurationProp : providerContext.delayDuration;\n    const wasOpenDelayedRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const [open = false, setOpen] = (0,_radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_5__.useControllableState)({\n        prop: openProp,\n        defaultProp: defaultOpen,\n        onChange: (open2)=>{\n            if (open2) {\n                providerContext.onOpen();\n                document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN));\n            } else {\n                providerContext.onClose();\n            }\n            onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(open2);\n        }\n    });\n    const stateAttribute = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        return open ? wasOpenDelayedRef.current ? \"delayed-open\" : \"instant-open\" : \"closed\";\n    }, [\n        open\n    ]);\n    const handleOpen = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        window.clearTimeout(openTimerRef.current);\n        wasOpenDelayedRef.current = false;\n        setOpen(true);\n    }, [\n        setOpen\n    ]);\n    const handleClose = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        window.clearTimeout(openTimerRef.current);\n        setOpen(false);\n    }, [\n        setOpen\n    ]);\n    const handleDelayedOpen = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        window.clearTimeout(openTimerRef.current);\n        openTimerRef.current = window.setTimeout(()=>{\n            wasOpenDelayedRef.current = true;\n            setOpen(true);\n        }, delayDuration);\n    }, [\n        delayDuration,\n        setOpen\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        return ()=>window.clearTimeout(openTimerRef.current);\n    }, []);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.Root, {\n        ...popperScope,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TooltipContextProvider, {\n            scope: __scopeTooltip,\n            contentId,\n            open,\n            stateAttribute,\n            trigger,\n            onTriggerChange: setTrigger,\n            onTriggerEnter: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n                if (providerContext.isOpenDelayed) handleDelayedOpen();\n                else handleOpen();\n            }, [\n                providerContext.isOpenDelayed,\n                handleDelayedOpen,\n                handleOpen\n            ]),\n            onTriggerLeave: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n                if (disableHoverableContent) {\n                    handleClose();\n                } else {\n                    window.clearTimeout(openTimerRef.current);\n                }\n            }, [\n                handleClose,\n                disableHoverableContent\n            ]),\n            onOpen: handleOpen,\n            onClose: handleClose,\n            disableHoverableContent,\n            children\n        })\n    });\n};\n_s1(Tooltip, \"fAtXQJdpHqucxKED0AjgEVlojd0=\", false, function() {\n    return [\n        useTooltipProviderContext,\n        usePopperScope,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_4__.useId,\n        _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_5__.useControllableState\n    ];\n});\n_c1 = Tooltip;\nTooltip.displayName = TOOLTIP_NAME;\nvar TRIGGER_NAME = \"TooltipTrigger\";\nvar TooltipTrigger = /*#__PURE__*/ _s2(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c2 = _s2((props, forwardedRef)=>{\n    _s2();\n    const { __scopeTooltip, ...triggerProps } = props;\n    const context = useTooltipContext(TRIGGER_NAME, __scopeTooltip);\n    const providerContext = useTooltipProviderContext(TRIGGER_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__.useComposedRefs)(forwardedRef, ref, context.onTriggerChange);\n    const isPointerDownRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const hasPointerMoveOpenedRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const handlePointerUp = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>isPointerDownRef.current = false, []);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        return ()=>document.removeEventListener(\"pointerup\", handlePointerUp);\n    }, [\n        handlePointerUp\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.Anchor, {\n        asChild: true,\n        ...popperScope,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.button, {\n            \"aria-describedby\": context.open ? context.contentId : void 0,\n            \"data-state\": context.stateAttribute,\n            ...triggerProps,\n            ref: composedRefs,\n            onPointerMove: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__.composeEventHandlers)(props.onPointerMove, (event)=>{\n                if (event.pointerType === \"touch\") return;\n                if (!hasPointerMoveOpenedRef.current && !providerContext.isPointerInTransitRef.current) {\n                    context.onTriggerEnter();\n                    hasPointerMoveOpenedRef.current = true;\n                }\n            }),\n            onPointerLeave: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__.composeEventHandlers)(props.onPointerLeave, ()=>{\n                context.onTriggerLeave();\n                hasPointerMoveOpenedRef.current = false;\n            }),\n            onPointerDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__.composeEventHandlers)(props.onPointerDown, ()=>{\n                isPointerDownRef.current = true;\n                document.addEventListener(\"pointerup\", handlePointerUp, {\n                    once: true\n                });\n            }),\n            onFocus: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__.composeEventHandlers)(props.onFocus, ()=>{\n                if (!isPointerDownRef.current) context.onOpen();\n            }),\n            onBlur: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__.composeEventHandlers)(props.onBlur, context.onClose),\n            onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_8__.composeEventHandlers)(props.onClick, context.onClose)\n        })\n    });\n}, \"Z/k0w2G2HHwGfA8LYHc6RNJM0dc=\", false, function() {\n    return [\n        useTooltipContext,\n        useTooltipProviderContext,\n        usePopperScope,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__.useComposedRefs\n    ];\n})), \"Z/k0w2G2HHwGfA8LYHc6RNJM0dc=\", false, function() {\n    return [\n        useTooltipContext,\n        useTooltipProviderContext,\n        usePopperScope,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__.useComposedRefs\n    ];\n});\n_c3 = TooltipTrigger;\nTooltipTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"TooltipPortal\";\nvar [PortalProvider, usePortalContext] = createTooltipContext(PORTAL_NAME, {\n    forceMount: void 0\n});\nvar TooltipPortal = (props)=>{\n    _s3();\n    const { __scopeTooltip, forceMount, children, container } = props;\n    const context = useTooltipContext(PORTAL_NAME, __scopeTooltip);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PortalProvider, {\n        scope: __scopeTooltip,\n        forceMount,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_9__.Presence, {\n            present: forceMount || context.open,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_10__.Portal, {\n                asChild: true,\n                container,\n                children\n            })\n        })\n    });\n};\n_s3(TooltipPortal, \"xB1jeapIst5f8c7+wNiLkfdUmBA=\", false, function() {\n    return [\n        useTooltipContext\n    ];\n});\n_c4 = TooltipPortal;\nTooltipPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"TooltipContent\";\nvar TooltipContent = /*#__PURE__*/ _s4(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c5 = _s4((props, forwardedRef)=>{\n    _s4();\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeTooltip);\n    const { forceMount = portalContext.forceMount, side = \"top\", ...contentProps } = props;\n    const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_9__.Presence, {\n        present: forceMount || context.open,\n        children: context.disableHoverableContent ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TooltipContentImpl, {\n            side,\n            ...contentProps,\n            ref: forwardedRef\n        }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TooltipContentHoverable, {\n            side,\n            ...contentProps,\n            ref: forwardedRef\n        })\n    });\n}, \"Z69swUFObjAgmys2CDvyqDb1Nbw=\", false, function() {\n    return [\n        usePortalContext,\n        useTooltipContext\n    ];\n})), \"Z69swUFObjAgmys2CDvyqDb1Nbw=\", false, function() {\n    return [\n        usePortalContext,\n        useTooltipContext\n    ];\n});\n_c6 = TooltipContent;\nvar TooltipContentHoverable = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s5((props, forwardedRef)=>{\n    _s5();\n    const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n    const providerContext = useTooltipProviderContext(CONTENT_NAME, props.__scopeTooltip);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__.useComposedRefs)(forwardedRef, ref);\n    const [pointerGraceArea, setPointerGraceArea] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const { trigger, onClose } = context;\n    const content = ref.current;\n    const { onPointerInTransitChange } = providerContext;\n    const handleRemoveGraceArea = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        setPointerGraceArea(null);\n        onPointerInTransitChange(false);\n    }, [\n        onPointerInTransitChange\n    ]);\n    const handleCreateGraceArea = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event, hoverTarget)=>{\n        const currentTarget = event.currentTarget;\n        const exitPoint = {\n            x: event.clientX,\n            y: event.clientY\n        };\n        const exitSide = getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());\n        const paddedExitPoints = getPaddedExitPoints(exitPoint, exitSide);\n        const hoverTargetPoints = getPointsFromRect(hoverTarget.getBoundingClientRect());\n        const graceArea = getHull([\n            ...paddedExitPoints,\n            ...hoverTargetPoints\n        ]);\n        setPointerGraceArea(graceArea);\n        onPointerInTransitChange(true);\n    }, [\n        onPointerInTransitChange\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        return ()=>handleRemoveGraceArea();\n    }, [\n        handleRemoveGraceArea\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (trigger && content) {\n            const handleTriggerLeave = (event)=>handleCreateGraceArea(event, content);\n            const handleContentLeave = (event)=>handleCreateGraceArea(event, trigger);\n            trigger.addEventListener(\"pointerleave\", handleTriggerLeave);\n            content.addEventListener(\"pointerleave\", handleContentLeave);\n            return ()=>{\n                trigger.removeEventListener(\"pointerleave\", handleTriggerLeave);\n                content.removeEventListener(\"pointerleave\", handleContentLeave);\n            };\n        }\n    }, [\n        trigger,\n        content,\n        handleCreateGraceArea,\n        handleRemoveGraceArea\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (pointerGraceArea) {\n            const handleTrackPointerGrace = (event)=>{\n                const target = event.target;\n                const pointerPosition = {\n                    x: event.clientX,\n                    y: event.clientY\n                };\n                const hasEnteredTarget = (trigger === null || trigger === void 0 ? void 0 : trigger.contains(target)) || (content === null || content === void 0 ? void 0 : content.contains(target));\n                const isPointerOutsideGraceArea = !isPointInPolygon(pointerPosition, pointerGraceArea);\n                if (hasEnteredTarget) {\n                    handleRemoveGraceArea();\n                } else if (isPointerOutsideGraceArea) {\n                    handleRemoveGraceArea();\n                    onClose();\n                }\n            };\n            document.addEventListener(\"pointermove\", handleTrackPointerGrace);\n            return ()=>document.removeEventListener(\"pointermove\", handleTrackPointerGrace);\n        }\n    }, [\n        trigger,\n        content,\n        pointerGraceArea,\n        onClose,\n        handleRemoveGraceArea\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TooltipContentImpl, {\n        ...props,\n        ref: composedRefs\n    });\n}, \"gHff4ZZbXA0WT6udB7OmagibGvA=\", false, function() {\n    return [\n        useTooltipContext,\n        useTooltipProviderContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_6__.useComposedRefs\n    ];\n}));\n_c7 = TooltipContentHoverable;\nvar [VisuallyHiddenContentContextProvider, useVisuallyHiddenContentContext] = createTooltipContext(TOOLTIP_NAME, {\n    isInside: false\n});\nvar TooltipContentImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s6((props, forwardedRef)=>{\n    _s6();\n    const { __scopeTooltip, children, \"aria-label\": ariaLabel, onEscapeKeyDown, onPointerDownOutside, ...contentProps } = props;\n    const context = useTooltipContext(CONTENT_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const { onClose } = context;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        document.addEventListener(TOOLTIP_OPEN, onClose);\n        return ()=>document.removeEventListener(TOOLTIP_OPEN, onClose);\n    }, [\n        onClose\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (context.trigger) {\n            const handleScroll = (event)=>{\n                const target = event.target;\n                if (target === null || target === void 0 ? void 0 : target.contains(context.trigger)) onClose();\n            };\n            window.addEventListener(\"scroll\", handleScroll, {\n                capture: true\n            });\n            return ()=>window.removeEventListener(\"scroll\", handleScroll, {\n                    capture: true\n                });\n        }\n    }, [\n        context.trigger,\n        onClose\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_11__.DismissableLayer, {\n        asChild: true,\n        disableOutsidePointerEvents: false,\n        onEscapeKeyDown,\n        onPointerDownOutside,\n        onFocusOutside: (event)=>event.preventDefault(),\n        onDismiss: onClose,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.Content, {\n            \"data-state\": context.stateAttribute,\n            ...popperScope,\n            ...contentProps,\n            ref: forwardedRef,\n            style: {\n                ...contentProps.style,\n                // re-namespace exposed content custom properties\n                ...{\n                    \"--radix-tooltip-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n                    \"--radix-tooltip-content-available-width\": \"var(--radix-popper-available-width)\",\n                    \"--radix-tooltip-content-available-height\": \"var(--radix-popper-available-height)\",\n                    \"--radix-tooltip-trigger-width\": \"var(--radix-popper-anchor-width)\",\n                    \"--radix-tooltip-trigger-height\": \"var(--radix-popper-anchor-height)\"\n                }\n            },\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_12__.Slottable, {\n                    children\n                }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(VisuallyHiddenContentContextProvider, {\n                    scope: __scopeTooltip,\n                    isInside: true,\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_visually_hidden__WEBPACK_IMPORTED_MODULE_13__.Root, {\n                        id: context.contentId,\n                        role: \"tooltip\",\n                        children: ariaLabel || children\n                    })\n                })\n            ]\n        })\n    });\n}, \"i9WYRDazLRQfWd3Hvi+XZwDDx40=\", false, function() {\n    return [\n        useTooltipContext,\n        usePopperScope\n    ];\n}));\n_c8 = TooltipContentImpl;\nTooltipContent.displayName = CONTENT_NAME;\nvar ARROW_NAME = \"TooltipArrow\";\nvar TooltipArrow = /*#__PURE__*/ _s7(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c9 = _s7((props, forwardedRef)=>{\n    _s7();\n    const { __scopeTooltip, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeTooltip);\n    const visuallyHiddenContentContext = useVisuallyHiddenContentContext(ARROW_NAME, __scopeTooltip);\n    return visuallyHiddenContentContext.isInside ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_popper__WEBPACK_IMPORTED_MODULE_3__.Arrow, {\n        ...popperScope,\n        ...arrowProps,\n        ref: forwardedRef\n    });\n}, \"PhtHwCUYJI5ZCq3IiyAmXd8x79Y=\", false, function() {\n    return [\n        usePopperScope,\n        useVisuallyHiddenContentContext\n    ];\n})), \"PhtHwCUYJI5ZCq3IiyAmXd8x79Y=\", false, function() {\n    return [\n        usePopperScope,\n        useVisuallyHiddenContentContext\n    ];\n});\n_c10 = TooltipArrow;\nTooltipArrow.displayName = ARROW_NAME;\nfunction getExitSideFromRect(point, rect) {\n    const top = Math.abs(rect.top - point.y);\n    const bottom = Math.abs(rect.bottom - point.y);\n    const right = Math.abs(rect.right - point.x);\n    const left = Math.abs(rect.left - point.x);\n    switch(Math.min(top, bottom, right, left)){\n        case left:\n            return \"left\";\n        case right:\n            return \"right\";\n        case top:\n            return \"top\";\n        case bottom:\n            return \"bottom\";\n        default:\n            throw new Error(\"unreachable\");\n    }\n}\nfunction getPaddedExitPoints(exitPoint, exitSide) {\n    let padding = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 5;\n    const paddedExitPoints = [];\n    switch(exitSide){\n        case \"top\":\n            paddedExitPoints.push({\n                x: exitPoint.x - padding,\n                y: exitPoint.y + padding\n            }, {\n                x: exitPoint.x + padding,\n                y: exitPoint.y + padding\n            });\n            break;\n        case \"bottom\":\n            paddedExitPoints.push({\n                x: exitPoint.x - padding,\n                y: exitPoint.y - padding\n            }, {\n                x: exitPoint.x + padding,\n                y: exitPoint.y - padding\n            });\n            break;\n        case \"left\":\n            paddedExitPoints.push({\n                x: exitPoint.x + padding,\n                y: exitPoint.y - padding\n            }, {\n                x: exitPoint.x + padding,\n                y: exitPoint.y + padding\n            });\n            break;\n        case \"right\":\n            paddedExitPoints.push({\n                x: exitPoint.x - padding,\n                y: exitPoint.y - padding\n            }, {\n                x: exitPoint.x - padding,\n                y: exitPoint.y + padding\n            });\n            break;\n    }\n    return paddedExitPoints;\n}\nfunction getPointsFromRect(rect) {\n    const { top, right, bottom, left } = rect;\n    return [\n        {\n            x: left,\n            y: top\n        },\n        {\n            x: right,\n            y: top\n        },\n        {\n            x: right,\n            y: bottom\n        },\n        {\n            x: left,\n            y: bottom\n        }\n    ];\n}\nfunction isPointInPolygon(point, polygon) {\n    const { x, y } = point;\n    let inside = false;\n    for(let i = 0, j = polygon.length - 1; i < polygon.length; j = i++){\n        const xi = polygon[i].x;\n        const yi = polygon[i].y;\n        const xj = polygon[j].x;\n        const yj = polygon[j].y;\n        const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n        if (intersect) inside = !inside;\n    }\n    return inside;\n}\nfunction getHull(points) {\n    const newPoints = points.slice();\n    newPoints.sort((a, b)=>{\n        if (a.x < b.x) return -1;\n        else if (a.x > b.x) return 1;\n        else if (a.y < b.y) return -1;\n        else if (a.y > b.y) return 1;\n        else return 0;\n    });\n    return getHullPresorted(newPoints);\n}\nfunction getHullPresorted(points) {\n    if (points.length <= 1) return points.slice();\n    const upperHull = [];\n    for(let i = 0; i < points.length; i++){\n        const p = points[i];\n        while(upperHull.length >= 2){\n            const q = upperHull[upperHull.length - 1];\n            const r = upperHull[upperHull.length - 2];\n            if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) upperHull.pop();\n            else break;\n        }\n        upperHull.push(p);\n    }\n    upperHull.pop();\n    const lowerHull = [];\n    for(let i = points.length - 1; i >= 0; i--){\n        const p = points[i];\n        while(lowerHull.length >= 2){\n            const q = lowerHull[lowerHull.length - 1];\n            const r = lowerHull[lowerHull.length - 2];\n            if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) lowerHull.pop();\n            else break;\n        }\n        lowerHull.push(p);\n    }\n    lowerHull.pop();\n    if (upperHull.length === 1 && lowerHull.length === 1 && upperHull[0].x === lowerHull[0].x && upperHull[0].y === lowerHull[0].y) {\n        return upperHull;\n    } else {\n        return upperHull.concat(lowerHull);\n    }\n}\nvar Provider = TooltipProvider;\nvar Root3 = Tooltip;\nvar Trigger = TooltipTrigger;\nvar Portal = TooltipPortal;\nvar Content2 = TooltipContent;\nvar Arrow2 = TooltipArrow;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"TooltipProvider\");\n$RefreshReg$(_c1, \"Tooltip\");\n$RefreshReg$(_c2, \"TooltipTrigger$React.forwardRef\");\n$RefreshReg$(_c3, \"TooltipTrigger\");\n$RefreshReg$(_c4, \"TooltipPortal\");\n$RefreshReg$(_c5, \"TooltipContent$React.forwardRef\");\n$RefreshReg$(_c6, \"TooltipContent\");\n$RefreshReg$(_c7, \"TooltipContentHoverable\");\n$RefreshReg$(_c8, \"TooltipContentImpl\");\n$RefreshReg$(_c9, \"TooltipArrow$React.forwardRef\");\n$RefreshReg$(_c10, \"TooltipArrow\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdG9vbHRpcC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF1QjtBQUNjO0FBQ0w7QUFDRztBQUNGO0FBQ1g7QUFDVztBQUNDO0FBQ1E7QUFDakI7QUFDQztBQUNBO0FBQ1c7QUFDSTtBQXNFckM7QUFqRUosSUFBTSxDQUFDaUIsc0JBQXNCQyxtQkFBa0IsR0FBSWYsMkVBQWtCQSxDQUFDLFdBQVc7SUFDL0VJLHFFQUFpQkE7Q0FDbEI7QUFDRCxJQUFNWSxpQkFBaUJaLHlFQUFpQkE7QUFNeEMsSUFBTWEsZ0JBQWdCO0FBQ3RCLElBQU1DLHlCQUF5QjtBQUMvQixJQUFNQyxlQUFlO0FBWXJCLElBQU0sQ0FBQ0MsZ0NBQWdDQywwQkFBeUIsR0FDOURQLHFCQUFrREc7QUFxQnBELElBQU1LLGtCQUFrRCxDQUN0REM7O0lBRUEsTUFBTSxFQUNKQyxjQUFBLEVBQ0FDLGdCQUFnQlAsc0JBQUEsRUFDaEJRLG9CQUFvQixLQUNwQkMsMEJBQTBCLE9BQzFCQyxRQUFBLEVBQ0YsR0FBSUw7SUFDSixNQUFNLENBQUNNLGVBQWVDLGlCQUFnQixHQUFVakMsMkNBQUEsQ0FBUztJQUN6RCxNQUFNbUMsd0JBQThCbkMseUNBQUEsQ0FBTztJQUMzQyxNQUFNcUMsb0JBQTBCckMseUNBQUEsQ0FBTztJQUVqQ0EsNENBQUEsQ0FBVTtRQUNkLE1BQU11QyxpQkFBaUJGLGtCQUFrQkcsT0FBQTtRQUN6QyxPQUFPLElBQU1DLE9BQU9DLFlBQUEsQ0FBYUg7SUFDbkMsR0FBRyxFQUFFO0lBRUwsT0FDRSxnQkFBQXhCLHNEQUFBQSxDQUFDUSxnQ0FBQTtRQUNDb0IsT0FBT2hCO1FBQ1BLO1FBQ0FKO1FBQ0FnQixRQUFjNUMsOENBQUEsQ0FBWTtZQUN4QnlDLE9BQU9DLFlBQUEsQ0FBYUwsa0JBQWtCRyxPQUFPO1lBQzdDUCxpQkFBaUI7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IjpbIndlYnBhY2s6Ly9fTl9FLy4uL3NyYy9Ub29sdGlwLnRzeD9jMmY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbXBvc2VFdmVudEhhbmRsZXJzIH0gZnJvbSAnQHJhZGl4LXVpL3ByaW1pdGl2ZSc7XG5pbXBvcnQgeyB1c2VDb21wb3NlZFJlZnMgfSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzJztcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHRTY29wZSB9IGZyb20gJ0ByYWRpeC11aS9yZWFjdC1jb250ZXh0JztcbmltcG9ydCB7IERpc21pc3NhYmxlTGF5ZXIgfSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtZGlzbWlzc2FibGUtbGF5ZXInO1xuaW1wb3J0IHsgdXNlSWQgfSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtaWQnO1xuaW1wb3J0ICogYXMgUG9wcGVyUHJpbWl0aXZlIGZyb20gJ0ByYWRpeC11aS9yZWFjdC1wb3BwZXInO1xuaW1wb3J0IHsgY3JlYXRlUG9wcGVyU2NvcGUgfSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtcG9wcGVyJztcbmltcG9ydCB7IFBvcnRhbCBhcyBQb3J0YWxQcmltaXRpdmUgfSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtcG9ydGFsJztcbmltcG9ydCB7IFByZXNlbmNlIH0gZnJvbSAnQHJhZGl4LXVpL3JlYWN0LXByZXNlbmNlJztcbmltcG9ydCB7IFByaW1pdGl2ZSB9IGZyb20gJ0ByYWRpeC11aS9yZWFjdC1wcmltaXRpdmUnO1xuaW1wb3J0IHsgU2xvdHRhYmxlIH0gZnJvbSAnQHJhZGl4LXVpL3JlYWN0LXNsb3QnO1xuaW1wb3J0IHsgdXNlQ29udHJvbGxhYmxlU3RhdGUgfSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtdXNlLWNvbnRyb2xsYWJsZS1zdGF0ZSc7XG5pbXBvcnQgKiBhcyBWaXN1YWxseUhpZGRlblByaW1pdGl2ZSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtdmlzdWFsbHktaGlkZGVuJztcblxuaW1wb3J0IHR5cGUgeyBTY29wZSB9IGZyb20gJ0ByYWRpeC11aS9yZWFjdC1jb250ZXh0JztcblxudHlwZSBTY29wZWRQcm9wczxQID0ge30+ID0gUCAmIHsgX19zY29wZVRvb2x0aXA/OiBTY29wZSB9O1xuY29uc3QgW2NyZWF0ZVRvb2x0aXBDb250ZXh0LCBjcmVhdGVUb29sdGlwU2NvcGVdID0gY3JlYXRlQ29udGV4dFNjb3BlKCdUb29sdGlwJywgW1xuICBjcmVhdGVQb3BwZXJTY29wZSxcbl0pO1xuY29uc3QgdXNlUG9wcGVyU2NvcGUgPSBjcmVhdGVQb3BwZXJTY29wZSgpO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBUb29sdGlwUHJvdmlkZXJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuY29uc3QgUFJPVklERVJfTkFNRSA9ICdUb29sdGlwUHJvdmlkZXInO1xuY29uc3QgREVGQVVMVF9ERUxBWV9EVVJBVElPTiA9IDcwMDtcbmNvbnN0IFRPT0xUSVBfT1BFTiA9ICd0b29sdGlwLm9wZW4nO1xuXG50eXBlIFRvb2x0aXBQcm92aWRlckNvbnRleHRWYWx1ZSA9IHtcbiAgaXNPcGVuRGVsYXllZDogYm9vbGVhbjtcbiAgZGVsYXlEdXJhdGlvbjogbnVtYmVyO1xuICBvbk9wZW4oKTogdm9pZDtcbiAgb25DbG9zZSgpOiB2b2lkO1xuICBvblBvaW50ZXJJblRyYW5zaXRDaGFuZ2UoaW5UcmFuc2l0OiBib29sZWFuKTogdm9pZDtcbiAgaXNQb2ludGVySW5UcmFuc2l0UmVmOiBSZWFjdC5NdXRhYmxlUmVmT2JqZWN0PGJvb2xlYW4+O1xuICBkaXNhYmxlSG92ZXJhYmxlQ29udGVudDogYm9vbGVhbjtcbn07XG5cbmNvbnN0IFtUb29sdGlwUHJvdmlkZXJDb250ZXh0UHJvdmlkZXIsIHVzZVRvb2x0aXBQcm92aWRlckNvbnRleHRdID1cbiAgY3JlYXRlVG9vbHRpcENvbnRleHQ8VG9vbHRpcFByb3ZpZGVyQ29udGV4dFZhbHVlPihQUk9WSURFUl9OQU1FKTtcblxuaW50ZXJmYWNlIFRvb2x0aXBQcm92aWRlclByb3BzIHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgLyoqXG4gICAqIFRoZSBkdXJhdGlvbiBmcm9tIHdoZW4gdGhlIHBvaW50ZXIgZW50ZXJzIHRoZSB0cmlnZ2VyIHVudGlsIHRoZSB0b29sdGlwIGdldHMgb3BlbmVkLlxuICAgKiBAZGVmYXVsdFZhbHVlIDcwMFxuICAgKi9cbiAgZGVsYXlEdXJhdGlvbj86IG51bWJlcjtcbiAgLyoqXG4gICAqIEhvdyBtdWNoIHRpbWUgYSB1c2VyIGhhcyB0byBlbnRlciBhbm90aGVyIHRyaWdnZXIgd2l0aG91dCBpbmN1cnJpbmcgYSBkZWxheSBhZ2Fpbi5cbiAgICogQGRlZmF1bHRWYWx1ZSAzMDBcbiAgICovXG4gIHNraXBEZWxheUR1cmF0aW9uPzogbnVtYmVyO1xuICAvKipcbiAgICogV2hlbiBgdHJ1ZWAsIHRyeWluZyB0byBob3ZlciB0aGUgY29udGVudCB3aWxsIHJlc3VsdCBpbiB0aGUgdG9vbHRpcCBjbG9zaW5nIGFzIHRoZSBwb2ludGVyIGxlYXZlcyB0aGUgdHJpZ2dlci5cbiAgICogQGRlZmF1bHRWYWx1ZSBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZUhvdmVyYWJsZUNvbnRlbnQ/OiBib29sZWFuO1xufVxuXG5jb25zdCBUb29sdGlwUHJvdmlkZXI6IFJlYWN0LkZDPFRvb2x0aXBQcm92aWRlclByb3BzPiA9IChcbiAgcHJvcHM6IFNjb3BlZFByb3BzPFRvb2x0aXBQcm92aWRlclByb3BzPlxuKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBfX3Njb3BlVG9vbHRpcCxcbiAgICBkZWxheUR1cmF0aW9uID0gREVGQVVMVF9ERUxBWV9EVVJBVElPTixcbiAgICBza2lwRGVsYXlEdXJhdGlvbiA9IDMwMCxcbiAgICBkaXNhYmxlSG92ZXJhYmxlQ29udGVudCA9IGZhbHNlLFxuICAgIGNoaWxkcmVuLFxuICB9ID0gcHJvcHM7XG4gIGNvbnN0IFtpc09wZW5EZWxheWVkLCBzZXRJc09wZW5EZWxheWVkXSA9IFJlYWN0LnVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBpc1BvaW50ZXJJblRyYW5zaXRSZWYgPSBSZWFjdC51c2VSZWYoZmFsc2UpO1xuICBjb25zdCBza2lwRGVsYXlUaW1lclJlZiA9IFJlYWN0LnVzZVJlZigwKTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHNraXBEZWxheVRpbWVyID0gc2tpcERlbGF5VGltZXJSZWYuY3VycmVudDtcbiAgICByZXR1cm4gKCkgPT4gd2luZG93LmNsZWFyVGltZW91dChza2lwRGVsYXlUaW1lcik7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxUb29sdGlwUHJvdmlkZXJDb250ZXh0UHJvdmlkZXJcbiAgICAgIHNjb3BlPXtfX3Njb3BlVG9vbHRpcH1cbiAgICAgIGlzT3BlbkRlbGF5ZWQ9e2lzT3BlbkRlbGF5ZWR9XG4gICAgICBkZWxheUR1cmF0aW9uPXtkZWxheUR1cmF0aW9ufVxuICAgICAgb25PcGVuPXtSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoc2tpcERlbGF5VGltZXJSZWYuY3VycmVudCk7XG4gICAgICAgIHNldElzT3BlbkRlbGF5ZWQoZmFsc2UpO1xuICAgICAgfSwgW10pfVxuICAgICAgb25DbG9zZT17UmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHNraXBEZWxheVRpbWVyUmVmLmN1cnJlbnQpO1xuICAgICAgICBza2lwRGVsYXlUaW1lclJlZi5jdXJyZW50ID0gd2luZG93LnNldFRpbWVvdXQoXG4gICAgICAgICAgKCkgPT4gc2V0SXNPcGVuRGVsYXllZCh0cnVlKSxcbiAgICAgICAgICBza2lwRGVsYXlEdXJhdGlvblxuICAgICAgICApO1xuICAgICAgfSwgW3NraXBEZWxheUR1cmF0aW9uXSl9XG4gICAgICBpc1BvaW50ZXJJblRyYW5zaXRSZWY9e2lzUG9pbnRlckluVHJhbnNpdFJlZn1cbiAgICAgIG9uUG9pbnRlckluVHJhbnNpdENoYW5nZT17UmVhY3QudXNlQ2FsbGJhY2soKGluVHJhbnNpdDogYm9vbGVhbikgPT4ge1xuICAgICAgICBpc1BvaW50ZXJJblRyYW5zaXRSZWYuY3VycmVudCA9IGluVHJhbnNpdDtcbiAgICAgIH0sIFtdKX1cbiAgICAgIGRpc2FibGVIb3ZlcmFibGVDb250ZW50PXtkaXNhYmxlSG92ZXJhYmxlQ29udGVudH1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Ub29sdGlwUHJvdmlkZXJDb250ZXh0UHJvdmlkZXI+XG4gICk7XG59O1xuXG5Ub29sdGlwUHJvdmlkZXIuZGlzcGxheU5hbWUgPSBQUk9WSURFUl9OQU1FO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBUb29sdGlwXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmNvbnN0IFRPT0xUSVBfTkFNRSA9ICdUb29sdGlwJztcblxudHlwZSBUb29sdGlwQ29udGV4dFZhbHVlID0ge1xuICBjb250ZW50SWQ6IHN0cmluZztcbiAgb3BlbjogYm9vbGVhbjtcbiAgc3RhdGVBdHRyaWJ1dGU6ICdjbG9zZWQnIHwgJ2RlbGF5ZWQtb3BlbicgfCAnaW5zdGFudC1vcGVuJztcbiAgdHJpZ2dlcjogVG9vbHRpcFRyaWdnZXJFbGVtZW50IHwgbnVsbDtcbiAgb25UcmlnZ2VyQ2hhbmdlKHRyaWdnZXI6IFRvb2x0aXBUcmlnZ2VyRWxlbWVudCB8IG51bGwpOiB2b2lkO1xuICBvblRyaWdnZXJFbnRlcigpOiB2b2lkO1xuICBvblRyaWdnZXJMZWF2ZSgpOiB2b2lkO1xuICBvbk9wZW4oKTogdm9pZDtcbiAgb25DbG9zZSgpOiB2b2lkO1xuICBkaXNhYmxlSG92ZXJhYmxlQ29udGVudDogYm9vbGVhbjtcbn07XG5cbmNvbnN0IFtUb29sdGlwQ29udGV4dFByb3ZpZGVyLCB1c2VUb29sdGlwQ29udGV4dF0gPVxuICBjcmVhdGVUb29sdGlwQ29udGV4dDxUb29sdGlwQ29udGV4dFZhbHVlPihUT09MVElQX05BTUUpO1xuXG5pbnRlcmZhY2UgVG9vbHRpcFByb3BzIHtcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIG9wZW4/OiBib29sZWFuO1xuICBkZWZhdWx0T3Blbj86IGJvb2xlYW47XG4gIG9uT3BlbkNoYW5nZT86IChvcGVuOiBib29sZWFuKSA9PiB2b2lkO1xuICAvKipcbiAgICogVGhlIGR1cmF0aW9uIGZyb20gd2hlbiB0aGUgcG9pbnRlciBlbnRlcnMgdGhlIHRyaWdnZXIgdW50aWwgdGhlIHRvb2x0aXAgZ2V0cyBvcGVuZWQuIFRoaXMgd2lsbFxuICAgKiBvdmVycmlkZSB0aGUgcHJvcCB3aXRoIHRoZSBzYW1lIG5hbWUgcGFzc2VkIHRvIFByb3ZpZGVyLlxuICAgKiBAZGVmYXVsdFZhbHVlIDcwMFxuICAgKi9cbiAgZGVsYXlEdXJhdGlvbj86IG51bWJlcjtcbiAgLyoqXG4gICAqIFdoZW4gYHRydWVgLCB0cnlpbmcgdG8gaG92ZXIgdGhlIGNvbnRlbnQgd2lsbCByZXN1bHQgaW4gdGhlIHRvb2x0aXAgY2xvc2luZyBhcyB0aGUgcG9pbnRlciBsZWF2ZXMgdGhlIHRyaWdnZXIuXG4gICAqIEBkZWZhdWx0VmFsdWUgZmFsc2VcbiAgICovXG4gIGRpc2FibGVIb3ZlcmFibGVDb250ZW50PzogYm9vbGVhbjtcbn1cblxuY29uc3QgVG9vbHRpcDogUmVhY3QuRkM8VG9vbHRpcFByb3BzPiA9IChwcm9wczogU2NvcGVkUHJvcHM8VG9vbHRpcFByb3BzPikgPT4ge1xuICBjb25zdCB7XG4gICAgX19zY29wZVRvb2x0aXAsXG4gICAgY2hpbGRyZW4sXG4gICAgb3Blbjogb3BlblByb3AsXG4gICAgZGVmYXVsdE9wZW4gPSBmYWxzZSxcbiAgICBvbk9wZW5DaGFuZ2UsXG4gICAgZGlzYWJsZUhvdmVyYWJsZUNvbnRlbnQ6IGRpc2FibGVIb3ZlcmFibGVDb250ZW50UHJvcCxcbiAgICBkZWxheUR1cmF0aW9uOiBkZWxheUR1cmF0aW9uUHJvcCxcbiAgfSA9IHByb3BzO1xuICBjb25zdCBwcm92aWRlckNvbnRleHQgPSB1c2VUb29sdGlwUHJvdmlkZXJDb250ZXh0KFRPT0xUSVBfTkFNRSwgcHJvcHMuX19zY29wZVRvb2x0aXApO1xuICBjb25zdCBwb3BwZXJTY29wZSA9IHVzZVBvcHBlclNjb3BlKF9fc2NvcGVUb29sdGlwKTtcbiAgY29uc3QgW3RyaWdnZXIsIHNldFRyaWdnZXJdID0gUmVhY3QudXNlU3RhdGU8SFRNTEJ1dHRvbkVsZW1lbnQgfCBudWxsPihudWxsKTtcbiAgY29uc3QgY29udGVudElkID0gdXNlSWQoKTtcbiAgY29uc3Qgb3BlblRpbWVyUmVmID0gUmVhY3QudXNlUmVmKDApO1xuICBjb25zdCBkaXNhYmxlSG92ZXJhYmxlQ29udGVudCA9XG4gICAgZGlzYWJsZUhvdmVyYWJsZUNvbnRlbnRQcm9wID8/IHByb3ZpZGVyQ29udGV4dC5kaXNhYmxlSG92ZXJhYmxlQ29udGVudDtcbiAgY29uc3QgZGVsYXlEdXJhdGlvbiA9IGRlbGF5RHVyYXRpb25Qcm9wID8/IHByb3ZpZGVyQ29udGV4dC5kZWxheUR1cmF0aW9uO1xuICBjb25zdCB3YXNPcGVuRGVsYXllZFJlZiA9IFJlYWN0LnVzZVJlZihmYWxzZSk7XG4gIGNvbnN0IFtvcGVuID0gZmFsc2UsIHNldE9wZW5dID0gdXNlQ29udHJvbGxhYmxlU3RhdGUoe1xuICAgIHByb3A6IG9wZW5Qcm9wLFxuICAgIGRlZmF1bHRQcm9wOiBkZWZhdWx0T3BlbixcbiAgICBvbkNoYW5nZTogKG9wZW4pID0+IHtcbiAgICAgIGlmIChvcGVuKSB7XG4gICAgICAgIHByb3ZpZGVyQ29udGV4dC5vbk9wZW4oKTtcblxuICAgICAgICAvLyBhcyBgb25DaGFuZ2VgIGlzIGNhbGxlZCB3aXRoaW4gYSBsaWZlY3ljbGUgbWV0aG9kIHdlXG4gICAgICAgIC8vIGF2b2lkIGRpc3BhdGNoaW5nIHZpYSBgZGlzcGF0Y2hEaXNjcmV0ZUN1c3RvbUV2ZW50YC5cbiAgICAgICAgZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoVE9PTFRJUF9PUEVOKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm92aWRlckNvbnRleHQub25DbG9zZSgpO1xuICAgICAgfVxuICAgICAgb25PcGVuQ2hhbmdlPy4ob3Blbik7XG4gICAgfSxcbiAgfSk7XG4gIGNvbnN0IHN0YXRlQXR0cmlidXRlID0gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIG9wZW4gPyAod2FzT3BlbkRlbGF5ZWRSZWYuY3VycmVudCA/ICdkZWxheWVkLW9wZW4nIDogJ2luc3RhbnQtb3BlbicpIDogJ2Nsb3NlZCc7XG4gIH0sIFtvcGVuXSk7XG5cbiAgY29uc3QgaGFuZGxlT3BlbiA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KG9wZW5UaW1lclJlZi5jdXJyZW50KTtcbiAgICB3YXNPcGVuRGVsYXllZFJlZi5jdXJyZW50ID0gZmFsc2U7XG4gICAgc2V0T3Blbih0cnVlKTtcbiAgfSwgW3NldE9wZW5dKTtcblxuICBjb25zdCBoYW5kbGVDbG9zZSA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KG9wZW5UaW1lclJlZi5jdXJyZW50KTtcbiAgICBzZXRPcGVuKGZhbHNlKTtcbiAgfSwgW3NldE9wZW5dKTtcblxuICBjb25zdCBoYW5kbGVEZWxheWVkT3BlbiA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KG9wZW5UaW1lclJlZi5jdXJyZW50KTtcbiAgICBvcGVuVGltZXJSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHdhc09wZW5EZWxheWVkUmVmLmN1cnJlbnQgPSB0cnVlO1xuICAgICAgc2V0T3Blbih0cnVlKTtcbiAgICB9LCBkZWxheUR1cmF0aW9uKTtcbiAgfSwgW2RlbGF5RHVyYXRpb24sIHNldE9wZW5dKTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJldHVybiAoKSA9PiB3aW5kb3cuY2xlYXJUaW1lb3V0KG9wZW5UaW1lclJlZi5jdXJyZW50KTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPFBvcHBlclByaW1pdGl2ZS5Sb290IHsuLi5wb3BwZXJTY29wZX0+XG4gICAgICA8VG9vbHRpcENvbnRleHRQcm92aWRlclxuICAgICAgICBzY29wZT17X19zY29wZVRvb2x0aXB9XG4gICAgICAgIGNvbnRlbnRJZD17Y29udGVudElkfVxuICAgICAgICBvcGVuPXtvcGVufVxuICAgICAgICBzdGF0ZUF0dHJpYnV0ZT17c3RhdGVBdHRyaWJ1dGV9XG4gICAgICAgIHRyaWdnZXI9e3RyaWdnZXJ9XG4gICAgICAgIG9uVHJpZ2dlckNoYW5nZT17c2V0VHJpZ2dlcn1cbiAgICAgICAgb25UcmlnZ2VyRW50ZXI9e1JlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICBpZiAocHJvdmlkZXJDb250ZXh0LmlzT3BlbkRlbGF5ZWQpIGhhbmRsZURlbGF5ZWRPcGVuKCk7XG4gICAgICAgICAgZWxzZSBoYW5kbGVPcGVuKCk7XG4gICAgICAgIH0sIFtwcm92aWRlckNvbnRleHQuaXNPcGVuRGVsYXllZCwgaGFuZGxlRGVsYXllZE9wZW4sIGhhbmRsZU9wZW5dKX1cbiAgICAgICAgb25UcmlnZ2VyTGVhdmU9e1JlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICBpZiAoZGlzYWJsZUhvdmVyYWJsZUNvbnRlbnQpIHtcbiAgICAgICAgICAgIGhhbmRsZUNsb3NlKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIENsZWFyIHRoZSB0aW1lciBpbiBjYXNlIHRoZSBwb2ludGVyIGxlYXZlcyB0aGUgdHJpZ2dlciBiZWZvcmUgdGhlIHRvb2x0aXAgaXMgb3BlbmVkLlxuICAgICAgICAgICAgd2luZG93LmNsZWFyVGltZW91dChvcGVuVGltZXJSZWYuY3VycmVudCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCBbaGFuZGxlQ2xvc2UsIGRpc2FibGVIb3ZlcmFibGVDb250ZW50XSl9XG4gICAgICAgIG9uT3Blbj17aGFuZGxlT3Blbn1cbiAgICAgICAgb25DbG9zZT17aGFuZGxlQ2xvc2V9XG4gICAgICAgIGRpc2FibGVIb3ZlcmFibGVDb250ZW50PXtkaXNhYmxlSG92ZXJhYmxlQ29udGVudH1cbiAgICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9Ub29sdGlwQ29udGV4dFByb3ZpZGVyPlxuICAgIDwvUG9wcGVyUHJpbWl0aXZlLlJvb3Q+XG4gICk7XG59O1xuXG5Ub29sdGlwLmRpc3BsYXlOYW1lID0gVE9PTFRJUF9OQU1FO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBUb29sdGlwVHJpZ2dlclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5jb25zdCBUUklHR0VSX05BTUUgPSAnVG9vbHRpcFRyaWdnZXInO1xuXG50eXBlIFRvb2x0aXBUcmlnZ2VyRWxlbWVudCA9IFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFByaW1pdGl2ZS5idXR0b24+O1xudHlwZSBQcmltaXRpdmVCdXR0b25Qcm9wcyA9IFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUHJpbWl0aXZlLmJ1dHRvbj47XG5pbnRlcmZhY2UgVG9vbHRpcFRyaWdnZXJQcm9wcyBleHRlbmRzIFByaW1pdGl2ZUJ1dHRvblByb3BzIHt9XG5cbmNvbnN0IFRvb2x0aXBUcmlnZ2VyID0gUmVhY3QuZm9yd2FyZFJlZjxUb29sdGlwVHJpZ2dlckVsZW1lbnQsIFRvb2x0aXBUcmlnZ2VyUHJvcHM+KFxuICAocHJvcHM6IFNjb3BlZFByb3BzPFRvb2x0aXBUcmlnZ2VyUHJvcHM+LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IF9fc2NvcGVUb29sdGlwLCAuLi50cmlnZ2VyUHJvcHMgfSA9IHByb3BzO1xuICAgIGNvbnN0IGNvbnRleHQgPSB1c2VUb29sdGlwQ29udGV4dChUUklHR0VSX05BTUUsIF9fc2NvcGVUb29sdGlwKTtcbiAgICBjb25zdCBwcm92aWRlckNvbnRleHQgPSB1c2VUb29sdGlwUHJvdmlkZXJDb250ZXh0KFRSSUdHRVJfTkFNRSwgX19zY29wZVRvb2x0aXApO1xuICAgIGNvbnN0IHBvcHBlclNjb3BlID0gdXNlUG9wcGVyU2NvcGUoX19zY29wZVRvb2x0aXApO1xuICAgIGNvbnN0IHJlZiA9IFJlYWN0LnVzZVJlZjxUb29sdGlwVHJpZ2dlckVsZW1lbnQ+KG51bGwpO1xuICAgIGNvbnN0IGNvbXBvc2VkUmVmcyA9IHVzZUNvbXBvc2VkUmVmcyhmb3J3YXJkZWRSZWYsIHJlZiwgY29udGV4dC5vblRyaWdnZXJDaGFuZ2UpO1xuICAgIGNvbnN0IGlzUG9pbnRlckRvd25SZWYgPSBSZWFjdC51c2VSZWYoZmFsc2UpO1xuICAgIGNvbnN0IGhhc1BvaW50ZXJNb3ZlT3BlbmVkUmVmID0gUmVhY3QudXNlUmVmKGZhbHNlKTtcbiAgICBjb25zdCBoYW5kbGVQb2ludGVyVXAgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiAoaXNQb2ludGVyRG93blJlZi5jdXJyZW50ID0gZmFsc2UpLCBbXSk7XG5cbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgcmV0dXJuICgpID0+IGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJ1cCcsIGhhbmRsZVBvaW50ZXJVcCk7XG4gICAgfSwgW2hhbmRsZVBvaW50ZXJVcF0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxQb3BwZXJQcmltaXRpdmUuQW5jaG9yIGFzQ2hpbGQgey4uLnBvcHBlclNjb3BlfT5cbiAgICAgICAgPFByaW1pdGl2ZS5idXR0b25cbiAgICAgICAgICAvLyBXZSBwdXJwb3NlZnVsbHkgYXZvaWQgYWRkaW5nIGB0eXBlPWJ1dHRvbmAgaGVyZSBiZWNhdXNlIHRvb2x0aXAgdHJpZ2dlcnMgYXJlIGFsc29cbiAgICAgICAgICAvLyBjb21tb25seSBhbmNob3JzIGFuZCB0aGUgYW5jaG9yIGB0eXBlYCBhdHRyaWJ1dGUgc2lnbmlmaWVzIE1JTUUgdHlwZS5cbiAgICAgICAgICBhcmlhLWRlc2NyaWJlZGJ5PXtjb250ZXh0Lm9wZW4gPyBjb250ZXh0LmNvbnRlbnRJZCA6IHVuZGVmaW5lZH1cbiAgICAgICAgICBkYXRhLXN0YXRlPXtjb250ZXh0LnN0YXRlQXR0cmlidXRlfVxuICAgICAgICAgIHsuLi50cmlnZ2VyUHJvcHN9XG4gICAgICAgICAgcmVmPXtjb21wb3NlZFJlZnN9XG4gICAgICAgICAgb25Qb2ludGVyTW92ZT17Y29tcG9zZUV2ZW50SGFuZGxlcnMocHJvcHMub25Qb2ludGVyTW92ZSwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXZlbnQucG9pbnRlclR5cGUgPT09ICd0b3VjaCcpIHJldHVybjtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgIWhhc1BvaW50ZXJNb3ZlT3BlbmVkUmVmLmN1cnJlbnQgJiZcbiAgICAgICAgICAgICAgIXByb3ZpZGVyQ29udGV4dC5pc1BvaW50ZXJJblRyYW5zaXRSZWYuY3VycmVudFxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgIGNvbnRleHQub25UcmlnZ2VyRW50ZXIoKTtcbiAgICAgICAgICAgICAgaGFzUG9pbnRlck1vdmVPcGVuZWRSZWYuY3VycmVudCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSl9XG4gICAgICAgICAgb25Qb2ludGVyTGVhdmU9e2NvbXBvc2VFdmVudEhhbmRsZXJzKHByb3BzLm9uUG9pbnRlckxlYXZlLCAoKSA9PiB7XG4gICAgICAgICAgICBjb250ZXh0Lm9uVHJpZ2dlckxlYXZlKCk7XG4gICAgICAgICAgICBoYXNQb2ludGVyTW92ZU9wZW5lZFJlZi5jdXJyZW50ID0gZmFsc2U7XG4gICAgICAgICAgfSl9XG4gICAgICAgICAgb25Qb2ludGVyRG93bj17Y29tcG9zZUV2ZW50SGFuZGxlcnMocHJvcHMub25Qb2ludGVyRG93biwgKCkgPT4ge1xuICAgICAgICAgICAgaXNQb2ludGVyRG93blJlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJ1cCcsIGhhbmRsZVBvaW50ZXJVcCwgeyBvbmNlOiB0cnVlIH0pO1xuICAgICAgICAgIH0pfVxuICAgICAgICAgIG9uRm9jdXM9e2NvbXBvc2VFdmVudEhhbmRsZXJzKHByb3BzLm9uRm9jdXMsICgpID0+IHtcbiAgICAgICAgICAgIGlmICghaXNQb2ludGVyRG93blJlZi5jdXJyZW50KSBjb250ZXh0Lm9uT3BlbigpO1xuICAgICAgICAgIH0pfVxuICAgICAgICAgIG9uQmx1cj17Y29tcG9zZUV2ZW50SGFuZGxlcnMocHJvcHMub25CbHVyLCBjb250ZXh0Lm9uQ2xvc2UpfVxuICAgICAgICAgIG9uQ2xpY2s9e2NvbXBvc2VFdmVudEhhbmRsZXJzKHByb3BzLm9uQ2xpY2ssIGNvbnRleHQub25DbG9zZSl9XG4gICAgICAgIC8+XG4gICAgICA8L1BvcHBlclByaW1pdGl2ZS5BbmNob3I+XG4gICAgKTtcbiAgfVxuKTtcblxuVG9vbHRpcFRyaWdnZXIuZGlzcGxheU5hbWUgPSBUUklHR0VSX05BTUU7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIFRvb2x0aXBQb3J0YWxcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuY29uc3QgUE9SVEFMX05BTUUgPSAnVG9vbHRpcFBvcnRhbCc7XG5cbnR5cGUgUG9ydGFsQ29udGV4dFZhbHVlID0geyBmb3JjZU1vdW50PzogdHJ1ZSB9O1xuY29uc3QgW1BvcnRhbFByb3ZpZGVyLCB1c2VQb3J0YWxDb250ZXh0XSA9IGNyZWF0ZVRvb2x0aXBDb250ZXh0PFBvcnRhbENvbnRleHRWYWx1ZT4oUE9SVEFMX05BTUUsIHtcbiAgZm9yY2VNb3VudDogdW5kZWZpbmVkLFxufSk7XG5cbnR5cGUgUG9ydGFsUHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFBvcnRhbFByaW1pdGl2ZT47XG5pbnRlcmZhY2UgVG9vbHRpcFBvcnRhbFByb3BzIHtcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIC8qKlxuICAgKiBTcGVjaWZ5IGEgY29udGFpbmVyIGVsZW1lbnQgdG8gcG9ydGFsIHRoZSBjb250ZW50IGludG8uXG4gICAqL1xuICBjb250YWluZXI/OiBQb3J0YWxQcm9wc1snY29udGFpbmVyJ107XG4gIC8qKlxuICAgKiBVc2VkIHRvIGZvcmNlIG1vdW50aW5nIHdoZW4gbW9yZSBjb250cm9sIGlzIG5lZWRlZC4gVXNlZnVsIHdoZW5cbiAgICogY29udHJvbGxpbmcgYW5pbWF0aW9uIHdpdGggUmVhY3QgYW5pbWF0aW9uIGxpYnJhcmllcy5cbiAgICovXG4gIGZvcmNlTW91bnQ/OiB0cnVlO1xufVxuXG5jb25zdCBUb29sdGlwUG9ydGFsOiBSZWFjdC5GQzxUb29sdGlwUG9ydGFsUHJvcHM+ID0gKHByb3BzOiBTY29wZWRQcm9wczxUb29sdGlwUG9ydGFsUHJvcHM+KSA9PiB7XG4gIGNvbnN0IHsgX19zY29wZVRvb2x0aXAsIGZvcmNlTW91bnQsIGNoaWxkcmVuLCBjb250YWluZXIgfSA9IHByb3BzO1xuICBjb25zdCBjb250ZXh0ID0gdXNlVG9vbHRpcENvbnRleHQoUE9SVEFMX05BTUUsIF9fc2NvcGVUb29sdGlwKTtcbiAgcmV0dXJuIChcbiAgICA8UG9ydGFsUHJvdmlkZXIgc2NvcGU9e19fc2NvcGVUb29sdGlwfSBmb3JjZU1vdW50PXtmb3JjZU1vdW50fT5cbiAgICAgIDxQcmVzZW5jZSBwcmVzZW50PXtmb3JjZU1vdW50IHx8IGNvbnRleHQub3Blbn0+XG4gICAgICAgIDxQb3J0YWxQcmltaXRpdmUgYXNDaGlsZCBjb250YWluZXI9e2NvbnRhaW5lcn0+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L1BvcnRhbFByaW1pdGl2ZT5cbiAgICAgIDwvUHJlc2VuY2U+XG4gICAgPC9Qb3J0YWxQcm92aWRlcj5cbiAgKTtcbn07XG5cblRvb2x0aXBQb3J0YWwuZGlzcGxheU5hbWUgPSBQT1JUQUxfTkFNRTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogVG9vbHRpcENvbnRlbnRcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuY29uc3QgQ09OVEVOVF9OQU1FID0gJ1Rvb2x0aXBDb250ZW50JztcblxudHlwZSBUb29sdGlwQ29udGVudEVsZW1lbnQgPSBUb29sdGlwQ29udGVudEltcGxFbGVtZW50O1xuaW50ZXJmYWNlIFRvb2x0aXBDb250ZW50UHJvcHMgZXh0ZW5kcyBUb29sdGlwQ29udGVudEltcGxQcm9wcyB7XG4gIC8qKlxuICAgKiBVc2VkIHRvIGZvcmNlIG1vdW50aW5nIHdoZW4gbW9yZSBjb250cm9sIGlzIG5lZWRlZC4gVXNlZnVsIHdoZW5cbiAgICogY29udHJvbGxpbmcgYW5pbWF0aW9uIHdpdGggUmVhY3QgYW5pbWF0aW9uIGxpYnJhcmllcy5cbiAgICovXG4gIGZvcmNlTW91bnQ/OiB0cnVlO1xufVxuXG5jb25zdCBUb29sdGlwQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8VG9vbHRpcENvbnRlbnRFbGVtZW50LCBUb29sdGlwQ29udGVudFByb3BzPihcbiAgKHByb3BzOiBTY29wZWRQcm9wczxUb29sdGlwQ29udGVudFByb3BzPiwgZm9yd2FyZGVkUmVmKSA9PiB7XG4gICAgY29uc3QgcG9ydGFsQ29udGV4dCA9IHVzZVBvcnRhbENvbnRleHQoQ09OVEVOVF9OQU1FLCBwcm9wcy5fX3Njb3BlVG9vbHRpcCk7XG4gICAgY29uc3QgeyBmb3JjZU1vdW50ID0gcG9ydGFsQ29udGV4dC5mb3JjZU1vdW50LCBzaWRlID0gJ3RvcCcsIC4uLmNvbnRlbnRQcm9wcyB9ID0gcHJvcHM7XG4gICAgY29uc3QgY29udGV4dCA9IHVzZVRvb2x0aXBDb250ZXh0KENPTlRFTlRfTkFNRSwgcHJvcHMuX19zY29wZVRvb2x0aXApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxQcmVzZW5jZSBwcmVzZW50PXtmb3JjZU1vdW50IHx8IGNvbnRleHQub3Blbn0+XG4gICAgICAgIHtjb250ZXh0LmRpc2FibGVIb3ZlcmFibGVDb250ZW50ID8gKFxuICAgICAgICAgIDxUb29sdGlwQ29udGVudEltcGwgc2lkZT17c2lkZX0gey4uLmNvbnRlbnRQcm9wc30gcmVmPXtmb3J3YXJkZWRSZWZ9IC8+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPFRvb2x0aXBDb250ZW50SG92ZXJhYmxlIHNpZGU9e3NpZGV9IHsuLi5jb250ZW50UHJvcHN9IHJlZj17Zm9yd2FyZGVkUmVmfSAvPlxuICAgICAgICApfVxuICAgICAgPC9QcmVzZW5jZT5cbiAgICApO1xuICB9XG4pO1xuXG50eXBlIFBvaW50ID0geyB4OiBudW1iZXI7IHk6IG51bWJlciB9O1xudHlwZSBQb2x5Z29uID0gUG9pbnRbXTtcblxudHlwZSBUb29sdGlwQ29udGVudEhvdmVyYWJsZUVsZW1lbnQgPSBUb29sdGlwQ29udGVudEltcGxFbGVtZW50O1xuaW50ZXJmYWNlIFRvb2x0aXBDb250ZW50SG92ZXJhYmxlUHJvcHMgZXh0ZW5kcyBUb29sdGlwQ29udGVudEltcGxQcm9wcyB7fVxuXG5jb25zdCBUb29sdGlwQ29udGVudEhvdmVyYWJsZSA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIFRvb2x0aXBDb250ZW50SG92ZXJhYmxlRWxlbWVudCxcbiAgVG9vbHRpcENvbnRlbnRIb3ZlcmFibGVQcm9wc1xuPigocHJvcHM6IFNjb3BlZFByb3BzPFRvb2x0aXBDb250ZW50SG92ZXJhYmxlUHJvcHM+LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgY29uc3QgY29udGV4dCA9IHVzZVRvb2x0aXBDb250ZXh0KENPTlRFTlRfTkFNRSwgcHJvcHMuX19zY29wZVRvb2x0aXApO1xuICBjb25zdCBwcm92aWRlckNvbnRleHQgPSB1c2VUb29sdGlwUHJvdmlkZXJDb250ZXh0KENPTlRFTlRfTkFNRSwgcHJvcHMuX19zY29wZVRvb2x0aXApO1xuICBjb25zdCByZWYgPSBSZWFjdC51c2VSZWY8VG9vbHRpcENvbnRlbnRIb3ZlcmFibGVFbGVtZW50PihudWxsKTtcbiAgY29uc3QgY29tcG9zZWRSZWZzID0gdXNlQ29tcG9zZWRSZWZzKGZvcndhcmRlZFJlZiwgcmVmKTtcbiAgY29uc3QgW3BvaW50ZXJHcmFjZUFyZWEsIHNldFBvaW50ZXJHcmFjZUFyZWFdID0gUmVhY3QudXNlU3RhdGU8UG9seWdvbiB8IG51bGw+KG51bGwpO1xuXG4gIGNvbnN0IHsgdHJpZ2dlciwgb25DbG9zZSB9ID0gY29udGV4dDtcbiAgY29uc3QgY29udGVudCA9IHJlZi5jdXJyZW50O1xuXG4gIGNvbnN0IHsgb25Qb2ludGVySW5UcmFuc2l0Q2hhbmdlIH0gPSBwcm92aWRlckNvbnRleHQ7XG5cbiAgY29uc3QgaGFuZGxlUmVtb3ZlR3JhY2VBcmVhID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldFBvaW50ZXJHcmFjZUFyZWEobnVsbCk7XG4gICAgb25Qb2ludGVySW5UcmFuc2l0Q2hhbmdlKGZhbHNlKTtcbiAgfSwgW29uUG9pbnRlckluVHJhbnNpdENoYW5nZV0pO1xuXG4gIGNvbnN0IGhhbmRsZUNyZWF0ZUdyYWNlQXJlYSA9IFJlYWN0LnVzZUNhbGxiYWNrKFxuICAgIChldmVudDogUG9pbnRlckV2ZW50LCBob3ZlclRhcmdldDogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgIGNvbnN0IGN1cnJlbnRUYXJnZXQgPSBldmVudC5jdXJyZW50VGFyZ2V0IGFzIEhUTUxFbGVtZW50O1xuICAgICAgY29uc3QgZXhpdFBvaW50ID0geyB4OiBldmVudC5jbGllbnRYLCB5OiBldmVudC5jbGllbnRZIH07XG4gICAgICBjb25zdCBleGl0U2lkZSA9IGdldEV4aXRTaWRlRnJvbVJlY3QoZXhpdFBvaW50LCBjdXJyZW50VGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKTtcbiAgICAgIGNvbnN0IHBhZGRlZEV4aXRQb2ludHMgPSBnZXRQYWRkZWRFeGl0UG9pbnRzKGV4aXRQb2ludCwgZXhpdFNpZGUpO1xuICAgICAgY29uc3QgaG92ZXJUYXJnZXRQb2ludHMgPSBnZXRQb2ludHNGcm9tUmVjdChob3ZlclRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSk7XG4gICAgICBjb25zdCBncmFjZUFyZWEgPSBnZXRIdWxsKFsuLi5wYWRkZWRFeGl0UG9pbnRzLCAuLi5ob3ZlclRhcmdldFBvaW50c10pO1xuICAgICAgc2V0UG9pbnRlckdyYWNlQXJlYShncmFjZUFyZWEpO1xuICAgICAgb25Qb2ludGVySW5UcmFuc2l0Q2hhbmdlKHRydWUpO1xuICAgIH0sXG4gICAgW29uUG9pbnRlckluVHJhbnNpdENoYW5nZV1cbiAgKTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJldHVybiAoKSA9PiBoYW5kbGVSZW1vdmVHcmFjZUFyZWEoKTtcbiAgfSwgW2hhbmRsZVJlbW92ZUdyYWNlQXJlYV0pO1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHRyaWdnZXIgJiYgY29udGVudCkge1xuICAgICAgY29uc3QgaGFuZGxlVHJpZ2dlckxlYXZlID0gKGV2ZW50OiBQb2ludGVyRXZlbnQpID0+IGhhbmRsZUNyZWF0ZUdyYWNlQXJlYShldmVudCwgY29udGVudCk7XG4gICAgICBjb25zdCBoYW5kbGVDb250ZW50TGVhdmUgPSAoZXZlbnQ6IFBvaW50ZXJFdmVudCkgPT4gaGFuZGxlQ3JlYXRlR3JhY2VBcmVhKGV2ZW50LCB0cmlnZ2VyKTtcblxuICAgICAgdHJpZ2dlci5hZGRFdmVudExpc3RlbmVyKCdwb2ludGVybGVhdmUnLCBoYW5kbGVUcmlnZ2VyTGVhdmUpO1xuICAgICAgY29udGVudC5hZGRFdmVudExpc3RlbmVyKCdwb2ludGVybGVhdmUnLCBoYW5kbGVDb250ZW50TGVhdmUpO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgdHJpZ2dlci5yZW1vdmVFdmVudExpc3RlbmVyKCdwb2ludGVybGVhdmUnLCBoYW5kbGVUcmlnZ2VyTGVhdmUpO1xuICAgICAgICBjb250ZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJsZWF2ZScsIGhhbmRsZUNvbnRlbnRMZWF2ZSk7XG4gICAgICB9O1xuICAgIH1cbiAgfSwgW3RyaWdnZXIsIGNvbnRlbnQsIGhhbmRsZUNyZWF0ZUdyYWNlQXJlYSwgaGFuZGxlUmVtb3ZlR3JhY2VBcmVhXSk7XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAocG9pbnRlckdyYWNlQXJlYSkge1xuICAgICAgY29uc3QgaGFuZGxlVHJhY2tQb2ludGVyR3JhY2UgPSAoZXZlbnQ6IFBvaW50ZXJFdmVudCkgPT4ge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQgYXMgSFRNTEVsZW1lbnQ7XG4gICAgICAgIGNvbnN0IHBvaW50ZXJQb3NpdGlvbiA9IHsgeDogZXZlbnQuY2xpZW50WCwgeTogZXZlbnQuY2xpZW50WSB9O1xuICAgICAgICBjb25zdCBoYXNFbnRlcmVkVGFyZ2V0ID0gdHJpZ2dlcj8uY29udGFpbnModGFyZ2V0KSB8fCBjb250ZW50Py5jb250YWlucyh0YXJnZXQpO1xuICAgICAgICBjb25zdCBpc1BvaW50ZXJPdXRzaWRlR3JhY2VBcmVhID0gIWlzUG9pbnRJblBvbHlnb24ocG9pbnRlclBvc2l0aW9uLCBwb2ludGVyR3JhY2VBcmVhKTtcblxuICAgICAgICBpZiAoaGFzRW50ZXJlZFRhcmdldCkge1xuICAgICAgICAgIGhhbmRsZVJlbW92ZUdyYWNlQXJlYSgpO1xuICAgICAgICB9IGVsc2UgaWYgKGlzUG9pbnRlck91dHNpZGVHcmFjZUFyZWEpIHtcbiAgICAgICAgICBoYW5kbGVSZW1vdmVHcmFjZUFyZWEoKTtcbiAgICAgICAgICBvbkNsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdwb2ludGVybW92ZScsIGhhbmRsZVRyYWNrUG9pbnRlckdyYWNlKTtcbiAgICAgIHJldHVybiAoKSA9PiBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdwb2ludGVybW92ZScsIGhhbmRsZVRyYWNrUG9pbnRlckdyYWNlKTtcbiAgICB9XG4gIH0sIFt0cmlnZ2VyLCBjb250ZW50LCBwb2ludGVyR3JhY2VBcmVhLCBvbkNsb3NlLCBoYW5kbGVSZW1vdmVHcmFjZUFyZWFdKTtcblxuICByZXR1cm4gPFRvb2x0aXBDb250ZW50SW1wbCB7Li4ucHJvcHN9IHJlZj17Y29tcG9zZWRSZWZzfSAvPjtcbn0pO1xuXG5jb25zdCBbVmlzdWFsbHlIaWRkZW5Db250ZW50Q29udGV4dFByb3ZpZGVyLCB1c2VWaXN1YWxseUhpZGRlbkNvbnRlbnRDb250ZXh0XSA9XG4gIGNyZWF0ZVRvb2x0aXBDb250ZXh0KFRPT0xUSVBfTkFNRSwgeyBpc0luc2lkZTogZmFsc2UgfSk7XG5cbnR5cGUgVG9vbHRpcENvbnRlbnRJbXBsRWxlbWVudCA9IFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFBvcHBlclByaW1pdGl2ZS5Db250ZW50PjtcbnR5cGUgRGlzbWlzc2FibGVMYXllclByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBEaXNtaXNzYWJsZUxheWVyPjtcbnR5cGUgUG9wcGVyQ29udGVudFByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBQb3BwZXJQcmltaXRpdmUuQ29udGVudD47XG5pbnRlcmZhY2UgVG9vbHRpcENvbnRlbnRJbXBsUHJvcHMgZXh0ZW5kcyBPbWl0PFBvcHBlckNvbnRlbnRQcm9wcywgJ29uUGxhY2VkJz4ge1xuICAvKipcbiAgICogQSBtb3JlIGRlc2NyaXB0aXZlIGxhYmVsIGZvciBhY2Nlc3NpYmlsaXR5IHB1cnBvc2VcbiAgICovXG4gICdhcmlhLWxhYmVsJz86IHN0cmluZztcblxuICAvKipcbiAgICogRXZlbnQgaGFuZGxlciBjYWxsZWQgd2hlbiB0aGUgZXNjYXBlIGtleSBpcyBkb3duLlxuICAgKiBDYW4gYmUgcHJldmVudGVkLlxuICAgKi9cbiAgb25Fc2NhcGVLZXlEb3duPzogRGlzbWlzc2FibGVMYXllclByb3BzWydvbkVzY2FwZUtleURvd24nXTtcbiAgLyoqXG4gICAqIEV2ZW50IGhhbmRsZXIgY2FsbGVkIHdoZW4gdGhlIGEgYHBvaW50ZXJkb3duYCBldmVudCBoYXBwZW5zIG91dHNpZGUgb2YgdGhlIGBUb29sdGlwYC5cbiAgICogQ2FuIGJlIHByZXZlbnRlZC5cbiAgICovXG4gIG9uUG9pbnRlckRvd25PdXRzaWRlPzogRGlzbWlzc2FibGVMYXllclByb3BzWydvblBvaW50ZXJEb3duT3V0c2lkZSddO1xufVxuXG5jb25zdCBUb29sdGlwQ29udGVudEltcGwgPSBSZWFjdC5mb3J3YXJkUmVmPFRvb2x0aXBDb250ZW50SW1wbEVsZW1lbnQsIFRvb2x0aXBDb250ZW50SW1wbFByb3BzPihcbiAgKHByb3BzOiBTY29wZWRQcm9wczxUb29sdGlwQ29udGVudEltcGxQcm9wcz4sIGZvcndhcmRlZFJlZikgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIF9fc2NvcGVUb29sdGlwLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICAnYXJpYS1sYWJlbCc6IGFyaWFMYWJlbCxcbiAgICAgIG9uRXNjYXBlS2V5RG93bixcbiAgICAgIG9uUG9pbnRlckRvd25PdXRzaWRlLFxuICAgICAgLi4uY29udGVudFByb3BzXG4gICAgfSA9IHByb3BzO1xuICAgIGNvbnN0IGNvbnRleHQgPSB1c2VUb29sdGlwQ29udGV4dChDT05URU5UX05BTUUsIF9fc2NvcGVUb29sdGlwKTtcbiAgICBjb25zdCBwb3BwZXJTY29wZSA9IHVzZVBvcHBlclNjb3BlKF9fc2NvcGVUb29sdGlwKTtcbiAgICBjb25zdCB7IG9uQ2xvc2UgfSA9IGNvbnRleHQ7XG5cbiAgICAvLyBDbG9zZSB0aGlzIHRvb2x0aXAgaWYgYW5vdGhlciBvbmUgb3BlbnNcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihUT09MVElQX09QRU4sIG9uQ2xvc2UpO1xuICAgICAgcmV0dXJuICgpID0+IGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoVE9PTFRJUF9PUEVOLCBvbkNsb3NlKTtcbiAgICB9LCBbb25DbG9zZV0pO1xuXG4gICAgLy8gQ2xvc2UgdGhlIHRvb2x0aXAgaWYgdGhlIHRyaWdnZXIgaXMgc2Nyb2xsZWRcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudHJpZ2dlcikge1xuICAgICAgICBjb25zdCBoYW5kbGVTY3JvbGwgPSAoZXZlbnQ6IEV2ZW50KSA9PiB7XG4gICAgICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0IGFzIEhUTUxFbGVtZW50O1xuICAgICAgICAgIGlmICh0YXJnZXQ/LmNvbnRhaW5zKGNvbnRleHQudHJpZ2dlcikpIG9uQ2xvc2UoKTtcbiAgICAgICAgfTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZVNjcm9sbCwgeyBjYXB0dXJlOiB0cnVlIH0pO1xuICAgICAgICByZXR1cm4gKCkgPT4gd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZVNjcm9sbCwgeyBjYXB0dXJlOiB0cnVlIH0pO1xuICAgICAgfVxuICAgIH0sIFtjb250ZXh0LnRyaWdnZXIsIG9uQ2xvc2VdKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8RGlzbWlzc2FibGVMYXllclxuICAgICAgICBhc0NoaWxkXG4gICAgICAgIGRpc2FibGVPdXRzaWRlUG9pbnRlckV2ZW50cz17ZmFsc2V9XG4gICAgICAgIG9uRXNjYXBlS2V5RG93bj17b25Fc2NhcGVLZXlEb3dufVxuICAgICAgICBvblBvaW50ZXJEb3duT3V0c2lkZT17b25Qb2ludGVyRG93bk91dHNpZGV9XG4gICAgICAgIG9uRm9jdXNPdXRzaWRlPXsoZXZlbnQpID0+IGV2ZW50LnByZXZlbnREZWZhdWx0KCl9XG4gICAgICAgIG9uRGlzbWlzcz17b25DbG9zZX1cbiAgICAgID5cbiAgICAgICAgPFBvcHBlclByaW1pdGl2ZS5Db250ZW50XG4gICAgICAgICAgZGF0YS1zdGF0ZT17Y29udGV4dC5zdGF0ZUF0dHJpYnV0ZX1cbiAgICAgICAgICB7Li4ucG9wcGVyU2NvcGV9XG4gICAgICAgICAgey4uLmNvbnRlbnRQcm9wc31cbiAgICAgICAgICByZWY9e2ZvcndhcmRlZFJlZn1cbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgLi4uY29udGVudFByb3BzLnN0eWxlLFxuICAgICAgICAgICAgLy8gcmUtbmFtZXNwYWNlIGV4cG9zZWQgY29udGVudCBjdXN0b20gcHJvcGVydGllc1xuICAgICAgICAgICAgLi4ue1xuICAgICAgICAgICAgICAnLS1yYWRpeC10b29sdGlwLWNvbnRlbnQtdHJhbnNmb3JtLW9yaWdpbic6ICd2YXIoLS1yYWRpeC1wb3BwZXItdHJhbnNmb3JtLW9yaWdpbiknLFxuICAgICAgICAgICAgICAnLS1yYWRpeC10b29sdGlwLWNvbnRlbnQtYXZhaWxhYmxlLXdpZHRoJzogJ3ZhcigtLXJhZGl4LXBvcHBlci1hdmFpbGFibGUtd2lkdGgpJyxcbiAgICAgICAgICAgICAgJy0tcmFkaXgtdG9vbHRpcC1jb250ZW50LWF2YWlsYWJsZS1oZWlnaHQnOiAndmFyKC0tcmFkaXgtcG9wcGVyLWF2YWlsYWJsZS1oZWlnaHQpJyxcbiAgICAgICAgICAgICAgJy0tcmFkaXgtdG9vbHRpcC10cmlnZ2VyLXdpZHRoJzogJ3ZhcigtLXJhZGl4LXBvcHBlci1hbmNob3Itd2lkdGgpJyxcbiAgICAgICAgICAgICAgJy0tcmFkaXgtdG9vbHRpcC10cmlnZ2VyLWhlaWdodCc6ICd2YXIoLS1yYWRpeC1wb3BwZXItYW5jaG9yLWhlaWdodCknLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgPFNsb3R0YWJsZT57Y2hpbGRyZW59PC9TbG90dGFibGU+XG4gICAgICAgICAgPFZpc3VhbGx5SGlkZGVuQ29udGVudENvbnRleHRQcm92aWRlciBzY29wZT17X19zY29wZVRvb2x0aXB9IGlzSW5zaWRlPXt0cnVlfT5cbiAgICAgICAgICAgIDxWaXN1YWxseUhpZGRlblByaW1pdGl2ZS5Sb290IGlkPXtjb250ZXh0LmNvbnRlbnRJZH0gcm9sZT1cInRvb2x0aXBcIj5cbiAgICAgICAgICAgICAge2FyaWFMYWJlbCB8fCBjaGlsZHJlbn1cbiAgICAgICAgICAgIDwvVmlzdWFsbHlIaWRkZW5QcmltaXRpdmUuUm9vdD5cbiAgICAgICAgICA8L1Zpc3VhbGx5SGlkZGVuQ29udGVudENvbnRleHRQcm92aWRlcj5cbiAgICAgICAgPC9Qb3BwZXJQcmltaXRpdmUuQ29udGVudD5cbiAgICAgIDwvRGlzbWlzc2FibGVMYXllcj5cbiAgICApO1xuICB9XG4pO1xuXG5Ub29sdGlwQ29udGVudC5kaXNwbGF5TmFtZSA9IENPTlRFTlRfTkFNRTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogVG9vbHRpcEFycm93XG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmNvbnN0IEFSUk9XX05BTUUgPSAnVG9vbHRpcEFycm93JztcblxudHlwZSBUb29sdGlwQXJyb3dFbGVtZW50ID0gUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgUG9wcGVyUHJpbWl0aXZlLkFycm93PjtcbnR5cGUgUG9wcGVyQXJyb3dQcm9wcyA9IFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUG9wcGVyUHJpbWl0aXZlLkFycm93PjtcbmludGVyZmFjZSBUb29sdGlwQXJyb3dQcm9wcyBleHRlbmRzIFBvcHBlckFycm93UHJvcHMge31cblxuY29uc3QgVG9vbHRpcEFycm93ID0gUmVhY3QuZm9yd2FyZFJlZjxUb29sdGlwQXJyb3dFbGVtZW50LCBUb29sdGlwQXJyb3dQcm9wcz4oXG4gIChwcm9wczogU2NvcGVkUHJvcHM8VG9vbHRpcEFycm93UHJvcHM+LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IF9fc2NvcGVUb29sdGlwLCAuLi5hcnJvd1Byb3BzIH0gPSBwcm9wcztcbiAgICBjb25zdCBwb3BwZXJTY29wZSA9IHVzZVBvcHBlclNjb3BlKF9fc2NvcGVUb29sdGlwKTtcbiAgICBjb25zdCB2aXN1YWxseUhpZGRlbkNvbnRlbnRDb250ZXh0ID0gdXNlVmlzdWFsbHlIaWRkZW5Db250ZW50Q29udGV4dChcbiAgICAgIEFSUk9XX05BTUUsXG4gICAgICBfX3Njb3BlVG9vbHRpcFxuICAgICk7XG4gICAgLy8gaWYgdGhlIGFycm93IGlzIGluc2lkZSB0aGUgYFZpc3VhbGx5SGlkZGVuYCwgd2UgZG9uJ3Qgd2FudCB0byByZW5kZXIgaXQgYWxsIHRvXG4gICAgLy8gcHJldmVudCBpc3N1ZXMgaW4gcG9zaXRpb25pbmcgdGhlIGFycm93IGR1ZSB0byB0aGUgZHVwbGljYXRlXG4gICAgcmV0dXJuIHZpc3VhbGx5SGlkZGVuQ29udGVudENvbnRleHQuaXNJbnNpZGUgPyBudWxsIDogKFxuICAgICAgPFBvcHBlclByaW1pdGl2ZS5BcnJvdyB7Li4ucG9wcGVyU2NvcGV9IHsuLi5hcnJvd1Byb3BzfSByZWY9e2ZvcndhcmRlZFJlZn0gLz5cbiAgICApO1xuICB9XG4pO1xuXG5Ub29sdGlwQXJyb3cuZGlzcGxheU5hbWUgPSBBUlJPV19OQU1FO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbnR5cGUgU2lkZSA9IE5vbk51bGxhYmxlPFRvb2x0aXBDb250ZW50UHJvcHNbJ3NpZGUnXT47XG5cbmZ1bmN0aW9uIGdldEV4aXRTaWRlRnJvbVJlY3QocG9pbnQ6IFBvaW50LCByZWN0OiBET01SZWN0KTogU2lkZSB7XG4gIGNvbnN0IHRvcCA9IE1hdGguYWJzKHJlY3QudG9wIC0gcG9pbnQueSk7XG4gIGNvbnN0IGJvdHRvbSA9IE1hdGguYWJzKHJlY3QuYm90dG9tIC0gcG9pbnQueSk7XG4gIGNvbnN0IHJpZ2h0ID0gTWF0aC5hYnMocmVjdC5yaWdodCAtIHBvaW50LngpO1xuICBjb25zdCBsZWZ0ID0gTWF0aC5hYnMocmVjdC5sZWZ0IC0gcG9pbnQueCk7XG5cbiAgc3dpdGNoIChNYXRoLm1pbih0b3AsIGJvdHRvbSwgcmlnaHQsIGxlZnQpKSB7XG4gICAgY2FzZSBsZWZ0OlxuICAgICAgcmV0dXJuICdsZWZ0JztcbiAgICBjYXNlIHJpZ2h0OlxuICAgICAgcmV0dXJuICdyaWdodCc7XG4gICAgY2FzZSB0b3A6XG4gICAgICByZXR1cm4gJ3RvcCc7XG4gICAgY2FzZSBib3R0b206XG4gICAgICByZXR1cm4gJ2JvdHRvbSc7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcigndW5yZWFjaGFibGUnKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRQYWRkZWRFeGl0UG9pbnRzKGV4aXRQb2ludDogUG9pbnQsIGV4aXRTaWRlOiBTaWRlLCBwYWRkaW5nID0gNSkge1xuICBjb25zdCBwYWRkZWRFeGl0UG9pbnRzOiBQb2ludFtdID0gW107XG4gIHN3aXRjaCAoZXhpdFNpZGUpIHtcbiAgICBjYXNlICd0b3AnOlxuICAgICAgcGFkZGVkRXhpdFBvaW50cy5wdXNoKFxuICAgICAgICB7IHg6IGV4aXRQb2ludC54IC0gcGFkZGluZywgeTogZXhpdFBvaW50LnkgKyBwYWRkaW5nIH0sXG4gICAgICAgIHsgeDogZXhpdFBvaW50LnggKyBwYWRkaW5nLCB5OiBleGl0UG9pbnQueSArIHBhZGRpbmcgfVxuICAgICAgKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2JvdHRvbSc6XG4gICAgICBwYWRkZWRFeGl0UG9pbnRzLnB1c2goXG4gICAgICAgIHsgeDogZXhpdFBvaW50LnggLSBwYWRkaW5nLCB5OiBleGl0UG9pbnQueSAtIHBhZGRpbmcgfSxcbiAgICAgICAgeyB4OiBleGl0UG9pbnQueCArIHBhZGRpbmcsIHk6IGV4aXRQb2ludC55IC0gcGFkZGluZyB9XG4gICAgICApO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbGVmdCc6XG4gICAgICBwYWRkZWRFeGl0UG9pbnRzLnB1c2goXG4gICAgICAgIHsgeDogZXhpdFBvaW50LnggKyBwYWRkaW5nLCB5OiBleGl0UG9pbnQueSAtIHBhZGRpbmcgfSxcbiAgICAgICAgeyB4OiBleGl0UG9pbnQueCArIHBhZGRpbmcsIHk6IGV4aXRQb2ludC55ICsgcGFkZGluZyB9XG4gICAgICApO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncmlnaHQnOlxuICAgICAgcGFkZGVkRXhpdFBvaW50cy5wdXNoKFxuICAgICAgICB7IHg6IGV4aXRQb2ludC54IC0gcGFkZGluZywgeTogZXhpdFBvaW50LnkgLSBwYWRkaW5nIH0sXG4gICAgICAgIHsgeDogZXhpdFBvaW50LnggLSBwYWRkaW5nLCB5OiBleGl0UG9pbnQueSArIHBhZGRpbmcgfVxuICAgICAgKTtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiBwYWRkZWRFeGl0UG9pbnRzO1xufVxuXG5mdW5jdGlvbiBnZXRQb2ludHNGcm9tUmVjdChyZWN0OiBET01SZWN0KSB7XG4gIGNvbnN0IHsgdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0IH0gPSByZWN0O1xuICByZXR1cm4gW1xuICAgIHsgeDogbGVmdCwgeTogdG9wIH0sXG4gICAgeyB4OiByaWdodCwgeTogdG9wIH0sXG4gICAgeyB4OiByaWdodCwgeTogYm90dG9tIH0sXG4gICAgeyB4OiBsZWZ0LCB5OiBib3R0b20gfSxcbiAgXTtcbn1cblxuLy8gRGV0ZXJtaW5lIGlmIGEgcG9pbnQgaXMgaW5zaWRlIG9mIGEgcG9seWdvbi5cbi8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9zdWJzdGFjay9wb2ludC1pbi1wb2x5Z29uXG5mdW5jdGlvbiBpc1BvaW50SW5Qb2x5Z29uKHBvaW50OiBQb2ludCwgcG9seWdvbjogUG9seWdvbikge1xuICBjb25zdCB7IHgsIHkgfSA9IHBvaW50O1xuICBsZXQgaW5zaWRlID0gZmFsc2U7XG4gIGZvciAobGV0IGkgPSAwLCBqID0gcG9seWdvbi5sZW5ndGggLSAxOyBpIDwgcG9seWdvbi5sZW5ndGg7IGogPSBpKyspIHtcbiAgICBjb25zdCB4aSA9IHBvbHlnb25baV0ueDtcbiAgICBjb25zdCB5aSA9IHBvbHlnb25baV0ueTtcbiAgICBjb25zdCB4aiA9IHBvbHlnb25bal0ueDtcbiAgICBjb25zdCB5aiA9IHBvbHlnb25bal0ueTtcblxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxuICAgIGNvbnN0IGludGVyc2VjdCA9ICgoeWkgPiB5KSAhPT0gKHlqID4geSkpICYmICh4IDwgKHhqIC0geGkpICogKHkgLSB5aSkgLyAoeWogLSB5aSkgKyB4aSk7XG4gICAgaWYgKGludGVyc2VjdCkgaW5zaWRlID0gIWluc2lkZTtcbiAgfVxuXG4gIHJldHVybiBpbnNpZGU7XG59XG5cbi8vIFJldHVybnMgYSBuZXcgYXJyYXkgb2YgcG9pbnRzIHJlcHJlc2VudGluZyB0aGUgY29udmV4IGh1bGwgb2YgdGhlIGdpdmVuIHNldCBvZiBwb2ludHMuXG4vLyBodHRwczovL3d3dy5uYXl1a2kuaW8vcGFnZS9jb252ZXgtaHVsbC1hbGdvcml0aG1cbmZ1bmN0aW9uIGdldEh1bGw8UCBleHRlbmRzIFBvaW50Pihwb2ludHM6IFJlYWRvbmx5PEFycmF5PFA+Pik6IEFycmF5PFA+IHtcbiAgY29uc3QgbmV3UG9pbnRzOiBBcnJheTxQPiA9IHBvaW50cy5zbGljZSgpO1xuICBuZXdQb2ludHMuc29ydCgoYTogUG9pbnQsIGI6IFBvaW50KSA9PiB7XG4gICAgaWYgKGEueCA8IGIueCkgcmV0dXJuIC0xO1xuICAgIGVsc2UgaWYgKGEueCA+IGIueCkgcmV0dXJuICsxO1xuICAgIGVsc2UgaWYgKGEueSA8IGIueSkgcmV0dXJuIC0xO1xuICAgIGVsc2UgaWYgKGEueSA+IGIueSkgcmV0dXJuICsxO1xuICAgIGVsc2UgcmV0dXJuIDA7XG4gIH0pO1xuICByZXR1cm4gZ2V0SHVsbFByZXNvcnRlZChuZXdQb2ludHMpO1xufVxuXG4vLyBSZXR1cm5zIHRoZSBjb252ZXggaHVsbCwgYXNzdW1pbmcgdGhhdCBlYWNoIHBvaW50c1tpXSA8PSBwb2ludHNbaSArIDFdLiBSdW5zIGluIE8obikgdGltZS5cbmZ1bmN0aW9uIGdldEh1bGxQcmVzb3J0ZWQ8UCBleHRlbmRzIFBvaW50Pihwb2ludHM6IFJlYWRvbmx5PEFycmF5PFA+Pik6IEFycmF5PFA+IHtcbiAgaWYgKHBvaW50cy5sZW5ndGggPD0gMSkgcmV0dXJuIHBvaW50cy5zbGljZSgpO1xuXG4gIGNvbnN0IHVwcGVySHVsbDogQXJyYXk8UD4gPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwb2ludHMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBwID0gcG9pbnRzW2ldO1xuICAgIHdoaWxlICh1cHBlckh1bGwubGVuZ3RoID49IDIpIHtcbiAgICAgIGNvbnN0IHEgPSB1cHBlckh1bGxbdXBwZXJIdWxsLmxlbmd0aCAtIDFdO1xuICAgICAgY29uc3QgciA9IHVwcGVySHVsbFt1cHBlckh1bGwubGVuZ3RoIC0gMl07XG4gICAgICBpZiAoKHEueCAtIHIueCkgKiAocC55IC0gci55KSA+PSAocS55IC0gci55KSAqIChwLnggLSByLngpKSB1cHBlckh1bGwucG9wKCk7XG4gICAgICBlbHNlIGJyZWFrO1xuICAgIH1cbiAgICB1cHBlckh1bGwucHVzaChwKTtcbiAgfVxuICB1cHBlckh1bGwucG9wKCk7XG5cbiAgY29uc3QgbG93ZXJIdWxsOiBBcnJheTxQPiA9IFtdO1xuICBmb3IgKGxldCBpID0gcG9pbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgY29uc3QgcCA9IHBvaW50c1tpXTtcbiAgICB3aGlsZSAobG93ZXJIdWxsLmxlbmd0aCA+PSAyKSB7XG4gICAgICBjb25zdCBxID0gbG93ZXJIdWxsW2xvd2VySHVsbC5sZW5ndGggLSAxXTtcbiAgICAgIGNvbnN0IHIgPSBsb3dlckh1bGxbbG93ZXJIdWxsLmxlbmd0aCAtIDJdO1xuICAgICAgaWYgKChxLnggLSByLngpICogKHAueSAtIHIueSkgPj0gKHEueSAtIHIueSkgKiAocC54IC0gci54KSkgbG93ZXJIdWxsLnBvcCgpO1xuICAgICAgZWxzZSBicmVhaztcbiAgICB9XG4gICAgbG93ZXJIdWxsLnB1c2gocCk7XG4gIH1cbiAgbG93ZXJIdWxsLnBvcCgpO1xuXG4gIGlmIChcbiAgICB1cHBlckh1bGwubGVuZ3RoID09PSAxICYmXG4gICAgbG93ZXJIdWxsLmxlbmd0aCA9PT0gMSAmJlxuICAgIHVwcGVySHVsbFswXS54ID09PSBsb3dlckh1bGxbMF0ueCAmJlxuICAgIHVwcGVySHVsbFswXS55ID09PSBsb3dlckh1bGxbMF0ueVxuICApIHtcbiAgICByZXR1cm4gdXBwZXJIdWxsO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB1cHBlckh1bGwuY29uY2F0KGxvd2VySHVsbCk7XG4gIH1cbn1cblxuY29uc3QgUHJvdmlkZXIgPSBUb29sdGlwUHJvdmlkZXI7XG5jb25zdCBSb290ID0gVG9vbHRpcDtcbmNvbnN0IFRyaWdnZXIgPSBUb29sdGlwVHJpZ2dlcjtcbmNvbnN0IFBvcnRhbCA9IFRvb2x0aXBQb3J0YWw7XG5jb25zdCBDb250ZW50ID0gVG9vbHRpcENvbnRlbnQ7XG5jb25zdCBBcnJvdyA9IFRvb2x0aXBBcnJvdztcblxuZXhwb3J0IHtcbiAgY3JlYXRlVG9vbHRpcFNjb3BlLFxuICAvL1xuICBUb29sdGlwUHJvdmlkZXIsXG4gIFRvb2x0aXAsXG4gIFRvb2x0aXBUcmlnZ2VyLFxuICBUb29sdGlwUG9ydGFsLFxuICBUb29sdGlwQ29udGVudCxcbiAgVG9vbHRpcEFycm93LFxuICAvL1xuICBQcm92aWRlcixcbiAgUm9vdCxcbiAgVHJpZ2dlcixcbiAgUG9ydGFsLFxuICBDb250ZW50LFxuICBBcnJvdyxcbn07XG5leHBvcnQgdHlwZSB7XG4gIFRvb2x0aXBQcm92aWRlclByb3BzLFxuICBUb29sdGlwUHJvcHMsXG4gIFRvb2x0aXBUcmlnZ2VyUHJvcHMsXG4gIFRvb2x0aXBQb3J0YWxQcm9wcyxcbiAgVG9vbHRpcENvbnRlbnRQcm9wcyxcbiAgVG9vbHRpcEFycm93UHJvcHMsXG59O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiY29tcG9zZUV2ZW50SGFuZGxlcnMiLCJ1c2VDb21wb3NlZFJlZnMiLCJjcmVhdGVDb250ZXh0U2NvcGUiLCJEaXNtaXNzYWJsZUxheWVyIiwidXNlSWQiLCJQb3BwZXJQcmltaXRpdmUiLCJjcmVhdGVQb3BwZXJTY29wZSIsIlBvcnRhbCIsIlBvcnRhbFByaW1pdGl2ZSIsIlByZXNlbmNlIiwiUHJpbWl0aXZlIiwiU2xvdHRhYmxlIiwidXNlQ29udHJvbGxhYmxlU3RhdGUiLCJWaXN1YWxseUhpZGRlblByaW1pdGl2ZSIsImpzeCIsImpzeHMiLCJjcmVhdGVUb29sdGlwQ29udGV4dCIsImNyZWF0ZVRvb2x0aXBTY29wZSIsInVzZVBvcHBlclNjb3BlIiwiUFJPVklERVJfTkFNRSIsIkRFRkFVTFRfREVMQVlfRFVSQVRJT04iLCJUT09MVElQX09QRU4iLCJUb29sdGlwUHJvdmlkZXJDb250ZXh0UHJvdmlkZXIiLCJ1c2VUb29sdGlwUHJvdmlkZXJDb250ZXh0IiwiVG9vbHRpcFByb3ZpZGVyIiwicHJvcHMiLCJfX3Njb3BlVG9vbHRpcCIsImRlbGF5RHVyYXRpb24iLCJza2lwRGVsYXlEdXJhdGlvbiIsImRpc2FibGVIb3ZlcmFibGVDb250ZW50IiwiY2hpbGRyZW4iLCJpc09wZW5EZWxheWVkIiwic2V0SXNPcGVuRGVsYXllZCIsInVzZVN0YXRlIiwiaXNQb2ludGVySW5UcmFuc2l0UmVmIiwidXNlUmVmIiwic2tpcERlbGF5VGltZXJSZWYiLCJ1c2VFZmZlY3QiLCJza2lwRGVsYXlUaW1lciIsImN1cnJlbnQiLCJ3aW5kb3ciLCJjbGVhclRpbWVvdXQiLCJzY29wZSIsIm9uT3BlbiIsInVzZUNhbGxiYWNrIiwib25DbG9zZSIsInNldFRpbWVvdXQiLCJvblBvaW50ZXJJblRyYW5zaXRDaGFuZ2UiLCJpblRyYW5zaXQiLCJkaXNwbGF5TmFtZSIsIlRPT0xUSVBfTkFNRSIsIlRvb2x0aXBDb250ZXh0UHJvdmlkZXIiLCJ1c2VUb29sdGlwQ29udGV4dCIsIlRvb2x0aXAiLCJvcGVuIiwib3BlblByb3AiLCJkZWZhdWx0T3BlbiIsIm9uT3BlbkNoYW5nZSIsImRpc2FibGVIb3ZlcmFibGVDb250ZW50UHJvcCIsImRlbGF5RHVyYXRpb25Qcm9wIiwicHJvdmlkZXJDb250ZXh0IiwicG9wcGVyU2NvcGUiLCJ0cmlnZ2VyIiwic2V0VHJpZ2dlciIsImNvbnRlbnRJZCIsIm9wZW5UaW1lclJlZiIsIndhc09wZW5EZWxheWVkUmVmIiwic2V0T3BlbiIsInByb3AiLCJkZWZhdWx0UHJvcCIsIm9uQ2hhbmdlIiwiZG9jdW1lbnQiLCJkaXNwYXRjaEV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJzdGF0ZUF0dHJpYnV0ZSIsInVzZU1lbW8iLCJoYW5kbGVPcGVuIiwiaGFuZGxlQ2xvc2UiLCJoYW5kbGVEZWxheWVkT3BlbiIsIlJvb3QiLCJvblRyaWdnZXJDaGFuZ2UiLCJvblRyaWdnZXJFbnRlciIsIm9uVHJpZ2dlckxlYXZlIiwiVFJJR0dFUl9OQU1FIiwiVG9vbHRpcFRyaWdnZXIiLCJmb3J3YXJkUmVmIiwiZm9yd2FyZGVkUmVmIiwidHJpZ2dlclByb3BzIiwiY29udGV4dCIsInJlZiIsImNvbXBvc2VkUmVmcyIsImlzUG9pbnRlckRvd25SZWYiLCJoYXNQb2ludGVyTW92ZU9wZW5lZFJlZiIsImhhbmRsZVBvaW50ZXJVcCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJBbmNob3IiLCJhc0NoaWxkIiwiYnV0dG9uIiwib25Qb2ludGVyTW92ZSIsImV2ZW50IiwicG9pbnRlclR5cGUiLCJvblBvaW50ZXJMZWF2ZSIsIm9uUG9pbnRlckRvd24iLCJhZGRFdmVudExpc3RlbmVyIiwib25jZSIsIm9uRm9jdXMiLCJvbkJsdXIiLCJvbkNsaWNrIiwiUE9SVEFMX05BTUUiLCJQb3J0YWxQcm92aWRlciIsInVzZVBvcnRhbENvbnRleHQiLCJmb3JjZU1vdW50IiwiVG9vbHRpcFBvcnRhbCIsImNvbnRhaW5lciIsInByZXNlbnQiLCJDT05URU5UX05BTUUiLCJUb29sdGlwQ29udGVudCIsInBvcnRhbENvbnRleHQiLCJzaWRlIiwiY29udGVudFByb3BzIiwiVG9vbHRpcENvbnRlbnRJbXBsIiwiVG9vbHRpcENvbnRlbnRIb3ZlcmFibGUiLCJwb2ludGVyR3JhY2VBcmVhIiwic2V0UG9pbnRlckdyYWNlQXJlYSIsImNvbnRlbnQiLCJoYW5kbGVSZW1vdmVHcmFjZUFyZWEiLCJoYW5kbGVDcmVhdGVHcmFjZUFyZWEiLCJob3ZlclRhcmdldCIsImN1cnJlbnRUYXJnZXQiLCJleGl0UG9pbnQiLCJ4IiwiY2xpZW50WCIsInkiLCJjbGllbnRZIiwiZXhpdFNpZGUiLCJnZXRFeGl0U2lkZUZyb21SZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwicGFkZGVkRXhpdFBvaW50cyIsImdldFBhZGRlZEV4aXRQb2ludHMiLCJob3ZlclRhcmdldFBvaW50cyIsImdldFBvaW50c0Zyb21SZWN0IiwiZ3JhY2VBcmVhIiwiZ2V0SHVsbCIsImhhbmRsZVRyaWdnZXJMZWF2ZSIsImhhbmRsZUNvbnRlbnRMZWF2ZSIsImhhbmRsZVRyYWNrUG9pbnRlckdyYWNlIiwidGFyZ2V0IiwicG9pbnRlclBvc2l0aW9uIiwiaGFzRW50ZXJlZFRhcmdldCIsImNvbnRhaW5zIiwiaXNQb2ludGVyT3V0c2lkZUdyYWNlQXJlYSIsImlzUG9pbnRJblBvbHlnb24iLCJWaXN1YWxseUhpZGRlbkNvbnRlbnRDb250ZXh0UHJvdmlkZXIiLCJ1c2VWaXN1YWxseUhpZGRlbkNvbnRlbnRDb250ZXh0IiwiaXNJbnNpZGUiLCJhcmlhTGFiZWwiLCJvbkVzY2FwZUtleURvd24iLCJvblBvaW50ZXJEb3duT3V0c2lkZSIsImhhbmRsZVNjcm9sbCIsImNhcHR1cmUiLCJkaXNhYmxlT3V0c2lkZVBvaW50ZXJFdmVudHMiLCJvbkZvY3VzT3V0c2lkZSIsInByZXZlbnREZWZhdWx0Iiwib25EaXNtaXNzIiwiQ29udGVudCIsInN0eWxlIiwiaWQiLCJyb2xlIiwiQVJST1dfTkFNRSIsIlRvb2x0aXBBcnJvdyIsImFycm93UHJvcHMiLCJ2aXN1YWxseUhpZGRlbkNvbnRlbnRDb250ZXh0IiwiQXJyb3ciLCJwb2ludCIsInJlY3QiLCJ0b3AiLCJNYXRoIiwiYWJzIiwiYm90dG9tIiwicmlnaHQiLCJsZWZ0IiwibWluIiwiRXJyb3IiLCJwYWRkaW5nIiwicHVzaCIsInBvbHlnb24iLCJpbnNpZGUiLCJpIiwiaiIsImxlbmd0aCIsInhpIiwieWkiLCJ4aiIsInlqIiwiaW50ZXJzZWN0IiwicG9pbnRzIiwibmV3UG9pbnRzIiwic2xpY2UiLCJzb3J0IiwiYSIsImIiLCJnZXRIdWxsUHJlc29ydGVkIiwidXBwZXJIdWxsIiwicCIsInEiLCJyIiwicG9wIiwibG93ZXJIdWxsIiwiY29uY2F0IiwiUHJvdmlkZXIiLCJUcmlnZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-tooltip/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCallbackRef: function() { return /* binding */ useCallbackRef; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/use-callback-ref/src/useCallbackRef.tsx\n\nfunction useCallbackRef(callback) {\n  const callbackRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(callback);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (...args) => callbackRef.current?.(...args), []);\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWNhbGxiYWNrLXJlZi9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQytCO0FBQy9CO0FBQ0Esc0JBQXNCLHlDQUFZO0FBQ2xDLEVBQUUsNENBQWU7QUFDakI7QUFDQSxHQUFHO0FBQ0gsU0FBUywwQ0FBYTtBQUN0QjtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9yZWFjdC11c2UtY2FsbGJhY2stcmVmL2Rpc3QvaW5kZXgubWpzPzNiZGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvdXNlLWNhbGxiYWNrLXJlZi9zcmMvdXNlQ2FsbGJhY2tSZWYudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIHVzZUNhbGxiYWNrUmVmKGNhbGxiYWNrKSB7XG4gIGNvbnN0IGNhbGxiYWNrUmVmID0gUmVhY3QudXNlUmVmKGNhbGxiYWNrKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBjYWxsYmFja1JlZi5jdXJyZW50ID0gY2FsbGJhY2s7XG4gIH0pO1xuICByZXR1cm4gUmVhY3QudXNlTWVtbygoKSA9PiAoLi4uYXJncykgPT4gY2FsbGJhY2tSZWYuY3VycmVudD8uKC4uLmFyZ3MpLCBbXSk7XG59XG5leHBvcnQge1xuICB1c2VDYWxsYmFja1JlZlxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useControllableState: function() { return /* binding */ useControllableState; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n// packages/react/use-controllable-state/src/useControllableState.tsx\n\n\nfunction useControllableState({\n  prop,\n  defaultProp,\n  onChange = () => {\n  }\n}) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== void 0;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChange);\n  const setValue = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue;\n        const value2 = typeof nextValue === \"function\" ? setter(prop) : nextValue;\n        if (value2 !== prop) handleChange(value2);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n  return [value, setValue];\n}\nfunction useUncontrolledState({\n  defaultProp,\n  onChange\n}) {\n  const uncontrolledState = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(value);\n  const handleChange = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChange);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n  return uncontrolledState;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWNvbnRyb2xsYWJsZS1zdGF0ZS9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUMrQjtBQUNtQztBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHlFQUF5RSx1QkFBdUI7QUFDaEc7QUFDQTtBQUNBLHVCQUF1QixnRkFBYztBQUNyQyxtQkFBbUIsOENBQWlCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw0QkFBNEIsMkNBQWM7QUFDMUM7QUFDQSx1QkFBdUIseUNBQVk7QUFDbkMsdUJBQXVCLGdGQUFjO0FBQ3JDLEVBQUUsNENBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9yZWFjdC11c2UtY29udHJvbGxhYmxlLXN0YXRlL2Rpc3QvaW5kZXgubWpzP2U2N2UiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvdXNlLWNvbnRyb2xsYWJsZS1zdGF0ZS9zcmMvdXNlQ29udHJvbGxhYmxlU3RhdGUudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUNhbGxiYWNrUmVmIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC11c2UtY2FsbGJhY2stcmVmXCI7XG5mdW5jdGlvbiB1c2VDb250cm9sbGFibGVTdGF0ZSh7XG4gIHByb3AsXG4gIGRlZmF1bHRQcm9wLFxuICBvbkNoYW5nZSA9ICgpID0+IHtcbiAgfVxufSkge1xuICBjb25zdCBbdW5jb250cm9sbGVkUHJvcCwgc2V0VW5jb250cm9sbGVkUHJvcF0gPSB1c2VVbmNvbnRyb2xsZWRTdGF0ZSh7IGRlZmF1bHRQcm9wLCBvbkNoYW5nZSB9KTtcbiAgY29uc3QgaXNDb250cm9sbGVkID0gcHJvcCAhPT0gdm9pZCAwO1xuICBjb25zdCB2YWx1ZSA9IGlzQ29udHJvbGxlZCA/IHByb3AgOiB1bmNvbnRyb2xsZWRQcm9wO1xuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSB1c2VDYWxsYmFja1JlZihvbkNoYW5nZSk7XG4gIGNvbnN0IHNldFZhbHVlID0gUmVhY3QudXNlQ2FsbGJhY2soXG4gICAgKG5leHRWYWx1ZSkgPT4ge1xuICAgICAgaWYgKGlzQ29udHJvbGxlZCkge1xuICAgICAgICBjb25zdCBzZXR0ZXIgPSBuZXh0VmFsdWU7XG4gICAgICAgIGNvbnN0IHZhbHVlMiA9IHR5cGVvZiBuZXh0VmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IHNldHRlcihwcm9wKSA6IG5leHRWYWx1ZTtcbiAgICAgICAgaWYgKHZhbHVlMiAhPT0gcHJvcCkgaGFuZGxlQ2hhbmdlKHZhbHVlMik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRVbmNvbnRyb2xsZWRQcm9wKG5leHRWYWx1ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBbaXNDb250cm9sbGVkLCBwcm9wLCBzZXRVbmNvbnRyb2xsZWRQcm9wLCBoYW5kbGVDaGFuZ2VdXG4gICk7XG4gIHJldHVybiBbdmFsdWUsIHNldFZhbHVlXTtcbn1cbmZ1bmN0aW9uIHVzZVVuY29udHJvbGxlZFN0YXRlKHtcbiAgZGVmYXVsdFByb3AsXG4gIG9uQ2hhbmdlXG59KSB7XG4gIGNvbnN0IHVuY29udHJvbGxlZFN0YXRlID0gUmVhY3QudXNlU3RhdGUoZGVmYXVsdFByb3ApO1xuICBjb25zdCBbdmFsdWVdID0gdW5jb250cm9sbGVkU3RhdGU7XG4gIGNvbnN0IHByZXZWYWx1ZVJlZiA9IFJlYWN0LnVzZVJlZih2YWx1ZSk7XG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IHVzZUNhbGxiYWNrUmVmKG9uQ2hhbmdlKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAocHJldlZhbHVlUmVmLmN1cnJlbnQgIT09IHZhbHVlKSB7XG4gICAgICBoYW5kbGVDaGFuZ2UodmFsdWUpO1xuICAgICAgcHJldlZhbHVlUmVmLmN1cnJlbnQgPSB2YWx1ZTtcbiAgICB9XG4gIH0sIFt2YWx1ZSwgcHJldlZhbHVlUmVmLCBoYW5kbGVDaGFuZ2VdKTtcbiAgcmV0dXJuIHVuY29udHJvbGxlZFN0YXRlO1xufVxuZXhwb3J0IHtcbiAgdXNlQ29udHJvbGxhYmxlU3RhdGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useEscapeKeydown: function() { return /* binding */ useEscapeKeydown; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n// packages/react/use-escape-keydown/src/useEscapeKeydown.tsx\n\n\nfunction useEscapeKeydown(onEscapeKeyDownProp, ownerDocument = globalThis?.document) {\n  const onEscapeKeyDown = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onEscapeKeyDownProp);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onEscapeKeyDown(event);\n      }\n    };\n    ownerDocument.addEventListener(\"keydown\", handleKeyDown, { capture: true });\n    return () => ownerDocument.removeEventListener(\"keydown\", handleKeyDown, { capture: true });\n  }, [onEscapeKeyDown, ownerDocument]);\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWVzY2FwZS1rZXlkb3duL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQytCO0FBQ21DO0FBQ2xFO0FBQ0EsMEJBQTBCLGdGQUFjO0FBQ3hDLEVBQUUsNENBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCxlQUFlO0FBQzlFLCtFQUErRSxlQUFlO0FBQzlGLEdBQUc7QUFDSDtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9yZWFjdC11c2UtZXNjYXBlLWtleWRvd24vZGlzdC9pbmRleC5tanM/ZWJiMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC91c2UtZXNjYXBlLWtleWRvd24vc3JjL3VzZUVzY2FwZUtleWRvd24udHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUNhbGxiYWNrUmVmIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC11c2UtY2FsbGJhY2stcmVmXCI7XG5mdW5jdGlvbiB1c2VFc2NhcGVLZXlkb3duKG9uRXNjYXBlS2V5RG93blByb3AsIG93bmVyRG9jdW1lbnQgPSBnbG9iYWxUaGlzPy5kb2N1bWVudCkge1xuICBjb25zdCBvbkVzY2FwZUtleURvd24gPSB1c2VDYWxsYmFja1JlZihvbkVzY2FwZUtleURvd25Qcm9wKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVLZXlEb3duID0gKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoZXZlbnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgIG9uRXNjYXBlS2V5RG93bihldmVudCk7XG4gICAgICB9XG4gICAgfTtcbiAgICBvd25lckRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUtleURvd24sIHsgY2FwdHVyZTogdHJ1ZSB9KTtcbiAgICByZXR1cm4gKCkgPT4gb3duZXJEb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBoYW5kbGVLZXlEb3duLCB7IGNhcHR1cmU6IHRydWUgfSk7XG4gIH0sIFtvbkVzY2FwZUtleURvd24sIG93bmVyRG9jdW1lbnRdKTtcbn1cbmV4cG9ydCB7XG4gIHVzZUVzY2FwZUtleWRvd25cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLayoutEffect: function() { return /* binding */ useLayoutEffect2; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/use-layout-effect/src/useLayoutEffect.tsx\n\nvar useLayoutEffect2 = Boolean(globalThis?.document) ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : () => {\n};\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWxheW91dC1lZmZlY3QvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUMrQjtBQUMvQix1REFBdUQsa0RBQXFCO0FBQzVFO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LXVzZS1sYXlvdXQtZWZmZWN0L2Rpc3QvaW5kZXgubWpzPzU0ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvdXNlLWxheW91dC1lZmZlY3Qvc3JjL3VzZUxheW91dEVmZmVjdC50c3hcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xudmFyIHVzZUxheW91dEVmZmVjdDIgPSBCb29sZWFuKGdsb2JhbFRoaXM/LmRvY3VtZW50KSA/IFJlYWN0LnVzZUxheW91dEVmZmVjdCA6ICgpID0+IHtcbn07XG5leHBvcnQge1xuICB1c2VMYXlvdXRFZmZlY3QyIGFzIHVzZUxheW91dEVmZmVjdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-size/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-size/dist/index.mjs ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSize: function() { return /* binding */ useSize; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n// packages/react/use-size/src/useSize.tsx\n\n\nfunction useSize(element) {\n  const [size, setSize] = react__WEBPACK_IMPORTED_MODULE_0__.useState(void 0);\n  (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {\n    if (element) {\n      setSize({ width: element.offsetWidth, height: element.offsetHeight });\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n        if (!entries.length) {\n          return;\n        }\n        const entry = entries[0];\n        let width;\n        let height;\n        if (\"borderBoxSize\" in entry) {\n          const borderSizeEntry = entry[\"borderBoxSize\"];\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize[\"inlineSize\"];\n          height = borderSize[\"blockSize\"];\n        } else {\n          width = element.offsetWidth;\n          height = element.offsetHeight;\n        }\n        setSize({ width, height });\n      });\n      resizeObserver.observe(element, { box: \"border-box\" });\n      return () => resizeObserver.unobserve(element);\n    } else {\n      setSize(void 0);\n    }\n  }, [element]);\n  return size;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLXNpemUvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDK0I7QUFDcUM7QUFDcEU7QUFDQSwwQkFBMEIsMkNBQWM7QUFDeEMsRUFBRSxrRkFBZTtBQUNqQjtBQUNBLGdCQUFnQiwwREFBMEQ7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixlQUFlO0FBQ2pDLE9BQU87QUFDUCx3Q0FBd0MsbUJBQW1CO0FBQzNEO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9yZWFjdC11c2Utc2l6ZS9kaXN0L2luZGV4Lm1qcz9mN2JlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L3VzZS1zaXplL3NyYy91c2VTaXplLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VMYXlvdXRFZmZlY3QgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXVzZS1sYXlvdXQtZWZmZWN0XCI7XG5mdW5jdGlvbiB1c2VTaXplKGVsZW1lbnQpIHtcbiAgY29uc3QgW3NpemUsIHNldFNpemVdID0gUmVhY3QudXNlU3RhdGUodm9pZCAwKTtcbiAgdXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICBpZiAoZWxlbWVudCkge1xuICAgICAgc2V0U2l6ZSh7IHdpZHRoOiBlbGVtZW50Lm9mZnNldFdpZHRoLCBoZWlnaHQ6IGVsZW1lbnQub2Zmc2V0SGVpZ2h0IH0pO1xuICAgICAgY29uc3QgcmVzaXplT2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoKGVudHJpZXMpID0+IHtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGVudHJpZXMpKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZW50cmllcy5sZW5ndGgpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZW50cnkgPSBlbnRyaWVzWzBdO1xuICAgICAgICBsZXQgd2lkdGg7XG4gICAgICAgIGxldCBoZWlnaHQ7XG4gICAgICAgIGlmIChcImJvcmRlckJveFNpemVcIiBpbiBlbnRyeSkge1xuICAgICAgICAgIGNvbnN0IGJvcmRlclNpemVFbnRyeSA9IGVudHJ5W1wiYm9yZGVyQm94U2l6ZVwiXTtcbiAgICAgICAgICBjb25zdCBib3JkZXJTaXplID0gQXJyYXkuaXNBcnJheShib3JkZXJTaXplRW50cnkpID8gYm9yZGVyU2l6ZUVudHJ5WzBdIDogYm9yZGVyU2l6ZUVudHJ5O1xuICAgICAgICAgIHdpZHRoID0gYm9yZGVyU2l6ZVtcImlubGluZVNpemVcIl07XG4gICAgICAgICAgaGVpZ2h0ID0gYm9yZGVyU2l6ZVtcImJsb2NrU2l6ZVwiXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3aWR0aCA9IGVsZW1lbnQub2Zmc2V0V2lkdGg7XG4gICAgICAgICAgaGVpZ2h0ID0gZWxlbWVudC5vZmZzZXRIZWlnaHQ7XG4gICAgICAgIH1cbiAgICAgICAgc2V0U2l6ZSh7IHdpZHRoLCBoZWlnaHQgfSk7XG4gICAgICB9KTtcbiAgICAgIHJlc2l6ZU9ic2VydmVyLm9ic2VydmUoZWxlbWVudCwgeyBib3g6IFwiYm9yZGVyLWJveFwiIH0pO1xuICAgICAgcmV0dXJuICgpID0+IHJlc2l6ZU9ic2VydmVyLnVub2JzZXJ2ZShlbGVtZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U2l6ZSh2b2lkIDApO1xuICAgIH1cbiAgfSwgW2VsZW1lbnRdKTtcbiAgcmV0dXJuIHNpemU7XG59XG5leHBvcnQge1xuICB1c2VTaXplXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-size/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Root: function() { return /* binding */ Root; },\n/* harmony export */   VisuallyHidden: function() { return /* binding */ VisuallyHidden; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/visually-hidden/src/VisuallyHidden.tsx\n\n\n\nvar NAME = \"VisuallyHidden\";\nvar VisuallyHidden = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(\n  (props, forwardedRef) => {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n      _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__.Primitive.span,\n      {\n        ...props,\n        ref: forwardedRef,\n        style: {\n          // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss\n          position: \"absolute\",\n          border: 0,\n          width: 1,\n          height: 1,\n          padding: 0,\n          margin: -1,\n          overflow: \"hidden\",\n          clip: \"rect(0, 0, 0, 0)\",\n          whiteSpace: \"nowrap\",\n          wordWrap: \"normal\",\n          ...props.style\n        }\n      }\n    );\n  }\n);\nVisuallyHidden.displayName = NAME;\nvar Root = VisuallyHidden;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdmlzdWFsbHktaGlkZGVuL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDK0I7QUFDdUI7QUFDZDtBQUN4QztBQUNBLHFCQUFxQiw2Q0FBZ0I7QUFDckM7QUFDQSwyQkFBMkIsc0RBQUc7QUFDOUIsTUFBTSxnRUFBUztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdmlzdWFsbHktaGlkZGVuL2Rpc3QvaW5kZXgubWpzPzMzYmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvdmlzdWFsbHktaGlkZGVuL3NyYy9WaXN1YWxseUhpZGRlbi50c3hcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgUHJpbWl0aXZlIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1wcmltaXRpdmVcIjtcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xudmFyIE5BTUUgPSBcIlZpc3VhbGx5SGlkZGVuXCI7XG52YXIgVmlzdWFsbHlIaWRkZW4gPSBSZWFjdC5mb3J3YXJkUmVmKFxuICAocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFxuICAgICAgUHJpbWl0aXZlLnNwYW4sXG4gICAgICB7XG4gICAgICAgIC4uLnByb3BzLFxuICAgICAgICByZWY6IGZvcndhcmRlZFJlZixcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9zY3NzL21peGlucy9fc2NyZWVuLXJlYWRlci5zY3NzXG4gICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgICBib3JkZXI6IDAsXG4gICAgICAgICAgd2lkdGg6IDEsXG4gICAgICAgICAgaGVpZ2h0OiAxLFxuICAgICAgICAgIHBhZGRpbmc6IDAsXG4gICAgICAgICAgbWFyZ2luOiAtMSxcbiAgICAgICAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcbiAgICAgICAgICBjbGlwOiBcInJlY3QoMCwgMCwgMCwgMClcIixcbiAgICAgICAgICB3aGl0ZVNwYWNlOiBcIm5vd3JhcFwiLFxuICAgICAgICAgIHdvcmRXcmFwOiBcIm5vcm1hbFwiLFxuICAgICAgICAgIC4uLnByb3BzLnN0eWxlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApO1xuICB9XG4pO1xuVmlzdWFsbHlIaWRkZW4uZGlzcGxheU5hbWUgPSBOQU1FO1xudmFyIFJvb3QgPSBWaXN1YWxseUhpZGRlbjtcbmV4cG9ydCB7XG4gIFJvb3QsXG4gIFZpc3VhbGx5SGlkZGVuXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ai/react/dist/index.mjs":
/*!**********************************************!*\
  !*** ./node_modules/ai/react/dist/index.mjs ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   experimental_useObject: function() { return /* binding */ experimental_useObject; },\n/* harmony export */   useAssistant: function() { return /* binding */ useAssistant; },\n/* harmony export */   useChat: function() { return /* binding */ useChat; },\n/* harmony export */   useCompletion: function() { return /* binding */ useCompletion; }\n/* harmony export */ });\n/* harmony import */ var _ai_sdk_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ai-sdk/react */ \"(app-pages-browser)/./node_modules/@ai-sdk/react/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ experimental_useObject,useAssistant,useChat,useCompletion auto */ // react/index.ts\n\nvar useChat = _ai_sdk_react__WEBPACK_IMPORTED_MODULE_0__.useChat;\nvar useCompletion = _ai_sdk_react__WEBPACK_IMPORTED_MODULE_0__.useCompletion;\nvar useAssistant = _ai_sdk_react__WEBPACK_IMPORTED_MODULE_0__.useAssistant;\nvar experimental_useObject = _ai_sdk_react__WEBPACK_IMPORTED_MODULE_0__.experimental_useObject;\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9haS9yZWFjdC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFLTztBQUVBLElBQU1BLFVBQVVDLGtEQUFZQTtBQUM1QixJQUFNQyxnQkFBZ0JDLHdEQUFrQkE7QUFDeEMsSUFBTUMsZUFBZUMsdURBQWlCQTtBQUN0QyxJQUFNQyx5QkFBeUJDLGlFQUEyQkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL2luZGV4LnRzPzczMTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgdXNlQ2hhdCBhcyB1c2VDaGF0UmVhY3QsXG4gIHVzZUNvbXBsZXRpb24gYXMgdXNlQ29tcGxldGlvblJlYWN0LFxuICB1c2VBc3Npc3RhbnQgYXMgdXNlQXNzaXN0YW50UmVhY3QsXG4gIGV4cGVyaW1lbnRhbF91c2VPYmplY3QgYXMgZXhwZXJpbWVudGFsX3VzZU9iamVjdFJlYWN0LFxufSBmcm9tICdAYWktc2RrL3JlYWN0JztcblxuZXhwb3J0IGNvbnN0IHVzZUNoYXQgPSB1c2VDaGF0UmVhY3Q7XG5leHBvcnQgY29uc3QgdXNlQ29tcGxldGlvbiA9IHVzZUNvbXBsZXRpb25SZWFjdDtcbmV4cG9ydCBjb25zdCB1c2VBc3Npc3RhbnQgPSB1c2VBc3Npc3RhbnRSZWFjdDtcbmV4cG9ydCBjb25zdCBleHBlcmltZW50YWxfdXNlT2JqZWN0ID0gZXhwZXJpbWVudGFsX3VzZU9iamVjdFJlYWN0O1xuZXhwb3J0IHR5cGUge1xuICBDcmVhdGVNZXNzYWdlLFxuICBNZXNzYWdlLFxuICBVc2VDaGF0T3B0aW9ucyxcbiAgVXNlQ2hhdEhlbHBlcnMsXG59IGZyb20gJ0BhaS1zZGsvcmVhY3QnO1xuIl0sIm5hbWVzIjpbInVzZUNoYXQiLCJ1c2VDaGF0UmVhY3QiLCJ1c2VDb21wbGV0aW9uIiwidXNlQ29tcGxldGlvblJlYWN0IiwidXNlQXNzaXN0YW50IiwidXNlQXNzaXN0YW50UmVhY3QiLCJleHBlcmltZW50YWxfdXNlT2JqZWN0IiwiZXhwZXJpbWVudGFsX3VzZU9iamVjdFJlYWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ai/react/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/class-variance-authority/dist/index.mjs ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cva: function() { return /* binding */ cva; },\n/* harmony export */   cx: function() { return /* binding */ cx; }\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n\nconst falsyToString = (value)=>typeof value === \"boolean\" ? \"\".concat(value) : value === 0 ? \"0\" : value;\nconst cx = clsx__WEBPACK_IMPORTED_MODULE_0__.clsx;\nconst cva = (base, config)=>{\n    return (props)=>{\n        var ref;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants , defaultVariants  } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (ref = config.compoundVariants) === null || ref === void 0 ? void 0 : ref.reduce((acc, param1)=>{\n            let { class: cvClass , className: cvClassName , ...compoundVariantOptions } = param1;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n};\n\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbGFzcy12YXJpYW5jZS1hdXRob3JpdHkvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRCO0FBQzVCO0FBQ08sV0FBVyxzQ0FBSTtBQUNmO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDhCQUE4QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLElBQUk7QUFDYjtBQUNBLGtCQUFrQixzRUFBc0U7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7OztBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jbGFzcy12YXJpYW5jZS1hdXRob3JpdHkvZGlzdC9pbmRleC5tanM/MmQxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjbHN4IH0gZnJvbSBcImNsc3hcIjtcbmNvbnN0IGZhbHN5VG9TdHJpbmcgPSAodmFsdWUpPT50eXBlb2YgdmFsdWUgPT09IFwiYm9vbGVhblwiID8gXCJcIi5jb25jYXQodmFsdWUpIDogdmFsdWUgPT09IDAgPyBcIjBcIiA6IHZhbHVlO1xuZXhwb3J0IGNvbnN0IGN4ID0gY2xzeDtcbmV4cG9ydCBjb25zdCBjdmEgPSAoYmFzZSwgY29uZmlnKT0+e1xuICAgIHJldHVybiAocHJvcHMpPT57XG4gICAgICAgIHZhciByZWY7XG4gICAgICAgIGlmICgoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLnZhcmlhbnRzKSA9PSBudWxsKSByZXR1cm4gY3goYmFzZSwgcHJvcHMgPT09IG51bGwgfHwgcHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb3BzLmNsYXNzLCBwcm9wcyA9PT0gbnVsbCB8fCBwcm9wcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcHJvcHMuY2xhc3NOYW1lKTtcbiAgICAgICAgY29uc3QgeyB2YXJpYW50cyAsIGRlZmF1bHRWYXJpYW50cyAgfSA9IGNvbmZpZztcbiAgICAgICAgY29uc3QgZ2V0VmFyaWFudENsYXNzTmFtZXMgPSBPYmplY3Qua2V5cyh2YXJpYW50cykubWFwKCh2YXJpYW50KT0+e1xuICAgICAgICAgICAgY29uc3QgdmFyaWFudFByb3AgPSBwcm9wcyA9PT0gbnVsbCB8fCBwcm9wcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcHJvcHNbdmFyaWFudF07XG4gICAgICAgICAgICBjb25zdCBkZWZhdWx0VmFyaWFudFByb3AgPSBkZWZhdWx0VmFyaWFudHMgPT09IG51bGwgfHwgZGVmYXVsdFZhcmlhbnRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkZWZhdWx0VmFyaWFudHNbdmFyaWFudF07XG4gICAgICAgICAgICBpZiAodmFyaWFudFByb3AgPT09IG51bGwpIHJldHVybiBudWxsO1xuICAgICAgICAgICAgY29uc3QgdmFyaWFudEtleSA9IGZhbHN5VG9TdHJpbmcodmFyaWFudFByb3ApIHx8IGZhbHN5VG9TdHJpbmcoZGVmYXVsdFZhcmlhbnRQcm9wKTtcbiAgICAgICAgICAgIHJldHVybiB2YXJpYW50c1t2YXJpYW50XVt2YXJpYW50S2V5XTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHByb3BzV2l0aG91dFVuZGVmaW5lZCA9IHByb3BzICYmIE9iamVjdC5lbnRyaWVzKHByb3BzKS5yZWR1Y2UoKGFjYywgcGFyYW0pPT57XG4gICAgICAgICAgICBsZXQgW2tleSwgdmFsdWVdID0gcGFyYW07XG4gICAgICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhY2Nba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgfSwge30pO1xuICAgICAgICBjb25zdCBnZXRDb21wb3VuZFZhcmlhbnRDbGFzc05hbWVzID0gY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogKHJlZiA9IGNvbmZpZy5jb21wb3VuZFZhcmlhbnRzKSA9PT0gbnVsbCB8fCByZWYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlZi5yZWR1Y2UoKGFjYywgcGFyYW0xKT0+e1xuICAgICAgICAgICAgbGV0IHsgY2xhc3M6IGN2Q2xhc3MgLCBjbGFzc05hbWU6IGN2Q2xhc3NOYW1lICwgLi4uY29tcG91bmRWYXJpYW50T3B0aW9ucyB9ID0gcGFyYW0xO1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKGNvbXBvdW5kVmFyaWFudE9wdGlvbnMpLmV2ZXJ5KChwYXJhbSk9PntcbiAgICAgICAgICAgICAgICBsZXQgW2tleSwgdmFsdWVdID0gcGFyYW07XG4gICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUuaW5jbHVkZXMoe1xuICAgICAgICAgICAgICAgICAgICAuLi5kZWZhdWx0VmFyaWFudHMsXG4gICAgICAgICAgICAgICAgICAgIC4uLnByb3BzV2l0aG91dFVuZGVmaW5lZFxuICAgICAgICAgICAgICAgIH1ba2V5XSkgOiAoe1xuICAgICAgICAgICAgICAgICAgICAuLi5kZWZhdWx0VmFyaWFudHMsXG4gICAgICAgICAgICAgICAgICAgIC4uLnByb3BzV2l0aG91dFVuZGVmaW5lZFxuICAgICAgICAgICAgICAgIH0pW2tleV0gPT09IHZhbHVlO1xuICAgICAgICAgICAgfSkgPyBbXG4gICAgICAgICAgICAgICAgLi4uYWNjLFxuICAgICAgICAgICAgICAgIGN2Q2xhc3MsXG4gICAgICAgICAgICAgICAgY3ZDbGFzc05hbWVcbiAgICAgICAgICAgIF0gOiBhY2M7XG4gICAgICAgIH0sIFtdKTtcbiAgICAgICAgcmV0dXJuIGN4KGJhc2UsIGdldFZhcmlhbnRDbGFzc05hbWVzLCBnZXRDb21wb3VuZFZhcmlhbnRDbGFzc05hbWVzLCBwcm9wcyA9PT0gbnVsbCB8fCBwcm9wcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcHJvcHMuY2xhc3MsIHByb3BzID09PSBudWxsIHx8IHByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwcm9wcy5jbGFzc05hbWUpO1xuICAgIH07XG59O1xuXG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs":
/*!*****************************************!*\
  !*** ./node_modules/clsx/dist/clsx.mjs ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clsx: function() { return /* binding */ clsx; }\n/* harmony export */ });\nfunction r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}/* harmony default export */ __webpack_exports__[\"default\"] = (clsx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbHN4L2Rpc3QvY2xzeC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWMsYUFBYSwrQ0FBK0MsdURBQXVELFdBQVcsMENBQTBDLHlDQUF5QyxTQUFnQixnQkFBZ0IscUJBQXFCLG1CQUFtQixrREFBa0QsU0FBUywrREFBZSxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jbHN4L2Rpc3QvY2xzeC5tanM/ZTE2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiByKGUpe3ZhciB0LGYsbj1cIlwiO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlfHxcIm51bWJlclwiPT10eXBlb2YgZSluKz1lO2Vsc2UgaWYoXCJvYmplY3RcIj09dHlwZW9mIGUpaWYoQXJyYXkuaXNBcnJheShlKSlmb3IodD0wO3Q8ZS5sZW5ndGg7dCsrKWVbdF0mJihmPXIoZVt0XSkpJiYobiYmKG4rPVwiIFwiKSxuKz1mKTtlbHNlIGZvcih0IGluIGUpZVt0XSYmKG4mJihuKz1cIiBcIiksbis9dCk7cmV0dXJuIG59ZXhwb3J0IGZ1bmN0aW9uIGNsc3goKXtmb3IodmFyIGUsdCxmPTAsbj1cIlwiO2Y8YXJndW1lbnRzLmxlbmd0aDspKGU9YXJndW1lbnRzW2YrK10pJiYodD1yKGUpKSYmKG4mJihuKz1cIiBcIiksbis9dCk7cmV0dXJuIG59ZXhwb3J0IGRlZmF1bHQgY2xzeDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/eventsource-parser/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/eventsource-parser/dist/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createParser: function() { return /* binding */ createParser; }\n/* harmony export */ });\nfunction createParser(onParse) {\n  let isFirstChunk;\n  let buffer;\n  let startingPosition;\n  let startingFieldLength;\n  let eventId;\n  let eventName;\n  let data;\n  reset();\n  return {\n    feed,\n    reset\n  };\n  function reset() {\n    isFirstChunk = true;\n    buffer = \"\";\n    startingPosition = 0;\n    startingFieldLength = -1;\n    eventId = void 0;\n    eventName = void 0;\n    data = \"\";\n  }\n  function feed(chunk) {\n    buffer = buffer ? buffer + chunk : chunk;\n    if (isFirstChunk && hasBom(buffer)) {\n      buffer = buffer.slice(BOM.length);\n    }\n    isFirstChunk = false;\n    const length = buffer.length;\n    let position = 0;\n    let discardTrailingNewline = false;\n    while (position < length) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === \"\\n\") {\n          ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineLength = -1;\n      let fieldLength = startingFieldLength;\n      let character;\n      for (let index = startingPosition; lineLength < 0 && index < length; ++index) {\n        character = buffer[index];\n        if (character === \":\" && fieldLength < 0) {\n          fieldLength = index - position;\n        } else if (character === \"\\r\") {\n          discardTrailingNewline = true;\n          lineLength = index - position;\n        } else if (character === \"\\n\") {\n          lineLength = index - position;\n        }\n      }\n      if (lineLength < 0) {\n        startingPosition = length - position;\n        startingFieldLength = fieldLength;\n        break;\n      } else {\n        startingPosition = 0;\n        startingFieldLength = -1;\n      }\n      parseEventStreamLine(buffer, position, fieldLength, lineLength);\n      position += lineLength + 1;\n    }\n    if (position === length) {\n      buffer = \"\";\n    } else if (position > 0) {\n      buffer = buffer.slice(position);\n    }\n  }\n  function parseEventStreamLine(lineBuffer, index, fieldLength, lineLength) {\n    if (lineLength === 0) {\n      if (data.length > 0) {\n        onParse({\n          type: \"event\",\n          id: eventId,\n          event: eventName || void 0,\n          data: data.slice(0, -1)\n          // remove trailing newline\n        });\n\n        data = \"\";\n        eventId = void 0;\n      }\n      eventName = void 0;\n      return;\n    }\n    const noValue = fieldLength < 0;\n    const field = lineBuffer.slice(index, index + (noValue ? lineLength : fieldLength));\n    let step = 0;\n    if (noValue) {\n      step = lineLength;\n    } else if (lineBuffer[index + fieldLength + 1] === \" \") {\n      step = fieldLength + 2;\n    } else {\n      step = fieldLength + 1;\n    }\n    const position = index + step;\n    const valueLength = lineLength - step;\n    const value = lineBuffer.slice(position, position + valueLength).toString();\n    if (field === \"data\") {\n      data += value ? \"\".concat(value, \"\\n\") : \"\\n\";\n    } else if (field === \"event\") {\n      eventName = value;\n    } else if (field === \"id\" && !value.includes(\"\\0\")) {\n      eventId = value;\n    } else if (field === \"retry\") {\n      const retry = parseInt(value, 10);\n      if (!Number.isNaN(retry)) {\n        onParse({\n          type: \"reconnect-interval\",\n          value: retry\n        });\n      }\n    }\n  }\n}\nconst BOM = [239, 187, 191];\nfunction hasBom(buffer) {\n  return BOM.every((charCode, index) => buffer.charCodeAt(index) === charCode);\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9ldmVudHNvdXJjZS1wYXJzZXIvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxrQ0FBa0M7QUFDM0U7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3dCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ldmVudHNvdXJjZS1wYXJzZXIvZGlzdC9pbmRleC5qcz80NjUzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGNyZWF0ZVBhcnNlcihvblBhcnNlKSB7XG4gIGxldCBpc0ZpcnN0Q2h1bms7XG4gIGxldCBidWZmZXI7XG4gIGxldCBzdGFydGluZ1Bvc2l0aW9uO1xuICBsZXQgc3RhcnRpbmdGaWVsZExlbmd0aDtcbiAgbGV0IGV2ZW50SWQ7XG4gIGxldCBldmVudE5hbWU7XG4gIGxldCBkYXRhO1xuICByZXNldCgpO1xuICByZXR1cm4ge1xuICAgIGZlZWQsXG4gICAgcmVzZXRcbiAgfTtcbiAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgaXNGaXJzdENodW5rID0gdHJ1ZTtcbiAgICBidWZmZXIgPSBcIlwiO1xuICAgIHN0YXJ0aW5nUG9zaXRpb24gPSAwO1xuICAgIHN0YXJ0aW5nRmllbGRMZW5ndGggPSAtMTtcbiAgICBldmVudElkID0gdm9pZCAwO1xuICAgIGV2ZW50TmFtZSA9IHZvaWQgMDtcbiAgICBkYXRhID0gXCJcIjtcbiAgfVxuICBmdW5jdGlvbiBmZWVkKGNodW5rKSB7XG4gICAgYnVmZmVyID0gYnVmZmVyID8gYnVmZmVyICsgY2h1bmsgOiBjaHVuaztcbiAgICBpZiAoaXNGaXJzdENodW5rICYmIGhhc0JvbShidWZmZXIpKSB7XG4gICAgICBidWZmZXIgPSBidWZmZXIuc2xpY2UoQk9NLmxlbmd0aCk7XG4gICAgfVxuICAgIGlzRmlyc3RDaHVuayA9IGZhbHNlO1xuICAgIGNvbnN0IGxlbmd0aCA9IGJ1ZmZlci5sZW5ndGg7XG4gICAgbGV0IHBvc2l0aW9uID0gMDtcbiAgICBsZXQgZGlzY2FyZFRyYWlsaW5nTmV3bGluZSA9IGZhbHNlO1xuICAgIHdoaWxlIChwb3NpdGlvbiA8IGxlbmd0aCkge1xuICAgICAgaWYgKGRpc2NhcmRUcmFpbGluZ05ld2xpbmUpIHtcbiAgICAgICAgaWYgKGJ1ZmZlcltwb3NpdGlvbl0gPT09IFwiXFxuXCIpIHtcbiAgICAgICAgICArK3Bvc2l0aW9uO1xuICAgICAgICB9XG4gICAgICAgIGRpc2NhcmRUcmFpbGluZ05ld2xpbmUgPSBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGxldCBsaW5lTGVuZ3RoID0gLTE7XG4gICAgICBsZXQgZmllbGRMZW5ndGggPSBzdGFydGluZ0ZpZWxkTGVuZ3RoO1xuICAgICAgbGV0IGNoYXJhY3RlcjtcbiAgICAgIGZvciAobGV0IGluZGV4ID0gc3RhcnRpbmdQb3NpdGlvbjsgbGluZUxlbmd0aCA8IDAgJiYgaW5kZXggPCBsZW5ndGg7ICsraW5kZXgpIHtcbiAgICAgICAgY2hhcmFjdGVyID0gYnVmZmVyW2luZGV4XTtcbiAgICAgICAgaWYgKGNoYXJhY3RlciA9PT0gXCI6XCIgJiYgZmllbGRMZW5ndGggPCAwKSB7XG4gICAgICAgICAgZmllbGRMZW5ndGggPSBpbmRleCAtIHBvc2l0aW9uO1xuICAgICAgICB9IGVsc2UgaWYgKGNoYXJhY3RlciA9PT0gXCJcXHJcIikge1xuICAgICAgICAgIGRpc2NhcmRUcmFpbGluZ05ld2xpbmUgPSB0cnVlO1xuICAgICAgICAgIGxpbmVMZW5ndGggPSBpbmRleCAtIHBvc2l0aW9uO1xuICAgICAgICB9IGVsc2UgaWYgKGNoYXJhY3RlciA9PT0gXCJcXG5cIikge1xuICAgICAgICAgIGxpbmVMZW5ndGggPSBpbmRleCAtIHBvc2l0aW9uO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobGluZUxlbmd0aCA8IDApIHtcbiAgICAgICAgc3RhcnRpbmdQb3NpdGlvbiA9IGxlbmd0aCAtIHBvc2l0aW9uO1xuICAgICAgICBzdGFydGluZ0ZpZWxkTGVuZ3RoID0gZmllbGRMZW5ndGg7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RhcnRpbmdQb3NpdGlvbiA9IDA7XG4gICAgICAgIHN0YXJ0aW5nRmllbGRMZW5ndGggPSAtMTtcbiAgICAgIH1cbiAgICAgIHBhcnNlRXZlbnRTdHJlYW1MaW5lKGJ1ZmZlciwgcG9zaXRpb24sIGZpZWxkTGVuZ3RoLCBsaW5lTGVuZ3RoKTtcbiAgICAgIHBvc2l0aW9uICs9IGxpbmVMZW5ndGggKyAxO1xuICAgIH1cbiAgICBpZiAocG9zaXRpb24gPT09IGxlbmd0aCkge1xuICAgICAgYnVmZmVyID0gXCJcIjtcbiAgICB9IGVsc2UgaWYgKHBvc2l0aW9uID4gMCkge1xuICAgICAgYnVmZmVyID0gYnVmZmVyLnNsaWNlKHBvc2l0aW9uKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gcGFyc2VFdmVudFN0cmVhbUxpbmUobGluZUJ1ZmZlciwgaW5kZXgsIGZpZWxkTGVuZ3RoLCBsaW5lTGVuZ3RoKSB7XG4gICAgaWYgKGxpbmVMZW5ndGggPT09IDApIHtcbiAgICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHtcbiAgICAgICAgb25QYXJzZSh7XG4gICAgICAgICAgdHlwZTogXCJldmVudFwiLFxuICAgICAgICAgIGlkOiBldmVudElkLFxuICAgICAgICAgIGV2ZW50OiBldmVudE5hbWUgfHwgdm9pZCAwLFxuICAgICAgICAgIGRhdGE6IGRhdGEuc2xpY2UoMCwgLTEpXG4gICAgICAgICAgLy8gcmVtb3ZlIHRyYWlsaW5nIG5ld2xpbmVcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZGF0YSA9IFwiXCI7XG4gICAgICAgIGV2ZW50SWQgPSB2b2lkIDA7XG4gICAgICB9XG4gICAgICBldmVudE5hbWUgPSB2b2lkIDA7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IG5vVmFsdWUgPSBmaWVsZExlbmd0aCA8IDA7XG4gICAgY29uc3QgZmllbGQgPSBsaW5lQnVmZmVyLnNsaWNlKGluZGV4LCBpbmRleCArIChub1ZhbHVlID8gbGluZUxlbmd0aCA6IGZpZWxkTGVuZ3RoKSk7XG4gICAgbGV0IHN0ZXAgPSAwO1xuICAgIGlmIChub1ZhbHVlKSB7XG4gICAgICBzdGVwID0gbGluZUxlbmd0aDtcbiAgICB9IGVsc2UgaWYgKGxpbmVCdWZmZXJbaW5kZXggKyBmaWVsZExlbmd0aCArIDFdID09PSBcIiBcIikge1xuICAgICAgc3RlcCA9IGZpZWxkTGVuZ3RoICsgMjtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RlcCA9IGZpZWxkTGVuZ3RoICsgMTtcbiAgICB9XG4gICAgY29uc3QgcG9zaXRpb24gPSBpbmRleCArIHN0ZXA7XG4gICAgY29uc3QgdmFsdWVMZW5ndGggPSBsaW5lTGVuZ3RoIC0gc3RlcDtcbiAgICBjb25zdCB2YWx1ZSA9IGxpbmVCdWZmZXIuc2xpY2UocG9zaXRpb24sIHBvc2l0aW9uICsgdmFsdWVMZW5ndGgpLnRvU3RyaW5nKCk7XG4gICAgaWYgKGZpZWxkID09PSBcImRhdGFcIikge1xuICAgICAgZGF0YSArPSB2YWx1ZSA/IFwiXCIuY29uY2F0KHZhbHVlLCBcIlxcblwiKSA6IFwiXFxuXCI7XG4gICAgfSBlbHNlIGlmIChmaWVsZCA9PT0gXCJldmVudFwiKSB7XG4gICAgICBldmVudE5hbWUgPSB2YWx1ZTtcbiAgICB9IGVsc2UgaWYgKGZpZWxkID09PSBcImlkXCIgJiYgIXZhbHVlLmluY2x1ZGVzKFwiXFwwXCIpKSB7XG4gICAgICBldmVudElkID0gdmFsdWU7XG4gICAgfSBlbHNlIGlmIChmaWVsZCA9PT0gXCJyZXRyeVwiKSB7XG4gICAgICBjb25zdCByZXRyeSA9IHBhcnNlSW50KHZhbHVlLCAxMCk7XG4gICAgICBpZiAoIU51bWJlci5pc05hTihyZXRyeSkpIHtcbiAgICAgICAgb25QYXJzZSh7XG4gICAgICAgICAgdHlwZTogXCJyZWNvbm5lY3QtaW50ZXJ2YWxcIixcbiAgICAgICAgICB2YWx1ZTogcmV0cnlcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5jb25zdCBCT00gPSBbMjM5LCAxODcsIDE5MV07XG5mdW5jdGlvbiBoYXNCb20oYnVmZmVyKSB7XG4gIHJldHVybiBCT00uZXZlcnkoKGNoYXJDb2RlLCBpbmRleCkgPT4gYnVmZmVyLmNoYXJDb2RlQXQoaW5kZXgpID09PSBjaGFyQ29kZSk7XG59XG5leHBvcnQgeyBjcmVhdGVQYXJzZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/eventsource-parser/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/eventsource-parser/dist/stream.js":
/*!********************************************************!*\
  !*** ./node_modules/eventsource-parser/dist/stream.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventSourceParserStream: function() { return /* binding */ EventSourceParserStream; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"(app-pages-browser)/./node_modules/eventsource-parser/dist/index.js\");\n\nclass EventSourceParserStream extends TransformStream {\n  constructor() {\n    let parser;\n    super({\n      start(controller) {\n        parser = (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.createParser)(event => {\n          if (event.type === \"event\") {\n            controller.enqueue(event);\n          }\n        });\n      },\n      transform(chunk) {\n        parser.feed(chunk);\n      }\n    });\n  }\n}\n\n//# sourceMappingURL=stream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9ldmVudHNvdXJjZS1wYXJzZXIvZGlzdC9zdHJlYW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1REFBWTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ21DO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ldmVudHNvdXJjZS1wYXJzZXIvZGlzdC9zdHJlYW0uanM/NjJkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVQYXJzZXIgfSBmcm9tICcuL2luZGV4LmpzJztcbmNsYXNzIEV2ZW50U291cmNlUGFyc2VyU3RyZWFtIGV4dGVuZHMgVHJhbnNmb3JtU3RyZWFtIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgbGV0IHBhcnNlcjtcbiAgICBzdXBlcih7XG4gICAgICBzdGFydChjb250cm9sbGVyKSB7XG4gICAgICAgIHBhcnNlciA9IGNyZWF0ZVBhcnNlcihldmVudCA9PiB7XG4gICAgICAgICAgaWYgKGV2ZW50LnR5cGUgPT09IFwiZXZlbnRcIikge1xuICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKGV2ZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIHRyYW5zZm9ybShjaHVuaykge1xuICAgICAgICBwYXJzZXIuZmVlZChjaHVuayk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbmV4cG9ydCB7IEV2ZW50U291cmNlUGFyc2VyU3RyZWFtIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJlYW0uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/eventsource-parser/dist/stream.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/nanoid/non-secure/index.js":
/*!*************************************************!*\
  !*** ./node_modules/nanoid/non-secure/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   customAlphabet: function() { return /* binding */ customAlphabet; },\n/* harmony export */   nanoid: function() { return /* binding */ nanoid; }\n/* harmony export */ });\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uYW5vaWQvbm9uLXNlY3VyZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25hbm9pZC9ub24tc2VjdXJlL2luZGV4LmpzP2QzNzkiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IHVybEFscGhhYmV0ID1cbiAgJ3VzZWFuZG9tLTI2VDE5ODM0MFBYNzVweEpBQ0tWRVJZTUlOREJVU0hXT0xGX0dRWmJmZ2hqa2xxdnd5enJpY3QnXG5leHBvcnQgbGV0IGN1c3RvbUFscGhhYmV0ID0gKGFscGhhYmV0LCBkZWZhdWx0U2l6ZSA9IDIxKSA9PiB7XG4gIHJldHVybiAoc2l6ZSA9IGRlZmF1bHRTaXplKSA9PiB7XG4gICAgbGV0IGlkID0gJydcbiAgICBsZXQgaSA9IHNpemVcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICBpZCArPSBhbHBoYWJldFsoTWF0aC5yYW5kb20oKSAqIGFscGhhYmV0Lmxlbmd0aCkgfCAwXVxuICAgIH1cbiAgICByZXR1cm4gaWRcbiAgfVxufVxuZXhwb3J0IGxldCBuYW5vaWQgPSAoc2l6ZSA9IDIxKSA9PiB7XG4gIGxldCBpZCA9ICcnXG4gIGxldCBpID0gc2l6ZVxuICB3aGlsZSAoaS0tKSB7XG4gICAgaWQgKz0gdXJsQWxwaGFiZXRbKE1hdGgucmFuZG9tKCkgKiA2NCkgfCAwXVxuICB9XG4gIHJldHVybiBpZFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/nanoid/non-secure/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/dist/_internal/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/swr/dist/_internal/index.mjs ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INFINITE_PREFIX: function() { return /* binding */ INFINITE_PREFIX; },\n/* harmony export */   IS_REACT_LEGACY: function() { return /* binding */ IS_REACT_LEGACY; },\n/* harmony export */   IS_SERVER: function() { return /* binding */ IS_SERVER; },\n/* harmony export */   OBJECT: function() { return /* binding */ OBJECT; },\n/* harmony export */   SWRConfig: function() { return /* binding */ SWRConfig; },\n/* harmony export */   SWRGlobalState: function() { return /* binding */ SWRGlobalState; },\n/* harmony export */   UNDEFINED: function() { return /* binding */ UNDEFINED; },\n/* harmony export */   cache: function() { return /* binding */ cache; },\n/* harmony export */   compare: function() { return /* binding */ compare; },\n/* harmony export */   createCacheHelper: function() { return /* binding */ createCacheHelper; },\n/* harmony export */   defaultConfig: function() { return /* binding */ defaultConfig; },\n/* harmony export */   defaultConfigOptions: function() { return /* binding */ defaultConfigOptions; },\n/* harmony export */   getTimestamp: function() { return /* binding */ getTimestamp; },\n/* harmony export */   hasRequestAnimationFrame: function() { return /* binding */ hasRequestAnimationFrame; },\n/* harmony export */   initCache: function() { return /* binding */ initCache; },\n/* harmony export */   internalMutate: function() { return /* binding */ internalMutate; },\n/* harmony export */   isDocumentDefined: function() { return /* binding */ isDocumentDefined; },\n/* harmony export */   isFunction: function() { return /* binding */ isFunction; },\n/* harmony export */   isPromiseLike: function() { return /* binding */ isPromiseLike; },\n/* harmony export */   isUndefined: function() { return /* binding */ isUndefined; },\n/* harmony export */   isWindowDefined: function() { return /* binding */ isWindowDefined; },\n/* harmony export */   mergeConfigs: function() { return /* binding */ mergeConfigs; },\n/* harmony export */   mergeObjects: function() { return /* binding */ mergeObjects; },\n/* harmony export */   mutate: function() { return /* binding */ mutate; },\n/* harmony export */   noop: function() { return /* binding */ noop; },\n/* harmony export */   normalize: function() { return /* binding */ normalize; },\n/* harmony export */   preload: function() { return /* binding */ preload; },\n/* harmony export */   preset: function() { return /* binding */ preset; },\n/* harmony export */   rAF: function() { return /* binding */ rAF; },\n/* harmony export */   revalidateEvents: function() { return /* binding */ events; },\n/* harmony export */   serialize: function() { return /* binding */ serialize; },\n/* harmony export */   slowConnection: function() { return /* binding */ slowConnection; },\n/* harmony export */   stableHash: function() { return /* binding */ stableHash; },\n/* harmony export */   subscribeCallback: function() { return /* binding */ subscribeCallback; },\n/* harmony export */   useIsomorphicLayoutEffect: function() { return /* binding */ useIsomorphicLayoutEffect; },\n/* harmony export */   useSWRConfig: function() { return /* binding */ useSWRConfig; },\n/* harmony export */   withArgs: function() { return /* binding */ withArgs; },\n/* harmony export */   withMiddleware: function() { return /* binding */ withMiddleware; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n\n// Shared state between server components and client components\nconst noop = ()=>{};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nconst UNDEFINED = /*#__NOINLINE__*/ noop();\nconst OBJECT = Object;\nconst isUndefined = (v)=>v === UNDEFINED;\nconst isFunction = (v)=>typeof v == 'function';\nconst mergeObjects = (a, b)=>({\n        ...a,\n        ...b\n    });\nconst isPromiseLike = (x)=>isFunction(x.then);\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\n// counter of the key\nlet counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nconst stableHash = (arg)=>{\n    const type = typeof arg;\n    const constructor = arg && arg.constructor;\n    const isDate = constructor == Date;\n    let result;\n    let index;\n    if (OBJECT(arg) === arg && !isDate && constructor != RegExp) {\n        // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n        // If it's already hashed, directly return the result.\n        result = table.get(arg);\n        if (result) return result;\n        // Store the hash first for circular reference detection before entering the\n        // recursive `stableHash` calls.\n        // For other objects like set and map, we use this id directly as the hash.\n        result = ++counter + '~';\n        table.set(arg, result);\n        if (constructor == Array) {\n            // Array.\n            result = '@';\n            for(index = 0; index < arg.length; index++){\n                result += stableHash(arg[index]) + ',';\n            }\n            table.set(arg, result);\n        }\n        if (constructor == OBJECT) {\n            // Object, sort keys.\n            result = '#';\n            const keys = OBJECT.keys(arg).sort();\n            while(!isUndefined(index = keys.pop())){\n                if (!isUndefined(arg[index])) {\n                    result += index + ':' + stableHash(arg[index]) + ',';\n                }\n            }\n            table.set(arg, result);\n        }\n    } else {\n        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n    }\n    return result;\n};\n\n// Global state used to deduplicate requests and store listeners\nconst SWRGlobalState = new WeakMap();\n\nconst EMPTY_CACHE = {};\nconst INITIAL_CACHE = {};\nconst STR_UNDEFINED = 'undefined';\n// NOTE: Use the function to guarantee it's re-evaluated between jsdom and node runtime for tests.\nconst isWindowDefined = typeof window != STR_UNDEFINED;\nconst isDocumentDefined = typeof document != STR_UNDEFINED;\nconst hasRequestAnimationFrame = ()=>isWindowDefined && typeof window['requestAnimationFrame'] != STR_UNDEFINED;\nconst createCacheHelper = (cache, key)=>{\n    const state = SWRGlobalState.get(cache);\n    return [\n        // Getter\n        ()=>!isUndefined(key) && cache.get(key) || EMPTY_CACHE,\n        // Setter\n        (info)=>{\n            if (!isUndefined(key)) {\n                const prev = cache.get(key);\n                // Before writing to the store, we keep the value in the initial cache\n                // if it's not there yet.\n                if (!(key in INITIAL_CACHE)) {\n                    INITIAL_CACHE[key] = prev;\n                }\n                state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE);\n            }\n        },\n        // Subscriber\n        state[6],\n        // Get server cache snapshot\n        ()=>{\n            if (!isUndefined(key)) {\n                // If the cache was updated on the client, we return the stored initial value.\n                if (key in INITIAL_CACHE) return INITIAL_CACHE[key];\n            }\n            // If we haven't done any client-side updates, we return the current value.\n            return !isUndefined(key) && cache.get(key) || EMPTY_CACHE;\n        }\n    ];\n} // export { UNDEFINED, OBJECT, isUndefined, isFunction, mergeObjects, isPromiseLike }\n;\n\n/**\n * Due to the bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a workaround, we always assume it's online on the first load, and change\n * the status upon `online` or `offline` events.\n */ let online = true;\nconst isOnline = ()=>online;\n// For node and React Native, `add/removeEventListener` doesn't exist on window.\nconst [onWindowEvent, offWindowEvent] = isWindowDefined && window.addEventListener ? [\n    window.addEventListener.bind(window),\n    window.removeEventListener.bind(window)\n] : [\n    noop,\n    noop\n];\nconst isVisible = ()=>{\n    const visibilityState = isDocumentDefined && document.visibilityState;\n    return isUndefined(visibilityState) || visibilityState !== 'hidden';\n};\nconst initFocus = (callback)=>{\n    // focus revalidate\n    if (isDocumentDefined) {\n        document.addEventListener('visibilitychange', callback);\n    }\n    onWindowEvent('focus', callback);\n    return ()=>{\n        if (isDocumentDefined) {\n            document.removeEventListener('visibilitychange', callback);\n        }\n        offWindowEvent('focus', callback);\n    };\n};\nconst initReconnect = (callback)=>{\n    // revalidate on reconnected\n    const onOnline = ()=>{\n        online = true;\n        callback();\n    };\n    // nothing to revalidate, just update the status\n    const onOffline = ()=>{\n        online = false;\n    };\n    onWindowEvent('online', onOnline);\n    onWindowEvent('offline', onOffline);\n    return ()=>{\n        offWindowEvent('online', onOnline);\n        offWindowEvent('offline', onOffline);\n    };\n};\nconst preset = {\n    isOnline,\n    isVisible\n};\nconst defaultConfigOptions = {\n    initFocus,\n    initReconnect\n};\n\nconst IS_REACT_LEGACY = !react__WEBPACK_IMPORTED_MODULE_0__.useId;\nconst IS_SERVER = !isWindowDefined || 'Deno' in window;\n// Polyfill requestAnimationFrame\nconst rAF = (f)=>hasRequestAnimationFrame() ? window['requestAnimationFrame'](f) : setTimeout(f, 1);\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? react__WEBPACK_IMPORTED_MODULE_0__.useEffect : react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;\n// This assignment is to extend the Navigator type to use effectiveType.\nconst navigatorConnection = typeof navigator !== 'undefined' && navigator.connection;\n// Adjust the config based on slow connection status (<= 70Kbps).\nconst slowConnection = !IS_SERVER && navigatorConnection && ([\n    'slow-2g',\n    '2g'\n].includes(navigatorConnection.effectiveType) || navigatorConnection.saveData);\n\nconst serialize = (key)=>{\n    if (isFunction(key)) {\n        try {\n            key = key();\n        } catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    // Use the original key as the argument of fetcher. This can be a string or an\n    // array of values.\n    const args = key;\n    // If key is not falsy, or not an empty array, hash it.\n    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n    return [\n        key,\n        args\n    ];\n};\n\n// Global timestamp.\nlet __timestamp = 0;\nconst getTimestamp = ()=>++__timestamp;\n\nconst FOCUS_EVENT = 0;\nconst RECONNECT_EVENT = 1;\nconst MUTATE_EVENT = 2;\nconst ERROR_REVALIDATE_EVENT = 3;\n\nvar events = {\n  __proto__: null,\n  ERROR_REVALIDATE_EVENT: ERROR_REVALIDATE_EVENT,\n  FOCUS_EVENT: FOCUS_EVENT,\n  MUTATE_EVENT: MUTATE_EVENT,\n  RECONNECT_EVENT: RECONNECT_EVENT\n};\n\nasync function internalMutate(...args) {\n    const [cache, _key, _data, _opts] = args;\n    // When passing as a boolean, it's explicitly used to disable/enable\n    // revalidation.\n    const options = mergeObjects({\n        populateCache: true,\n        throwOnError: true\n    }, typeof _opts === 'boolean' ? {\n        revalidate: _opts\n    } : _opts || {});\n    let populateCache = options.populateCache;\n    const rollbackOnErrorOption = options.rollbackOnError;\n    let optimisticData = options.optimisticData;\n    const rollbackOnError = (error)=>{\n        return typeof rollbackOnErrorOption === 'function' ? rollbackOnErrorOption(error) : rollbackOnErrorOption !== false;\n    };\n    const throwOnError = options.throwOnError;\n    // If the second argument is a key filter, return the mutation results for all\n    // filtered keys.\n    if (isFunction(_key)) {\n        const keyFilter = _key;\n        const matchedKeys = [];\n        const it = cache.keys();\n        for (const key of it){\n            if (// Skip the special useSWRInfinite and useSWRSubscription keys.\n            !/^\\$(inf|sub)\\$/.test(key) && keyFilter(cache.get(key)._k)) {\n                matchedKeys.push(key);\n            }\n        }\n        return Promise.all(matchedKeys.map(mutateByKey));\n    }\n    return mutateByKey(_key);\n    async function mutateByKey(_k) {\n        // Serialize key\n        const [key] = serialize(_k);\n        if (!key) return;\n        const [get, set] = createCacheHelper(cache, key);\n        const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n        const startRevalidate = ()=>{\n            const revalidators = EVENT_REVALIDATORS[key];\n            const revalidate = isFunction(options.revalidate) ? options.revalidate(get().data, _k) : options.revalidate !== false;\n            if (revalidate) {\n                // Invalidate the key by deleting the concurrent request markers so new\n                // requests will not be deduped.\n                delete FETCH[key];\n                delete PRELOAD[key];\n                if (revalidators && revalidators[0]) {\n                    return revalidators[0](MUTATE_EVENT).then(()=>get().data);\n                }\n            }\n            return get().data;\n        };\n        // If there is no new data provided, revalidate the key with current state.\n        if (args.length < 3) {\n            // Revalidate and broadcast state.\n            return startRevalidate();\n        }\n        let data = _data;\n        let error;\n        // Update global timestamps.\n        const beforeMutationTs = getTimestamp();\n        MUTATION[key] = [\n            beforeMutationTs,\n            0\n        ];\n        const hasOptimisticData = !isUndefined(optimisticData);\n        const state = get();\n        // `displayedData` is the current value on screen. It could be the optimistic value\n        // that is going to be overridden by a `committedData`, or get reverted back.\n        // `committedData` is the validated value that comes from a fetch or mutation.\n        const displayedData = state.data;\n        const currentData = state._c;\n        const committedData = isUndefined(currentData) ? displayedData : currentData;\n        // Do optimistic data update.\n        if (hasOptimisticData) {\n            optimisticData = isFunction(optimisticData) ? optimisticData(committedData, displayedData) : optimisticData;\n            // When we set optimistic data, backup the current committedData data in `_c`.\n            set({\n                data: optimisticData,\n                _c: committedData\n            });\n        }\n        if (isFunction(data)) {\n            // `data` is a function, call it passing current cache value.\n            try {\n                data = data(committedData);\n            } catch (err) {\n                // If it throws an error synchronously, we shouldn't update the cache.\n                error = err;\n            }\n        }\n        // `data` is a promise/thenable, resolve the final data first.\n        if (data && isPromiseLike(data)) {\n            // This means that the mutation is async, we need to check timestamps to\n            // avoid race conditions.\n            data = await data.catch((err)=>{\n                error = err;\n            });\n            // Check if other mutations have occurred since we've started this mutation.\n            // If there's a race we don't update cache or broadcast the change,\n            // just return the data.\n            if (beforeMutationTs !== MUTATION[key][0]) {\n                if (error) throw error;\n                return data;\n            } else if (error && hasOptimisticData && rollbackOnError(error)) {\n                // Rollback. Always populate the cache in this case but without\n                // transforming the data.\n                populateCache = true;\n                // Reset data to be the latest committed data, and clear the `_c` value.\n                set({\n                    data: committedData,\n                    _c: UNDEFINED\n                });\n            }\n        }\n        // If we should write back the cache after request.\n        if (populateCache) {\n            if (!error) {\n                // Transform the result into data.\n                if (isFunction(populateCache)) {\n                    const populateCachedData = populateCache(data, committedData);\n                    set({\n                        data: populateCachedData,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                } else {\n                    // Only update cached data and reset the error if there's no error. Data can be `undefined` here.\n                    set({\n                        data,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                }\n            }\n        }\n        // Reset the timestamp to mark the mutation has ended.\n        MUTATION[key][1] = getTimestamp();\n        // Update existing SWR Hooks' internal states:\n        Promise.resolve(startRevalidate()).then(()=>{\n            // The mutation and revalidation are ended, we can clear it since the data is\n            // not an optimistic value anymore.\n            set({\n                _c: UNDEFINED\n            });\n        });\n        // Throw error or return data\n        if (error) {\n            if (throwOnError) throw error;\n            return;\n        }\n        return data;\n    }\n}\n\nconst revalidateAllKeys = (revalidators, type)=>{\n    for(const key in revalidators){\n        if (revalidators[key][0]) revalidators[key][0](type);\n    }\n};\nconst initCache = (provider, options)=>{\n    // The global state for a specific provider will be used to deduplicate\n    // requests and store listeners. As well as a mutate function that is bound to\n    // the cache.\n    // The provider's global state might be already initialized. Let's try to get the\n    // global state associated with the provider first.\n    if (!SWRGlobalState.has(provider)) {\n        const opts = mergeObjects(defaultConfigOptions, options);\n        // If there's no global state bound to the provider, create a new one with the\n        // new mutate function.\n        const EVENT_REVALIDATORS = {};\n        const mutate = internalMutate.bind(UNDEFINED, provider);\n        let unmount = noop;\n        const subscriptions = {};\n        const subscribe = (key, callback)=>{\n            const subs = subscriptions[key] || [];\n            subscriptions[key] = subs;\n            subs.push(callback);\n            return ()=>subs.splice(subs.indexOf(callback), 1);\n        };\n        const setter = (key, value, prev)=>{\n            provider.set(key, value);\n            const subs = subscriptions[key];\n            if (subs) {\n                for (const fn of subs){\n                    fn(value, prev);\n                }\n            }\n        };\n        const initProvider = ()=>{\n            if (!SWRGlobalState.has(provider)) {\n                // Update the state if it's new, or if the provider has been extended.\n                SWRGlobalState.set(provider, [\n                    EVENT_REVALIDATORS,\n                    {},\n                    {},\n                    {},\n                    mutate,\n                    setter,\n                    subscribe\n                ]);\n                if (!IS_SERVER) {\n                    // When listening to the native events for auto revalidations,\n                    // we intentionally put a delay (setTimeout) here to make sure they are\n                    // fired after immediate JavaScript executions, which can be\n                    // React's state updates.\n                    // This avoids some unnecessary revalidations such as\n                    // https://github.com/vercel/swr/issues/1680.\n                    const releaseFocus = opts.initFocus(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, FOCUS_EVENT)));\n                    const releaseReconnect = opts.initReconnect(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, RECONNECT_EVENT)));\n                    unmount = ()=>{\n                        releaseFocus && releaseFocus();\n                        releaseReconnect && releaseReconnect();\n                        // When un-mounting, we need to remove the cache provider from the state\n                        // storage too because it's a side-effect. Otherwise, when re-mounting we\n                        // will not re-register those event listeners.\n                        SWRGlobalState.delete(provider);\n                    };\n                }\n            }\n        };\n        initProvider();\n        // This is a new provider, we need to initialize it and setup DOM events\n        // listeners for `focus` and `reconnect` actions.\n        // We might want to inject an extra layer on top of `provider` in the future,\n        // such as key serialization, auto GC, etc.\n        // For now, it's just a `Map` interface without any modifications.\n        return [\n            provider,\n            mutate,\n            initProvider,\n            unmount\n        ];\n    }\n    return [\n        provider,\n        SWRGlobalState.get(provider)[4]\n    ];\n};\n\n// error retry\nconst onErrorRetry = (_, __, config, revalidate, opts)=>{\n    const maxRetryCount = config.errorRetryCount;\n    const currentRetryCount = opts.retryCount;\n    // Exponential backoff\n    const timeout = ~~((Math.random() + 0.5) * (1 << (currentRetryCount < 8 ? currentRetryCount : 8))) * config.errorRetryInterval;\n    if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {\n        return;\n    }\n    setTimeout(revalidate, timeout, opts);\n};\nconst compare = (currentData, newData)=>stableHash(currentData) == stableHash(newData);\n// Default cache provider\nconst [cache, mutate] = initCache(new Map());\n// Default config\nconst defaultConfig = mergeObjects({\n    // events\n    onLoadingSlow: noop,\n    onSuccess: noop,\n    onError: noop,\n    onErrorRetry,\n    onDiscarded: noop,\n    // switches\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    revalidateIfStale: true,\n    shouldRetryOnError: true,\n    // timeouts\n    errorRetryInterval: slowConnection ? 10000 : 5000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: slowConnection ? 5000 : 3000,\n    // providers\n    compare,\n    isPaused: ()=>false,\n    cache,\n    mutate,\n    fallback: {}\n}, // use web preset by default\npreset);\n\nconst mergeConfigs = (a, b)=>{\n    // Need to create a new object to avoid mutating the original here.\n    const v = mergeObjects(a, b);\n    // If two configs are provided, merge their `use` and `fallback` options.\n    if (b) {\n        const { use: u1, fallback: f1 } = a;\n        const { use: u2, fallback: f2 } = b;\n        if (u1 && u2) {\n            v.use = u1.concat(u2);\n        }\n        if (f1 && f2) {\n            v.fallback = mergeObjects(f1, f2);\n        }\n    }\n    return v;\n};\n\nconst SWRConfigContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nconst SWRConfig = (props)=>{\n    const { value } = props;\n    const parentConfig = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SWRConfigContext);\n    const isFunctionalConfig = isFunction(value);\n    const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>isFunctionalConfig ? value(parentConfig) : value, [\n        isFunctionalConfig,\n        parentConfig,\n        value\n    ]);\n    // Extend parent context values and middleware.\n    const extendedConfig = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>isFunctionalConfig ? config : mergeConfigs(parentConfig, config), [\n        isFunctionalConfig,\n        parentConfig,\n        config\n    ]);\n    // Should not use the inherited provider.\n    const provider = config && config.provider;\n    // initialize the cache only on first access.\n    const cacheContextRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(UNDEFINED);\n    if (provider && !cacheContextRef.current) {\n        cacheContextRef.current = initCache(provider(extendedConfig.cache || cache), config);\n    }\n    const cacheContext = cacheContextRef.current;\n    // Override the cache if a new provider is given.\n    if (cacheContext) {\n        extendedConfig.cache = cacheContext[0];\n        extendedConfig.mutate = cacheContext[1];\n    }\n    // Unsubscribe events.\n    useIsomorphicLayoutEffect(()=>{\n        if (cacheContext) {\n            cacheContext[2] && cacheContext[2]();\n            return cacheContext[3];\n        }\n    }, []);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SWRConfigContext.Provider, mergeObjects(props, {\n        value: extendedConfig\n    }));\n};\n\nconst INFINITE_PREFIX = '$inf$';\n\n// @ts-expect-error\nconst enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;\nconst use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nconst setupDevTools = ()=>{\n    if (enableDevtools) {\n        // @ts-expect-error\n        window.__SWR_DEVTOOLS_REACT__ = react__WEBPACK_IMPORTED_MODULE_0__;\n    }\n};\n\nconst normalize = (args)=>{\n    return isFunction(args[1]) ? [\n        args[0],\n        args[1],\n        args[2] || {}\n    ] : [\n        args[0],\n        null,\n        (args[1] === null ? args[2] : args[1]) || {}\n    ];\n};\n\nconst useSWRConfig = ()=>{\n    return mergeObjects(defaultConfig, (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SWRConfigContext));\n};\n\nconst preload = (key_, fetcher)=>{\n    const [key, fnArg] = serialize(key_);\n    const [, , , PRELOAD] = SWRGlobalState.get(cache);\n    // Prevent preload to be called multiple times before used.\n    if (PRELOAD[key]) return PRELOAD[key];\n    const req = fetcher(fnArg);\n    PRELOAD[key] = req;\n    return req;\n};\nconst middleware = (useSWRNext)=>(key_, fetcher_, config)=>{\n        // fetcher might be a sync function, so this should not be an async function\n        const fetcher = fetcher_ && ((...args)=>{\n            const [key] = serialize(key_);\n            const [, , , PRELOAD] = SWRGlobalState.get(cache);\n            if (key.startsWith(INFINITE_PREFIX)) {\n                // we want the infinite fetcher to be called.\n                // handling of the PRELOAD cache happens there.\n                return fetcher_(...args);\n            }\n            const req = PRELOAD[key];\n            if (isUndefined(req)) return fetcher_(...args);\n            delete PRELOAD[key];\n            return req;\n        });\n        return useSWRNext(key_, fetcher, config);\n    };\n\nconst BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nconst withArgs = (hook)=>{\n    return function useSWRArgs(...args) {\n        // Get the default and inherited configuration.\n        const fallbackConfig = useSWRConfig();\n        // Normalize arguments.\n        const [key, fn, _config] = normalize(args);\n        // Merge configurations.\n        const config = mergeConfigs(fallbackConfig, _config);\n        // Apply middleware\n        let next = hook;\n        const { use } = config;\n        const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n        for(let i = middleware.length; i--;){\n            next = middleware[i](next);\n        }\n        return next(key, fn || config.fetcher || null, config);\n    };\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nconst subscribeCallback = (key, callbacks, callback)=>{\n    const keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n    keyedRevalidators.push(callback);\n    return ()=>{\n        const index = keyedRevalidators.indexOf(callback);\n        if (index >= 0) {\n            // O(1): faster than splice\n            keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n            keyedRevalidators.pop();\n        }\n    };\n};\n\n// Create a custom hook with a middleware\nconst withMiddleware = (useSWR, middleware)=>{\n    return (...args)=>{\n        const [key, fn, config] = normalize(args);\n        const uses = (config.use || []).concat(middleware);\n        return useSWR(key, fn, {\n            ...config,\n            use: uses\n        });\n    };\n};\n\nsetupDevTools();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zd3IvZGlzdC9faW50ZXJuYWwvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFxSDs7QUFFckg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsb0JBQW9CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxZQUFZO0FBQ2Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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LGdCQUFnQixNQUFNO0FBQ3RCO0FBQ0EsdUNBQXVDLElBQUk7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTs7QUFFZ2lCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zd3IvZGlzdC9faW50ZXJuYWwvaW5kZXgubWpzP2JmZjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlTGF5b3V0RWZmZWN0LCBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VNZW1vLCB1c2VSZWYsIGNyZWF0ZUVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XG5cbi8vIFNoYXJlZCBzdGF0ZSBiZXR3ZWVuIHNlcnZlciBjb21wb25lbnRzIGFuZCBjbGllbnQgY29tcG9uZW50c1xuY29uc3Qgbm9vcCA9ICgpPT57fTtcbi8vIFVzaW5nIG5vb3AoKSBhcyB0aGUgdW5kZWZpbmVkIHZhbHVlIGFzIHVuZGVmaW5lZCBjYW4gYmUgcmVwbGFjZWRcbi8vIGJ5IHNvbWV0aGluZyBlbHNlLiBQcmV0dGllciBpZ25vcmUgYW5kIGV4dHJhIHBhcmVudGhlc2VzIGFyZSBuZWNlc3NhcnkgaGVyZVxuLy8gdG8gZW5zdXJlIHRoYXQgdHNjIGRvZXNuJ3QgcmVtb3ZlIHRoZSBfX05PSU5MSU5FX18gY29tbWVudC5cbi8vIHByZXR0aWVyLWlnbm9yZVxuY29uc3QgVU5ERUZJTkVEID0gLyojX19OT0lOTElORV9fKi8gbm9vcCgpO1xuY29uc3QgT0JKRUNUID0gT2JqZWN0O1xuY29uc3QgaXNVbmRlZmluZWQgPSAodik9PnYgPT09IFVOREVGSU5FRDtcbmNvbnN0IGlzRnVuY3Rpb24gPSAodik9PnR5cGVvZiB2ID09ICdmdW5jdGlvbic7XG5jb25zdCBtZXJnZU9iamVjdHMgPSAoYSwgYik9Pih7XG4gICAgICAgIC4uLmEsXG4gICAgICAgIC4uLmJcbiAgICB9KTtcbmNvbnN0IGlzUHJvbWlzZUxpa2UgPSAoeCk9PmlzRnVuY3Rpb24oeC50aGVuKTtcblxuLy8gdXNlIFdlYWtNYXAgdG8gc3RvcmUgdGhlIG9iamVjdC0+a2V5IG1hcHBpbmdcbi8vIHNvIHRoZSBvYmplY3RzIGNhbiBiZSBnYXJiYWdlIGNvbGxlY3RlZC5cbi8vIFdlYWtNYXAgdXNlcyBhIGhhc2h0YWJsZSB1bmRlciB0aGUgaG9vZCwgc28gdGhlIGxvb2t1cFxuLy8gY29tcGxleGl0eSBpcyBhbG1vc3QgTygxKS5cbmNvbnN0IHRhYmxlID0gbmV3IFdlYWtNYXAoKTtcbi8vIGNvdW50ZXIgb2YgdGhlIGtleVxubGV0IGNvdW50ZXIgPSAwO1xuLy8gQSBzdGFibGUgaGFzaCBpbXBsZW1lbnRhdGlvbiB0aGF0IHN1cHBvcnRzOlxuLy8gLSBGYXN0IGFuZCBlbnN1cmVzIHVuaXF1ZSBoYXNoIHByb3BlcnRpZXNcbi8vIC0gSGFuZGxlcyB1bnNlcmlhbGl6YWJsZSB2YWx1ZXNcbi8vIC0gSGFuZGxlcyBvYmplY3Qga2V5IG9yZGVyaW5nXG4vLyAtIEdlbmVyYXRlcyBzaG9ydCByZXN1bHRzXG4vL1xuLy8gVGhpcyBpcyBub3QgYSBzZXJpYWxpemF0aW9uIGZ1bmN0aW9uLCBhbmQgdGhlIHJlc3VsdCBpcyBub3QgZ3VhcmFudGVlZCB0byBiZVxuLy8gcGFyc2FibGUuXG5jb25zdCBzdGFibGVIYXNoID0gKGFyZyk9PntcbiAgICBjb25zdCB0eXBlID0gdHlwZW9mIGFyZztcbiAgICBjb25zdCBjb25zdHJ1Y3RvciA9IGFyZyAmJiBhcmcuY29uc3RydWN0b3I7XG4gICAgY29uc3QgaXNEYXRlID0gY29uc3RydWN0b3IgPT0gRGF0ZTtcbiAgICBsZXQgcmVzdWx0O1xuICAgIGxldCBpbmRleDtcbiAgICBpZiAoT0JKRUNUKGFyZykgPT09IGFyZyAmJiAhaXNEYXRlICYmIGNvbnN0cnVjdG9yICE9IFJlZ0V4cCkge1xuICAgICAgICAvLyBPYmplY3QvZnVuY3Rpb24sIG5vdCBudWxsL2RhdGUvcmVnZXhwLiBVc2UgV2Vha01hcCB0byBzdG9yZSB0aGUgaWQgZmlyc3QuXG4gICAgICAgIC8vIElmIGl0J3MgYWxyZWFkeSBoYXNoZWQsIGRpcmVjdGx5IHJldHVybiB0aGUgcmVzdWx0LlxuICAgICAgICByZXN1bHQgPSB0YWJsZS5nZXQoYXJnKTtcbiAgICAgICAgaWYgKHJlc3VsdCkgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgLy8gU3RvcmUgdGhlIGhhc2ggZmlyc3QgZm9yIGNpcmN1bGFyIHJlZmVyZW5jZSBkZXRlY3Rpb24gYmVmb3JlIGVudGVyaW5nIHRoZVxuICAgICAgICAvLyByZWN1cnNpdmUgYHN0YWJsZUhhc2hgIGNhbGxzLlxuICAgICAgICAvLyBGb3Igb3RoZXIgb2JqZWN0cyBsaWtlIHNldCBhbmQgbWFwLCB3ZSB1c2UgdGhpcyBpZCBkaXJlY3RseSBhcyB0aGUgaGFzaC5cbiAgICAgICAgcmVzdWx0ID0gKytjb3VudGVyICsgJ34nO1xuICAgICAgICB0YWJsZS5zZXQoYXJnLCByZXN1bHQpO1xuICAgICAgICBpZiAoY29uc3RydWN0b3IgPT0gQXJyYXkpIHtcbiAgICAgICAgICAgIC8vIEFycmF5LlxuICAgICAgICAgICAgcmVzdWx0ID0gJ0AnO1xuICAgICAgICAgICAgZm9yKGluZGV4ID0gMDsgaW5kZXggPCBhcmcubGVuZ3RoOyBpbmRleCsrKXtcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gc3RhYmxlSGFzaChhcmdbaW5kZXhdKSArICcsJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRhYmxlLnNldChhcmcsIHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbnN0cnVjdG9yID09IE9CSkVDVCkge1xuICAgICAgICAgICAgLy8gT2JqZWN0LCBzb3J0IGtleXMuXG4gICAgICAgICAgICByZXN1bHQgPSAnIyc7XG4gICAgICAgICAgICBjb25zdCBrZXlzID0gT0JKRUNULmtleXMoYXJnKS5zb3J0KCk7XG4gICAgICAgICAgICB3aGlsZSghaXNVbmRlZmluZWQoaW5kZXggPSBrZXlzLnBvcCgpKSl7XG4gICAgICAgICAgICAgICAgaWYgKCFpc1VuZGVmaW5lZChhcmdbaW5kZXhdKSkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQgKz0gaW5kZXggKyAnOicgKyBzdGFibGVIYXNoKGFyZ1tpbmRleF0pICsgJywnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRhYmxlLnNldChhcmcsIHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgPSBpc0RhdGUgPyBhcmcudG9KU09OKCkgOiB0eXBlID09ICdzeW1ib2wnID8gYXJnLnRvU3RyaW5nKCkgOiB0eXBlID09ICdzdHJpbmcnID8gSlNPTi5zdHJpbmdpZnkoYXJnKSA6ICcnICsgYXJnO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcblxuLy8gR2xvYmFsIHN0YXRlIHVzZWQgdG8gZGVkdXBsaWNhdGUgcmVxdWVzdHMgYW5kIHN0b3JlIGxpc3RlbmVyc1xuY29uc3QgU1dSR2xvYmFsU3RhdGUgPSBuZXcgV2Vha01hcCgpO1xuXG5jb25zdCBFTVBUWV9DQUNIRSA9IHt9O1xuY29uc3QgSU5JVElBTF9DQUNIRSA9IHt9O1xuY29uc3QgU1RSX1VOREVGSU5FRCA9ICd1bmRlZmluZWQnO1xuLy8gTk9URTogVXNlIHRoZSBmdW5jdGlvbiB0byBndWFyYW50ZWUgaXQncyByZS1ldmFsdWF0ZWQgYmV0d2VlbiBqc2RvbSBhbmQgbm9kZSBydW50aW1lIGZvciB0ZXN0cy5cbmNvbnN0IGlzV2luZG93RGVmaW5lZCA9IHR5cGVvZiB3aW5kb3cgIT0gU1RSX1VOREVGSU5FRDtcbmNvbnN0IGlzRG9jdW1lbnREZWZpbmVkID0gdHlwZW9mIGRvY3VtZW50ICE9IFNUUl9VTkRFRklORUQ7XG5jb25zdCBoYXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSAoKT0+aXNXaW5kb3dEZWZpbmVkICYmIHR5cGVvZiB3aW5kb3dbJ3JlcXVlc3RBbmltYXRpb25GcmFtZSddICE9IFNUUl9VTkRFRklORUQ7XG5jb25zdCBjcmVhdGVDYWNoZUhlbHBlciA9IChjYWNoZSwga2V5KT0+e1xuICAgIGNvbnN0IHN0YXRlID0gU1dSR2xvYmFsU3RhdGUuZ2V0KGNhY2hlKTtcbiAgICByZXR1cm4gW1xuICAgICAgICAvLyBHZXR0ZXJcbiAgICAgICAgKCk9PiFpc1VuZGVmaW5lZChrZXkpICYmIGNhY2hlLmdldChrZXkpIHx8IEVNUFRZX0NBQ0hFLFxuICAgICAgICAvLyBTZXR0ZXJcbiAgICAgICAgKGluZm8pPT57XG4gICAgICAgICAgICBpZiAoIWlzVW5kZWZpbmVkKGtleSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwcmV2ID0gY2FjaGUuZ2V0KGtleSk7XG4gICAgICAgICAgICAgICAgLy8gQmVmb3JlIHdyaXRpbmcgdG8gdGhlIHN0b3JlLCB3ZSBrZWVwIHRoZSB2YWx1ZSBpbiB0aGUgaW5pdGlhbCBjYWNoZVxuICAgICAgICAgICAgICAgIC8vIGlmIGl0J3Mgbm90IHRoZXJlIHlldC5cbiAgICAgICAgICAgICAgICBpZiAoIShrZXkgaW4gSU5JVElBTF9DQUNIRSkpIHtcbiAgICAgICAgICAgICAgICAgICAgSU5JVElBTF9DQUNIRVtrZXldID0gcHJldjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc3RhdGVbNV0oa2V5LCBtZXJnZU9iamVjdHMocHJldiwgaW5mbyksIHByZXYgfHwgRU1QVFlfQ0FDSEUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAvLyBTdWJzY3JpYmVyXG4gICAgICAgIHN0YXRlWzZdLFxuICAgICAgICAvLyBHZXQgc2VydmVyIGNhY2hlIHNuYXBzaG90XG4gICAgICAgICgpPT57XG4gICAgICAgICAgICBpZiAoIWlzVW5kZWZpbmVkKGtleSkpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgY2FjaGUgd2FzIHVwZGF0ZWQgb24gdGhlIGNsaWVudCwgd2UgcmV0dXJuIHRoZSBzdG9yZWQgaW5pdGlhbCB2YWx1ZS5cbiAgICAgICAgICAgICAgICBpZiAoa2V5IGluIElOSVRJQUxfQ0FDSEUpIHJldHVybiBJTklUSUFMX0NBQ0hFW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBJZiB3ZSBoYXZlbid0IGRvbmUgYW55IGNsaWVudC1zaWRlIHVwZGF0ZXMsIHdlIHJldHVybiB0aGUgY3VycmVudCB2YWx1ZS5cbiAgICAgICAgICAgIHJldHVybiAhaXNVbmRlZmluZWQoa2V5KSAmJiBjYWNoZS5nZXQoa2V5KSB8fCBFTVBUWV9DQUNIRTtcbiAgICAgICAgfVxuICAgIF07XG59IC8vIGV4cG9ydCB7IFVOREVGSU5FRCwgT0JKRUNULCBpc1VuZGVmaW5lZCwgaXNGdW5jdGlvbiwgbWVyZ2VPYmplY3RzLCBpc1Byb21pc2VMaWtlIH1cbjtcblxuLyoqXG4gKiBEdWUgdG8gdGhlIGJ1ZyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD02NzgwNzUsXG4gKiBpdCdzIG5vdCByZWxpYWJsZSB0byBkZXRlY3QgaWYgdGhlIGJyb3dzZXIgaXMgY3VycmVudGx5IG9ubGluZSBvciBvZmZsaW5lXG4gKiBiYXNlZCBvbiBgbmF2aWdhdG9yLm9uTGluZWAuXG4gKiBBcyBhIHdvcmthcm91bmQsIHdlIGFsd2F5cyBhc3N1bWUgaXQncyBvbmxpbmUgb24gdGhlIGZpcnN0IGxvYWQsIGFuZCBjaGFuZ2VcbiAqIHRoZSBzdGF0dXMgdXBvbiBgb25saW5lYCBvciBgb2ZmbGluZWAgZXZlbnRzLlxuICovIGxldCBvbmxpbmUgPSB0cnVlO1xuY29uc3QgaXNPbmxpbmUgPSAoKT0+b25saW5lO1xuLy8gRm9yIG5vZGUgYW5kIFJlYWN0IE5hdGl2ZSwgYGFkZC9yZW1vdmVFdmVudExpc3RlbmVyYCBkb2Vzbid0IGV4aXN0IG9uIHdpbmRvdy5cbmNvbnN0IFtvbldpbmRvd0V2ZW50LCBvZmZXaW5kb3dFdmVudF0gPSBpc1dpbmRvd0RlZmluZWQgJiYgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIgPyBbXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIuYmluZCh3aW5kb3cpLFxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyLmJpbmQod2luZG93KVxuXSA6IFtcbiAgICBub29wLFxuICAgIG5vb3Bcbl07XG5jb25zdCBpc1Zpc2libGUgPSAoKT0+e1xuICAgIGNvbnN0IHZpc2liaWxpdHlTdGF0ZSA9IGlzRG9jdW1lbnREZWZpbmVkICYmIGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZTtcbiAgICByZXR1cm4gaXNVbmRlZmluZWQodmlzaWJpbGl0eVN0YXRlKSB8fCB2aXNpYmlsaXR5U3RhdGUgIT09ICdoaWRkZW4nO1xufTtcbmNvbnN0IGluaXRGb2N1cyA9IChjYWxsYmFjayk9PntcbiAgICAvLyBmb2N1cyByZXZhbGlkYXRlXG4gICAgaWYgKGlzRG9jdW1lbnREZWZpbmVkKSB7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBjYWxsYmFjayk7XG4gICAgfVxuICAgIG9uV2luZG93RXZlbnQoJ2ZvY3VzJywgY2FsbGJhY2spO1xuICAgIHJldHVybiAoKT0+e1xuICAgICAgICBpZiAoaXNEb2N1bWVudERlZmluZWQpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBjYWxsYmFjayk7XG4gICAgICAgIH1cbiAgICAgICAgb2ZmV2luZG93RXZlbnQoJ2ZvY3VzJywgY2FsbGJhY2spO1xuICAgIH07XG59O1xuY29uc3QgaW5pdFJlY29ubmVjdCA9IChjYWxsYmFjayk9PntcbiAgICAvLyByZXZhbGlkYXRlIG9uIHJlY29ubmVjdGVkXG4gICAgY29uc3Qgb25PbmxpbmUgPSAoKT0+e1xuICAgICAgICBvbmxpbmUgPSB0cnVlO1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgIH07XG4gICAgLy8gbm90aGluZyB0byByZXZhbGlkYXRlLCBqdXN0IHVwZGF0ZSB0aGUgc3RhdHVzXG4gICAgY29uc3Qgb25PZmZsaW5lID0gKCk9PntcbiAgICAgICAgb25saW5lID0gZmFsc2U7XG4gICAgfTtcbiAgICBvbldpbmRvd0V2ZW50KCdvbmxpbmUnLCBvbk9ubGluZSk7XG4gICAgb25XaW5kb3dFdmVudCgnb2ZmbGluZScsIG9uT2ZmbGluZSk7XG4gICAgcmV0dXJuICgpPT57XG4gICAgICAgIG9mZldpbmRvd0V2ZW50KCdvbmxpbmUnLCBvbk9ubGluZSk7XG4gICAgICAgIG9mZldpbmRvd0V2ZW50KCdvZmZsaW5lJywgb25PZmZsaW5lKTtcbiAgICB9O1xufTtcbmNvbnN0IHByZXNldCA9IHtcbiAgICBpc09ubGluZSxcbiAgICBpc1Zpc2libGVcbn07XG5jb25zdCBkZWZhdWx0Q29uZmlnT3B0aW9ucyA9IHtcbiAgICBpbml0Rm9jdXMsXG4gICAgaW5pdFJlY29ubmVjdFxufTtcblxuY29uc3QgSVNfUkVBQ1RfTEVHQUNZID0gIVJlYWN0LnVzZUlkO1xuY29uc3QgSVNfU0VSVkVSID0gIWlzV2luZG93RGVmaW5lZCB8fCAnRGVubycgaW4gd2luZG93O1xuLy8gUG9seWZpbGwgcmVxdWVzdEFuaW1hdGlvbkZyYW1lXG5jb25zdCByQUYgPSAoZik9Pmhhc1JlcXVlc3RBbmltYXRpb25GcmFtZSgpID8gd2luZG93WydyZXF1ZXN0QW5pbWF0aW9uRnJhbWUnXShmKSA6IHNldFRpbWVvdXQoZiwgMSk7XG4vLyBSZWFjdCBjdXJyZW50bHkgdGhyb3dzIGEgd2FybmluZyB3aGVuIHVzaW5nIHVzZUxheW91dEVmZmVjdCBvbiB0aGUgc2VydmVyLlxuLy8gVG8gZ2V0IGFyb3VuZCBpdCwgd2UgY2FuIGNvbmRpdGlvbmFsbHkgdXNlRWZmZWN0IG9uIHRoZSBzZXJ2ZXIgKG5vLW9wKSBhbmRcbi8vIHVzZUxheW91dEVmZmVjdCBpbiB0aGUgYnJvd3Nlci5cbmNvbnN0IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgPSBJU19TRVJWRVIgPyB1c2VFZmZlY3QgOiB1c2VMYXlvdXRFZmZlY3Q7XG4vLyBUaGlzIGFzc2lnbm1lbnQgaXMgdG8gZXh0ZW5kIHRoZSBOYXZpZ2F0b3IgdHlwZSB0byB1c2UgZWZmZWN0aXZlVHlwZS5cbmNvbnN0IG5hdmlnYXRvckNvbm5lY3Rpb24gPSB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IuY29ubmVjdGlvbjtcbi8vIEFkanVzdCB0aGUgY29uZmlnIGJhc2VkIG9uIHNsb3cgY29ubmVjdGlvbiBzdGF0dXMgKDw9IDcwS2JwcykuXG5jb25zdCBzbG93Q29ubmVjdGlvbiA9ICFJU19TRVJWRVIgJiYgbmF2aWdhdG9yQ29ubmVjdGlvbiAmJiAoW1xuICAgICdzbG93LTJnJyxcbiAgICAnMmcnXG5dLmluY2x1ZGVzKG5hdmlnYXRvckNvbm5lY3Rpb24uZWZmZWN0aXZlVHlwZSkgfHwgbmF2aWdhdG9yQ29ubmVjdGlvbi5zYXZlRGF0YSk7XG5cbmNvbnN0IHNlcmlhbGl6ZSA9IChrZXkpPT57XG4gICAgaWYgKGlzRnVuY3Rpb24oa2V5KSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAga2V5ID0ga2V5KCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgLy8gZGVwZW5kZW5jaWVzIG5vdCByZWFkeVxuICAgICAgICAgICAga2V5ID0gJyc7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gVXNlIHRoZSBvcmlnaW5hbCBrZXkgYXMgdGhlIGFyZ3VtZW50IG9mIGZldGNoZXIuIFRoaXMgY2FuIGJlIGEgc3RyaW5nIG9yIGFuXG4gICAgLy8gYXJyYXkgb2YgdmFsdWVzLlxuICAgIGNvbnN0IGFyZ3MgPSBrZXk7XG4gICAgLy8gSWYga2V5IGlzIG5vdCBmYWxzeSwgb3Igbm90IGFuIGVtcHR5IGFycmF5LCBoYXNoIGl0LlxuICAgIGtleSA9IHR5cGVvZiBrZXkgPT0gJ3N0cmluZycgPyBrZXkgOiAoQXJyYXkuaXNBcnJheShrZXkpID8ga2V5Lmxlbmd0aCA6IGtleSkgPyBzdGFibGVIYXNoKGtleSkgOiAnJztcbiAgICByZXR1cm4gW1xuICAgICAgICBrZXksXG4gICAgICAgIGFyZ3NcbiAgICBdO1xufTtcblxuLy8gR2xvYmFsIHRpbWVzdGFtcC5cbmxldCBfX3RpbWVzdGFtcCA9IDA7XG5jb25zdCBnZXRUaW1lc3RhbXAgPSAoKT0+KytfX3RpbWVzdGFtcDtcblxuY29uc3QgRk9DVVNfRVZFTlQgPSAwO1xuY29uc3QgUkVDT05ORUNUX0VWRU5UID0gMTtcbmNvbnN0IE1VVEFURV9FVkVOVCA9IDI7XG5jb25zdCBFUlJPUl9SRVZBTElEQVRFX0VWRU5UID0gMztcblxudmFyIGV2ZW50cyA9IHtcbiAgX19wcm90b19fOiBudWxsLFxuICBFUlJPUl9SRVZBTElEQVRFX0VWRU5UOiBFUlJPUl9SRVZBTElEQVRFX0VWRU5ULFxuICBGT0NVU19FVkVOVDogRk9DVVNfRVZFTlQsXG4gIE1VVEFURV9FVkVOVDogTVVUQVRFX0VWRU5ULFxuICBSRUNPTk5FQ1RfRVZFTlQ6IFJFQ09OTkVDVF9FVkVOVFxufTtcblxuYXN5bmMgZnVuY3Rpb24gaW50ZXJuYWxNdXRhdGUoLi4uYXJncykge1xuICAgIGNvbnN0IFtjYWNoZSwgX2tleSwgX2RhdGEsIF9vcHRzXSA9IGFyZ3M7XG4gICAgLy8gV2hlbiBwYXNzaW5nIGFzIGEgYm9vbGVhbiwgaXQncyBleHBsaWNpdGx5IHVzZWQgdG8gZGlzYWJsZS9lbmFibGVcbiAgICAvLyByZXZhbGlkYXRpb24uXG4gICAgY29uc3Qgb3B0aW9ucyA9IG1lcmdlT2JqZWN0cyh7XG4gICAgICAgIHBvcHVsYXRlQ2FjaGU6IHRydWUsXG4gICAgICAgIHRocm93T25FcnJvcjogdHJ1ZVxuICAgIH0sIHR5cGVvZiBfb3B0cyA9PT0gJ2Jvb2xlYW4nID8ge1xuICAgICAgICByZXZhbGlkYXRlOiBfb3B0c1xuICAgIH0gOiBfb3B0cyB8fCB7fSk7XG4gICAgbGV0IHBvcHVsYXRlQ2FjaGUgPSBvcHRpb25zLnBvcHVsYXRlQ2FjaGU7XG4gICAgY29uc3Qgcm9sbGJhY2tPbkVycm9yT3B0aW9uID0gb3B0aW9ucy5yb2xsYmFja09uRXJyb3I7XG4gICAgbGV0IG9wdGltaXN0aWNEYXRhID0gb3B0aW9ucy5vcHRpbWlzdGljRGF0YTtcbiAgICBjb25zdCByb2xsYmFja09uRXJyb3IgPSAoZXJyb3IpPT57XG4gICAgICAgIHJldHVybiB0eXBlb2Ygcm9sbGJhY2tPbkVycm9yT3B0aW9uID09PSAnZnVuY3Rpb24nID8gcm9sbGJhY2tPbkVycm9yT3B0aW9uKGVycm9yKSA6IHJvbGxiYWNrT25FcnJvck9wdGlvbiAhPT0gZmFsc2U7XG4gICAgfTtcbiAgICBjb25zdCB0aHJvd09uRXJyb3IgPSBvcHRpb25zLnRocm93T25FcnJvcjtcbiAgICAvLyBJZiB0aGUgc2Vjb25kIGFyZ3VtZW50IGlzIGEga2V5IGZpbHRlciwgcmV0dXJuIHRoZSBtdXRhdGlvbiByZXN1bHRzIGZvciBhbGxcbiAgICAvLyBmaWx0ZXJlZCBrZXlzLlxuICAgIGlmIChpc0Z1bmN0aW9uKF9rZXkpKSB7XG4gICAgICAgIGNvbnN0IGtleUZpbHRlciA9IF9rZXk7XG4gICAgICAgIGNvbnN0IG1hdGNoZWRLZXlzID0gW107XG4gICAgICAgIGNvbnN0IGl0ID0gY2FjaGUua2V5cygpO1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBpdCl7XG4gICAgICAgICAgICBpZiAoLy8gU2tpcCB0aGUgc3BlY2lhbCB1c2VTV1JJbmZpbml0ZSBhbmQgdXNlU1dSU3Vic2NyaXB0aW9uIGtleXMuXG4gICAgICAgICAgICAhL15cXCQoaW5mfHN1YilcXCQvLnRlc3Qoa2V5KSAmJiBrZXlGaWx0ZXIoY2FjaGUuZ2V0KGtleSkuX2spKSB7XG4gICAgICAgICAgICAgICAgbWF0Y2hlZEtleXMucHVzaChrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChtYXRjaGVkS2V5cy5tYXAobXV0YXRlQnlLZXkpKTtcbiAgICB9XG4gICAgcmV0dXJuIG11dGF0ZUJ5S2V5KF9rZXkpO1xuICAgIGFzeW5jIGZ1bmN0aW9uIG11dGF0ZUJ5S2V5KF9rKSB7XG4gICAgICAgIC8vIFNlcmlhbGl6ZSBrZXlcbiAgICAgICAgY29uc3QgW2tleV0gPSBzZXJpYWxpemUoX2spO1xuICAgICAgICBpZiAoIWtleSkgcmV0dXJuO1xuICAgICAgICBjb25zdCBbZ2V0LCBzZXRdID0gY3JlYXRlQ2FjaGVIZWxwZXIoY2FjaGUsIGtleSk7XG4gICAgICAgIGNvbnN0IFtFVkVOVF9SRVZBTElEQVRPUlMsIE1VVEFUSU9OLCBGRVRDSCwgUFJFTE9BRF0gPSBTV1JHbG9iYWxTdGF0ZS5nZXQoY2FjaGUpO1xuICAgICAgICBjb25zdCBzdGFydFJldmFsaWRhdGUgPSAoKT0+e1xuICAgICAgICAgICAgY29uc3QgcmV2YWxpZGF0b3JzID0gRVZFTlRfUkVWQUxJREFUT1JTW2tleV07XG4gICAgICAgICAgICBjb25zdCByZXZhbGlkYXRlID0gaXNGdW5jdGlvbihvcHRpb25zLnJldmFsaWRhdGUpID8gb3B0aW9ucy5yZXZhbGlkYXRlKGdldCgpLmRhdGEsIF9rKSA6IG9wdGlvbnMucmV2YWxpZGF0ZSAhPT0gZmFsc2U7XG4gICAgICAgICAgICBpZiAocmV2YWxpZGF0ZSkge1xuICAgICAgICAgICAgICAgIC8vIEludmFsaWRhdGUgdGhlIGtleSBieSBkZWxldGluZyB0aGUgY29uY3VycmVudCByZXF1ZXN0IG1hcmtlcnMgc28gbmV3XG4gICAgICAgICAgICAgICAgLy8gcmVxdWVzdHMgd2lsbCBub3QgYmUgZGVkdXBlZC5cbiAgICAgICAgICAgICAgICBkZWxldGUgRkVUQ0hba2V5XTtcbiAgICAgICAgICAgICAgICBkZWxldGUgUFJFTE9BRFtrZXldO1xuICAgICAgICAgICAgICAgIGlmIChyZXZhbGlkYXRvcnMgJiYgcmV2YWxpZGF0b3JzWzBdKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXZhbGlkYXRvcnNbMF0oTVVUQVRFX0VWRU5UKS50aGVuKCgpPT5nZXQoKS5kYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZ2V0KCkuZGF0YTtcbiAgICAgICAgfTtcbiAgICAgICAgLy8gSWYgdGhlcmUgaXMgbm8gbmV3IGRhdGEgcHJvdmlkZWQsIHJldmFsaWRhdGUgdGhlIGtleSB3aXRoIGN1cnJlbnQgc3RhdGUuXG4gICAgICAgIGlmIChhcmdzLmxlbmd0aCA8IDMpIHtcbiAgICAgICAgICAgIC8vIFJldmFsaWRhdGUgYW5kIGJyb2FkY2FzdCBzdGF0ZS5cbiAgICAgICAgICAgIHJldHVybiBzdGFydFJldmFsaWRhdGUoKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgZGF0YSA9IF9kYXRhO1xuICAgICAgICBsZXQgZXJyb3I7XG4gICAgICAgIC8vIFVwZGF0ZSBnbG9iYWwgdGltZXN0YW1wcy5cbiAgICAgICAgY29uc3QgYmVmb3JlTXV0YXRpb25UcyA9IGdldFRpbWVzdGFtcCgpO1xuICAgICAgICBNVVRBVElPTltrZXldID0gW1xuICAgICAgICAgICAgYmVmb3JlTXV0YXRpb25UcyxcbiAgICAgICAgICAgIDBcbiAgICAgICAgXTtcbiAgICAgICAgY29uc3QgaGFzT3B0aW1pc3RpY0RhdGEgPSAhaXNVbmRlZmluZWQob3B0aW1pc3RpY0RhdGEpO1xuICAgICAgICBjb25zdCBzdGF0ZSA9IGdldCgpO1xuICAgICAgICAvLyBgZGlzcGxheWVkRGF0YWAgaXMgdGhlIGN1cnJlbnQgdmFsdWUgb24gc2NyZWVuLiBJdCBjb3VsZCBiZSB0aGUgb3B0aW1pc3RpYyB2YWx1ZVxuICAgICAgICAvLyB0aGF0IGlzIGdvaW5nIHRvIGJlIG92ZXJyaWRkZW4gYnkgYSBgY29tbWl0dGVkRGF0YWAsIG9yIGdldCByZXZlcnRlZCBiYWNrLlxuICAgICAgICAvLyBgY29tbWl0dGVkRGF0YWAgaXMgdGhlIHZhbGlkYXRlZCB2YWx1ZSB0aGF0IGNvbWVzIGZyb20gYSBmZXRjaCBvciBtdXRhdGlvbi5cbiAgICAgICAgY29uc3QgZGlzcGxheWVkRGF0YSA9IHN0YXRlLmRhdGE7XG4gICAgICAgIGNvbnN0IGN1cnJlbnREYXRhID0gc3RhdGUuX2M7XG4gICAgICAgIGNvbnN0IGNvbW1pdHRlZERhdGEgPSBpc1VuZGVmaW5lZChjdXJyZW50RGF0YSkgPyBkaXNwbGF5ZWREYXRhIDogY3VycmVudERhdGE7XG4gICAgICAgIC8vIERvIG9wdGltaXN0aWMgZGF0YSB1cGRhdGUuXG4gICAgICAgIGlmIChoYXNPcHRpbWlzdGljRGF0YSkge1xuICAgICAgICAgICAgb3B0aW1pc3RpY0RhdGEgPSBpc0Z1bmN0aW9uKG9wdGltaXN0aWNEYXRhKSA/IG9wdGltaXN0aWNEYXRhKGNvbW1pdHRlZERhdGEsIGRpc3BsYXllZERhdGEpIDogb3B0aW1pc3RpY0RhdGE7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIHNldCBvcHRpbWlzdGljIGRhdGEsIGJhY2t1cCB0aGUgY3VycmVudCBjb21taXR0ZWREYXRhIGRhdGEgaW4gYF9jYC5cbiAgICAgICAgICAgIHNldCh7XG4gICAgICAgICAgICAgICAgZGF0YTogb3B0aW1pc3RpY0RhdGEsXG4gICAgICAgICAgICAgICAgX2M6IGNvbW1pdHRlZERhdGFcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0Z1bmN0aW9uKGRhdGEpKSB7XG4gICAgICAgICAgICAvLyBgZGF0YWAgaXMgYSBmdW5jdGlvbiwgY2FsbCBpdCBwYXNzaW5nIGN1cnJlbnQgY2FjaGUgdmFsdWUuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGRhdGEgPSBkYXRhKGNvbW1pdHRlZERhdGEpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgaXQgdGhyb3dzIGFuIGVycm9yIHN5bmNocm9ub3VzbHksIHdlIHNob3VsZG4ndCB1cGRhdGUgdGhlIGNhY2hlLlxuICAgICAgICAgICAgICAgIGVycm9yID0gZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIGBkYXRhYCBpcyBhIHByb21pc2UvdGhlbmFibGUsIHJlc29sdmUgdGhlIGZpbmFsIGRhdGEgZmlyc3QuXG4gICAgICAgIGlmIChkYXRhICYmIGlzUHJvbWlzZUxpa2UoZGF0YSkpIHtcbiAgICAgICAgICAgIC8vIFRoaXMgbWVhbnMgdGhhdCB0aGUgbXV0YXRpb24gaXMgYXN5bmMsIHdlIG5lZWQgdG8gY2hlY2sgdGltZXN0YW1wcyB0b1xuICAgICAgICAgICAgLy8gYXZvaWQgcmFjZSBjb25kaXRpb25zLlxuICAgICAgICAgICAgZGF0YSA9IGF3YWl0IGRhdGEuY2F0Y2goKGVycik9PntcbiAgICAgICAgICAgICAgICBlcnJvciA9IGVycjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgb3RoZXIgbXV0YXRpb25zIGhhdmUgb2NjdXJyZWQgc2luY2Ugd2UndmUgc3RhcnRlZCB0aGlzIG11dGF0aW9uLlxuICAgICAgICAgICAgLy8gSWYgdGhlcmUncyBhIHJhY2Ugd2UgZG9uJ3QgdXBkYXRlIGNhY2hlIG9yIGJyb2FkY2FzdCB0aGUgY2hhbmdlLFxuICAgICAgICAgICAgLy8ganVzdCByZXR1cm4gdGhlIGRhdGEuXG4gICAgICAgICAgICBpZiAoYmVmb3JlTXV0YXRpb25UcyAhPT0gTVVUQVRJT05ba2V5XVswXSkge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGVycm9yICYmIGhhc09wdGltaXN0aWNEYXRhICYmIHJvbGxiYWNrT25FcnJvcihlcnJvcikpIHtcbiAgICAgICAgICAgICAgICAvLyBSb2xsYmFjay4gQWx3YXlzIHBvcHVsYXRlIHRoZSBjYWNoZSBpbiB0aGlzIGNhc2UgYnV0IHdpdGhvdXRcbiAgICAgICAgICAgICAgICAvLyB0cmFuc2Zvcm1pbmcgdGhlIGRhdGEuXG4gICAgICAgICAgICAgICAgcG9wdWxhdGVDYWNoZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgLy8gUmVzZXQgZGF0YSB0byBiZSB0aGUgbGF0ZXN0IGNvbW1pdHRlZCBkYXRhLCBhbmQgY2xlYXIgdGhlIGBfY2AgdmFsdWUuXG4gICAgICAgICAgICAgICAgc2V0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogY29tbWl0dGVkRGF0YSxcbiAgICAgICAgICAgICAgICAgICAgX2M6IFVOREVGSU5FRFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIElmIHdlIHNob3VsZCB3cml0ZSBiYWNrIHRoZSBjYWNoZSBhZnRlciByZXF1ZXN0LlxuICAgICAgICBpZiAocG9wdWxhdGVDYWNoZSkge1xuICAgICAgICAgICAgaWYgKCFlcnJvcikge1xuICAgICAgICAgICAgICAgIC8vIFRyYW5zZm9ybSB0aGUgcmVzdWx0IGludG8gZGF0YS5cbiAgICAgICAgICAgICAgICBpZiAoaXNGdW5jdGlvbihwb3B1bGF0ZUNhY2hlKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwb3B1bGF0ZUNhY2hlZERhdGEgPSBwb3B1bGF0ZUNhY2hlKGRhdGEsIGNvbW1pdHRlZERhdGEpO1xuICAgICAgICAgICAgICAgICAgICBzZXQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogcG9wdWxhdGVDYWNoZWREYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IFVOREVGSU5FRCxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jOiBVTkRFRklORURcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gT25seSB1cGRhdGUgY2FjaGVkIGRhdGEgYW5kIHJlc2V0IHRoZSBlcnJvciBpZiB0aGVyZSdzIG5vIGVycm9yLiBEYXRhIGNhbiBiZSBgdW5kZWZpbmVkYCBoZXJlLlxuICAgICAgICAgICAgICAgICAgICBzZXQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBVTkRFRklORUQsXG4gICAgICAgICAgICAgICAgICAgICAgICBfYzogVU5ERUZJTkVEXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBSZXNldCB0aGUgdGltZXN0YW1wIHRvIG1hcmsgdGhlIG11dGF0aW9uIGhhcyBlbmRlZC5cbiAgICAgICAgTVVUQVRJT05ba2V5XVsxXSA9IGdldFRpbWVzdGFtcCgpO1xuICAgICAgICAvLyBVcGRhdGUgZXhpc3RpbmcgU1dSIEhvb2tzJyBpbnRlcm5hbCBzdGF0ZXM6XG4gICAgICAgIFByb21pc2UucmVzb2x2ZShzdGFydFJldmFsaWRhdGUoKSkudGhlbigoKT0+e1xuICAgICAgICAgICAgLy8gVGhlIG11dGF0aW9uIGFuZCByZXZhbGlkYXRpb24gYXJlIGVuZGVkLCB3ZSBjYW4gY2xlYXIgaXQgc2luY2UgdGhlIGRhdGEgaXNcbiAgICAgICAgICAgIC8vIG5vdCBhbiBvcHRpbWlzdGljIHZhbHVlIGFueW1vcmUuXG4gICAgICAgICAgICBzZXQoe1xuICAgICAgICAgICAgICAgIF9jOiBVTkRFRklORURcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgLy8gVGhyb3cgZXJyb3Igb3IgcmV0dXJuIGRhdGFcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAodGhyb3dPbkVycm9yKSB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG59XG5cbmNvbnN0IHJldmFsaWRhdGVBbGxLZXlzID0gKHJldmFsaWRhdG9ycywgdHlwZSk9PntcbiAgICBmb3IoY29uc3Qga2V5IGluIHJldmFsaWRhdG9ycyl7XG4gICAgICAgIGlmIChyZXZhbGlkYXRvcnNba2V5XVswXSkgcmV2YWxpZGF0b3JzW2tleV1bMF0odHlwZSk7XG4gICAgfVxufTtcbmNvbnN0IGluaXRDYWNoZSA9IChwcm92aWRlciwgb3B0aW9ucyk9PntcbiAgICAvLyBUaGUgZ2xvYmFsIHN0YXRlIGZvciBhIHNwZWNpZmljIHByb3ZpZGVyIHdpbGwgYmUgdXNlZCB0byBkZWR1cGxpY2F0ZVxuICAgIC8vIHJlcXVlc3RzIGFuZCBzdG9yZSBsaXN0ZW5lcnMuIEFzIHdlbGwgYXMgYSBtdXRhdGUgZnVuY3Rpb24gdGhhdCBpcyBib3VuZCB0b1xuICAgIC8vIHRoZSBjYWNoZS5cbiAgICAvLyBUaGUgcHJvdmlkZXIncyBnbG9iYWwgc3RhdGUgbWlnaHQgYmUgYWxyZWFkeSBpbml0aWFsaXplZC4gTGV0J3MgdHJ5IHRvIGdldCB0aGVcbiAgICAvLyBnbG9iYWwgc3RhdGUgYXNzb2NpYXRlZCB3aXRoIHRoZSBwcm92aWRlciBmaXJzdC5cbiAgICBpZiAoIVNXUkdsb2JhbFN0YXRlLmhhcyhwcm92aWRlcikpIHtcbiAgICAgICAgY29uc3Qgb3B0cyA9IG1lcmdlT2JqZWN0cyhkZWZhdWx0Q29uZmlnT3B0aW9ucywgb3B0aW9ucyk7XG4gICAgICAgIC8vIElmIHRoZXJlJ3Mgbm8gZ2xvYmFsIHN0YXRlIGJvdW5kIHRvIHRoZSBwcm92aWRlciwgY3JlYXRlIGEgbmV3IG9uZSB3aXRoIHRoZVxuICAgICAgICAvLyBuZXcgbXV0YXRlIGZ1bmN0aW9uLlxuICAgICAgICBjb25zdCBFVkVOVF9SRVZBTElEQVRPUlMgPSB7fTtcbiAgICAgICAgY29uc3QgbXV0YXRlID0gaW50ZXJuYWxNdXRhdGUuYmluZChVTkRFRklORUQsIHByb3ZpZGVyKTtcbiAgICAgICAgbGV0IHVubW91bnQgPSBub29wO1xuICAgICAgICBjb25zdCBzdWJzY3JpcHRpb25zID0ge307XG4gICAgICAgIGNvbnN0IHN1YnNjcmliZSA9IChrZXksIGNhbGxiYWNrKT0+e1xuICAgICAgICAgICAgY29uc3Qgc3VicyA9IHN1YnNjcmlwdGlvbnNba2V5XSB8fCBbXTtcbiAgICAgICAgICAgIHN1YnNjcmlwdGlvbnNba2V5XSA9IHN1YnM7XG4gICAgICAgICAgICBzdWJzLnB1c2goY2FsbGJhY2spO1xuICAgICAgICAgICAgcmV0dXJuICgpPT5zdWJzLnNwbGljZShzdWJzLmluZGV4T2YoY2FsbGJhY2spLCAxKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgc2V0dGVyID0gKGtleSwgdmFsdWUsIHByZXYpPT57XG4gICAgICAgICAgICBwcm92aWRlci5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICBjb25zdCBzdWJzID0gc3Vic2NyaXB0aW9uc1trZXldO1xuICAgICAgICAgICAgaWYgKHN1YnMpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZuIG9mIHN1YnMpe1xuICAgICAgICAgICAgICAgICAgICBmbih2YWx1ZSwgcHJldik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBpbml0UHJvdmlkZXIgPSAoKT0+e1xuICAgICAgICAgICAgaWYgKCFTV1JHbG9iYWxTdGF0ZS5oYXMocHJvdmlkZXIpKSB7XG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSBzdGF0ZSBpZiBpdCdzIG5ldywgb3IgaWYgdGhlIHByb3ZpZGVyIGhhcyBiZWVuIGV4dGVuZGVkLlxuICAgICAgICAgICAgICAgIFNXUkdsb2JhbFN0YXRlLnNldChwcm92aWRlciwgW1xuICAgICAgICAgICAgICAgICAgICBFVkVOVF9SRVZBTElEQVRPUlMsXG4gICAgICAgICAgICAgICAgICAgIHt9LFxuICAgICAgICAgICAgICAgICAgICB7fSxcbiAgICAgICAgICAgICAgICAgICAge30sXG4gICAgICAgICAgICAgICAgICAgIG11dGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgc2V0dGVyLFxuICAgICAgICAgICAgICAgICAgICBzdWJzY3JpYmVcbiAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgICAgICBpZiAoIUlTX1NFUlZFUikge1xuICAgICAgICAgICAgICAgICAgICAvLyBXaGVuIGxpc3RlbmluZyB0byB0aGUgbmF0aXZlIGV2ZW50cyBmb3IgYXV0byByZXZhbGlkYXRpb25zLFxuICAgICAgICAgICAgICAgICAgICAvLyB3ZSBpbnRlbnRpb25hbGx5IHB1dCBhIGRlbGF5IChzZXRUaW1lb3V0KSBoZXJlIHRvIG1ha2Ugc3VyZSB0aGV5IGFyZVxuICAgICAgICAgICAgICAgICAgICAvLyBmaXJlZCBhZnRlciBpbW1lZGlhdGUgSmF2YVNjcmlwdCBleGVjdXRpb25zLCB3aGljaCBjYW4gYmVcbiAgICAgICAgICAgICAgICAgICAgLy8gUmVhY3QncyBzdGF0ZSB1cGRhdGVzLlxuICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIGF2b2lkcyBzb21lIHVubmVjZXNzYXJ5IHJldmFsaWRhdGlvbnMgc3VjaCBhc1xuICAgICAgICAgICAgICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vdmVyY2VsL3N3ci9pc3N1ZXMvMTY4MC5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVsZWFzZUZvY3VzID0gb3B0cy5pbml0Rm9jdXMoc2V0VGltZW91dC5iaW5kKFVOREVGSU5FRCwgcmV2YWxpZGF0ZUFsbEtleXMuYmluZChVTkRFRklORUQsIEVWRU5UX1JFVkFMSURBVE9SUywgRk9DVVNfRVZFTlQpKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlbGVhc2VSZWNvbm5lY3QgPSBvcHRzLmluaXRSZWNvbm5lY3Qoc2V0VGltZW91dC5iaW5kKFVOREVGSU5FRCwgcmV2YWxpZGF0ZUFsbEtleXMuYmluZChVTkRFRklORUQsIEVWRU5UX1JFVkFMSURBVE9SUywgUkVDT05ORUNUX0VWRU5UKSkpO1xuICAgICAgICAgICAgICAgICAgICB1bm1vdW50ID0gKCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbGVhc2VGb2N1cyAmJiByZWxlYXNlRm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbGVhc2VSZWNvbm5lY3QgJiYgcmVsZWFzZVJlY29ubmVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gV2hlbiB1bi1tb3VudGluZywgd2UgbmVlZCB0byByZW1vdmUgdGhlIGNhY2hlIHByb3ZpZGVyIGZyb20gdGhlIHN0YXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBzdG9yYWdlIHRvbyBiZWNhdXNlIGl0J3MgYSBzaWRlLWVmZmVjdC4gT3RoZXJ3aXNlLCB3aGVuIHJlLW1vdW50aW5nIHdlXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB3aWxsIG5vdCByZS1yZWdpc3RlciB0aG9zZSBldmVudCBsaXN0ZW5lcnMuXG4gICAgICAgICAgICAgICAgICAgICAgICBTV1JHbG9iYWxTdGF0ZS5kZWxldGUocHJvdmlkZXIpO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaW5pdFByb3ZpZGVyKCk7XG4gICAgICAgIC8vIFRoaXMgaXMgYSBuZXcgcHJvdmlkZXIsIHdlIG5lZWQgdG8gaW5pdGlhbGl6ZSBpdCBhbmQgc2V0dXAgRE9NIGV2ZW50c1xuICAgICAgICAvLyBsaXN0ZW5lcnMgZm9yIGBmb2N1c2AgYW5kIGByZWNvbm5lY3RgIGFjdGlvbnMuXG4gICAgICAgIC8vIFdlIG1pZ2h0IHdhbnQgdG8gaW5qZWN0IGFuIGV4dHJhIGxheWVyIG9uIHRvcCBvZiBgcHJvdmlkZXJgIGluIHRoZSBmdXR1cmUsXG4gICAgICAgIC8vIHN1Y2ggYXMga2V5IHNlcmlhbGl6YXRpb24sIGF1dG8gR0MsIGV0Yy5cbiAgICAgICAgLy8gRm9yIG5vdywgaXQncyBqdXN0IGEgYE1hcGAgaW50ZXJmYWNlIHdpdGhvdXQgYW55IG1vZGlmaWNhdGlvbnMuXG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBwcm92aWRlcixcbiAgICAgICAgICAgIG11dGF0ZSxcbiAgICAgICAgICAgIGluaXRQcm92aWRlcixcbiAgICAgICAgICAgIHVubW91bnRcbiAgICAgICAgXTtcbiAgICB9XG4gICAgcmV0dXJuIFtcbiAgICAgICAgcHJvdmlkZXIsXG4gICAgICAgIFNXUkdsb2JhbFN0YXRlLmdldChwcm92aWRlcilbNF1cbiAgICBdO1xufTtcblxuLy8gZXJyb3IgcmV0cnlcbmNvbnN0IG9uRXJyb3JSZXRyeSA9IChfLCBfXywgY29uZmlnLCByZXZhbGlkYXRlLCBvcHRzKT0+e1xuICAgIGNvbnN0IG1heFJldHJ5Q291bnQgPSBjb25maWcuZXJyb3JSZXRyeUNvdW50O1xuICAgIGNvbnN0IGN1cnJlbnRSZXRyeUNvdW50ID0gb3B0cy5yZXRyeUNvdW50O1xuICAgIC8vIEV4cG9uZW50aWFsIGJhY2tvZmZcbiAgICBjb25zdCB0aW1lb3V0ID0gfn4oKE1hdGgucmFuZG9tKCkgKyAwLjUpICogKDEgPDwgKGN1cnJlbnRSZXRyeUNvdW50IDwgOCA/IGN1cnJlbnRSZXRyeUNvdW50IDogOCkpKSAqIGNvbmZpZy5lcnJvclJldHJ5SW50ZXJ2YWw7XG4gICAgaWYgKCFpc1VuZGVmaW5lZChtYXhSZXRyeUNvdW50KSAmJiBjdXJyZW50UmV0cnlDb3VudCA+IG1heFJldHJ5Q291bnQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZXRUaW1lb3V0KHJldmFsaWRhdGUsIHRpbWVvdXQsIG9wdHMpO1xufTtcbmNvbnN0IGNvbXBhcmUgPSAoY3VycmVudERhdGEsIG5ld0RhdGEpPT5zdGFibGVIYXNoKGN1cnJlbnREYXRhKSA9PSBzdGFibGVIYXNoKG5ld0RhdGEpO1xuLy8gRGVmYXVsdCBjYWNoZSBwcm92aWRlclxuY29uc3QgW2NhY2hlLCBtdXRhdGVdID0gaW5pdENhY2hlKG5ldyBNYXAoKSk7XG4vLyBEZWZhdWx0IGNvbmZpZ1xuY29uc3QgZGVmYXVsdENvbmZpZyA9IG1lcmdlT2JqZWN0cyh7XG4gICAgLy8gZXZlbnRzXG4gICAgb25Mb2FkaW5nU2xvdzogbm9vcCxcbiAgICBvblN1Y2Nlc3M6IG5vb3AsXG4gICAgb25FcnJvcjogbm9vcCxcbiAgICBvbkVycm9yUmV0cnksXG4gICAgb25EaXNjYXJkZWQ6IG5vb3AsXG4gICAgLy8gc3dpdGNoZXNcbiAgICByZXZhbGlkYXRlT25Gb2N1czogdHJ1ZSxcbiAgICByZXZhbGlkYXRlT25SZWNvbm5lY3Q6IHRydWUsXG4gICAgcmV2YWxpZGF0ZUlmU3RhbGU6IHRydWUsXG4gICAgc2hvdWxkUmV0cnlPbkVycm9yOiB0cnVlLFxuICAgIC8vIHRpbWVvdXRzXG4gICAgZXJyb3JSZXRyeUludGVydmFsOiBzbG93Q29ubmVjdGlvbiA/IDEwMDAwIDogNTAwMCxcbiAgICBmb2N1c1Rocm90dGxlSW50ZXJ2YWw6IDUgKiAxMDAwLFxuICAgIGRlZHVwaW5nSW50ZXJ2YWw6IDIgKiAxMDAwLFxuICAgIGxvYWRpbmdUaW1lb3V0OiBzbG93Q29ubmVjdGlvbiA/IDUwMDAgOiAzMDAwLFxuICAgIC8vIHByb3ZpZGVyc1xuICAgIGNvbXBhcmUsXG4gICAgaXNQYXVzZWQ6ICgpPT5mYWxzZSxcbiAgICBjYWNoZSxcbiAgICBtdXRhdGUsXG4gICAgZmFsbGJhY2s6IHt9XG59LCAvLyB1c2Ugd2ViIHByZXNldCBieSBkZWZhdWx0XG5wcmVzZXQpO1xuXG5jb25zdCBtZXJnZUNvbmZpZ3MgPSAoYSwgYik9PntcbiAgICAvLyBOZWVkIHRvIGNyZWF0ZSBhIG5ldyBvYmplY3QgdG8gYXZvaWQgbXV0YXRpbmcgdGhlIG9yaWdpbmFsIGhlcmUuXG4gICAgY29uc3QgdiA9IG1lcmdlT2JqZWN0cyhhLCBiKTtcbiAgICAvLyBJZiB0d28gY29uZmlncyBhcmUgcHJvdmlkZWQsIG1lcmdlIHRoZWlyIGB1c2VgIGFuZCBgZmFsbGJhY2tgIG9wdGlvbnMuXG4gICAgaWYgKGIpIHtcbiAgICAgICAgY29uc3QgeyB1c2U6IHUxLCBmYWxsYmFjazogZjEgfSA9IGE7XG4gICAgICAgIGNvbnN0IHsgdXNlOiB1MiwgZmFsbGJhY2s6IGYyIH0gPSBiO1xuICAgICAgICBpZiAodTEgJiYgdTIpIHtcbiAgICAgICAgICAgIHYudXNlID0gdTEuY29uY2F0KHUyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZjEgJiYgZjIpIHtcbiAgICAgICAgICAgIHYuZmFsbGJhY2sgPSBtZXJnZU9iamVjdHMoZjEsIGYyKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdjtcbn07XG5cbmNvbnN0IFNXUkNvbmZpZ0NvbnRleHQgPSBjcmVhdGVDb250ZXh0KHt9KTtcbmNvbnN0IFNXUkNvbmZpZyA9IChwcm9wcyk9PntcbiAgICBjb25zdCB7IHZhbHVlIH0gPSBwcm9wcztcbiAgICBjb25zdCBwYXJlbnRDb25maWcgPSB1c2VDb250ZXh0KFNXUkNvbmZpZ0NvbnRleHQpO1xuICAgIGNvbnN0IGlzRnVuY3Rpb25hbENvbmZpZyA9IGlzRnVuY3Rpb24odmFsdWUpO1xuICAgIGNvbnN0IGNvbmZpZyA9IHVzZU1lbW8oKCk9PmlzRnVuY3Rpb25hbENvbmZpZyA/IHZhbHVlKHBhcmVudENvbmZpZykgOiB2YWx1ZSwgW1xuICAgICAgICBpc0Z1bmN0aW9uYWxDb25maWcsXG4gICAgICAgIHBhcmVudENvbmZpZyxcbiAgICAgICAgdmFsdWVcbiAgICBdKTtcbiAgICAvLyBFeHRlbmQgcGFyZW50IGNvbnRleHQgdmFsdWVzIGFuZCBtaWRkbGV3YXJlLlxuICAgIGNvbnN0IGV4dGVuZGVkQ29uZmlnID0gdXNlTWVtbygoKT0+aXNGdW5jdGlvbmFsQ29uZmlnID8gY29uZmlnIDogbWVyZ2VDb25maWdzKHBhcmVudENvbmZpZywgY29uZmlnKSwgW1xuICAgICAgICBpc0Z1bmN0aW9uYWxDb25maWcsXG4gICAgICAgIHBhcmVudENvbmZpZyxcbiAgICAgICAgY29uZmlnXG4gICAgXSk7XG4gICAgLy8gU2hvdWxkIG5vdCB1c2UgdGhlIGluaGVyaXRlZCBwcm92aWRlci5cbiAgICBjb25zdCBwcm92aWRlciA9IGNvbmZpZyAmJiBjb25maWcucHJvdmlkZXI7XG4gICAgLy8gaW5pdGlhbGl6ZSB0aGUgY2FjaGUgb25seSBvbiBmaXJzdCBhY2Nlc3MuXG4gICAgY29uc3QgY2FjaGVDb250ZXh0UmVmID0gdXNlUmVmKFVOREVGSU5FRCk7XG4gICAgaWYgKHByb3ZpZGVyICYmICFjYWNoZUNvbnRleHRSZWYuY3VycmVudCkge1xuICAgICAgICBjYWNoZUNvbnRleHRSZWYuY3VycmVudCA9IGluaXRDYWNoZShwcm92aWRlcihleHRlbmRlZENvbmZpZy5jYWNoZSB8fCBjYWNoZSksIGNvbmZpZyk7XG4gICAgfVxuICAgIGNvbnN0IGNhY2hlQ29udGV4dCA9IGNhY2hlQ29udGV4dFJlZi5jdXJyZW50O1xuICAgIC8vIE92ZXJyaWRlIHRoZSBjYWNoZSBpZiBhIG5ldyBwcm92aWRlciBpcyBnaXZlbi5cbiAgICBpZiAoY2FjaGVDb250ZXh0KSB7XG4gICAgICAgIGV4dGVuZGVkQ29uZmlnLmNhY2hlID0gY2FjaGVDb250ZXh0WzBdO1xuICAgICAgICBleHRlbmRlZENvbmZpZy5tdXRhdGUgPSBjYWNoZUNvbnRleHRbMV07XG4gICAgfVxuICAgIC8vIFVuc3Vic2NyaWJlIGV2ZW50cy5cbiAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpPT57XG4gICAgICAgIGlmIChjYWNoZUNvbnRleHQpIHtcbiAgICAgICAgICAgIGNhY2hlQ29udGV4dFsyXSAmJiBjYWNoZUNvbnRleHRbMl0oKTtcbiAgICAgICAgICAgIHJldHVybiBjYWNoZUNvbnRleHRbM107XG4gICAgICAgIH1cbiAgICB9LCBbXSk7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoU1dSQ29uZmlnQ29udGV4dC5Qcm92aWRlciwgbWVyZ2VPYmplY3RzKHByb3BzLCB7XG4gICAgICAgIHZhbHVlOiBleHRlbmRlZENvbmZpZ1xuICAgIH0pKTtcbn07XG5cbmNvbnN0IElORklOSVRFX1BSRUZJWCA9ICckaW5mJCc7XG5cbi8vIEB0cy1leHBlY3QtZXJyb3JcbmNvbnN0IGVuYWJsZURldnRvb2xzID0gaXNXaW5kb3dEZWZpbmVkICYmIHdpbmRvdy5fX1NXUl9ERVZUT09MU19VU0VfXztcbmNvbnN0IHVzZSA9IGVuYWJsZURldnRvb2xzID8gd2luZG93Ll9fU1dSX0RFVlRPT0xTX1VTRV9fIDogW107XG5jb25zdCBzZXR1cERldlRvb2xzID0gKCk9PntcbiAgICBpZiAoZW5hYmxlRGV2dG9vbHMpIHtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgICAgICB3aW5kb3cuX19TV1JfREVWVE9PTFNfUkVBQ1RfXyA9IFJlYWN0O1xuICAgIH1cbn07XG5cbmNvbnN0IG5vcm1hbGl6ZSA9IChhcmdzKT0+e1xuICAgIHJldHVybiBpc0Z1bmN0aW9uKGFyZ3NbMV0pID8gW1xuICAgICAgICBhcmdzWzBdLFxuICAgICAgICBhcmdzWzFdLFxuICAgICAgICBhcmdzWzJdIHx8IHt9XG4gICAgXSA6IFtcbiAgICAgICAgYXJnc1swXSxcbiAgICAgICAgbnVsbCxcbiAgICAgICAgKGFyZ3NbMV0gPT09IG51bGwgPyBhcmdzWzJdIDogYXJnc1sxXSkgfHwge31cbiAgICBdO1xufTtcblxuY29uc3QgdXNlU1dSQ29uZmlnID0gKCk9PntcbiAgICByZXR1cm4gbWVyZ2VPYmplY3RzKGRlZmF1bHRDb25maWcsIHVzZUNvbnRleHQoU1dSQ29uZmlnQ29udGV4dCkpO1xufTtcblxuY29uc3QgcHJlbG9hZCA9IChrZXlfLCBmZXRjaGVyKT0+e1xuICAgIGNvbnN0IFtrZXksIGZuQXJnXSA9IHNlcmlhbGl6ZShrZXlfKTtcbiAgICBjb25zdCBbLCAsICwgUFJFTE9BRF0gPSBTV1JHbG9iYWxTdGF0ZS5nZXQoY2FjaGUpO1xuICAgIC8vIFByZXZlbnQgcHJlbG9hZCB0byBiZSBjYWxsZWQgbXVsdGlwbGUgdGltZXMgYmVmb3JlIHVzZWQuXG4gICAgaWYgKFBSRUxPQURba2V5XSkgcmV0dXJuIFBSRUxPQURba2V5XTtcbiAgICBjb25zdCByZXEgPSBmZXRjaGVyKGZuQXJnKTtcbiAgICBQUkVMT0FEW2tleV0gPSByZXE7XG4gICAgcmV0dXJuIHJlcTtcbn07XG5jb25zdCBtaWRkbGV3YXJlID0gKHVzZVNXUk5leHQpPT4oa2V5XywgZmV0Y2hlcl8sIGNvbmZpZyk9PntcbiAgICAgICAgLy8gZmV0Y2hlciBtaWdodCBiZSBhIHN5bmMgZnVuY3Rpb24sIHNvIHRoaXMgc2hvdWxkIG5vdCBiZSBhbiBhc3luYyBmdW5jdGlvblxuICAgICAgICBjb25zdCBmZXRjaGVyID0gZmV0Y2hlcl8gJiYgKCguLi5hcmdzKT0+e1xuICAgICAgICAgICAgY29uc3QgW2tleV0gPSBzZXJpYWxpemUoa2V5Xyk7XG4gICAgICAgICAgICBjb25zdCBbLCAsICwgUFJFTE9BRF0gPSBTV1JHbG9iYWxTdGF0ZS5nZXQoY2FjaGUpO1xuICAgICAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKElORklOSVRFX1BSRUZJWCkpIHtcbiAgICAgICAgICAgICAgICAvLyB3ZSB3YW50IHRoZSBpbmZpbml0ZSBmZXRjaGVyIHRvIGJlIGNhbGxlZC5cbiAgICAgICAgICAgICAgICAvLyBoYW5kbGluZyBvZiB0aGUgUFJFTE9BRCBjYWNoZSBoYXBwZW5zIHRoZXJlLlxuICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaGVyXyguLi5hcmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHJlcSA9IFBSRUxPQURba2V5XTtcbiAgICAgICAgICAgIGlmIChpc1VuZGVmaW5lZChyZXEpKSByZXR1cm4gZmV0Y2hlcl8oLi4uYXJncyk7XG4gICAgICAgICAgICBkZWxldGUgUFJFTE9BRFtrZXldO1xuICAgICAgICAgICAgcmV0dXJuIHJlcTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB1c2VTV1JOZXh0KGtleV8sIGZldGNoZXIsIGNvbmZpZyk7XG4gICAgfTtcblxuY29uc3QgQlVJTFRfSU5fTUlERExFV0FSRSA9IHVzZS5jb25jYXQobWlkZGxld2FyZSk7XG5cbi8vIEl0J3MgdHJpY2t5IHRvIHBhc3MgZ2VuZXJpYyB0eXBlcyBhcyBwYXJhbWV0ZXJzLCBzbyB3ZSBqdXN0IGRpcmVjdGx5IG92ZXJyaWRlXG4vLyB0aGUgdHlwZXMgaGVyZS5cbmNvbnN0IHdpdGhBcmdzID0gKGhvb2spPT57XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVzZVNXUkFyZ3MoLi4uYXJncykge1xuICAgICAgICAvLyBHZXQgdGhlIGRlZmF1bHQgYW5kIGluaGVyaXRlZCBjb25maWd1cmF0aW9uLlxuICAgICAgICBjb25zdCBmYWxsYmFja0NvbmZpZyA9IHVzZVNXUkNvbmZpZygpO1xuICAgICAgICAvLyBOb3JtYWxpemUgYXJndW1lbnRzLlxuICAgICAgICBjb25zdCBba2V5LCBmbiwgX2NvbmZpZ10gPSBub3JtYWxpemUoYXJncyk7XG4gICAgICAgIC8vIE1lcmdlIGNvbmZpZ3VyYXRpb25zLlxuICAgICAgICBjb25zdCBjb25maWcgPSBtZXJnZUNvbmZpZ3MoZmFsbGJhY2tDb25maWcsIF9jb25maWcpO1xuICAgICAgICAvLyBBcHBseSBtaWRkbGV3YXJlXG4gICAgICAgIGxldCBuZXh0ID0gaG9vaztcbiAgICAgICAgY29uc3QgeyB1c2UgfSA9IGNvbmZpZztcbiAgICAgICAgY29uc3QgbWlkZGxld2FyZSA9ICh1c2UgfHwgW10pLmNvbmNhdChCVUlMVF9JTl9NSURETEVXQVJFKTtcbiAgICAgICAgZm9yKGxldCBpID0gbWlkZGxld2FyZS5sZW5ndGg7IGktLTspe1xuICAgICAgICAgICAgbmV4dCA9IG1pZGRsZXdhcmVbaV0obmV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5leHQoa2V5LCBmbiB8fCBjb25maWcuZmV0Y2hlciB8fCBudWxsLCBjb25maWcpO1xuICAgIH07XG59O1xuXG4vLyBBZGQgYSBjYWxsYmFjayBmdW5jdGlvbiB0byBhIGxpc3Qgb2Yga2V5ZWQgY2FsbGJhY2sgZnVuY3Rpb25zIGFuZCByZXR1cm5cbi8vIHRoZSB1bnN1YnNjcmliZSBmdW5jdGlvbi5cbmNvbnN0IHN1YnNjcmliZUNhbGxiYWNrID0gKGtleSwgY2FsbGJhY2tzLCBjYWxsYmFjayk9PntcbiAgICBjb25zdCBrZXllZFJldmFsaWRhdG9ycyA9IGNhbGxiYWNrc1trZXldIHx8IChjYWxsYmFja3Nba2V5XSA9IFtdKTtcbiAgICBrZXllZFJldmFsaWRhdG9ycy5wdXNoKGNhbGxiYWNrKTtcbiAgICByZXR1cm4gKCk9PntcbiAgICAgICAgY29uc3QgaW5kZXggPSBrZXllZFJldmFsaWRhdG9ycy5pbmRleE9mKGNhbGxiYWNrKTtcbiAgICAgICAgaWYgKGluZGV4ID49IDApIHtcbiAgICAgICAgICAgIC8vIE8oMSk6IGZhc3RlciB0aGFuIHNwbGljZVxuICAgICAgICAgICAga2V5ZWRSZXZhbGlkYXRvcnNbaW5kZXhdID0ga2V5ZWRSZXZhbGlkYXRvcnNba2V5ZWRSZXZhbGlkYXRvcnMubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICBrZXllZFJldmFsaWRhdG9ycy5wb3AoKTtcbiAgICAgICAgfVxuICAgIH07XG59O1xuXG4vLyBDcmVhdGUgYSBjdXN0b20gaG9vayB3aXRoIGEgbWlkZGxld2FyZVxuY29uc3Qgd2l0aE1pZGRsZXdhcmUgPSAodXNlU1dSLCBtaWRkbGV3YXJlKT0+e1xuICAgIHJldHVybiAoLi4uYXJncyk9PntcbiAgICAgICAgY29uc3QgW2tleSwgZm4sIGNvbmZpZ10gPSBub3JtYWxpemUoYXJncyk7XG4gICAgICAgIGNvbnN0IHVzZXMgPSAoY29uZmlnLnVzZSB8fCBbXSkuY29uY2F0KG1pZGRsZXdhcmUpO1xuICAgICAgICByZXR1cm4gdXNlU1dSKGtleSwgZm4sIHtcbiAgICAgICAgICAgIC4uLmNvbmZpZyxcbiAgICAgICAgICAgIHVzZTogdXNlc1xuICAgICAgICB9KTtcbiAgICB9O1xufTtcblxuc2V0dXBEZXZUb29scygpO1xuXG5leHBvcnQgeyBJTkZJTklURV9QUkVGSVgsIElTX1JFQUNUX0xFR0FDWSwgSVNfU0VSVkVSLCBPQkpFQ1QsIFNXUkNvbmZpZywgU1dSR2xvYmFsU3RhdGUsIFVOREVGSU5FRCwgY2FjaGUsIGNvbXBhcmUsIGNyZWF0ZUNhY2hlSGVscGVyLCBkZWZhdWx0Q29uZmlnLCBkZWZhdWx0Q29uZmlnT3B0aW9ucywgZ2V0VGltZXN0YW1wLCBoYXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUsIGluaXRDYWNoZSwgaW50ZXJuYWxNdXRhdGUsIGlzRG9jdW1lbnREZWZpbmVkLCBpc0Z1bmN0aW9uLCBpc1Byb21pc2VMaWtlLCBpc1VuZGVmaW5lZCwgaXNXaW5kb3dEZWZpbmVkLCBtZXJnZUNvbmZpZ3MsIG1lcmdlT2JqZWN0cywgbXV0YXRlLCBub29wLCBub3JtYWxpemUsIHByZWxvYWQsIHByZXNldCwgckFGLCBldmVudHMgYXMgcmV2YWxpZGF0ZUV2ZW50cywgc2VyaWFsaXplLCBzbG93Q29ubmVjdGlvbiwgc3RhYmxlSGFzaCwgc3Vic2NyaWJlQ2FsbGJhY2ssIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QsIHVzZVNXUkNvbmZpZywgd2l0aEFyZ3MsIHdpdGhNaWRkbGV3YXJlIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/dist/_internal/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/dist/core/index.mjs":
/*!**********************************************!*\
  !*** ./node_modules/swr/dist/core/index.mjs ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SWRConfig: function() { return /* binding */ SWRConfig; },\n/* harmony export */   \"default\": function() { return /* binding */ useSWR; },\n/* harmony export */   mutate: function() { return /* reexport safe */ swr_internal__WEBPACK_IMPORTED_MODULE_3__.mutate; },\n/* harmony export */   preload: function() { return /* reexport safe */ swr_internal__WEBPACK_IMPORTED_MODULE_3__.preload; },\n/* harmony export */   unstable_serialize: function() { return /* binding */ unstable_serialize; },\n/* harmony export */   useSWRConfig: function() { return /* reexport safe */ swr_internal__WEBPACK_IMPORTED_MODULE_3__.useSWRConfig; }\n/* harmony export */ });\n/* harmony import */ var client_only__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! client-only */ \"(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-sync-external-store/shim/index.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n/* harmony import */ var swr_internal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! swr/_internal */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/index.mjs\");\n\n\n\n\n\n\nconst unstable_serialize = (key)=>(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.serialize)(key)[0];\n\n/// <reference types=\"react/experimental\" />\nconst use = react__WEBPACK_IMPORTED_MODULE_1__.use || ((promise)=>{\n    if (promise.status === 'pending') {\n        throw promise;\n    } else if (promise.status === 'fulfilled') {\n        return promise.value;\n    } else if (promise.status === 'rejected') {\n        throw promise.reason;\n    } else {\n        promise.status = 'pending';\n        promise.then((v)=>{\n            promise.status = 'fulfilled';\n            promise.value = v;\n        }, (e)=>{\n            promise.status = 'rejected';\n            promise.reason = e;\n        });\n        throw promise;\n    }\n});\nconst WITH_DEDUPE = {\n    dedupe: true\n};\nconst useSWRHandler = (_key, fetcher, config)=>{\n    const { cache, compare, suspense, fallbackData, revalidateOnMount, revalidateIfStale, refreshInterval, refreshWhenHidden, refreshWhenOffline, keepPreviousData } = config;\n    const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = swr_internal__WEBPACK_IMPORTED_MODULE_3__.SWRGlobalState.get(cache);\n    // `key` is the identifier of the SWR internal state,\n    // `fnArg` is the argument/arguments parsed from the key, which will be passed\n    // to the fetcher.\n    // All of them are derived from `_key`.\n    const [key, fnArg] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.serialize)(_key);\n    // If it's the initial render of this hook.\n    const initialMountedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // If the hook is unmounted already. This will be used to prevent some effects\n    // to be called after unmounting.\n    const unmountedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // Refs to keep the key and config.\n    const keyRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(key);\n    const fetcherRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(fetcher);\n    const configRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(config);\n    const getConfig = ()=>configRef.current;\n    const isActive = ()=>getConfig().isVisible() && getConfig().isOnline();\n    const [getCache, setCache, subscribeCache, getInitialCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.createCacheHelper)(cache, key);\n    const stateDependencies = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({}).current;\n    const fallback = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(fallbackData) ? config.fallback[key] : fallbackData;\n    const isEqual = (prev, current)=>{\n        for(const _ in stateDependencies){\n            const t = _;\n            if (t === 'data') {\n                if (!compare(prev[t], current[t])) {\n                    if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(prev[t])) {\n                        return false;\n                    }\n                    if (!compare(returnedData, current[t])) {\n                        return false;\n                    }\n                }\n            } else {\n                if (current[t] !== prev[t]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const shouldStartRequest = (()=>{\n            if (!key) return false;\n            if (!fetcher) return false;\n            // If `revalidateOnMount` is set, we take the value directly.\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(revalidateOnMount)) return revalidateOnMount;\n            // If it's paused, we skip revalidation.\n            if (getConfig().isPaused()) return false;\n            if (suspense) return false;\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(revalidateIfStale)) return revalidateIfStale;\n            return true;\n        })();\n        // Get the cache and merge it with expected states.\n        const getSelectedCache = (state)=>{\n            // We only select the needed fields from the state.\n            const snapshot = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.mergeObjects)(state);\n            delete snapshot._k;\n            if (!shouldStartRequest) {\n                return snapshot;\n            }\n            return {\n                isValidating: true,\n                isLoading: true,\n                ...snapshot\n            };\n        };\n        const cachedData = getCache();\n        const initialData = getInitialCache();\n        const clientSnapshot = getSelectedCache(cachedData);\n        const serverSnapshot = cachedData === initialData ? clientSnapshot : getSelectedCache(initialData);\n        // To make sure that we are returning the same object reference to avoid\n        // unnecessary re-renders, we keep the previous snapshot and use deep\n        // comparison to check if we need to return a new one.\n        let memorizedSnapshot = clientSnapshot;\n        return [\n            ()=>{\n                const newSnapshot = getSelectedCache(getCache());\n                const compareResult = isEqual(newSnapshot, memorizedSnapshot);\n                if (compareResult) {\n                    // Mentally, we should always return the `memorizedSnapshot` here\n                    // as there's no change between the new and old snapshots.\n                    // However, since the `isEqual` function only compares selected fields,\n                    // the values of the unselected fields might be changed. That's\n                    // simply because we didn't track them.\n                    // To support the case in https://github.com/vercel/swr/pull/2576,\n                    // we need to update these fields in the `memorizedSnapshot` too\n                    // with direct mutations to ensure the snapshot is always up-to-date\n                    // even for the unselected fields, but only trigger re-renders when\n                    // the selected fields are changed.\n                    memorizedSnapshot.data = newSnapshot.data;\n                    memorizedSnapshot.isLoading = newSnapshot.isLoading;\n                    memorizedSnapshot.isValidating = newSnapshot.isValidating;\n                    memorizedSnapshot.error = newSnapshot.error;\n                    return memorizedSnapshot;\n                } else {\n                    memorizedSnapshot = newSnapshot;\n                    return newSnapshot;\n                }\n            },\n            ()=>serverSnapshot\n        ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        cache,\n        key\n    ]);\n    // Get the current state that SWR should return.\n    const cached = (0,use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((callback)=>subscribeCache(key, (current, prev)=>{\n            if (!isEqual(prev, current)) callback();\n        }), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        cache,\n        key\n    ]), getSnapshot[0], getSnapshot[1]);\n    const isInitialMount = !initialMountedRef.current;\n    const hasRevalidator = EVENT_REVALIDATORS[key] && EVENT_REVALIDATORS[key].length > 0;\n    const cachedData = cached.data;\n    const data = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cachedData) ? fallback : cachedData;\n    const error = cached.error;\n    // Use a ref to store previously returned data. Use the initial data as its initial value.\n    const laggyDataRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(data);\n    const returnedData = keepPreviousData ? (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cachedData) ? laggyDataRef.current : cachedData : data;\n    // - Suspense mode and there's stale data for the initial render.\n    // - Not suspense mode and there is no fallback data and `revalidateIfStale` is enabled.\n    // - `revalidateIfStale` is enabled but `data` is not defined.\n    const shouldDoInitialRevalidation = (()=>{\n        // if a key already has revalidators and also has error, we should not trigger revalidation\n        if (hasRevalidator && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(error)) return false;\n        // If `revalidateOnMount` is set, we take the value directly.\n        if (isInitialMount && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(revalidateOnMount)) return revalidateOnMount;\n        // If it's paused, we skip revalidation.\n        if (getConfig().isPaused()) return false;\n        // Under suspense mode, it will always fetch on render if there is no\n        // stale data so no need to revalidate immediately mount it again.\n        // If data exists, only revalidate if `revalidateIfStale` is true.\n        if (suspense) return (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) ? false : revalidateIfStale;\n        // If there is no stale data, we need to revalidate when mount;\n        // If `revalidateIfStale` is set to true, we will always revalidate.\n        return (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) || revalidateIfStale;\n    })();\n    // Resolve the default validating state:\n    // If it's able to validate, and it should revalidate when mount, this will be true.\n    const defaultValidatingState = !!(key && fetcher && isInitialMount && shouldDoInitialRevalidation);\n    const isValidating = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cached.isValidating) ? defaultValidatingState : cached.isValidating;\n    const isLoading = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cached.isLoading) ? defaultValidatingState : cached.isLoading;\n    // The revalidation function is a carefully crafted wrapper of the original\n    // `fetcher`, to correctly handle the many edge cases.\n    const revalidate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (revalidateOpts)=>{\n        const currentFetcher = fetcherRef.current;\n        if (!key || !currentFetcher || unmountedRef.current || getConfig().isPaused()) {\n            return false;\n        }\n        let newData;\n        let startAt;\n        let loading = true;\n        const opts = revalidateOpts || {};\n        // If there is no ongoing concurrent request, or `dedupe` is not set, a\n        // new request should be initiated.\n        const shouldStartNewRequest = !FETCH[key] || !opts.dedupe;\n        /*\n         For React 17\n         Do unmount check for calls:\n         If key has changed during the revalidation, or the component has been\n         unmounted, old dispatch and old event callbacks should not take any\n         effect\n\n        For React 18\n        only check if key has changed\n        https://github.com/reactwg/react-18/discussions/82\n      */ const callbackSafeguard = ()=>{\n            if (swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_REACT_LEGACY) {\n                return !unmountedRef.current && key === keyRef.current && initialMountedRef.current;\n            }\n            return key === keyRef.current;\n        };\n        // The final state object when the request finishes.\n        const finalState = {\n            isValidating: false,\n            isLoading: false\n        };\n        const finishRequestAndUpdateState = ()=>{\n            setCache(finalState);\n        };\n        const cleanupState = ()=>{\n            // Check if it's still the same request before deleting it.\n            const requestInfo = FETCH[key];\n            if (requestInfo && requestInfo[1] === startAt) {\n                delete FETCH[key];\n            }\n        };\n        // Start fetching. Change the `isValidating` state, update the cache.\n        const initialState = {\n            isValidating: true\n        };\n        // It is in the `isLoading` state, if and only if there is no cached data.\n        // This bypasses fallback data and laggy data.\n        if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(getCache().data)) {\n            initialState.isLoading = true;\n        }\n        try {\n            if (shouldStartNewRequest) {\n                setCache(initialState);\n                // If no cache is being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(getCache().data)) {\n                    setTimeout(()=>{\n                        if (loading && callbackSafeguard()) {\n                            getConfig().onLoadingSlow(key, config);\n                        }\n                    }, config.loadingTimeout);\n                }\n                // Start the request and save the timestamp.\n                // Key must be truthy if entering here.\n                FETCH[key] = [\n                    currentFetcher(fnArg),\n                    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.getTimestamp)()\n                ];\n            }\n            [newData, startAt] = FETCH[key];\n            newData = await newData;\n            if (shouldStartNewRequest) {\n                // If the request isn't interrupted, clean it up after the\n                // deduplication interval.\n                setTimeout(cleanupState, config.dedupingInterval);\n            }\n            // If there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            // The timestamp maybe be `undefined` or a number\n            if (!FETCH[key] || FETCH[key][1] !== startAt) {\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Clear error.\n            finalState.error = swr_internal__WEBPACK_IMPORTED_MODULE_3__.UNDEFINED;\n            // If there're other mutations(s), that overlapped with the current revalidation:\n            // case 1:\n            //   req------------------>res\n            //       mutate------>end\n            // case 2:\n            //         req------------>res\n            //   mutate------>end\n            // case 3:\n            //   req------------------>res\n            //       mutate-------...---------->\n            // we have to ignore the revalidation result (res) because it's no longer fresh.\n            // meanwhile, a new revalidation should be triggered when the mutation ends.\n            const mutationInfo = MUTATION[key];\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(mutationInfo) && // case 1\n            (startAt <= mutationInfo[0] || // case 2\n            startAt <= mutationInfo[1] || // case 3\n            mutationInfo[1] === 0)) {\n                finishRequestAndUpdateState();\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Deep compare with the latest state to avoid extra re-renders.\n            // For local state, compare and assign.\n            const cacheData = getCache().data;\n            // Since the compare fn could be custom fn\n            // cacheData might be different from newData even when compare fn returns True\n            finalState.data = compare(cacheData, newData) ? cacheData : newData;\n            // Trigger the successful callback if it's the original request.\n            if (shouldStartNewRequest) {\n                if (callbackSafeguard()) {\n                    getConfig().onSuccess(newData, key, config);\n                }\n            }\n        } catch (err) {\n            cleanupState();\n            const currentConfig = getConfig();\n            const { shouldRetryOnError } = currentConfig;\n            // Not paused, we continue handling the error. Otherwise, discard it.\n            if (!currentConfig.isPaused()) {\n                // Get a new error, don't use deep comparison for errors.\n                finalState.error = err;\n                // Error event and retry logic. Only for the actual request, not\n                // deduped ones.\n                if (shouldStartNewRequest && callbackSafeguard()) {\n                    currentConfig.onError(err, key, currentConfig);\n                    if (shouldRetryOnError === true || (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isFunction)(shouldRetryOnError) && shouldRetryOnError(err)) {\n                        if (!getConfig().revalidateOnFocus || !getConfig().revalidateOnReconnect || isActive()) {\n                            // If it's inactive, stop. It will auto-revalidate when\n                            // refocusing or reconnecting.\n                            // When retrying, deduplication is always enabled.\n                            currentConfig.onErrorRetry(err, key, currentConfig, (_opts)=>{\n                                const revalidators = EVENT_REVALIDATORS[key];\n                                if (revalidators && revalidators[0]) {\n                                    revalidators[0](swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.ERROR_REVALIDATE_EVENT, _opts);\n                                }\n                            }, {\n                                retryCount: (opts.retryCount || 0) + 1,\n                                dedupe: true\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        // Mark loading as stopped.\n        loading = false;\n        // Update the current hook's state.\n        finishRequestAndUpdateState();\n        return true;\n    }, // `setState` is immutable, and `eventsCallback`, `fnArg`, and\n    // `keyValidating` are depending on `key`, so we can exclude them from\n    // the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // `useSWR('key', () => fetch('/api/'), { suspense: true })`\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        key,\n        cache\n    ]);\n    // Similar to the global mutate but bound to the current cache and key.\n    // `cache` isn't allowed to change during the lifecycle.\n    const boundMutate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(// Use callback to make sure `keyRef.current` returns latest result every time\n    (...args)=>{\n        return (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.internalMutate)(cache, keyRef.current, ...args);\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // The logic for updating refs.\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(()=>{\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        // Handle laggy data updates. If there's cached data of the current key,\n        // it'll be the correct reference.\n        if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(cachedData)) {\n            laggyDataRef.current = cachedData;\n        }\n    });\n    // After mounted or key changed.\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(()=>{\n        if (!key) return;\n        const softRevalidate = revalidate.bind(swr_internal__WEBPACK_IMPORTED_MODULE_3__.UNDEFINED, WITH_DEDUPE);\n        // Expose revalidators to global event listeners. So we can trigger\n        // revalidation from the outside.\n        let nextFocusRevalidatedAt = 0;\n        const onRevalidate = (type, opts = {})=>{\n            if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.FOCUS_EVENT) {\n                const now = Date.now();\n                if (getConfig().revalidateOnFocus && now > nextFocusRevalidatedAt && isActive()) {\n                    nextFocusRevalidatedAt = now + getConfig().focusThrottleInterval;\n                    softRevalidate();\n                }\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.RECONNECT_EVENT) {\n                if (getConfig().revalidateOnReconnect && isActive()) {\n                    softRevalidate();\n                }\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.MUTATE_EVENT) {\n                return revalidate();\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_3__.revalidateEvents.ERROR_REVALIDATE_EVENT) {\n                return revalidate(opts);\n            }\n            return;\n        };\n        const unsubEvents = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.subscribeCallback)(key, EVENT_REVALIDATORS, onRevalidate);\n        // Mark the component as mounted and update corresponding refs.\n        unmountedRef.current = false;\n        keyRef.current = key;\n        initialMountedRef.current = true;\n        // Keep the original key in the cache.\n        setCache({\n            _k: fnArg\n        });\n        // Trigger a revalidation\n        if (shouldDoInitialRevalidation) {\n            if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) || swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_SERVER) {\n                // Revalidate immediately.\n                softRevalidate();\n            } else {\n                // Delay the revalidate if we have data to return so we won't block\n                // rendering.\n                (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.rAF)(softRevalidate);\n            }\n        }\n        return ()=>{\n            // Mark it as unmounted.\n            unmountedRef.current = true;\n            unsubEvents();\n        };\n    }, [\n        key\n    ]);\n    // Polling\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(()=>{\n        let timer;\n        function next() {\n            // Use the passed interval\n            // ...or invoke the function with the updated data to get the interval\n            const interval = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isFunction)(refreshInterval) ? refreshInterval(getCache().data) : refreshInterval;\n            // We only start the next interval if `refreshInterval` is not 0, and:\n            // - `force` is true, which is the start of polling\n            // - or `timer` is not 0, which means the effect wasn't canceled\n            if (interval && timer !== -1) {\n                timer = setTimeout(execute, interval);\n            }\n        }\n        function execute() {\n            // Check if it's OK to execute:\n            // Only revalidate when the page is visible, online, and not errored.\n            if (!getCache().error && (refreshWhenHidden || getConfig().isVisible()) && (refreshWhenOffline || getConfig().isOnline())) {\n                revalidate(WITH_DEDUPE).then(next);\n            } else {\n                // Schedule the next interval to check again.\n                next();\n            }\n        }\n        next();\n        return ()=>{\n            if (timer) {\n                clearTimeout(timer);\n                timer = -1;\n            }\n        };\n    }, [\n        refreshInterval,\n        refreshWhenHidden,\n        refreshWhenOffline,\n        key\n    ]);\n    // Display debug info in React DevTools.\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useDebugValue)(returnedData);\n    // In Suspense mode, we can't return the empty `data` state.\n    // If there is an `error`, the `error` needs to be thrown to the error boundary.\n    // If there is no `error`, the `revalidation` promise needs to be thrown to\n    // the suspense boundary.\n    if (suspense && (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(data) && key) {\n        // SWR should throw when trying to use Suspense on the server with React 18,\n        // without providing any initial data. See:\n        // https://github.com/vercel/swr/issues/1832\n        if (!swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_REACT_LEGACY && swr_internal__WEBPACK_IMPORTED_MODULE_3__.IS_SERVER) {\n            throw new Error('Fallback data is required when using suspense in SSR.');\n        }\n        // Always update fetcher and config refs even with the Suspense mode.\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        unmountedRef.current = false;\n        const req = PRELOAD[key];\n        if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(req)) {\n            const promise = boundMutate(req);\n            use(promise);\n        }\n        if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(error)) {\n            const promise = revalidate(WITH_DEDUPE);\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(returnedData)) {\n                promise.status = 'fulfilled';\n                promise.value = true;\n            }\n            use(promise);\n        } else {\n            throw error;\n        }\n    }\n    return {\n        mutate: boundMutate,\n        get data () {\n            stateDependencies.data = true;\n            return returnedData;\n        },\n        get error () {\n            stateDependencies.error = true;\n            return error;\n        },\n        get isValidating () {\n            stateDependencies.isValidating = true;\n            return isValidating;\n        },\n        get isLoading () {\n            stateDependencies.isLoading = true;\n            return isLoading;\n        }\n    };\n};\nconst SWRConfig = swr_internal__WEBPACK_IMPORTED_MODULE_3__.OBJECT.defineProperty(swr_internal__WEBPACK_IMPORTED_MODULE_3__.SWRConfig, 'defaultValue', {\n    value: swr_internal__WEBPACK_IMPORTED_MODULE_3__.defaultConfig\n});\n/**\n * A hook to fetch data.\n *\n * @link https://swr.vercel.app\n * @example\n * ```jsx\n * import useSWR from 'swr'\n * function Profile() {\n *   const { data, error, isLoading } = useSWR('/api/user', fetcher)\n *   if (error) return <div>failed to load</div>\n *   if (isLoading) return <div>loading...</div>\n *   return <div>hello {data.name}!</div>\n * }\n * ```\n */ const useSWR = (0,swr_internal__WEBPACK_IMPORTED_MODULE_3__.withArgs)(useSWRHandler);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/dist/core/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs":
/*!******************************************!*\
  !*** ./node_modules/tslib/tslib.es6.mjs ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __addDisposableResource: function() { return /* binding */ __addDisposableResource; },\n/* harmony export */   __assign: function() { return /* binding */ __assign; },\n/* harmony export */   __asyncDelegator: function() { return /* binding */ __asyncDelegator; },\n/* harmony export */   __asyncGenerator: function() { return /* binding */ __asyncGenerator; },\n/* harmony export */   __asyncValues: function() { return /* binding */ __asyncValues; },\n/* harmony export */   __await: function() { return /* binding */ __await; },\n/* harmony export */   __awaiter: function() { return /* binding */ __awaiter; },\n/* harmony export */   __classPrivateFieldGet: function() { return /* binding */ __classPrivateFieldGet; },\n/* harmony export */   __classPrivateFieldIn: function() { return /* binding */ __classPrivateFieldIn; },\n/* harmony export */   __classPrivateFieldSet: function() { return /* binding */ __classPrivateFieldSet; },\n/* harmony export */   __createBinding: function() { return /* binding */ __createBinding; },\n/* harmony export */   __decorate: function() { return /* binding */ __decorate; },\n/* harmony export */   __disposeResources: function() { return /* binding */ __disposeResources; },\n/* harmony export */   __esDecorate: function() { return /* binding */ __esDecorate; },\n/* harmony export */   __exportStar: function() { return /* binding */ __exportStar; },\n/* harmony export */   __extends: function() { return /* binding */ __extends; },\n/* harmony export */   __generator: function() { return /* binding */ __generator; },\n/* harmony export */   __importDefault: function() { return /* binding */ __importDefault; },\n/* harmony export */   __importStar: function() { return /* binding */ __importStar; },\n/* harmony export */   __makeTemplateObject: function() { return /* binding */ __makeTemplateObject; },\n/* harmony export */   __metadata: function() { return /* binding */ __metadata; },\n/* harmony export */   __param: function() { return /* binding */ __param; },\n/* harmony export */   __propKey: function() { return /* binding */ __propKey; },\n/* harmony export */   __read: function() { return /* binding */ __read; },\n/* harmony export */   __rest: function() { return /* binding */ __rest; },\n/* harmony export */   __rewriteRelativeImportExtension: function() { return /* binding */ __rewriteRelativeImportExtension; },\n/* harmony export */   __runInitializers: function() { return /* binding */ __runInitializers; },\n/* harmony export */   __setFunctionName: function() { return /* binding */ __setFunctionName; },\n/* harmony export */   __spread: function() { return /* binding */ __spread; },\n/* harmony export */   __spreadArray: function() { return /* binding */ __spreadArray; },\n/* harmony export */   __spreadArrays: function() { return /* binding */ __spreadArrays; },\n/* harmony export */   __values: function() { return /* binding */ __values; }\n/* harmony export */ });\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nfunction __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nfunction __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nfunction __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nfunction __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nfunction __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nfunction __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nfunction __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nfunction __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nfunction __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nfunction __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nfunction __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nfunction __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nfunction __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nfunction __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/Options.js":
/*!*************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/Options.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultOptions: function() { return /* binding */ defaultOptions; },\n/* harmony export */   getDefaultOptions: function() { return /* binding */ getDefaultOptions; },\n/* harmony export */   ignoreOverride: function() { return /* binding */ ignoreOverride; }\n/* harmony export */ });\nconst ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nconst defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\"\n};\nconst getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vT3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTztBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9PcHRpb25zLmpzPzEyNGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGlnbm9yZU92ZXJyaWRlID0gU3ltYm9sKFwiTGV0IHpvZFRvSnNvblNjaGVtYSBkZWNpZGUgb24gd2hpY2ggcGFyc2VyIHRvIHVzZVwiKTtcbmV4cG9ydCBjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICBuYW1lOiB1bmRlZmluZWQsXG4gICAgJHJlZlN0cmF0ZWd5OiBcInJvb3RcIixcbiAgICBiYXNlUGF0aDogW1wiI1wiXSxcbiAgICBlZmZlY3RTdHJhdGVneTogXCJpbnB1dFwiLFxuICAgIHBpcGVTdHJhdGVneTogXCJhbGxcIixcbiAgICBkYXRlU3RyYXRlZ3k6IFwiZm9ybWF0OmRhdGUtdGltZVwiLFxuICAgIG1hcFN0cmF0ZWd5OiBcImVudHJpZXNcIixcbiAgICByZW1vdmVBZGRpdGlvbmFsU3RyYXRlZ3k6IFwicGFzc3Rocm91Z2hcIixcbiAgICBkZWZpbml0aW9uUGF0aDogXCJkZWZpbml0aW9uc1wiLFxuICAgIHRhcmdldDogXCJqc29uU2NoZW1hN1wiLFxuICAgIHN0cmljdFVuaW9uczogZmFsc2UsXG4gICAgZGVmaW5pdGlvbnM6IHt9LFxuICAgIGVycm9yTWVzc2FnZXM6IGZhbHNlLFxuICAgIG1hcmtkb3duRGVzY3JpcHRpb246IGZhbHNlLFxuICAgIHBhdHRlcm5TdHJhdGVneTogXCJlc2NhcGVcIixcbiAgICBhcHBseVJlZ2V4RmxhZ3M6IGZhbHNlLFxuICAgIGVtYWlsU3RyYXRlZ3k6IFwiZm9ybWF0OmVtYWlsXCIsXG4gICAgYmFzZTY0U3RyYXRlZ3k6IFwiY29udGVudEVuY29kaW5nOmJhc2U2NFwiLFxuICAgIG5hbWVTdHJhdGVneTogXCJyZWZcIlxufTtcbmV4cG9ydCBjb25zdCBnZXREZWZhdWx0T3B0aW9ucyA9IChvcHRpb25zKSA9PiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCJcbiAgICA/IHtcbiAgICAgICAgLi4uZGVmYXVsdE9wdGlvbnMsXG4gICAgICAgIG5hbWU6IG9wdGlvbnMsXG4gICAgfVxuICAgIDoge1xuICAgICAgICAuLi5kZWZhdWx0T3B0aW9ucyxcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/Options.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/Refs.js":
/*!**********************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/Refs.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRefs: function() { return /* binding */ getRefs; }\n/* harmony export */ });\n/* harmony import */ var _Options_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Options.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/Options.js\");\n\nconst getRefs = (options) => {\n    const _options = (0,_Options_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultOptions)(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vUmVmcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUMxQztBQUNQLHFCQUFxQiw4REFBaUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9SZWZzLmpzPzExNmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RGVmYXVsdE9wdGlvbnMgfSBmcm9tIFwiLi9PcHRpb25zLmpzXCI7XG5leHBvcnQgY29uc3QgZ2V0UmVmcyA9IChvcHRpb25zKSA9PiB7XG4gICAgY29uc3QgX29wdGlvbnMgPSBnZXREZWZhdWx0T3B0aW9ucyhvcHRpb25zKTtcbiAgICBjb25zdCBjdXJyZW50UGF0aCA9IF9vcHRpb25zLm5hbWUgIT09IHVuZGVmaW5lZFxuICAgICAgICA/IFsuLi5fb3B0aW9ucy5iYXNlUGF0aCwgX29wdGlvbnMuZGVmaW5pdGlvblBhdGgsIF9vcHRpb25zLm5hbWVdXG4gICAgICAgIDogX29wdGlvbnMuYmFzZVBhdGg7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgLi4uX29wdGlvbnMsXG4gICAgICAgIGN1cnJlbnRQYXRoOiBjdXJyZW50UGF0aCxcbiAgICAgICAgcHJvcGVydHlQYXRoOiB1bmRlZmluZWQsXG4gICAgICAgIHNlZW46IG5ldyBNYXAoT2JqZWN0LmVudHJpZXMoX29wdGlvbnMuZGVmaW5pdGlvbnMpLm1hcCgoW25hbWUsIGRlZl0pID0+IFtcbiAgICAgICAgICAgIGRlZi5fZGVmLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGRlZjogZGVmLl9kZWYsXG4gICAgICAgICAgICAgICAgcGF0aDogWy4uLl9vcHRpb25zLmJhc2VQYXRoLCBfb3B0aW9ucy5kZWZpbml0aW9uUGF0aCwgbmFtZV0sXG4gICAgICAgICAgICAgICAgLy8gUmVzb2x1dGlvbiBvZiByZWZlcmVuY2VzIHdpbGwgYmUgZm9yY2VkIGV2ZW4gdGhvdWdoIHNlZW4sIHNvIGl0J3Mgb2sgdGhhdCB0aGUgc2NoZW1hIGlzIHVuZGVmaW5lZCBoZXJlIGZvciBub3cuXG4gICAgICAgICAgICAgICAganNvblNjaGVtYTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSkpLFxuICAgIH07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/Refs.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/errorMessages.js":
/*!*******************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/errorMessages.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addErrorMessage: function() { return /* binding */ addErrorMessage; },\n/* harmony export */   setResponseValueAndErrors: function() { return /* binding */ setResponseValueAndErrors; }\n/* harmony export */ });\nfunction addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nfunction setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vZXJyb3JNZXNzYWdlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9lcnJvck1lc3NhZ2VzLmpzP2EwZjYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGFkZEVycm9yTWVzc2FnZShyZXMsIGtleSwgZXJyb3JNZXNzYWdlLCByZWZzKSB7XG4gICAgaWYgKCFyZWZzPy5lcnJvck1lc3NhZ2VzKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKGVycm9yTWVzc2FnZSkge1xuICAgICAgICByZXMuZXJyb3JNZXNzYWdlID0ge1xuICAgICAgICAgICAgLi4ucmVzLmVycm9yTWVzc2FnZSxcbiAgICAgICAgICAgIFtrZXldOiBlcnJvck1lc3NhZ2UsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMocmVzLCBrZXksIHZhbHVlLCBlcnJvck1lc3NhZ2UsIHJlZnMpIHtcbiAgICByZXNba2V5XSA9IHZhbHVlO1xuICAgIGFkZEVycm9yTWVzc2FnZShyZXMsIGtleSwgZXJyb3JNZXNzYWdlLCByZWZzKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/errorMessages.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addErrorMessage: function() { return /* reexport safe */ _errorMessages_js__WEBPACK_IMPORTED_MODULE_2__.addErrorMessage; },\n/* harmony export */   defaultOptions: function() { return /* reexport safe */ _Options_js__WEBPACK_IMPORTED_MODULE_0__.defaultOptions; },\n/* harmony export */   getDefaultOptions: function() { return /* reexport safe */ _Options_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultOptions; },\n/* harmony export */   getRefs: function() { return /* reexport safe */ _Refs_js__WEBPACK_IMPORTED_MODULE_1__.getRefs; },\n/* harmony export */   ignoreOverride: function() { return /* reexport safe */ _Options_js__WEBPACK_IMPORTED_MODULE_0__.ignoreOverride; },\n/* harmony export */   parseAnyDef: function() { return /* reexport safe */ _parsers_any_js__WEBPACK_IMPORTED_MODULE_4__.parseAnyDef; },\n/* harmony export */   parseArrayDef: function() { return /* reexport safe */ _parsers_array_js__WEBPACK_IMPORTED_MODULE_5__.parseArrayDef; },\n/* harmony export */   parseBigintDef: function() { return /* reexport safe */ _parsers_bigint_js__WEBPACK_IMPORTED_MODULE_6__.parseBigintDef; },\n/* harmony export */   parseBooleanDef: function() { return /* reexport safe */ _parsers_boolean_js__WEBPACK_IMPORTED_MODULE_7__.parseBooleanDef; },\n/* harmony export */   parseBrandedDef: function() { return /* reexport safe */ _parsers_branded_js__WEBPACK_IMPORTED_MODULE_8__.parseBrandedDef; },\n/* harmony export */   parseCatchDef: function() { return /* reexport safe */ _parsers_catch_js__WEBPACK_IMPORTED_MODULE_9__.parseCatchDef; },\n/* harmony export */   parseDateDef: function() { return /* reexport safe */ _parsers_date_js__WEBPACK_IMPORTED_MODULE_10__.parseDateDef; },\n/* harmony export */   parseDef: function() { return /* reexport safe */ _parseDef_js__WEBPACK_IMPORTED_MODULE_3__.parseDef; },\n/* harmony export */   parseDefaultDef: function() { return /* reexport safe */ _parsers_default_js__WEBPACK_IMPORTED_MODULE_11__.parseDefaultDef; },\n/* harmony export */   parseEffectsDef: function() { return /* reexport safe */ _parsers_effects_js__WEBPACK_IMPORTED_MODULE_12__.parseEffectsDef; },\n/* harmony export */   parseEnumDef: function() { return /* reexport safe */ _parsers_enum_js__WEBPACK_IMPORTED_MODULE_13__.parseEnumDef; },\n/* harmony export */   parseIntersectionDef: function() { return /* reexport safe */ _parsers_intersection_js__WEBPACK_IMPORTED_MODULE_14__.parseIntersectionDef; },\n/* harmony export */   parseLiteralDef: function() { return /* reexport safe */ _parsers_literal_js__WEBPACK_IMPORTED_MODULE_15__.parseLiteralDef; },\n/* harmony export */   parseMapDef: function() { return /* reexport safe */ _parsers_map_js__WEBPACK_IMPORTED_MODULE_16__.parseMapDef; },\n/* harmony export */   parseNativeEnumDef: function() { return /* reexport safe */ _parsers_nativeEnum_js__WEBPACK_IMPORTED_MODULE_17__.parseNativeEnumDef; },\n/* harmony export */   parseNeverDef: function() { return /* reexport safe */ _parsers_never_js__WEBPACK_IMPORTED_MODULE_18__.parseNeverDef; },\n/* harmony export */   parseNullDef: function() { return /* reexport safe */ _parsers_null_js__WEBPACK_IMPORTED_MODULE_19__.parseNullDef; },\n/* harmony export */   parseNullableDef: function() { return /* reexport safe */ _parsers_nullable_js__WEBPACK_IMPORTED_MODULE_20__.parseNullableDef; },\n/* harmony export */   parseNumberDef: function() { return /* reexport safe */ _parsers_number_js__WEBPACK_IMPORTED_MODULE_21__.parseNumberDef; },\n/* harmony export */   parseObjectDef: function() { return /* reexport safe */ _parsers_object_js__WEBPACK_IMPORTED_MODULE_22__.parseObjectDef; },\n/* harmony export */   parseOptionalDef: function() { return /* reexport safe */ _parsers_optional_js__WEBPACK_IMPORTED_MODULE_23__.parseOptionalDef; },\n/* harmony export */   parsePipelineDef: function() { return /* reexport safe */ _parsers_pipeline_js__WEBPACK_IMPORTED_MODULE_24__.parsePipelineDef; },\n/* harmony export */   parsePromiseDef: function() { return /* reexport safe */ _parsers_promise_js__WEBPACK_IMPORTED_MODULE_25__.parsePromiseDef; },\n/* harmony export */   parseReadonlyDef: function() { return /* reexport safe */ _parsers_readonly_js__WEBPACK_IMPORTED_MODULE_26__.parseReadonlyDef; },\n/* harmony export */   parseRecordDef: function() { return /* reexport safe */ _parsers_record_js__WEBPACK_IMPORTED_MODULE_27__.parseRecordDef; },\n/* harmony export */   parseSetDef: function() { return /* reexport safe */ _parsers_set_js__WEBPACK_IMPORTED_MODULE_28__.parseSetDef; },\n/* harmony export */   parseStringDef: function() { return /* reexport safe */ _parsers_string_js__WEBPACK_IMPORTED_MODULE_29__.parseStringDef; },\n/* harmony export */   parseTupleDef: function() { return /* reexport safe */ _parsers_tuple_js__WEBPACK_IMPORTED_MODULE_30__.parseTupleDef; },\n/* harmony export */   parseUndefinedDef: function() { return /* reexport safe */ _parsers_undefined_js__WEBPACK_IMPORTED_MODULE_31__.parseUndefinedDef; },\n/* harmony export */   parseUnionDef: function() { return /* reexport safe */ _parsers_union_js__WEBPACK_IMPORTED_MODULE_32__.parseUnionDef; },\n/* harmony export */   parseUnknownDef: function() { return /* reexport safe */ _parsers_unknown_js__WEBPACK_IMPORTED_MODULE_33__.parseUnknownDef; },\n/* harmony export */   primitiveMappings: function() { return /* reexport safe */ _parsers_union_js__WEBPACK_IMPORTED_MODULE_32__.primitiveMappings; },\n/* harmony export */   setResponseValueAndErrors: function() { return /* reexport safe */ _errorMessages_js__WEBPACK_IMPORTED_MODULE_2__.setResponseValueAndErrors; },\n/* harmony export */   zodPatterns: function() { return /* reexport safe */ _parsers_string_js__WEBPACK_IMPORTED_MODULE_29__.zodPatterns; },\n/* harmony export */   zodToJsonSchema: function() { return /* reexport safe */ _zodToJsonSchema_js__WEBPACK_IMPORTED_MODULE_34__.zodToJsonSchema; }\n/* harmony export */ });\n/* harmony import */ var _Options_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Options.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/Options.js\");\n/* harmony import */ var _Refs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Refs.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/Refs.js\");\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errorMessages.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n/* harmony import */ var _parsers_any_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parsers/any.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/any.js\");\n/* harmony import */ var _parsers_array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parsers/array.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/array.js\");\n/* harmony import */ var _parsers_bigint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parsers/bigint.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js\");\n/* harmony import */ var _parsers_boolean_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parsers/boolean.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js\");\n/* harmony import */ var _parsers_branded_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parsers/branded.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/branded.js\");\n/* harmony import */ var _parsers_catch_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./parsers/catch.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/catch.js\");\n/* harmony import */ var _parsers_date_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parsers/date.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/date.js\");\n/* harmony import */ var _parsers_default_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./parsers/default.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/default.js\");\n/* harmony import */ var _parsers_effects_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./parsers/effects.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/effects.js\");\n/* harmony import */ var _parsers_enum_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./parsers/enum.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/enum.js\");\n/* harmony import */ var _parsers_intersection_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./parsers/intersection.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js\");\n/* harmony import */ var _parsers_literal_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./parsers/literal.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/literal.js\");\n/* harmony import */ var _parsers_map_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./parsers/map.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/map.js\");\n/* harmony import */ var _parsers_nativeEnum_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./parsers/nativeEnum.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js\");\n/* harmony import */ var _parsers_never_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./parsers/never.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/never.js\");\n/* harmony import */ var _parsers_null_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./parsers/null.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/null.js\");\n/* harmony import */ var _parsers_nullable_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./parsers/nullable.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js\");\n/* harmony import */ var _parsers_number_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./parsers/number.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/number.js\");\n/* harmony import */ var _parsers_object_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./parsers/object.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/object.js\");\n/* harmony import */ var _parsers_optional_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./parsers/optional.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/optional.js\");\n/* harmony import */ var _parsers_pipeline_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./parsers/pipeline.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js\");\n/* harmony import */ var _parsers_promise_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./parsers/promise.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/promise.js\");\n/* harmony import */ var _parsers_readonly_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./parsers/readonly.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js\");\n/* harmony import */ var _parsers_record_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./parsers/record.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/record.js\");\n/* harmony import */ var _parsers_set_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./parsers/set.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/set.js\");\n/* harmony import */ var _parsers_string_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./parsers/string.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/string.js\");\n/* harmony import */ var _parsers_tuple_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./parsers/tuple.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js\");\n/* harmony import */ var _parsers_undefined_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./parsers/undefined.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js\");\n/* harmony import */ var _parsers_union_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./parsers/union.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/union.js\");\n/* harmony import */ var _parsers_unknown_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./parsers/unknown.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js\");\n/* harmony import */ var _zodToJsonSchema_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./zodToJsonSchema.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_zodToJsonSchema_js__WEBPACK_IMPORTED_MODULE_34__.zodToJsonSchema);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTZCO0FBQ0g7QUFDUztBQUNMO0FBQ0c7QUFDRTtBQUNDO0FBQ0M7QUFDQTtBQUNGO0FBQ0Q7QUFDRztBQUNBO0FBQ0g7QUFDUTtBQUNMO0FBQ0o7QUFDTztBQUNMO0FBQ0Q7QUFDSTtBQUNGO0FBQ0E7QUFDRTtBQUNBO0FBQ0Q7QUFDQztBQUNGO0FBQ0g7QUFDRztBQUNEO0FBQ0k7QUFDSjtBQUNFO0FBQ0E7QUFDa0I7QUFDdkQsK0RBQWUsaUVBQWUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL2luZGV4LmpzPzczOGEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vT3B0aW9ucy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vUmVmcy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZXJyb3JNZXNzYWdlcy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2VEZWYuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvYW55LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL2FycmF5LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL2JpZ2ludC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9ib29sZWFuLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL2JyYW5kZWQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvY2F0Y2guanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvZGF0ZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9kZWZhdWx0LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL2VmZmVjdHMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvZW51bS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9pbnRlcnNlY3Rpb24uanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvbGl0ZXJhbC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9tYXAuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvbmF0aXZlRW51bS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9uZXZlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9udWxsLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL251bGxhYmxlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL251bWJlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9vYmplY3QuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvb3B0aW9uYWwuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvcGlwZWxpbmUuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvcHJvbWlzZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9yZWFkb25seS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy9yZWNvcmQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvc2V0LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzL3N0cmluZy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy90dXBsZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGFyc2Vycy91bmRlZmluZWQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvdW5pb24uanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnMvdW5rbm93bi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vem9kVG9Kc29uU2NoZW1hLmpzXCI7XG5pbXBvcnQgeyB6b2RUb0pzb25TY2hlbWEgfSBmcm9tIFwiLi96b2RUb0pzb25TY2hlbWEuanNcIjtcbmV4cG9ydCBkZWZhdWx0IHpvZFRvSnNvblNjaGVtYTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js":
/*!**************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parseDef.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseDef: function() { return /* binding */ parseDef; }\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _parsers_any_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsers/any.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/any.js\");\n/* harmony import */ var _parsers_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parsers/array.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/array.js\");\n/* harmony import */ var _parsers_bigint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parsers/bigint.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js\");\n/* harmony import */ var _parsers_boolean_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parsers/boolean.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js\");\n/* harmony import */ var _parsers_branded_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parsers/branded.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/branded.js\");\n/* harmony import */ var _parsers_catch_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parsers/catch.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/catch.js\");\n/* harmony import */ var _parsers_date_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parsers/date.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/date.js\");\n/* harmony import */ var _parsers_default_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parsers/default.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/default.js\");\n/* harmony import */ var _parsers_effects_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parsers/effects.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/effects.js\");\n/* harmony import */ var _parsers_enum_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./parsers/enum.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/enum.js\");\n/* harmony import */ var _parsers_intersection_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parsers/intersection.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js\");\n/* harmony import */ var _parsers_literal_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./parsers/literal.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/literal.js\");\n/* harmony import */ var _parsers_map_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./parsers/map.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/map.js\");\n/* harmony import */ var _parsers_nativeEnum_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./parsers/nativeEnum.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js\");\n/* harmony import */ var _parsers_never_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./parsers/never.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/never.js\");\n/* harmony import */ var _parsers_null_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./parsers/null.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/null.js\");\n/* harmony import */ var _parsers_nullable_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./parsers/nullable.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js\");\n/* harmony import */ var _parsers_number_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./parsers/number.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/number.js\");\n/* harmony import */ var _parsers_object_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./parsers/object.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/object.js\");\n/* harmony import */ var _parsers_optional_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./parsers/optional.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/optional.js\");\n/* harmony import */ var _parsers_pipeline_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./parsers/pipeline.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js\");\n/* harmony import */ var _parsers_promise_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./parsers/promise.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/promise.js\");\n/* harmony import */ var _parsers_record_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./parsers/record.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/record.js\");\n/* harmony import */ var _parsers_set_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./parsers/set.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/set.js\");\n/* harmony import */ var _parsers_string_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./parsers/string.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/string.js\");\n/* harmony import */ var _parsers_tuple_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./parsers/tuple.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js\");\n/* harmony import */ var _parsers_undefined_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./parsers/undefined.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js\");\n/* harmony import */ var _parsers_union_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./parsers/union.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/union.js\");\n/* harmony import */ var _parsers_unknown_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./parsers/unknown.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js\");\n/* harmony import */ var _parsers_readonly_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./parsers/readonly.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js\");\n/* harmony import */ var _Options_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./Options.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/Options.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== _Options_js__WEBPACK_IMPORTED_MODULE_30__.ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchema = selectParser(def, def.typeName, refs);\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === \"seen\" ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\nconst selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodString:\n            return (0,_parsers_string_js__WEBPACK_IMPORTED_MODULE_24__.parseStringDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNumber:\n            return (0,_parsers_number_js__WEBPACK_IMPORTED_MODULE_17__.parseNumberDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodObject:\n            return (0,_parsers_object_js__WEBPACK_IMPORTED_MODULE_18__.parseObjectDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodBigInt:\n            return (0,_parsers_bigint_js__WEBPACK_IMPORTED_MODULE_2__.parseBigintDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodBoolean:\n            return (0,_parsers_boolean_js__WEBPACK_IMPORTED_MODULE_3__.parseBooleanDef)();\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodDate:\n            return (0,_parsers_date_js__WEBPACK_IMPORTED_MODULE_6__.parseDateDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodUndefined:\n            return (0,_parsers_undefined_js__WEBPACK_IMPORTED_MODULE_26__.parseUndefinedDef)();\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNull:\n            return (0,_parsers_null_js__WEBPACK_IMPORTED_MODULE_15__.parseNullDef)(refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodArray:\n            return (0,_parsers_array_js__WEBPACK_IMPORTED_MODULE_1__.parseArrayDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodUnion:\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return (0,_parsers_union_js__WEBPACK_IMPORTED_MODULE_27__.parseUnionDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodIntersection:\n            return (0,_parsers_intersection_js__WEBPACK_IMPORTED_MODULE_10__.parseIntersectionDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodTuple:\n            return (0,_parsers_tuple_js__WEBPACK_IMPORTED_MODULE_25__.parseTupleDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodRecord:\n            return (0,_parsers_record_js__WEBPACK_IMPORTED_MODULE_22__.parseRecordDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodLiteral:\n            return (0,_parsers_literal_js__WEBPACK_IMPORTED_MODULE_11__.parseLiteralDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodEnum:\n            return (0,_parsers_enum_js__WEBPACK_IMPORTED_MODULE_9__.parseEnumDef)(def);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNativeEnum:\n            return (0,_parsers_nativeEnum_js__WEBPACK_IMPORTED_MODULE_13__.parseNativeEnumDef)(def);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNullable:\n            return (0,_parsers_nullable_js__WEBPACK_IMPORTED_MODULE_16__.parseNullableDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodOptional:\n            return (0,_parsers_optional_js__WEBPACK_IMPORTED_MODULE_19__.parseOptionalDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodMap:\n            return (0,_parsers_map_js__WEBPACK_IMPORTED_MODULE_12__.parseMapDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodSet:\n            return (0,_parsers_set_js__WEBPACK_IMPORTED_MODULE_23__.parseSetDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodLazy:\n            return parseDef(def.getter()._def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodPromise:\n            return (0,_parsers_promise_js__WEBPACK_IMPORTED_MODULE_21__.parsePromiseDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNaN:\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodNever:\n            return (0,_parsers_never_js__WEBPACK_IMPORTED_MODULE_14__.parseNeverDef)();\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodEffects:\n            return (0,_parsers_effects_js__WEBPACK_IMPORTED_MODULE_8__.parseEffectsDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodAny:\n            return (0,_parsers_any_js__WEBPACK_IMPORTED_MODULE_0__.parseAnyDef)();\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodUnknown:\n            return (0,_parsers_unknown_js__WEBPACK_IMPORTED_MODULE_28__.parseUnknownDef)();\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodDefault:\n            return (0,_parsers_default_js__WEBPACK_IMPORTED_MODULE_7__.parseDefaultDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodBranded:\n            return (0,_parsers_branded_js__WEBPACK_IMPORTED_MODULE_4__.parseBrandedDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodReadonly:\n            return (0,_parsers_readonly_js__WEBPACK_IMPORTED_MODULE_29__.parseReadonlyDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodCatch:\n            return (0,_parsers_catch_js__WEBPACK_IMPORTED_MODULE_5__.parseCatchDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodPipeline:\n            return (0,_parsers_pipeline_js__WEBPACK_IMPORTED_MODULE_20__.parsePipelineDef)(def, refs);\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodFunction:\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodVoid:\n        case zod__WEBPACK_IMPORTED_MODULE_31__.ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/any.js":
/*!*****************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/any.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseAnyDef: function() { return /* binding */ parseAnyDef; }\n/* harmony export */ });\nfunction parseAnyDef() {\n    return {};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9hbnkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvYW55LmpzPzQ1NGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQW55RGVmKCkge1xuICAgIHJldHVybiB7fTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/any.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/array.js":
/*!*******************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/array.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseArrayDef: function() { return /* binding */ parseArrayDef; }\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\n\n\nfunction parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def?.typeName !== zod__WEBPACK_IMPORTED_MODULE_2__.ZodFirstPartyTypeKind.ZodAny) {\n        res.items = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_1__.parseDef)(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9hcnJheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTRDO0FBQ29CO0FBQ3RCO0FBQ25DO0FBQ1A7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHNEQUFxQjtBQUMxRCxvQkFBb0Isc0RBQVE7QUFDNUI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsUUFBUSw0RUFBeUI7QUFDakM7QUFDQTtBQUNBLFFBQVEsNEVBQXlCO0FBQ2pDO0FBQ0E7QUFDQSxRQUFRLDRFQUF5QjtBQUNqQyxRQUFRLDRFQUF5QjtBQUNqQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2FycmF5LmpzPzVjZTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgWm9kRmlyc3RQYXJ0eVR5cGVLaW5kIH0gZnJvbSBcInpvZFwiO1xuaW1wb3J0IHsgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyB9IGZyb20gXCIuLi9lcnJvck1lc3NhZ2VzLmpzXCI7XG5pbXBvcnQgeyBwYXJzZURlZiB9IGZyb20gXCIuLi9wYXJzZURlZi5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQXJyYXlEZWYoZGVmLCByZWZzKSB7XG4gICAgY29uc3QgcmVzID0ge1xuICAgICAgICB0eXBlOiBcImFycmF5XCIsXG4gICAgfTtcbiAgICBpZiAoZGVmLnR5cGU/Ll9kZWY/LnR5cGVOYW1lICE9PSBab2RGaXJzdFBhcnR5VHlwZUtpbmQuWm9kQW55KSB7XG4gICAgICAgIHJlcy5pdGVtcyA9IHBhcnNlRGVmKGRlZi50eXBlLl9kZWYsIHtcbiAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwiaXRlbXNcIl0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoZGVmLm1pbkxlbmd0aCkge1xuICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtaW5JdGVtc1wiLCBkZWYubWluTGVuZ3RoLnZhbHVlLCBkZWYubWluTGVuZ3RoLm1lc3NhZ2UsIHJlZnMpO1xuICAgIH1cbiAgICBpZiAoZGVmLm1heExlbmd0aCkge1xuICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtYXhJdGVtc1wiLCBkZWYubWF4TGVuZ3RoLnZhbHVlLCBkZWYubWF4TGVuZ3RoLm1lc3NhZ2UsIHJlZnMpO1xuICAgIH1cbiAgICBpZiAoZGVmLmV4YWN0TGVuZ3RoKSB7XG4gICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMocmVzLCBcIm1pbkl0ZW1zXCIsIGRlZi5leGFjdExlbmd0aC52YWx1ZSwgZGVmLmV4YWN0TGVuZ3RoLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtYXhJdGVtc1wiLCBkZWYuZXhhY3RMZW5ndGgudmFsdWUsIGRlZi5leGFjdExlbmd0aC5tZXNzYWdlLCByZWZzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/array.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js":
/*!********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseBigintDef: function() { return /* binding */ parseBigintDef; }\n/* harmony export */ });\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n\nfunction parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9iaWdpbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0U7QUFDekQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDRFQUF5QjtBQUNqRDtBQUNBO0FBQ0Esd0JBQXdCLDRFQUF5QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNEVBQXlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNEVBQXlCO0FBQ2pEO0FBQ0E7QUFDQSx3QkFBd0IsNEVBQXlCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0RUFBeUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDRFQUF5QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9iaWdpbnQuanM/OTkyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzIH0gZnJvbSBcIi4uL2Vycm9yTWVzc2FnZXMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUJpZ2ludERlZihkZWYsIHJlZnMpIHtcbiAgICBjb25zdCByZXMgPSB7XG4gICAgICAgIHR5cGU6IFwiaW50ZWdlclwiLFxuICAgICAgICBmb3JtYXQ6IFwiaW50NjRcIixcbiAgICB9O1xuICAgIGlmICghZGVmLmNoZWNrcylcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICBmb3IgKGNvbnN0IGNoZWNrIG9mIGRlZi5jaGVja3MpIHtcbiAgICAgICAgc3dpdGNoIChjaGVjay5raW5kKSB7XG4gICAgICAgICAgICBjYXNlIFwibWluXCI6XG4gICAgICAgICAgICAgICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcImpzb25TY2hlbWE3XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrLmluY2x1c2l2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhyZXMsIFwibWluaW11bVwiLCBjaGVjay52YWx1ZSwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJleGNsdXNpdmVNaW5pbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjaGVjay5pbmNsdXNpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5leGNsdXNpdmVNaW5pbXVtID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtaW5pbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWF4XCI6XG4gICAgICAgICAgICAgICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcImpzb25TY2hlbWE3XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrLmluY2x1c2l2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhyZXMsIFwibWF4aW11bVwiLCBjaGVjay52YWx1ZSwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJleGNsdXNpdmVNYXhpbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjaGVjay5pbmNsdXNpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5leGNsdXNpdmVNYXhpbXVtID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtYXhpbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibXVsdGlwbGVPZlwiOlxuICAgICAgICAgICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMocmVzLCBcIm11bHRpcGxlT2ZcIiwgY2hlY2sudmFsdWUsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js":
/*!*********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseBooleanDef: function() { return /* binding */ parseBooleanDef; }\n/* harmony export */ });\nfunction parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9ib29sZWFuLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9ib29sZWFuLmpzPzFlZDAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQm9vbGVhbkRlZigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcImJvb2xlYW5cIixcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/branded.js":
/*!*********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/branded.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseBrandedDef: function() { return /* binding */ parseBrandedDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction parseBrandedDef(_def, refs) {\n    return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(_def.type._def, refs);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9icmFuZGVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQ25DO0FBQ1AsV0FBVyxzREFBUTtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvYnJhbmRlZC5qcz9mYzE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VCcmFuZGVkRGVmKF9kZWYsIHJlZnMpIHtcbiAgICByZXR1cm4gcGFyc2VEZWYoX2RlZi50eXBlLl9kZWYsIHJlZnMpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/branded.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/catch.js":
/*!*******************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/catch.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseCatchDef: function() { return /* binding */ parseCatchDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst parseCatchDef = (def, refs) => {\n    return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, refs);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9jYXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQztBQUNQLFdBQVcsc0RBQVE7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2NhdGNoLmpzPzAxYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VEZWYgfSBmcm9tIFwiLi4vcGFyc2VEZWYuanNcIjtcbmV4cG9ydCBjb25zdCBwYXJzZUNhdGNoRGVmID0gKGRlZiwgcmVmcykgPT4ge1xuICAgIHJldHVybiBwYXJzZURlZihkZWYuaW5uZXJUeXBlLl9kZWYsIHJlZnMpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/catch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/date.js":
/*!******************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/date.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseDateDef: function() { return /* binding */ parseDateDef; }\n/* harmony export */ });\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n\nfunction parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9kYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdFO0FBQ3pEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDRFQUF5QjtBQUN6QztBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNEVBQXlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvZGF0ZS5qcz81MGI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMgfSBmcm9tIFwiLi4vZXJyb3JNZXNzYWdlcy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRGF0ZURlZihkZWYsIHJlZnMsIG92ZXJyaWRlRGF0ZVN0cmF0ZWd5KSB7XG4gICAgY29uc3Qgc3RyYXRlZ3kgPSBvdmVycmlkZURhdGVTdHJhdGVneSA/PyByZWZzLmRhdGVTdHJhdGVneTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShzdHJhdGVneSkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGFueU9mOiBzdHJhdGVneS5tYXAoKGl0ZW0sIGkpID0+IHBhcnNlRGF0ZURlZihkZWYsIHJlZnMsIGl0ZW0pKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgc3dpdGNoIChzdHJhdGVneSkge1xuICAgICAgICBjYXNlIFwic3RyaW5nXCI6XG4gICAgICAgIGNhc2UgXCJmb3JtYXQ6ZGF0ZS10aW1lXCI6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICAgICAgZm9ybWF0OiBcImRhdGUtdGltZVwiLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgY2FzZSBcImZvcm1hdDpkYXRlXCI6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICAgICAgZm9ybWF0OiBcImRhdGVcIixcbiAgICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgXCJpbnRlZ2VyXCI6XG4gICAgICAgICAgICByZXR1cm4gaW50ZWdlckRhdGVQYXJzZXIoZGVmLCByZWZzKTtcbiAgICB9XG59XG5jb25zdCBpbnRlZ2VyRGF0ZVBhcnNlciA9IChkZWYsIHJlZnMpID0+IHtcbiAgICBjb25zdCByZXMgPSB7XG4gICAgICAgIHR5cGU6IFwiaW50ZWdlclwiLFxuICAgICAgICBmb3JtYXQ6IFwidW5peC10aW1lXCIsXG4gICAgfTtcbiAgICBpZiAocmVmcy50YXJnZXQgPT09IFwib3BlbkFwaTNcIikge1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGNoZWNrIG9mIGRlZi5jaGVja3MpIHtcbiAgICAgICAgc3dpdGNoIChjaGVjay5raW5kKSB7XG4gICAgICAgICAgICBjYXNlIFwibWluXCI6XG4gICAgICAgICAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhyZXMsIFwibWluaW11bVwiLCBjaGVjay52YWx1ZSwgLy8gVGhpcyBpcyBpbiBtaWxsaXNlY29uZHNcbiAgICAgICAgICAgICAgICBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJtYXhcIjpcbiAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtYXhpbXVtXCIsIGNoZWNrLnZhbHVlLCAvLyBUaGlzIGlzIGluIG1pbGxpc2Vjb25kc1xuICAgICAgICAgICAgICAgIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/date.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/default.js":
/*!*********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/default.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseDefaultDef: function() { return /* binding */ parseDefaultDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction parseDefaultDef(_def, refs) {\n    return {\n        ...(0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9kZWZhdWx0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQ25DO0FBQ1A7QUFDQSxXQUFXLHNEQUFRO0FBQ25CO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvZGVmYXVsdC5qcz9lNjVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VEZWZhdWx0RGVmKF9kZWYsIHJlZnMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5wYXJzZURlZihfZGVmLmlubmVyVHlwZS5fZGVmLCByZWZzKSxcbiAgICAgICAgZGVmYXVsdDogX2RlZi5kZWZhdWx0VmFsdWUoKSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/default.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/effects.js":
/*!*********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/effects.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseEffectsDef: function() { return /* binding */ parseEffectsDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(_def.schema._def, refs)\n        : {};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9lZmZlY3RzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQ25DO0FBQ1A7QUFDQSxVQUFVLHNEQUFRO0FBQ2xCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2VmZmVjdHMuanM/YzM0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZURlZiB9IGZyb20gXCIuLi9wYXJzZURlZi5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRWZmZWN0c0RlZihfZGVmLCByZWZzKSB7XG4gICAgcmV0dXJuIHJlZnMuZWZmZWN0U3RyYXRlZ3kgPT09IFwiaW5wdXRcIlxuICAgICAgICA/IHBhcnNlRGVmKF9kZWYuc2NoZW1hLl9kZWYsIHJlZnMpXG4gICAgICAgIDoge307XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/effects.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/enum.js":
/*!******************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/enum.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseEnumDef: function() { return /* binding */ parseEnumDef; }\n/* harmony export */ });\nfunction parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: def.values,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9lbnVtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2VudW0uanM/ZDY3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcGFyc2VFbnVtRGVmKGRlZikge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgIGVudW06IGRlZi52YWx1ZXMsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/enum.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js":
/*!**************************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseIntersectionDef: function() { return /* binding */ parseIntersectionDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nfunction parseIntersectionDef(def, refs) {\n    const allOf = [\n        (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9pbnRlcnNlY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxRQUFRLHNEQUFRO0FBQ2hCO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUSxzREFBUTtBQUNoQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0NBQWdDO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2ludGVyc2VjdGlvbi5qcz83ZWIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5jb25zdCBpc0pzb25TY2hlbWE3QWxsT2ZUeXBlID0gKHR5cGUpID0+IHtcbiAgICBpZiAoXCJ0eXBlXCIgaW4gdHlwZSAmJiB0eXBlLnR5cGUgPT09IFwic3RyaW5nXCIpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gXCJhbGxPZlwiIGluIHR5cGU7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSW50ZXJzZWN0aW9uRGVmKGRlZiwgcmVmcykge1xuICAgIGNvbnN0IGFsbE9mID0gW1xuICAgICAgICBwYXJzZURlZihkZWYubGVmdC5fZGVmLCB7XG4gICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFsbE9mXCIsIFwiMFwiXSxcbiAgICAgICAgfSksXG4gICAgICAgIHBhcnNlRGVmKGRlZi5yaWdodC5fZGVmLCB7XG4gICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFsbE9mXCIsIFwiMVwiXSxcbiAgICAgICAgfSksXG4gICAgXS5maWx0ZXIoKHgpID0+ICEheCk7XG4gICAgbGV0IHVuZXZhbHVhdGVkUHJvcGVydGllcyA9IHJlZnMudGFyZ2V0ID09PSBcImpzb25TY2hlbWEyMDE5LTA5XCJcbiAgICAgICAgPyB7IHVuZXZhbHVhdGVkUHJvcGVydGllczogZmFsc2UgfVxuICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBtZXJnZWRBbGxPZiA9IFtdO1xuICAgIC8vIElmIGVpdGhlciBvZiB0aGUgc2NoZW1hcyBpcyBhbiBhbGxPZiwgbWVyZ2UgdGhlbSBpbnRvIGEgc2luZ2xlIGFsbE9mXG4gICAgYWxsT2YuZm9yRWFjaCgoc2NoZW1hKSA9PiB7XG4gICAgICAgIGlmIChpc0pzb25TY2hlbWE3QWxsT2ZUeXBlKHNjaGVtYSkpIHtcbiAgICAgICAgICAgIG1lcmdlZEFsbE9mLnB1c2goLi4uc2NoZW1hLmFsbE9mKTtcbiAgICAgICAgICAgIGlmIChzY2hlbWEudW5ldmFsdWF0ZWRQcm9wZXJ0aWVzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBvbmUgb2YgdGhlIHNjaGVtYXMgaGFzIG5vIHVuZXZhbHVhdGVkUHJvcGVydGllcyBzZXQsXG4gICAgICAgICAgICAgICAgLy8gdGhlIG1lcmdlZCBzY2hlbWEgc2hvdWxkIGFsc28gaGF2ZSBubyB1bmV2YWx1YXRlZFByb3BlcnRpZXMgc2V0XG4gICAgICAgICAgICAgICAgdW5ldmFsdWF0ZWRQcm9wZXJ0aWVzID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbGV0IG5lc3RlZFNjaGVtYSA9IHNjaGVtYTtcbiAgICAgICAgICAgIGlmIChcImFkZGl0aW9uYWxQcm9wZXJ0aWVzXCIgaW4gc2NoZW1hICYmXG4gICAgICAgICAgICAgICAgc2NoZW1hLmFkZGl0aW9uYWxQcm9wZXJ0aWVzID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgYWRkaXRpb25hbFByb3BlcnRpZXMsIC4uLnJlc3QgfSA9IHNjaGVtYTtcbiAgICAgICAgICAgICAgICBuZXN0ZWRTY2hlbWEgPSByZXN0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gQXMgc29vbiBhcyBvbmUgb2YgdGhlIHNjaGVtYXMgaGFzIGFkZGl0aW9uYWxQcm9wZXJ0aWVzIHNldCBub3QgdG8gZmFsc2UsIHdlIGFsbG93IHVuZXZhbHVhdGVkUHJvcGVydGllc1xuICAgICAgICAgICAgICAgIHVuZXZhbHVhdGVkUHJvcGVydGllcyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1lcmdlZEFsbE9mLnB1c2gobmVzdGVkU2NoZW1hKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBtZXJnZWRBbGxPZi5sZW5ndGhcbiAgICAgICAgPyB7XG4gICAgICAgICAgICBhbGxPZjogbWVyZ2VkQWxsT2YsXG4gICAgICAgICAgICAuLi51bmV2YWx1YXRlZFByb3BlcnRpZXMsXG4gICAgICAgIH1cbiAgICAgICAgOiB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/literal.js":
/*!*********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/literal.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseLiteralDef: function() { return /* binding */ parseLiteralDef; }\n/* harmony export */ });\nfunction parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9saXRlcmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL2xpdGVyYWwuanM/MDg5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcGFyc2VMaXRlcmFsRGVmKGRlZiwgcmVmcykge1xuICAgIGNvbnN0IHBhcnNlZFR5cGUgPSB0eXBlb2YgZGVmLnZhbHVlO1xuICAgIGlmIChwYXJzZWRUeXBlICE9PSBcImJpZ2ludFwiICYmXG4gICAgICAgIHBhcnNlZFR5cGUgIT09IFwibnVtYmVyXCIgJiZcbiAgICAgICAgcGFyc2VkVHlwZSAhPT0gXCJib29sZWFuXCIgJiZcbiAgICAgICAgcGFyc2VkVHlwZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogQXJyYXkuaXNBcnJheShkZWYudmFsdWUpID8gXCJhcnJheVwiIDogXCJvYmplY3RcIixcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcIm9wZW5BcGkzXCIpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6IHBhcnNlZFR5cGUgPT09IFwiYmlnaW50XCIgPyBcImludGVnZXJcIiA6IHBhcnNlZFR5cGUsXG4gICAgICAgICAgICBlbnVtOiBbZGVmLnZhbHVlXSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogcGFyc2VkVHlwZSA9PT0gXCJiaWdpbnRcIiA/IFwiaW50ZWdlclwiIDogcGFyc2VkVHlwZSxcbiAgICAgICAgY29uc3Q6IGRlZi52YWx1ZSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/literal.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/map.js":
/*!*****************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/map.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseMapDef: function() { return /* binding */ parseMapDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n/* harmony import */ var _record_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./record.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/record.js\");\n\n\nfunction parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return (0,_record_js__WEBPACK_IMPORTED_MODULE_1__.parseRecordDef)(def, refs);\n    }\n    const keys = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || {};\n    const values = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || {};\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9tYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQ0c7QUFDdEM7QUFDUDtBQUNBLGVBQWUsMERBQWM7QUFDN0I7QUFDQSxpQkFBaUIsc0RBQVE7QUFDekI7QUFDQTtBQUNBLEtBQUs7QUFDTCxtQkFBbUIsc0RBQVE7QUFDM0I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL21hcC5qcz8zZDZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5pbXBvcnQgeyBwYXJzZVJlY29yZERlZiB9IGZyb20gXCIuL3JlY29yZC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTWFwRGVmKGRlZiwgcmVmcykge1xuICAgIGlmIChyZWZzLm1hcFN0cmF0ZWd5ID09PSBcInJlY29yZFwiKSB7XG4gICAgICAgIHJldHVybiBwYXJzZVJlY29yZERlZihkZWYsIHJlZnMpO1xuICAgIH1cbiAgICBjb25zdCBrZXlzID0gcGFyc2VEZWYoZGVmLmtleVR5cGUuX2RlZiwge1xuICAgICAgICAuLi5yZWZzLFxuICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwiaXRlbXNcIiwgXCJpdGVtc1wiLCBcIjBcIl0sXG4gICAgfSkgfHwge307XG4gICAgY29uc3QgdmFsdWVzID0gcGFyc2VEZWYoZGVmLnZhbHVlVHlwZS5fZGVmLCB7XG4gICAgICAgIC4uLnJlZnMsXG4gICAgICAgIGN1cnJlbnRQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJpdGVtc1wiLCBcIml0ZW1zXCIsIFwiMVwiXSxcbiAgICB9KSB8fCB7fTtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcImFycmF5XCIsXG4gICAgICAgIG1heEl0ZW1zOiAxMjUsXG4gICAgICAgIGl0ZW1zOiB7XG4gICAgICAgICAgICB0eXBlOiBcImFycmF5XCIsXG4gICAgICAgICAgICBpdGVtczogW2tleXMsIHZhbHVlc10sXG4gICAgICAgICAgICBtaW5JdGVtczogMixcbiAgICAgICAgICAgIG1heEl0ZW1zOiAyLFxuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/map.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js":
/*!************************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseNativeEnumDef: function() { return /* binding */ parseNativeEnumDef; }\n/* harmony export */ });\nfunction parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9uYXRpdmVFbnVtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9uYXRpdmVFbnVtLmpzPzg3MDMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTmF0aXZlRW51bURlZihkZWYpIHtcbiAgICBjb25zdCBvYmplY3QgPSBkZWYudmFsdWVzO1xuICAgIGNvbnN0IGFjdHVhbEtleXMgPSBPYmplY3Qua2V5cyhkZWYudmFsdWVzKS5maWx0ZXIoKGtleSkgPT4ge1xuICAgICAgICByZXR1cm4gdHlwZW9mIG9iamVjdFtvYmplY3Rba2V5XV0gIT09IFwibnVtYmVyXCI7XG4gICAgfSk7XG4gICAgY29uc3QgYWN0dWFsVmFsdWVzID0gYWN0dWFsS2V5cy5tYXAoKGtleSkgPT4gb2JqZWN0W2tleV0pO1xuICAgIGNvbnN0IHBhcnNlZFR5cGVzID0gQXJyYXkuZnJvbShuZXcgU2V0KGFjdHVhbFZhbHVlcy5tYXAoKHZhbHVlcykgPT4gdHlwZW9mIHZhbHVlcykpKTtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBwYXJzZWRUeXBlcy5sZW5ndGggPT09IDFcbiAgICAgICAgICAgID8gcGFyc2VkVHlwZXNbMF0gPT09IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICA/IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICA6IFwibnVtYmVyXCJcbiAgICAgICAgICAgIDogW1wic3RyaW5nXCIsIFwibnVtYmVyXCJdLFxuICAgICAgICBlbnVtOiBhY3R1YWxWYWx1ZXMsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/never.js":
/*!*******************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/never.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseNeverDef: function() { return /* binding */ parseNeverDef; }\n/* harmony export */ });\nfunction parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9uZXZlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBLGVBQWU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9uZXZlci5qcz9hZDE5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBwYXJzZU5ldmVyRGVmKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5vdDoge30sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/never.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/null.js":
/*!******************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/null.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseNullDef: function() { return /* binding */ parseNullDef; }\n/* harmony export */ });\nfunction parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9udWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvbnVsbC5qcz81MWUwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBwYXJzZU51bGxEZWYocmVmcykge1xuICAgIHJldHVybiByZWZzLnRhcmdldCA9PT0gXCJvcGVuQXBpM1wiXG4gICAgICAgID8ge1xuICAgICAgICAgICAgZW51bTogW1wibnVsbFwiXSxcbiAgICAgICAgICAgIG51bGxhYmxlOiB0cnVlLFxuICAgICAgICB9XG4gICAgICAgIDoge1xuICAgICAgICAgICAgdHlwZTogXCJudWxsXCIsXG4gICAgICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/null.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js":
/*!**********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseNullableDef: function() { return /* binding */ parseNullableDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n/* harmony import */ var _union_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./union.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/union.js\");\n\n\nfunction parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: _union_js__WEBPACK_IMPORTED_MODULE_1__.primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                _union_js__WEBPACK_IMPORTED_MODULE_1__.primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && '$ref' in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9udWxsYWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEM7QUFDSztBQUN4QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHdEQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHdEQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHNEQUFRO0FBQzdCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxxQkFBcUI7QUFDckIseUJBQXlCO0FBQ3pCO0FBQ0EsaUJBQWlCLHNEQUFRO0FBQ3pCO0FBQ0E7QUFDQSxLQUFLO0FBQ0wscUJBQXFCLGdCQUFnQixjQUFjO0FBQ25EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9udWxsYWJsZS5qcz9hMjFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5pbXBvcnQgeyBwcmltaXRpdmVNYXBwaW5ncyB9IGZyb20gXCIuL3VuaW9uLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VOdWxsYWJsZURlZihkZWYsIHJlZnMpIHtcbiAgICBpZiAoW1wiWm9kU3RyaW5nXCIsIFwiWm9kTnVtYmVyXCIsIFwiWm9kQmlnSW50XCIsIFwiWm9kQm9vbGVhblwiLCBcIlpvZE51bGxcIl0uaW5jbHVkZXMoZGVmLmlubmVyVHlwZS5fZGVmLnR5cGVOYW1lKSAmJlxuICAgICAgICAoIWRlZi5pbm5lclR5cGUuX2RlZi5jaGVja3MgfHwgIWRlZi5pbm5lclR5cGUuX2RlZi5jaGVja3MubGVuZ3RoKSkge1xuICAgICAgICBpZiAocmVmcy50YXJnZXQgPT09IFwib3BlbkFwaTNcIikge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiBwcmltaXRpdmVNYXBwaW5nc1tkZWYuaW5uZXJUeXBlLl9kZWYudHlwZU5hbWVdLFxuICAgICAgICAgICAgICAgIG51bGxhYmxlOiB0cnVlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogW1xuICAgICAgICAgICAgICAgIHByaW1pdGl2ZU1hcHBpbmdzW2RlZi5pbm5lclR5cGUuX2RlZi50eXBlTmFtZV0sXG4gICAgICAgICAgICAgICAgXCJudWxsXCIsXG4gICAgICAgICAgICBdLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAocmVmcy50YXJnZXQgPT09IFwib3BlbkFwaTNcIikge1xuICAgICAgICBjb25zdCBiYXNlID0gcGFyc2VEZWYoZGVmLmlubmVyVHlwZS5fZGVmLCB7XG4gICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoXSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChiYXNlICYmICckcmVmJyBpbiBiYXNlKVxuICAgICAgICAgICAgcmV0dXJuIHsgYWxsT2Y6IFtiYXNlXSwgbnVsbGFibGU6IHRydWUgfTtcbiAgICAgICAgcmV0dXJuIGJhc2UgJiYgeyAuLi5iYXNlLCBudWxsYWJsZTogdHJ1ZSB9O1xuICAgIH1cbiAgICBjb25zdCBiYXNlID0gcGFyc2VEZWYoZGVmLmlubmVyVHlwZS5fZGVmLCB7XG4gICAgICAgIC4uLnJlZnMsXG4gICAgICAgIGN1cnJlbnRQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJhbnlPZlwiLCBcIjBcIl0sXG4gICAgfSk7XG4gICAgcmV0dXJuIGJhc2UgJiYgeyBhbnlPZjogW2Jhc2UsIHsgdHlwZTogXCJudWxsXCIgfV0gfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/number.js":
/*!********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/number.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseNumberDef: function() { return /* binding */ parseNumberDef; }\n/* harmony export */ });\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n\nfunction parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.addErrorMessage)(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9udW1iZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0Y7QUFDM0U7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isa0VBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNEVBQXlCO0FBQ2pEO0FBQ0E7QUFDQSx3QkFBd0IsNEVBQXlCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0RUFBeUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw0RUFBeUI7QUFDakQ7QUFDQTtBQUNBLHdCQUF3Qiw0RUFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDRFQUF5QjtBQUM3QztBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNEVBQXlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL251bWJlci5qcz8yMjNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZEVycm9yTWVzc2FnZSwgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycywgfSBmcm9tIFwiLi4vZXJyb3JNZXNzYWdlcy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTnVtYmVyRGVmKGRlZiwgcmVmcykge1xuICAgIGNvbnN0IHJlcyA9IHtcbiAgICAgICAgdHlwZTogXCJudW1iZXJcIixcbiAgICB9O1xuICAgIGlmICghZGVmLmNoZWNrcylcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICBmb3IgKGNvbnN0IGNoZWNrIG9mIGRlZi5jaGVja3MpIHtcbiAgICAgICAgc3dpdGNoIChjaGVjay5raW5kKSB7XG4gICAgICAgICAgICBjYXNlIFwiaW50XCI6XG4gICAgICAgICAgICAgICAgcmVzLnR5cGUgPSBcImludGVnZXJcIjtcbiAgICAgICAgICAgICAgICBhZGRFcnJvck1lc3NhZ2UocmVzLCBcInR5cGVcIiwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWluXCI6XG4gICAgICAgICAgICAgICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcImpzb25TY2hlbWE3XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrLmluY2x1c2l2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhyZXMsIFwibWluaW11bVwiLCBjaGVjay52YWx1ZSwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJleGNsdXNpdmVNaW5pbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjaGVjay5pbmNsdXNpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5leGNsdXNpdmVNaW5pbXVtID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtaW5pbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWF4XCI6XG4gICAgICAgICAgICAgICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcImpzb25TY2hlbWE3XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrLmluY2x1c2l2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyhyZXMsIFwibWF4aW11bVwiLCBjaGVjay52YWx1ZSwgY2hlY2subWVzc2FnZSwgcmVmcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJleGNsdXNpdmVNYXhpbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjaGVjay5pbmNsdXNpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5leGNsdXNpdmVNYXhpbXVtID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzZXRSZXNwb25zZVZhbHVlQW5kRXJyb3JzKHJlcywgXCJtYXhpbXVtXCIsIGNoZWNrLnZhbHVlLCBjaGVjay5tZXNzYWdlLCByZWZzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibXVsdGlwbGVPZlwiOlxuICAgICAgICAgICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMocmVzLCBcIm11bHRpcGxlT2ZcIiwgY2hlY2sudmFsdWUsIGNoZWNrLm1lc3NhZ2UsIHJlZnMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/number.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/object.js":
/*!********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/object.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseObjectDef: function() { return /* binding */ parseObjectDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction decideAdditionalProperties(def, refs) {\n    if (refs.removeAdditionalStrategy === \"strict\") {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys !== \"strict\"\n            : (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n    else {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys === \"passthrough\"\n            : (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n}\nfunction parseObjectDef(def, refs) {\n    const result = {\n        type: \"object\",\n        ...Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\n            if (propDef === undefined || propDef._def === undefined)\n                return acc;\n            const parsedDef = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(propDef._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"properties\", propName],\n                propertyPath: [...refs.currentPath, \"properties\", propName],\n            });\n            if (parsedDef === undefined)\n                return acc;\n            return {\n                properties: { ...acc.properties, [propName]: parsedDef },\n                required: propDef.isOptional()\n                    ? acc.required\n                    : [...acc.required, propName],\n            };\n        }, { properties: {}, required: [] }),\n        additionalProperties: decideAdditionalProperties(def, refs),\n    };\n    if (!result.required.length)\n        delete result.required;\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9vYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHNEQUFRO0FBQ3RCO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHNEQUFRO0FBQ3RCO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixzREFBUTtBQUN0QztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDBDQUEwQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsSUFBSSxjQUFjLGdCQUFnQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL29iamVjdC5qcz9iNGQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5mdW5jdGlvbiBkZWNpZGVBZGRpdGlvbmFsUHJvcGVydGllcyhkZWYsIHJlZnMpIHtcbiAgICBpZiAocmVmcy5yZW1vdmVBZGRpdGlvbmFsU3RyYXRlZ3kgPT09IFwic3RyaWN0XCIpIHtcbiAgICAgICAgcmV0dXJuIGRlZi5jYXRjaGFsbC5fZGVmLnR5cGVOYW1lID09PSBcIlpvZE5ldmVyXCJcbiAgICAgICAgICAgID8gZGVmLnVua25vd25LZXlzICE9PSBcInN0cmljdFwiXG4gICAgICAgICAgICA6IHBhcnNlRGVmKGRlZi5jYXRjaGFsbC5fZGVmLCB7XG4gICAgICAgICAgICAgICAgLi4ucmVmcyxcbiAgICAgICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwiYWRkaXRpb25hbFByb3BlcnRpZXNcIl0sXG4gICAgICAgICAgICB9KSA/PyB0cnVlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZi5jYXRjaGFsbC5fZGVmLnR5cGVOYW1lID09PSBcIlpvZE5ldmVyXCJcbiAgICAgICAgICAgID8gZGVmLnVua25vd25LZXlzID09PSBcInBhc3N0aHJvdWdoXCJcbiAgICAgICAgICAgIDogcGFyc2VEZWYoZGVmLmNhdGNoYWxsLl9kZWYsIHtcbiAgICAgICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgICAgIGN1cnJlbnRQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJhZGRpdGlvbmFsUHJvcGVydGllc1wiXSxcbiAgICAgICAgICAgIH0pID8/IHRydWU7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlT2JqZWN0RGVmKGRlZiwgcmVmcykge1xuICAgIGNvbnN0IHJlc3VsdCA9IHtcbiAgICAgICAgdHlwZTogXCJvYmplY3RcIixcbiAgICAgICAgLi4uT2JqZWN0LmVudHJpZXMoZGVmLnNoYXBlKCkpLnJlZHVjZSgoYWNjLCBbcHJvcE5hbWUsIHByb3BEZWZdKSA9PiB7XG4gICAgICAgICAgICBpZiAocHJvcERlZiA9PT0gdW5kZWZpbmVkIHx8IHByb3BEZWYuX2RlZiA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgICAgICBjb25zdCBwYXJzZWREZWYgPSBwYXJzZURlZihwcm9wRGVmLl9kZWYsIHtcbiAgICAgICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgICAgIGN1cnJlbnRQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJwcm9wZXJ0aWVzXCIsIHByb3BOYW1lXSxcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eVBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcInByb3BlcnRpZXNcIiwgcHJvcE5hbWVdLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAocGFyc2VkRGVmID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcHJvcGVydGllczogeyAuLi5hY2MucHJvcGVydGllcywgW3Byb3BOYW1lXTogcGFyc2VkRGVmIH0sXG4gICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHByb3BEZWYuaXNPcHRpb25hbCgpXG4gICAgICAgICAgICAgICAgICAgID8gYWNjLnJlcXVpcmVkXG4gICAgICAgICAgICAgICAgICAgIDogWy4uLmFjYy5yZXF1aXJlZCwgcHJvcE5hbWVdLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSwgeyBwcm9wZXJ0aWVzOiB7fSwgcmVxdWlyZWQ6IFtdIH0pLFxuICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllczogZGVjaWRlQWRkaXRpb25hbFByb3BlcnRpZXMoZGVmLCByZWZzKSxcbiAgICB9O1xuICAgIGlmICghcmVzdWx0LnJlcXVpcmVkLmxlbmd0aClcbiAgICAgICAgZGVsZXRlIHJlc3VsdC5yZXF1aXJlZDtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/object.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/optional.js":
/*!**********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/optional.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseOptionalDef: function() { return /* binding */ parseOptionalDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, refs);\n    }\n    const innerSchema = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9vcHRpb25hbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQztBQUNQO0FBQ0EsZUFBZSxzREFBUTtBQUN2QjtBQUNBLHdCQUF3QixzREFBUTtBQUNoQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9vcHRpb25hbC5qcz84MGEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgY29uc3QgcGFyc2VPcHRpb25hbERlZiA9IChkZWYsIHJlZnMpID0+IHtcbiAgICBpZiAocmVmcy5jdXJyZW50UGF0aC50b1N0cmluZygpID09PSByZWZzLnByb3BlcnR5UGF0aD8udG9TdHJpbmcoKSkge1xuICAgICAgICByZXR1cm4gcGFyc2VEZWYoZGVmLmlubmVyVHlwZS5fZGVmLCByZWZzKTtcbiAgICB9XG4gICAgY29uc3QgaW5uZXJTY2hlbWEgPSBwYXJzZURlZihkZWYuaW5uZXJUeXBlLl9kZWYsIHtcbiAgICAgICAgLi4ucmVmcyxcbiAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFueU9mXCIsIFwiMVwiXSxcbiAgICB9KTtcbiAgICByZXR1cm4gaW5uZXJTY2hlbWFcbiAgICAgICAgPyB7XG4gICAgICAgICAgICBhbnlPZjogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbm90OiB7fSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGlubmVyU2NoZW1hLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfVxuICAgICAgICA6IHt9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/optional.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js":
/*!**********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePipelineDef: function() { return /* binding */ parsePipelineDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.out._def, refs);\n    }\n    const a = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9waXBlbGluZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQztBQUNQO0FBQ0EsZUFBZSxzREFBUTtBQUN2QjtBQUNBO0FBQ0EsZUFBZSxzREFBUTtBQUN2QjtBQUNBLGNBQWMsc0RBQVE7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTCxjQUFjLHNEQUFRO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL3BpcGVsaW5lLmpzPzU1ZTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VEZWYgfSBmcm9tIFwiLi4vcGFyc2VEZWYuanNcIjtcbmV4cG9ydCBjb25zdCBwYXJzZVBpcGVsaW5lRGVmID0gKGRlZiwgcmVmcykgPT4ge1xuICAgIGlmIChyZWZzLnBpcGVTdHJhdGVneSA9PT0gXCJpbnB1dFwiKSB7XG4gICAgICAgIHJldHVybiBwYXJzZURlZihkZWYuaW4uX2RlZiwgcmVmcyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHJlZnMucGlwZVN0cmF0ZWd5ID09PSBcIm91dHB1dFwiKSB7XG4gICAgICAgIHJldHVybiBwYXJzZURlZihkZWYub3V0Ll9kZWYsIHJlZnMpO1xuICAgIH1cbiAgICBjb25zdCBhID0gcGFyc2VEZWYoZGVmLmluLl9kZWYsIHtcbiAgICAgICAgLi4ucmVmcyxcbiAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFsbE9mXCIsIFwiMFwiXSxcbiAgICB9KTtcbiAgICBjb25zdCBiID0gcGFyc2VEZWYoZGVmLm91dC5fZGVmLCB7XG4gICAgICAgIC4uLnJlZnMsXG4gICAgICAgIGN1cnJlbnRQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJhbGxPZlwiLCBhID8gXCIxXCIgOiBcIjBcIl0sXG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYWxsT2Y6IFthLCBiXS5maWx0ZXIoKHgpID0+IHggIT09IHVuZGVmaW5lZCksXG4gICAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/promise.js":
/*!*********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/promise.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePromiseDef: function() { return /* binding */ parsePromiseDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction parsePromiseDef(def, refs) {\n    return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.type._def, refs);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9wcm9taXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQ25DO0FBQ1AsV0FBVyxzREFBUTtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvcHJvbWlzZS5qcz81YzJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VQcm9taXNlRGVmKGRlZiwgcmVmcykge1xuICAgIHJldHVybiBwYXJzZURlZihkZWYudHlwZS5fZGVmLCByZWZzKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/promise.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js":
/*!**********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseReadonlyDef: function() { return /* binding */ parseReadonlyDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst parseReadonlyDef = (def, refs) => {\n    return (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.innerType._def, refs);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9yZWFkb25seS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQztBQUNQLFdBQVcsc0RBQVE7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL3JlYWRvbmx5LmpzPzNmMDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VEZWYgfSBmcm9tIFwiLi4vcGFyc2VEZWYuanNcIjtcbmV4cG9ydCBjb25zdCBwYXJzZVJlYWRvbmx5RGVmID0gKGRlZiwgcmVmcykgPT4ge1xuICAgIHJldHVybiBwYXJzZURlZihkZWYuaW5uZXJUeXBlLl9kZWYsIHJlZnMpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/record.js":
/*!********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/record.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseRecordDef: function() { return /* binding */ parseRecordDef; }\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/string.js\");\n\n\n\nfunction parseRecordDef(def, refs) {\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === zod__WEBPACK_IMPORTED_MODULE_2__.ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? {},\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === zod__WEBPACK_IMPORTED_MODULE_2__.ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const keyType = Object.entries((0,_string_js__WEBPACK_IMPORTED_MODULE_1__.parseStringDef)(def.keyType._def, refs)).reduce((acc, [key, value]) => (key === \"type\" ? acc : { ...acc, [key]: value }), {});\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === zod__WEBPACK_IMPORTED_MODULE_2__.ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    return schema;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9yZWNvcmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2QztBQUNIO0FBQ0c7QUFDdEM7QUFDUDtBQUNBLHVDQUF1QyxzREFBcUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzREFBUTtBQUMvQjtBQUNBO0FBQ0EsaUJBQWlCLE9BQU87QUFDeEIsYUFBYSxLQUFLO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0RBQVE7QUFDdEM7QUFDQTtBQUNBLFNBQVMsT0FBTztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxzREFBcUI7QUFDNUQ7QUFDQSx1Q0FBdUMsMERBQWMsa0ZBQWtGLHNCQUFzQixLQUFLO0FBQ2xLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsc0RBQXFCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9yZWNvcmQuanM/ZTAzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBab2RGaXJzdFBhcnR5VHlwZUtpbmQsIH0gZnJvbSBcInpvZFwiO1xuaW1wb3J0IHsgcGFyc2VEZWYgfSBmcm9tIFwiLi4vcGFyc2VEZWYuanNcIjtcbmltcG9ydCB7IHBhcnNlU3RyaW5nRGVmIH0gZnJvbSBcIi4vc3RyaW5nLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VSZWNvcmREZWYoZGVmLCByZWZzKSB7XG4gICAgaWYgKHJlZnMudGFyZ2V0ID09PSBcIm9wZW5BcGkzXCIgJiZcbiAgICAgICAgZGVmLmtleVR5cGU/Ll9kZWYudHlwZU5hbWUgPT09IFpvZEZpcnN0UGFydHlUeXBlS2luZC5ab2RFbnVtKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICAgICAgcmVxdWlyZWQ6IGRlZi5rZXlUeXBlLl9kZWYudmFsdWVzLFxuICAgICAgICAgICAgcHJvcGVydGllczogZGVmLmtleVR5cGUuX2RlZi52YWx1ZXMucmVkdWNlKChhY2MsIGtleSkgPT4gKHtcbiAgICAgICAgICAgICAgICAuLi5hY2MsXG4gICAgICAgICAgICAgICAgW2tleV06IHBhcnNlRGVmKGRlZi52YWx1ZVR5cGUuX2RlZiwge1xuICAgICAgICAgICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwicHJvcGVydGllc1wiLCBrZXldLFxuICAgICAgICAgICAgICAgIH0pID8/IHt9LFxuICAgICAgICAgICAgfSksIHt9KSxcbiAgICAgICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3Qgc2NoZW1hID0ge1xuICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllczogcGFyc2VEZWYoZGVmLnZhbHVlVHlwZS5fZGVmLCB7XG4gICAgICAgICAgICAuLi5yZWZzLFxuICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFkZGl0aW9uYWxQcm9wZXJ0aWVzXCJdLFxuICAgICAgICB9KSA/PyB7fSxcbiAgICB9O1xuICAgIGlmIChyZWZzLnRhcmdldCA9PT0gXCJvcGVuQXBpM1wiKSB7XG4gICAgICAgIHJldHVybiBzY2hlbWE7XG4gICAgfVxuICAgIGlmIChkZWYua2V5VHlwZT8uX2RlZi50eXBlTmFtZSA9PT0gWm9kRmlyc3RQYXJ0eVR5cGVLaW5kLlpvZFN0cmluZyAmJlxuICAgICAgICBkZWYua2V5VHlwZS5fZGVmLmNoZWNrcz8ubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IGtleVR5cGUgPSBPYmplY3QuZW50cmllcyhwYXJzZVN0cmluZ0RlZihkZWYua2V5VHlwZS5fZGVmLCByZWZzKSkucmVkdWNlKChhY2MsIFtrZXksIHZhbHVlXSkgPT4gKGtleSA9PT0gXCJ0eXBlXCIgPyBhY2MgOiB7IC4uLmFjYywgW2tleV06IHZhbHVlIH0pLCB7fSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zY2hlbWEsXG4gICAgICAgICAgICBwcm9wZXJ0eU5hbWVzOiBrZXlUeXBlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmIChkZWYua2V5VHlwZT8uX2RlZi50eXBlTmFtZSA9PT0gWm9kRmlyc3RQYXJ0eVR5cGVLaW5kLlpvZEVudW0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnNjaGVtYSxcbiAgICAgICAgICAgIHByb3BlcnR5TmFtZXM6IHtcbiAgICAgICAgICAgICAgICBlbnVtOiBkZWYua2V5VHlwZS5fZGVmLnZhbHVlcyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBzY2hlbWE7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/record.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/set.js":
/*!*****************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/set.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseSetDef: function() { return /* binding */ parseSetDef; }\n/* harmony export */ });\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\n\nfunction parseSetDef(def, refs) {\n    const items = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_1__.parseDef)(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy9zZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdFO0FBQ3RCO0FBQ25DO0FBQ1Asa0JBQWtCLHNEQUFRO0FBQzFCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw0RUFBeUI7QUFDakM7QUFDQTtBQUNBLFFBQVEsNEVBQXlCO0FBQ2pDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvc2V0LmpzPzgwZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2V0UmVzcG9uc2VWYWx1ZUFuZEVycm9ycyB9IGZyb20gXCIuLi9lcnJvck1lc3NhZ2VzLmpzXCI7XG5pbXBvcnQgeyBwYXJzZURlZiB9IGZyb20gXCIuLi9wYXJzZURlZi5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlU2V0RGVmKGRlZiwgcmVmcykge1xuICAgIGNvbnN0IGl0ZW1zID0gcGFyc2VEZWYoZGVmLnZhbHVlVHlwZS5fZGVmLCB7XG4gICAgICAgIC4uLnJlZnMsXG4gICAgICAgIGN1cnJlbnRQYXRoOiBbLi4ucmVmcy5jdXJyZW50UGF0aCwgXCJpdGVtc1wiXSxcbiAgICB9KTtcbiAgICBjb25zdCBzY2hlbWEgPSB7XG4gICAgICAgIHR5cGU6IFwiYXJyYXlcIixcbiAgICAgICAgdW5pcXVlSXRlbXM6IHRydWUsXG4gICAgICAgIGl0ZW1zLFxuICAgIH07XG4gICAgaWYgKGRlZi5taW5TaXplKSB7XG4gICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMoc2NoZW1hLCBcIm1pbkl0ZW1zXCIsIGRlZi5taW5TaXplLnZhbHVlLCBkZWYubWluU2l6ZS5tZXNzYWdlLCByZWZzKTtcbiAgICB9XG4gICAgaWYgKGRlZi5tYXhTaXplKSB7XG4gICAgICAgIHNldFJlc3BvbnNlVmFsdWVBbmRFcnJvcnMoc2NoZW1hLCBcIm1heEl0ZW1zXCIsIGRlZi5tYXhTaXplLnZhbHVlLCBkZWYubWF4U2l6ZS5tZXNzYWdlLCByZWZzKTtcbiAgICB9XG4gICAgcmV0dXJuIHNjaGVtYTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/set.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/string.js":
/*!********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/string.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseStringDef: function() { return /* binding */ parseStringDef; },\n/* harmony export */   zodPatterns: function() { return /* binding */ zodPatterns; }\n/* harmony export */ });\n/* harmony import */ var _errorMessages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errorMessages.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/errorMessages.js\");\n\nlet emojiRegex;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nconst zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n};\nfunction parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    function processPattern(value) {\n        return refs.patternStrategy === \"escape\"\n            ? escapeNonAlphaNumeric(value)\n            : value;\n    }\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${processPattern(check.value)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${processPattern(check.value)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(processPattern(check.value)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji, check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nconst escapeNonAlphaNumeric = (value) => Array.from(value)\n    .map((c) => (/[a-zA-Z0-9]/.test(c) ? c : `\\\\${c}`))\n    .join(\"\");\nconst addFormat = (schema, value, message, refs) => {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(schema, \"format\", value, message, refs);\n    }\n};\nconst addPattern = (schema, regex, message, refs) => {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: processRegExp(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        (0,_errorMessages_js__WEBPACK_IMPORTED_MODULE_0__.setResponseValueAndErrors)(schema, \"pattern\", processRegExp(regex, refs), message, refs);\n    }\n};\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nconst processRegExp = (regexOrFunction, refs) => {\n    const regex = typeof regexOrFunction === \"function\" ? regexOrFunction() : regexOrFunction;\n    if (!refs.applyRegexFlags || !regex.flags)\n        return regex.source;\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        const regexTest = new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/string.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js":
/*!*******************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTupleDef: function() { return /* binding */ parseTupleDef; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nfunction parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy90dXBsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isc0RBQVE7QUFDdkM7QUFDQSwrREFBK0QsRUFBRTtBQUNqRSxhQUFhO0FBQ2I7QUFDQSw2QkFBNkIsc0RBQVE7QUFDckM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHNEQUFRO0FBQ3ZDO0FBQ0EsK0RBQStELEVBQUU7QUFDakUsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy90dXBsZS5qcz83ZWZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VUdXBsZURlZihkZWYsIHJlZnMpIHtcbiAgICBpZiAoZGVmLnJlc3QpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6IFwiYXJyYXlcIixcbiAgICAgICAgICAgIG1pbkl0ZW1zOiBkZWYuaXRlbXMubGVuZ3RoLFxuICAgICAgICAgICAgaXRlbXM6IGRlZi5pdGVtc1xuICAgICAgICAgICAgICAgIC5tYXAoKHgsIGkpID0+IHBhcnNlRGVmKHguX2RlZiwge1xuICAgICAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcIml0ZW1zXCIsIGAke2l9YF0sXG4gICAgICAgICAgICB9KSlcbiAgICAgICAgICAgICAgICAucmVkdWNlKChhY2MsIHgpID0+ICh4ID09PSB1bmRlZmluZWQgPyBhY2MgOiBbLi4uYWNjLCB4XSksIFtdKSxcbiAgICAgICAgICAgIGFkZGl0aW9uYWxJdGVtczogcGFyc2VEZWYoZGVmLnJlc3QuX2RlZiwge1xuICAgICAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICAgICAgY3VycmVudFBhdGg6IFsuLi5yZWZzLmN1cnJlbnRQYXRoLCBcImFkZGl0aW9uYWxJdGVtc1wiXSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6IFwiYXJyYXlcIixcbiAgICAgICAgICAgIG1pbkl0ZW1zOiBkZWYuaXRlbXMubGVuZ3RoLFxuICAgICAgICAgICAgbWF4SXRlbXM6IGRlZi5pdGVtcy5sZW5ndGgsXG4gICAgICAgICAgICBpdGVtczogZGVmLml0ZW1zXG4gICAgICAgICAgICAgICAgLm1hcCgoeCwgaSkgPT4gcGFyc2VEZWYoeC5fZGVmLCB7XG4gICAgICAgICAgICAgICAgLi4ucmVmcyxcbiAgICAgICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwiaXRlbXNcIiwgYCR7aX1gXSxcbiAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgICAgIC5yZWR1Y2UoKGFjYywgeCkgPT4gKHggPT09IHVuZGVmaW5lZCA/IGFjYyA6IFsuLi5hY2MsIHhdKSwgW10pLFxuICAgICAgICB9O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js":
/*!***********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseUndefinedDef: function() { return /* binding */ parseUndefinedDef; }\n/* harmony export */ });\nfunction parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy91bmRlZmluZWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQSxlQUFlO0FBQ2Y7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvem9kLXRvLWpzb24tc2NoZW1hL2Rpc3QvZXNtL3BhcnNlcnMvdW5kZWZpbmVkLmpzPzA3ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHBhcnNlVW5kZWZpbmVkRGVmKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5vdDoge30sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/union.js":
/*!*******************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/union.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseUnionDef: function() { return /* binding */ parseUnionDef; },\n/* harmony export */   primitiveMappings: function() { return /* binding */ primitiveMappings; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n\nconst primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nfunction parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy91bmlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEM7QUFDbkM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJGQUEyRjtBQUMzRjtBQUNBLDZEQUE2RDtBQUM3RDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNEQUFRO0FBQy9CO0FBQ0EsdURBQXVELEVBQUU7QUFDekQsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixRQUFRO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy91bmlvbi5qcz84MzI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlRGVmIH0gZnJvbSBcIi4uL3BhcnNlRGVmLmpzXCI7XG5leHBvcnQgY29uc3QgcHJpbWl0aXZlTWFwcGluZ3MgPSB7XG4gICAgWm9kU3RyaW5nOiBcInN0cmluZ1wiLFxuICAgIFpvZE51bWJlcjogXCJudW1iZXJcIixcbiAgICBab2RCaWdJbnQ6IFwiaW50ZWdlclwiLFxuICAgIFpvZEJvb2xlYW46IFwiYm9vbGVhblwiLFxuICAgIFpvZE51bGw6IFwibnVsbFwiLFxufTtcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVVuaW9uRGVmKGRlZiwgcmVmcykge1xuICAgIGlmIChyZWZzLnRhcmdldCA9PT0gXCJvcGVuQXBpM1wiKVxuICAgICAgICByZXR1cm4gYXNBbnlPZihkZWYsIHJlZnMpO1xuICAgIGNvbnN0IG9wdGlvbnMgPSBkZWYub3B0aW9ucyBpbnN0YW5jZW9mIE1hcCA/IEFycmF5LmZyb20oZGVmLm9wdGlvbnMudmFsdWVzKCkpIDogZGVmLm9wdGlvbnM7XG4gICAgLy8gVGhpcyBibG9ja3MgdHJpZXMgdG8gbG9vayBhaGVhZCBhIGJpdCB0byBwcm9kdWNlIG5pY2VyIGxvb2tpbmcgc2NoZW1hcyB3aXRoIHR5cGUgYXJyYXkgaW5zdGVhZCBvZiBhbnlPZi5cbiAgICBpZiAob3B0aW9ucy5ldmVyeSgoeCkgPT4geC5fZGVmLnR5cGVOYW1lIGluIHByaW1pdGl2ZU1hcHBpbmdzICYmXG4gICAgICAgICgheC5fZGVmLmNoZWNrcyB8fCAheC5fZGVmLmNoZWNrcy5sZW5ndGgpKSkge1xuICAgICAgICAvLyBhbGwgdHlwZXMgaW4gdW5pb24gYXJlIHByaW1pdGl2ZSBhbmQgbGFjayBjaGVja3MsIHNvIG1pZ2h0IGFzIHdlbGwgc3F1YXNoIGludG8ge3R5cGU6IFsuLi5dfVxuICAgICAgICBjb25zdCB0eXBlcyA9IG9wdGlvbnMucmVkdWNlKCh0eXBlcywgeCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdHlwZSA9IHByaW1pdGl2ZU1hcHBpbmdzW3guX2RlZi50eXBlTmFtZV07IC8vQ2FuIGJlIHNhZmVseSBjYXN0ZWQgZHVlIHRvIHJvdyA0M1xuICAgICAgICAgICAgcmV0dXJuIHR5cGUgJiYgIXR5cGVzLmluY2x1ZGVzKHR5cGUpID8gWy4uLnR5cGVzLCB0eXBlXSA6IHR5cGVzO1xuICAgICAgICB9LCBbXSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0eXBlOiB0eXBlcy5sZW5ndGggPiAxID8gdHlwZXMgOiB0eXBlc1swXSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAob3B0aW9ucy5ldmVyeSgoeCkgPT4geC5fZGVmLnR5cGVOYW1lID09PSBcIlpvZExpdGVyYWxcIiAmJiAheC5kZXNjcmlwdGlvbikpIHtcbiAgICAgICAgLy8gYWxsIG9wdGlvbnMgbGl0ZXJhbHNcbiAgICAgICAgY29uc3QgdHlwZXMgPSBvcHRpb25zLnJlZHVjZSgoYWNjLCB4KSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0eXBlID0gdHlwZW9mIHguX2RlZi52YWx1ZTtcbiAgICAgICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJzdHJpbmdcIjpcbiAgICAgICAgICAgICAgICBjYXNlIFwibnVtYmVyXCI6XG4gICAgICAgICAgICAgICAgY2FzZSBcImJvb2xlYW5cIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsuLi5hY2MsIHR5cGVdO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJiaWdpbnRcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsuLi5hY2MsIFwiaW50ZWdlclwiXTtcbiAgICAgICAgICAgICAgICBjYXNlIFwib2JqZWN0XCI6XG4gICAgICAgICAgICAgICAgICAgIGlmICh4Ll9kZWYudmFsdWUgPT09IG51bGwpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWy4uLmFjYywgXCJudWxsXCJdO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJzeW1ib2xcIjpcbiAgICAgICAgICAgICAgICBjYXNlIFwidW5kZWZpbmVkXCI6XG4gICAgICAgICAgICAgICAgY2FzZSBcImZ1bmN0aW9uXCI6XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgW10pO1xuICAgICAgICBpZiAodHlwZXMubGVuZ3RoID09PSBvcHRpb25zLmxlbmd0aCkge1xuICAgICAgICAgICAgLy8gYWxsIHRoZSBsaXRlcmFscyBhcmUgcHJpbWl0aXZlLCBhcyBmYXIgYXMgbnVsbCBjYW4gYmUgY29uc2lkZXJlZCBwcmltaXRpdmVcbiAgICAgICAgICAgIGNvbnN0IHVuaXF1ZVR5cGVzID0gdHlwZXMuZmlsdGVyKCh4LCBpLCBhKSA9PiBhLmluZGV4T2YoeCkgPT09IGkpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiB1bmlxdWVUeXBlcy5sZW5ndGggPiAxID8gdW5pcXVlVHlwZXMgOiB1bmlxdWVUeXBlc1swXSxcbiAgICAgICAgICAgICAgICBlbnVtOiBvcHRpb25zLnJlZHVjZSgoYWNjLCB4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhY2MuaW5jbHVkZXMoeC5fZGVmLnZhbHVlKSA/IGFjYyA6IFsuLi5hY2MsIHguX2RlZi52YWx1ZV07XG4gICAgICAgICAgICAgICAgfSwgW10pLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChvcHRpb25zLmV2ZXJ5KCh4KSA9PiB4Ll9kZWYudHlwZU5hbWUgPT09IFwiWm9kRW51bVwiKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgICAgICAgIGVudW06IG9wdGlvbnMucmVkdWNlKChhY2MsIHgpID0+IFtcbiAgICAgICAgICAgICAgICAuLi5hY2MsXG4gICAgICAgICAgICAgICAgLi4ueC5fZGVmLnZhbHVlcy5maWx0ZXIoKHgpID0+ICFhY2MuaW5jbHVkZXMoeCkpLFxuICAgICAgICAgICAgXSwgW10pLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gYXNBbnlPZihkZWYsIHJlZnMpO1xufVxuY29uc3QgYXNBbnlPZiA9IChkZWYsIHJlZnMpID0+IHtcbiAgICBjb25zdCBhbnlPZiA9IChkZWYub3B0aW9ucyBpbnN0YW5jZW9mIE1hcFxuICAgICAgICA/IEFycmF5LmZyb20oZGVmLm9wdGlvbnMudmFsdWVzKCkpXG4gICAgICAgIDogZGVmLm9wdGlvbnMpXG4gICAgICAgIC5tYXAoKHgsIGkpID0+IHBhcnNlRGVmKHguX2RlZiwge1xuICAgICAgICAuLi5yZWZzLFxuICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuY3VycmVudFBhdGgsIFwiYW55T2ZcIiwgYCR7aX1gXSxcbiAgICB9KSlcbiAgICAgICAgLmZpbHRlcigoeCkgPT4gISF4ICYmXG4gICAgICAgICghcmVmcy5zdHJpY3RVbmlvbnMgfHxcbiAgICAgICAgICAgICh0eXBlb2YgeCA9PT0gXCJvYmplY3RcIiAmJiBPYmplY3Qua2V5cyh4KS5sZW5ndGggPiAwKSkpO1xuICAgIHJldHVybiBhbnlPZi5sZW5ndGggPyB7IGFueU9mIH0gOiB1bmRlZmluZWQ7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/union.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js":
/*!*********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseUnknownDef: function() { return /* binding */ parseUnknownDef; }\n/* harmony export */ });\nfunction parseUnknownDef() {\n    return {};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vcGFyc2Vycy91bmtub3duLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3pvZC10by1qc29uLXNjaGVtYS9kaXN0L2VzbS9wYXJzZXJzL3Vua25vd24uanM/OTMzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcGFyc2VVbmtub3duRGVmKCkge1xuICAgIHJldHVybiB7fTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js":
/*!*********************************************************************!*\
  !*** ./node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   zodToJsonSchema: function() { return /* binding */ zodToJsonSchema; }\n/* harmony export */ });\n/* harmony import */ var _parseDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parseDef.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/parseDef.js\");\n/* harmony import */ var _Refs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Refs.js */ \"(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/Refs.js\");\n\n\nconst zodToJsonSchema = (schema, options) => {\n    const refs = (0,_Refs_js__WEBPACK_IMPORTED_MODULE_1__.getRefs)(options);\n    const definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? {},\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = (0,_parseDef_js__WEBPACK_IMPORTED_MODULE_0__.parseDef)(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? {};\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    return combined;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vem9kVG9Kc29uU2NoZW1hLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUNMO0FBQ3BDO0FBQ0EsaUJBQWlCLGlEQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzREFBUTtBQUM1QjtBQUNBO0FBQ0EsYUFBYSxhQUFhO0FBQzFCLFNBQVMsS0FBSztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixzREFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96b2QtdG8tanNvbi1zY2hlbWEvZGlzdC9lc20vem9kVG9Kc29uU2NoZW1hLmpzPzBhOWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VEZWYgfSBmcm9tIFwiLi9wYXJzZURlZi5qc1wiO1xuaW1wb3J0IHsgZ2V0UmVmcyB9IGZyb20gXCIuL1JlZnMuanNcIjtcbmNvbnN0IHpvZFRvSnNvblNjaGVtYSA9IChzY2hlbWEsIG9wdGlvbnMpID0+IHtcbiAgICBjb25zdCByZWZzID0gZ2V0UmVmcyhvcHRpb25zKTtcbiAgICBjb25zdCBkZWZpbml0aW9ucyA9IHR5cGVvZiBvcHRpb25zID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuZGVmaW5pdGlvbnNcbiAgICAgICAgPyBPYmplY3QuZW50cmllcyhvcHRpb25zLmRlZmluaXRpb25zKS5yZWR1Y2UoKGFjYywgW25hbWUsIHNjaGVtYV0pID0+ICh7XG4gICAgICAgICAgICAuLi5hY2MsXG4gICAgICAgICAgICBbbmFtZV06IHBhcnNlRGVmKHNjaGVtYS5fZGVmLCB7XG4gICAgICAgICAgICAgICAgLi4ucmVmcyxcbiAgICAgICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuYmFzZVBhdGgsIHJlZnMuZGVmaW5pdGlvblBhdGgsIG5hbWVdLFxuICAgICAgICAgICAgfSwgdHJ1ZSkgPz8ge30sXG4gICAgICAgIH0pLCB7fSlcbiAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgY29uc3QgbmFtZSA9IHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiXG4gICAgICAgID8gb3B0aW9uc1xuICAgICAgICA6IG9wdGlvbnM/Lm5hbWVTdHJhdGVneSA9PT0gXCJ0aXRsZVwiXG4gICAgICAgICAgICA/IHVuZGVmaW5lZFxuICAgICAgICAgICAgOiBvcHRpb25zPy5uYW1lO1xuICAgIGNvbnN0IG1haW4gPSBwYXJzZURlZihzY2hlbWEuX2RlZiwgbmFtZSA9PT0gdW5kZWZpbmVkXG4gICAgICAgID8gcmVmc1xuICAgICAgICA6IHtcbiAgICAgICAgICAgIC4uLnJlZnMsXG4gICAgICAgICAgICBjdXJyZW50UGF0aDogWy4uLnJlZnMuYmFzZVBhdGgsIHJlZnMuZGVmaW5pdGlvblBhdGgsIG5hbWVdLFxuICAgICAgICB9LCBmYWxzZSkgPz8ge307XG4gICAgY29uc3QgdGl0bGUgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICBvcHRpb25zLm5hbWUgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICBvcHRpb25zLm5hbWVTdHJhdGVneSA9PT0gXCJ0aXRsZVwiXG4gICAgICAgID8gb3B0aW9ucy5uYW1lXG4gICAgICAgIDogdW5kZWZpbmVkO1xuICAgIGlmICh0aXRsZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG1haW4udGl0bGUgPSB0aXRsZTtcbiAgICB9XG4gICAgY29uc3QgY29tYmluZWQgPSBuYW1lID09PSB1bmRlZmluZWRcbiAgICAgICAgPyBkZWZpbml0aW9uc1xuICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgLi4ubWFpbixcbiAgICAgICAgICAgICAgICBbcmVmcy5kZWZpbml0aW9uUGF0aF06IGRlZmluaXRpb25zLFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgOiBtYWluXG4gICAgICAgIDoge1xuICAgICAgICAgICAgJHJlZjogW1xuICAgICAgICAgICAgICAgIC4uLihyZWZzLiRyZWZTdHJhdGVneSA9PT0gXCJyZWxhdGl2ZVwiID8gW10gOiByZWZzLmJhc2VQYXRoKSxcbiAgICAgICAgICAgICAgICByZWZzLmRlZmluaXRpb25QYXRoLFxuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBdLmpvaW4oXCIvXCIpLFxuICAgICAgICAgICAgW3JlZnMuZGVmaW5pdGlvblBhdGhdOiB7XG4gICAgICAgICAgICAgICAgLi4uZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICAgICAgW25hbWVdOiBtYWluLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICBpZiAocmVmcy50YXJnZXQgPT09IFwianNvblNjaGVtYTdcIikge1xuICAgICAgICBjb21iaW5lZC4kc2NoZW1hID0gXCJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSNcIjtcbiAgICB9XG4gICAgZWxzZSBpZiAocmVmcy50YXJnZXQgPT09IFwianNvblNjaGVtYTIwMTktMDlcIikge1xuICAgICAgICBjb21iaW5lZC4kc2NoZW1hID0gXCJodHRwczovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC8yMDE5LTA5L3NjaGVtYSNcIjtcbiAgICB9XG4gICAgcmV0dXJuIGNvbWJpbmVkO1xufTtcbmV4cG9ydCB7IHpvZFRvSnNvblNjaGVtYSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zod/lib/index.mjs":
/*!****************************************!*\
  !*** ./node_modules/zod/lib/index.mjs ***!
  \****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BRAND: function() { return /* binding */ BRAND; },\n/* harmony export */   DIRTY: function() { return /* binding */ DIRTY; },\n/* harmony export */   EMPTY_PATH: function() { return /* binding */ EMPTY_PATH; },\n/* harmony export */   INVALID: function() { return /* binding */ INVALID; },\n/* harmony export */   NEVER: function() { return /* binding */ NEVER; },\n/* harmony export */   OK: function() { return /* binding */ OK; },\n/* harmony export */   ParseStatus: function() { return /* binding */ ParseStatus; },\n/* harmony export */   Schema: function() { return /* binding */ ZodType; },\n/* harmony export */   ZodAny: function() { return /* binding */ ZodAny; },\n/* harmony export */   ZodArray: function() { return /* binding */ ZodArray; },\n/* harmony export */   ZodBigInt: function() { return /* binding */ ZodBigInt; },\n/* harmony export */   ZodBoolean: function() { return /* binding */ ZodBoolean; },\n/* harmony export */   ZodBranded: function() { return /* binding */ ZodBranded; },\n/* harmony export */   ZodCatch: function() { return /* binding */ ZodCatch; },\n/* harmony export */   ZodDate: function() { return /* binding */ ZodDate; },\n/* harmony export */   ZodDefault: function() { return /* binding */ ZodDefault; },\n/* harmony export */   ZodDiscriminatedUnion: function() { return /* binding */ ZodDiscriminatedUnion; },\n/* harmony export */   ZodEffects: function() { return /* binding */ ZodEffects; },\n/* harmony export */   ZodEnum: function() { return /* binding */ ZodEnum; },\n/* harmony export */   ZodError: function() { return /* binding */ ZodError; },\n/* harmony export */   ZodFirstPartyTypeKind: function() { return /* binding */ ZodFirstPartyTypeKind; },\n/* harmony export */   ZodFunction: function() { return /* binding */ ZodFunction; },\n/* harmony export */   ZodIntersection: function() { return /* binding */ ZodIntersection; },\n/* harmony export */   ZodIssueCode: function() { return /* binding */ ZodIssueCode; },\n/* harmony export */   ZodLazy: function() { return /* binding */ ZodLazy; },\n/* harmony export */   ZodLiteral: function() { return /* binding */ ZodLiteral; },\n/* harmony export */   ZodMap: function() { return /* binding */ ZodMap; },\n/* harmony export */   ZodNaN: function() { return /* binding */ ZodNaN; },\n/* harmony export */   ZodNativeEnum: function() { return /* binding */ ZodNativeEnum; },\n/* harmony export */   ZodNever: function() { return /* binding */ ZodNever; },\n/* harmony export */   ZodNull: function() { return /* binding */ ZodNull; },\n/* harmony export */   ZodNullable: function() { return /* binding */ ZodNullable; },\n/* harmony export */   ZodNumber: function() { return /* binding */ ZodNumber; },\n/* harmony export */   ZodObject: function() { return /* binding */ ZodObject; },\n/* harmony export */   ZodOptional: function() { return /* binding */ ZodOptional; },\n/* harmony export */   ZodParsedType: function() { return /* binding */ ZodParsedType; },\n/* harmony export */   ZodPipeline: function() { return /* binding */ ZodPipeline; },\n/* harmony export */   ZodPromise: function() { return /* binding */ ZodPromise; },\n/* harmony export */   ZodReadonly: function() { return /* binding */ ZodReadonly; },\n/* harmony export */   ZodRecord: function() { return /* binding */ ZodRecord; },\n/* harmony export */   ZodSchema: function() { return /* binding */ ZodType; },\n/* harmony export */   ZodSet: function() { return /* binding */ ZodSet; },\n/* harmony export */   ZodString: function() { return /* binding */ ZodString; },\n/* harmony export */   ZodSymbol: function() { return /* binding */ ZodSymbol; },\n/* harmony export */   ZodTransformer: function() { return /* binding */ ZodEffects; },\n/* harmony export */   ZodTuple: function() { return /* binding */ ZodTuple; },\n/* harmony export */   ZodType: function() { return /* binding */ ZodType; },\n/* harmony export */   ZodUndefined: function() { return /* binding */ ZodUndefined; },\n/* harmony export */   ZodUnion: function() { return /* binding */ ZodUnion; },\n/* harmony export */   ZodUnknown: function() { return /* binding */ ZodUnknown; },\n/* harmony export */   ZodVoid: function() { return /* binding */ ZodVoid; },\n/* harmony export */   addIssueToContext: function() { return /* binding */ addIssueToContext; },\n/* harmony export */   any: function() { return /* binding */ anyType; },\n/* harmony export */   array: function() { return /* binding */ arrayType; },\n/* harmony export */   bigint: function() { return /* binding */ bigIntType; },\n/* harmony export */   boolean: function() { return /* binding */ booleanType; },\n/* harmony export */   coerce: function() { return /* binding */ coerce; },\n/* harmony export */   custom: function() { return /* binding */ custom; },\n/* harmony export */   date: function() { return /* binding */ dateType; },\n/* harmony export */   datetimeRegex: function() { return /* binding */ datetimeRegex; },\n/* harmony export */   \"default\": function() { return /* binding */ z; },\n/* harmony export */   defaultErrorMap: function() { return /* binding */ errorMap; },\n/* harmony export */   discriminatedUnion: function() { return /* binding */ discriminatedUnionType; },\n/* harmony export */   effect: function() { return /* binding */ effectsType; },\n/* harmony export */   \"enum\": function() { return /* binding */ enumType; },\n/* harmony export */   \"function\": function() { return /* binding */ functionType; },\n/* harmony export */   getErrorMap: function() { return /* binding */ getErrorMap; },\n/* harmony export */   getParsedType: function() { return /* binding */ getParsedType; },\n/* harmony export */   \"instanceof\": function() { return /* binding */ instanceOfType; },\n/* harmony export */   intersection: function() { return /* binding */ intersectionType; },\n/* harmony export */   isAborted: function() { return /* binding */ isAborted; },\n/* harmony export */   isAsync: function() { return /* binding */ isAsync; },\n/* harmony export */   isDirty: function() { return /* binding */ isDirty; },\n/* harmony export */   isValid: function() { return /* binding */ isValid; },\n/* harmony export */   late: function() { return /* binding */ late; },\n/* harmony export */   lazy: function() { return /* binding */ lazyType; },\n/* harmony export */   literal: function() { return /* binding */ literalType; },\n/* harmony export */   makeIssue: function() { return /* binding */ makeIssue; },\n/* harmony export */   map: function() { return /* binding */ mapType; },\n/* harmony export */   nan: function() { return /* binding */ nanType; },\n/* harmony export */   nativeEnum: function() { return /* binding */ nativeEnumType; },\n/* harmony export */   never: function() { return /* binding */ neverType; },\n/* harmony export */   \"null\": function() { return /* binding */ nullType; },\n/* harmony export */   nullable: function() { return /* binding */ nullableType; },\n/* harmony export */   number: function() { return /* binding */ numberType; },\n/* harmony export */   object: function() { return /* binding */ objectType; },\n/* harmony export */   objectUtil: function() { return /* binding */ objectUtil; },\n/* harmony export */   oboolean: function() { return /* binding */ oboolean; },\n/* harmony export */   onumber: function() { return /* binding */ onumber; },\n/* harmony export */   optional: function() { return /* binding */ optionalType; },\n/* harmony export */   ostring: function() { return /* binding */ ostring; },\n/* harmony export */   pipeline: function() { return /* binding */ pipelineType; },\n/* harmony export */   preprocess: function() { return /* binding */ preprocessType; },\n/* harmony export */   promise: function() { return /* binding */ promiseType; },\n/* harmony export */   quotelessJson: function() { return /* binding */ quotelessJson; },\n/* harmony export */   record: function() { return /* binding */ recordType; },\n/* harmony export */   set: function() { return /* binding */ setType; },\n/* harmony export */   setErrorMap: function() { return /* binding */ setErrorMap; },\n/* harmony export */   strictObject: function() { return /* binding */ strictObjectType; },\n/* harmony export */   string: function() { return /* binding */ stringType; },\n/* harmony export */   symbol: function() { return /* binding */ symbolType; },\n/* harmony export */   transformer: function() { return /* binding */ effectsType; },\n/* harmony export */   tuple: function() { return /* binding */ tupleType; },\n/* harmony export */   undefined: function() { return /* binding */ undefinedType; },\n/* harmony export */   union: function() { return /* binding */ unionType; },\n/* harmony export */   unknown: function() { return /* binding */ unknownType; },\n/* harmony export */   util: function() { return /* binding */ util; },\n/* harmony export */   \"void\": function() { return /* binding */ voidType; },\n/* harmony export */   z: function() { return /* binding */ z; }\n/* harmony export */ });\nvar util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            overrideMap,\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * @deprecated Use z.string().min(1) instead.\n     * @see {@link ZodString.min}\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nfunction custom(check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zod/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zustand/esm/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/zustand/esm/index.mjs ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: function() { return /* binding */ create; },\n/* harmony export */   createStore: function() { return /* reexport safe */ zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__.createStore; },\n/* harmony export */   \"default\": function() { return /* binding */ react; },\n/* harmony export */   useStore: function() { return /* binding */ useStore; }\n/* harmony export */ });\n/* harmony import */ var zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand/vanilla */ \"(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var use_sync_external_store_shim_with_selector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-sync-external-store/shim/with-selector.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js\");\n\n\n\n\n\nconst { useDebugValue } = react__WEBPACK_IMPORTED_MODULE_1__;\nconst { useSyncExternalStoreWithSelector } = use_sync_external_store_shim_with_selector_js__WEBPACK_IMPORTED_MODULE_2__;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if (( false ? 0 : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if (( false ? 0 : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__.createStore)(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if (( false ? 0 : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96dXN0YW5kL2VzbS9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE4QztBQUNkO0FBQ0M7QUFDdUQ7O0FBRXhGLFFBQVEsZ0JBQWdCLEVBQUUsa0NBQVk7QUFDdEMsUUFBUSxtQ0FBbUMsRUFBRSwwRUFBMkI7QUFDeEU7QUFDQTtBQUNBO0FBQ0EsT0FBTyxNQUFlLEdBQUcsQ0FBb0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLE1BQWUsR0FBRyxDQUFvQjtBQUM3QztBQUNBLDJHQUEyRyxXQUFXO0FBQ3RIO0FBQ0E7QUFDQSxrREFBa0QsNERBQVc7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxNQUFlLEdBQUcsQ0FBb0I7QUFDN0M7QUFDQSx3RUFBd0UsU0FBUztBQUNqRjtBQUNBO0FBQ0E7QUFDQTs7QUFFOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3p1c3RhbmQvZXNtL2luZGV4Lm1qcz8zZDZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAnenVzdGFuZC92YW5pbGxhJztcbmV4cG9ydCAqIGZyb20gJ3p1c3RhbmQvdmFuaWxsYSc7XG5pbXBvcnQgUmVhY3RFeHBvcnRzIGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VTeW5jRXh0ZXJuYWxTdG9yZUV4cG9ydHMgZnJvbSAndXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yLmpzJztcblxuY29uc3QgeyB1c2VEZWJ1Z1ZhbHVlIH0gPSBSZWFjdEV4cG9ydHM7XG5jb25zdCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yIH0gPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZUV4cG9ydHM7XG5sZXQgZGlkV2FybkFib3V0RXF1YWxpdHlGbiA9IGZhbHNlO1xuY29uc3QgaWRlbnRpdHkgPSAoYXJnKSA9PiBhcmc7XG5mdW5jdGlvbiB1c2VTdG9yZShhcGksIHNlbGVjdG9yID0gaWRlbnRpdHksIGVxdWFsaXR5Rm4pIHtcbiAgaWYgKChpbXBvcnQubWV0YS5lbnYgPyBpbXBvcnQubWV0YS5lbnYuTU9ERSA6IHZvaWQgMCkgIT09IFwicHJvZHVjdGlvblwiICYmIGVxdWFsaXR5Rm4gJiYgIWRpZFdhcm5BYm91dEVxdWFsaXR5Rm4pIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICBcIltERVBSRUNBVEVEXSBVc2UgYGNyZWF0ZVdpdGhFcXVhbGl0eUZuYCBpbnN0ZWFkIG9mIGBjcmVhdGVgIG9yIHVzZSBgdXNlU3RvcmVXaXRoRXF1YWxpdHlGbmAgaW5zdGVhZCBvZiBgdXNlU3RvcmVgLiBUaGV5IGNhbiBiZSBpbXBvcnRlZCBmcm9tICd6dXN0YW5kL3RyYWRpdGlvbmFsJy4gaHR0cHM6Ly9naXRodWIuY29tL3BtbmRycy96dXN0YW5kL2Rpc2N1c3Npb25zLzE5MzdcIlxuICAgICk7XG4gICAgZGlkV2FybkFib3V0RXF1YWxpdHlGbiA9IHRydWU7XG4gIH1cbiAgY29uc3Qgc2xpY2UgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3RvcihcbiAgICBhcGkuc3Vic2NyaWJlLFxuICAgIGFwaS5nZXRTdGF0ZSxcbiAgICBhcGkuZ2V0U2VydmVyU3RhdGUgfHwgYXBpLmdldEluaXRpYWxTdGF0ZSxcbiAgICBzZWxlY3RvcixcbiAgICBlcXVhbGl0eUZuXG4gICk7XG4gIHVzZURlYnVnVmFsdWUoc2xpY2UpO1xuICByZXR1cm4gc2xpY2U7XG59XG5jb25zdCBjcmVhdGVJbXBsID0gKGNyZWF0ZVN0YXRlKSA9PiB7XG4gIGlmICgoaW1wb3J0Lm1ldGEuZW52ID8gaW1wb3J0Lm1ldGEuZW52Lk1PREUgOiB2b2lkIDApICE9PSBcInByb2R1Y3Rpb25cIiAmJiB0eXBlb2YgY3JlYXRlU3RhdGUgIT09IFwiZnVuY3Rpb25cIikge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIFwiW0RFUFJFQ0FURURdIFBhc3NpbmcgYSB2YW5pbGxhIHN0b3JlIHdpbGwgYmUgdW5zdXBwb3J0ZWQgaW4gYSBmdXR1cmUgdmVyc2lvbi4gSW5zdGVhZCB1c2UgYGltcG9ydCB7IHVzZVN0b3JlIH0gZnJvbSAnenVzdGFuZCdgLlwiXG4gICAgKTtcbiAgfVxuICBjb25zdCBhcGkgPSB0eXBlb2YgY3JlYXRlU3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IGNyZWF0ZVN0b3JlKGNyZWF0ZVN0YXRlKSA6IGNyZWF0ZVN0YXRlO1xuICBjb25zdCB1c2VCb3VuZFN0b3JlID0gKHNlbGVjdG9yLCBlcXVhbGl0eUZuKSA9PiB1c2VTdG9yZShhcGksIHNlbGVjdG9yLCBlcXVhbGl0eUZuKTtcbiAgT2JqZWN0LmFzc2lnbih1c2VCb3VuZFN0b3JlLCBhcGkpO1xuICByZXR1cm4gdXNlQm91bmRTdG9yZTtcbn07XG5jb25zdCBjcmVhdGUgPSAoY3JlYXRlU3RhdGUpID0+IGNyZWF0ZVN0YXRlID8gY3JlYXRlSW1wbChjcmVhdGVTdGF0ZSkgOiBjcmVhdGVJbXBsO1xudmFyIHJlYWN0ID0gKGNyZWF0ZVN0YXRlKSA9PiB7XG4gIGlmICgoaW1wb3J0Lm1ldGEuZW52ID8gaW1wb3J0Lm1ldGEuZW52Lk1PREUgOiB2b2lkIDApICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIFwiW0RFUFJFQ0FURURdIERlZmF1bHQgZXhwb3J0IGlzIGRlcHJlY2F0ZWQuIEluc3RlYWQgdXNlIGBpbXBvcnQgeyBjcmVhdGUgfSBmcm9tICd6dXN0YW5kJ2AuXCJcbiAgICApO1xuICB9XG4gIHJldHVybiBjcmVhdGUoY3JlYXRlU3RhdGUpO1xufTtcblxuZXhwb3J0IHsgY3JlYXRlLCByZWFjdCBhcyBkZWZhdWx0LCB1c2VTdG9yZSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zustand/esm/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs":
/*!**********************************************!*\
  !*** ./node_modules/zustand/esm/vanilla.mjs ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStore: function() { return /* binding */ createStore; },\n/* harmony export */   \"default\": function() { return /* binding */ vanilla; }\n/* harmony export */ });\nconst createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if (( false ? 0 : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if (( false ? 0 : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96dXN0YW5kL2VzbS92YW5pbGxhLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEhBQThIO0FBQzlIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxNQUFlLEdBQUcsQ0FBb0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLE1BQWUsR0FBRyxDQUFvQjtBQUM3QztBQUNBLHVFQUF1RSxjQUFjO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBOztBQUUyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvenVzdGFuZC9lc20vdmFuaWxsYS5tanM/ZDljNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjcmVhdGVTdG9yZUltcGwgPSAoY3JlYXRlU3RhdGUpID0+IHtcbiAgbGV0IHN0YXRlO1xuICBjb25zdCBsaXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICBjb25zdCBzZXRTdGF0ZSA9IChwYXJ0aWFsLCByZXBsYWNlKSA9PiB7XG4gICAgY29uc3QgbmV4dFN0YXRlID0gdHlwZW9mIHBhcnRpYWwgPT09IFwiZnVuY3Rpb25cIiA/IHBhcnRpYWwoc3RhdGUpIDogcGFydGlhbDtcbiAgICBpZiAoIU9iamVjdC5pcyhuZXh0U3RhdGUsIHN0YXRlKSkge1xuICAgICAgY29uc3QgcHJldmlvdXNTdGF0ZSA9IHN0YXRlO1xuICAgICAgc3RhdGUgPSAocmVwbGFjZSAhPSBudWxsID8gcmVwbGFjZSA6IHR5cGVvZiBuZXh0U3RhdGUgIT09IFwib2JqZWN0XCIgfHwgbmV4dFN0YXRlID09PSBudWxsKSA/IG5leHRTdGF0ZSA6IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCBuZXh0U3RhdGUpO1xuICAgICAgbGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiBsaXN0ZW5lcihzdGF0ZSwgcHJldmlvdXNTdGF0ZSkpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgZ2V0U3RhdGUgPSAoKSA9PiBzdGF0ZTtcbiAgY29uc3QgZ2V0SW5pdGlhbFN0YXRlID0gKCkgPT4gaW5pdGlhbFN0YXRlO1xuICBjb25zdCBzdWJzY3JpYmUgPSAobGlzdGVuZXIpID0+IHtcbiAgICBsaXN0ZW5lcnMuYWRkKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gKCkgPT4gbGlzdGVuZXJzLmRlbGV0ZShsaXN0ZW5lcik7XG4gIH07XG4gIGNvbnN0IGRlc3Ryb3kgPSAoKSA9PiB7XG4gICAgaWYgKChpbXBvcnQubWV0YS5lbnYgPyBpbXBvcnQubWV0YS5lbnYuTU9ERSA6IHZvaWQgMCkgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIFwiW0RFUFJFQ0FURURdIFRoZSBgZGVzdHJveWAgbWV0aG9kIHdpbGwgYmUgdW5zdXBwb3J0ZWQgaW4gYSBmdXR1cmUgdmVyc2lvbi4gSW5zdGVhZCB1c2UgdW5zdWJzY3JpYmUgZnVuY3Rpb24gcmV0dXJuZWQgYnkgc3Vic2NyaWJlLiBFdmVyeXRoaW5nIHdpbGwgYmUgZ2FyYmFnZS1jb2xsZWN0ZWQgaWYgc3RvcmUgaXMgZ2FyYmFnZS1jb2xsZWN0ZWQuXCJcbiAgICAgICk7XG4gICAgfVxuICAgIGxpc3RlbmVycy5jbGVhcigpO1xuICB9O1xuICBjb25zdCBhcGkgPSB7IHNldFN0YXRlLCBnZXRTdGF0ZSwgZ2V0SW5pdGlhbFN0YXRlLCBzdWJzY3JpYmUsIGRlc3Ryb3kgfTtcbiAgY29uc3QgaW5pdGlhbFN0YXRlID0gc3RhdGUgPSBjcmVhdGVTdGF0ZShzZXRTdGF0ZSwgZ2V0U3RhdGUsIGFwaSk7XG4gIHJldHVybiBhcGk7XG59O1xuY29uc3QgY3JlYXRlU3RvcmUgPSAoY3JlYXRlU3RhdGUpID0+IGNyZWF0ZVN0YXRlID8gY3JlYXRlU3RvcmVJbXBsKGNyZWF0ZVN0YXRlKSA6IGNyZWF0ZVN0b3JlSW1wbDtcbnZhciB2YW5pbGxhID0gKGNyZWF0ZVN0YXRlKSA9PiB7XG4gIGlmICgoaW1wb3J0Lm1ldGEuZW52ID8gaW1wb3J0Lm1ldGEuZW52Lk1PREUgOiB2b2lkIDApICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIFwiW0RFUFJFQ0FURURdIERlZmF1bHQgZXhwb3J0IGlzIGRlcHJlY2F0ZWQuIEluc3RlYWQgdXNlIGltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAnenVzdGFuZC92YW5pbGxhJy5cIlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIGNyZWF0ZVN0b3JlKGNyZWF0ZVN0YXRlKTtcbn07XG5cbmV4cG9ydCB7IGNyZWF0ZVN0b3JlLCB2YW5pbGxhIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fapp%2FMyRuntimeProvider.tsx%22%2C%22ids%22%3A%5B%22MyRuntimeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fsoderstrom%2Fki-repos%2Fmobile-devs%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);